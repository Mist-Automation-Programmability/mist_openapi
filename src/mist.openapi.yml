openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: |-
    > Version: **2401.1.2**
    >
    > Date: **Feb 1, 2024**

    ---

    #### Available Documentation
    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)
    * [Open API](https://doc.mist-lab.fr/)

    ---

    #### Useful links
    * [Mist Homepage](https://www.mist.com)
    * [Mist Documentation](https://www.mist.com/documentation)
    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account required)
    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)
    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE'
  title: Mist API
  version: 2311.1.4
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: 'https://www.mist.com/wp-content/uploads/logo.png'
servers:
  - description: Mist Global 01
    url: 'https://api.mist.com'
  - description: Mist Global 02
    url: 'https://api.gc1.mist.com'
  - description: Mist Global 03
    url: 'https://api.ac2.mist.com'
  - description: Mist Global 04
    url: 'https://api.gc2.mist.com'
  - description: Mist Europe 01
    url: 'https://api.eu.mist.com'
  - description: Mist APAC 01
    url: 'https://api.ac5.mist.com'
security:
  - apiToken: []
  - basicAuth: []
tags:
  - name: Login
  - description: 'A Mist account can be linked to OAuth2 providers:\n1. First, login with your Mist account\n2. Obtain the Authorization URL for Linking 1. in JSON response, more usable for developers. Simply don\''t specify the forward parameter when obtaining the authorization URL 2. or as GET parameter, for UI where the user flow can be continued. Specify the landing page/url of your choice 3. Obtain the authorizaiton code by clicking / going through Authorization URL Link Mist Account against OAuth2 Provider by using the authorization code'
    name: Login With OAuth2
  - description: |-
      In a typical enterprise, a separate group of people, Installers, are responsible for install new devices. May it be a new installation (e.g. new stores), a replacement installation (e.g. replacing Cisco APs with Mist APs), or addition (e.g. adding new APs for better coverage). Instead of granting them Admin/Write privilege, it's more desirable to grant them minimum privileges to do the initial provisioning so they cannot read sensible information (e.g. PSK of a WLAN), or change configs of running APs.
      At a high level, Installer APs try to achieve the following:
      1. identifying a device by MAC (that’s what they see)
      2. they can only touch configurations of the devices they’re installing
      3. allow the following configurations: * name * site assignment * device  profile assignment * map and location (x/y) assignment * claim (if not already in the inventory) * replace existing device with the device being installed

      * Grace Period *
      Grace period provides a dynamic way to limit what devices / sites   installer can work on. Generally installers work on recent deployments -  bringing up new sites, add newly claimed devices to new / existing sites. They  make mistakes, too, and may need to further tweak some of the parameters.   Default grace period is 7 days and can be set from 1 day to 365 days.
    name: Installer
  - name: Admin
  - name: Mobile
  - description: MSP (Managed Service Provider) contains multiple Organizations.
    name: Msps
  - name: Msps Admins
  - name: Msps Inventory
  - name: Msps Invites
  - name: Msps Logo
  - name: Msps Logs
  - name: Msps Licenses
  - name: Msps Marvis
  - name: Msps Org Groups
  - name: Msps Orgs
  - name: Msps SLEs
  - name: Msps SSO Roles
  - name: Msps SSO
  - name: Msps Stats
  - name: Msps Tickets
  - description: 'An organization usually represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office).'
    name: Orgs
  - name: Orgs 128T
  - name: Orgs Admins
  - description: Alarms are triggered based on certain events. Alarms could be configured using an Alarm Template.
    name: Orgs Alarms
  - description: 'An Alarm Template is a set of Alarm Rules that could be applied to one or more sites (while each site can only pick one Alarm Template), or to the whole org.'
    name: Orgs Alarm Templates
  - name: Orgs AP Templates
  - name: Orgs API Tokens
  - name: Orgs Assets
  - name: Orgs Asset Filters
  - name: Orgs Calls
  - name: Orgs Cert
  - name: Orgs Clients - NAC
  - name: Orgs Clients - Wan
  - name: Orgs Clients - Wired
  - name: Orgs Clients - Wireless
  - name: Orgs CRL
  - description: |-
      While Templates / RF Templates / Network Templates / Gateway Templates provides powerful ways to control how a Device\'s configuration is derived for a Site. There are cases where you\'d like another level of control at the Org Level.
      A Device Profile contains a subset of Device\'s configurations you\'d like a device to have. It will be merged at runtime when we\'re provisioning an AP.
    name: Orgs Device Profiles
  - name: Orgs Devices
  - description: |-
      EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding plane.
      In our implementation, following the steps to deploy EVPN topologies in a Site
    name: Orgs EVPN Topologies
  - description: API Call for 3rd party devices
    name: Orgs Devices Others
  - name: Orgs Devices Stats
  - name: Orgs Devices Upgrades
  - description: |
      In Zscaler UI 
       1. add Partner Integration at https://admin.zscalerbeta.net/#administration/partner-integration 
       2. Add Partner Administrator Role at https://admin.zscalerbeta.net/#administration/role-management - Name: Mist - Access: Full 
       3. add Partner Admin at https://admin.zscalerbeta.net/#administration/admin-management with - Login ID: john - email: john@abc.com 
       4. Find the cloud name for ZIA https://help.zscaler.com/zia/what-my-cloud-name-zia
    name: Orgs Devices Zscaler
  - description: Gateway Template is applied to a site for gateway(s) in a site.
    name: Orgs Gateway Templates
  - name: Orgs Guests
  - name: Orgs IDP Profiles
  - name: Orgs Inventory
  - name: Orgs JSE
  - description: |-
      Juniper Support Insight is a free service provided to all Mist customers. You can adopt your devices via a few lines CLI comands. Allowing you to 
      * get some basic information about the adopted devices 
      * web shell into device (write privilege required) 
      * upgrade (write privilege required)
    name: Orgs JSI
  - name: Orgs Licenses
  - name: Orgs Linked Applications
  - name: Orgs Logs
  - name: Orgs Marvis
  - name: Orgs Maps
  - name: Orgs MxClusters
  - name: Orgs MxEdges
  - name: Orgs MxTunnels
  - name: Orgs NAC
  - description: |-
      nactags are the building blocks to compose nacrules.
      They can either appear in the "matching" / "not_matching" sections of a nacrule, in which case they play the role of classifiers, or they could appear in the "apply_tags" section of the of a nacrule, in which case they influence the result.
      When the "type" field of nactag is "match", it can be used as the classfier of a nacrule. "match" field specifies the attribute name and "values" field specifies the list of attribute values to match on. When multiple values are specified, its treated as an OR condition between those values.
      When the "type" field of nactag is NOT "match", it can be used as the result of a nacrule. "type" field identifies the action to take and the corresponding field would provide any associated parameters to that action.
    name: Orgs NAC Tags
  - name: Orgs NAC CRL
  - name: Orgs NAC Rules
  - description: |-
      Network template is intended to be applied to a Site. It works like a blueprint of the network of the site.
      All Site Settings can go into Network Templates. See Site:Site Setting for schema
      Moreover, this can further be overwriten by individual Site Setting
    name: Orgs Network Templates
  - name: Orgs Networks
  - name: Orgs Premium Analytics
  - name: Orgs Psks
  - description: |-
      PSK Self-Service Portals are for 
        1. **WIFI users** who want to connect to a WLAN with personal PSK, they’re told to connect to a URL where they can login (likely through company’s SSO) and get the WIFI Name / Passphrase - required input fields name, email so we can generate PSK 
        2. **PSK Admins** (they don’t have access to normal Network Admin Portal)
      When a PSK portal is created, an unique URL will be generated (e.g. https://psk.mist.com/xxxxxx)
    name: Orgs Psk Portals
  - name: Orgs RF Templates
  - name: Orgs SDK Clients
  - name: Orgs SDK Templates
  - description: 'Security Policy is designed to audit / catch discripancies between “what’s intended to be running” versus “what’s actually running” in a network. Many big organizations have separated Security and IT team (for good reasons). Each site can be assigned a security policy. Whenever an AP is provisioned, the configuration will be checked against the security policy. Any violations will be flagged in [Device Config History](/#operation/searchSiteDeviceConfigHistory) where you can search for the when and where the violation occurs.'
    name: Orgs SecPolicies
  - name: Orgs Services
  - name: Orgs Service Policies
  - name: Orgs Setting
  - name: Orgs Sitegroups
  - name: Orgs Sites
  - description: Site template is intended to be applied to a Site. The items in site setting which should be shared for all device types.
    name: Orgs Site Templates
  - name: Orgs SLEs
  - name: Orgs SSO Roles
  - name: Orgs SSO
  - name: Orgs Stats
  - name: Orgs Subscriptions
  - name: Orgs Templates
  - name: Orgs Tickets
  - name: Orgs Tunnels Stats
  - name: Orgs Vars
  - name: Orgs VPNs
  - name: Orgs Webhooks
  - name: Orgs Wlans
  - name: Orgs WxRules
  - name: Orgs WxTags
  - name: Orgs WxTunnels
  - description: 'A site represents a project, a deployment. For MSP, it can be as small as a coffee shop or a five-star 600-room hotel. A site contains a set of Maps, Wlans, Policies, Zones.'
    name: Sites
  - name: Sites Alarms
  - name: Sites AP Templates
  - description: Applications contains a list of applications users are interested in monitoring / routing / policying
    name: Sites Applications
  - name: Sites Anomaly
  - name: Sites Asset Filters
  - name: Sites Assets
  - name: Sites Beacons
  - name: Sites Calls
  - name: Sites Clients - NAC
  - name: Sites Clients - Wan
  - name: Sites Clients - Wired
  - name: Sites Clients - Wireless
  - description: |-
      Mist provides many ways (device-type specific template, site template, device profile, per-device) to configure devices for different kind of scenarios.
      The precedence goes from most specific to least specific
      Device > Device Profile > RFTemplate (for AP only) > DeviceType-specific Template > Site Template > Site Setting
    name: Sites Devices
  - name: Sites Devices - Wireless
  - description: API Call for 3rd party devices
    name: Sites Devices Others
  - name: Sites Devices - Wired
  - name: Sites Devices - Wired Virtual Chassis
  - name: Sites Devices - WAN
  - name: Sites Devices - WAN HA
  - name: Sites Devices Stats
  - name: Sites Devices Upgrades
  - name: Sites Devices Utilities
  - name: Sites Events
  - description: |-
      EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding plane.
      In our implementation, following the steps to deploy EVPN topologies in a Site
    name: Sites EVPN Topologies
  - name: Sites Guests
  - name: Sites Insights
  - name: Sites JSE
  - name: Sites Licenses
  - name: Sites Location
  - name: Sites Maps
  - name: Sites Maps Auto-orientation
  - name: Sites Maps Auto-placement
  - name: Sites MxEdges
  - name: Sites MxTunnels
  - name: Sites Network Templates
  - name: Sites Networks
  - name: Sites Pcaps
  - name: Sites Psks
  - name: Sites RF Templates
  - name: Sites Rfdiags
  - name: Sites Rogues
  - name: Sites RRM
  - name: Sites Rssizones
  - name: Sites Services
  - name: Sites Service Policies
  - name: Sites Setting
  - name: Sites Site Templates
  - name: Sites Skyatp
  - name: Sites SLEs
  - name: Sites Stats
  - name: Sites Subscriptions
  - name: Sites Synthetic Tests
  - name: Sites UI Settings
  - name: Sites vBeacons
  - name: Sites VPNs
  - name: Sites Webhooks
  - name: Sites Wlans
  - name: Sites WxRules
  - name: Sites WxTags
  - name: Sites WxTunnels
  - name: Sites Zones
  - name: Constants
  - name: Self Account
  - description: |-
      Like many other API providers, it’s also possible to generate API Tokens to be used (in HTTP Header) for authentication. An API token ties to a Admin with equal or less privileges.

      Notes:
      * an API token generated for a specific admin has the same privilege as the user
      * an API token will be automatically removed if not used for > 90 days
      * SSO admins cannot generate these API tokens. Refer Org level API tokens (/api/v1/docs/Org#api-token) which can have privileges of a specific Org/Site for more information.
    name: Self API Token
  - name: Self OAuth2
  - name: Recover Password
  - name: Self MFA
  - name: Self Alarms
  - name: Self Audit Logs
  - name: Webhook Samples
paths:
  /api/v1/const/alarm_defs:
    get:
      description: Get List of brief definitions of all the supported alarm types.  The example field contains an example payload as you would recieve in the alarm webhook output.
      operationId: listAlarmDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstAlarmDefs.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listAlarmDefinitions
      tags:
        - Constants
  /api/v1/const/ap_channels:
    get:
      description: Get List of List of Available channels per country code
      operationId: listApChannels
      parameters:
        - $ref: ./components/parameters/country_code.yml
      responses:
        '200':
          $ref: ./components/responses/ConstApChannels.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listApChannels
      tags:
        - Constants
  /api/v1/const/ap_led_status:
    get:
      description: Get List of AP LED definition
      operationId: listApLedDefinition
      responses:
        '200':
          $ref: ./components/responses/ConstApLedArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listApLedDefinition
      tags:
        - Constants
  /api/v1/const/applications:
    get:
      description: Get List of a list of applications that Juniper-Mist APs recognize
      operationId: listApplications
      responses:
        '200':
          $ref: ./components/responses/ConstApplications.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listApplications
      tags:
        - Constants
  /api/v1/const/client_events:
    get:
      description: Get List of List of available Client Events
      operationId: listClientEventsDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstClientEventsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listClientEventsDefinitions
      tags:
        - Constants
  /api/v1/const/countries:
    get:
      description: Get List of List of available Country Codes
      operationId: listCountryCodes
      responses:
        '200':
          $ref: ./components/responses/ConstCrountriesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listCountryCodes
      tags:
        - Constants
  /api/v1/const/default_gateway_config:
    get:
      description: Generate Default Gateway Config
      operationId: getGatawayDefaultConfig
      parameters:
        - description: model the default gateway config is intended (as the default LAN/WAN port can differ)
          in: query
          name: model
          required: true
          schema:
            type: string
        - description: whether the config is intended for HA
          in: query
          name: ha
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    dhcpd_config:
                      lan:
                        ip_end: 192.168.1.254
                        ip_start: 192.168.1.2
                    ip_configs:
                      lan:
                        ip: 192.168.1.1
                        type: static
                    networks:
                      lan:
                        name: lan
                        subnet: 192.168.1.0/24
                        vlan_id: 1
                    path_preferences:
                      wan:
                        paths:
                          - name: wan
                            type: wan
                    port_config:
                      cl-1/0/0:
                        ip_config:
                          type: dhcp
                        name: lte
                        usage: wan
                        wan_type: lte
                      'ge-0/0/0,ge-0/0/7':
                        ip_config:
                          type: dhcp
                        name: wan
                        usage: wan
                      ge-0/0/1-6:
                        port_network: lan
                        usage: lan
                    service_policies:
                      - action: allow
                        name: Internet
                        path_preference: wan
                        services:
                          - any
                        tenants:
                          - lan
              schema:
                additionalProperties: true
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getGatawayDefaultConfig
      tags:
        - Constants
  /api/v1/const/device_events:
    get:
      description: Get list of available Device Events
      operationId: listDeviceEventsDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstDeviceEventsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listDeviceEventsDefinitions
      tags:
        - Constants
  /api/v1/const/device_models:
    get:
      description: Get list of AP device models for the Mist Site
      operationId: listDeviceModels
      responses:
        '200':
          $ref: ./components/responses/ConstDeviceModels.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listDeviceModels
      tags:
        - Constants
  /api/v1/const/gateway_applications:
    get:
      description: Get the full list of applications that we recognize
      operationId: listGatewayApplications
      responses:
        '200':
          $ref: ./components/responses/ConstGatewayApplications.yml
      summary: listGatewayApplications
      tags:
        - Constants
  /api/v1/const/insight_metrics:
    get:
      description: List Insight Metrics
      operationId: listInsightMetrics
      responses:
        '200':
          $ref: ./components/responses/ConstInsightMetrics.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInsightMetrics
      tags:
        - Constants
  /api/v1/const/languages:
    get:
      description: Get List of Languages
      operationId: listSiteLanguages
      responses:
        '200':
          $ref: ./components/responses/ConstLanaguagesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteLanguages
      tags:
        - Constants
  /api/v1/const/license_types:
    get:
      description: |
        Get License Types
      operationId: getLicenseTypes
      responses:
        '200':
          $ref: ./components/responses/ConstLicenceTypesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getLicenseTypes
      tags:
        - Constants
  /api/v1/const/mxedge_events:
    get:
      description: Get List of available MX Edge Events
      operationId: listMxEdgeEventsDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstMxEdgeEventsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMxEdgeEventsDefinitions
      tags:
        - Constants
  /api/v1/const/mxedge_models:
    get:
      description: Get List of available Mx Edge models
      operationId: listMxEdgeModels
      responses:
        '200':
          $ref: ./components/responses/ConstMxEdgeModelsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMxEdgeModels
      tags:
        - Constants
  /api/v1/const/nac_events:
    get:
      description: Get List of List of available NAC Client Events
      operationId: listNacEventsDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstNacEventsArray.yml
      summary: listNacEventsDefinitions
      tags:
        - Constants
  /api/v1/const/otherdevice_events:
    get:
      description: |
        Supported Events Type
      operationId: listOtherDeviceEventsDefinitions
      responses:
        '200':
          $ref: ./components/responses/ConstOtherDeviceEventsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOtherDeviceEventsDefinitions
      tags:
        - Constants
    parameters: []
  /api/v1/const/otherdevice_models:
    get:
      description: |
        Supported OtherDevice Models
      operationId: listSupportedOtherDeviceModels
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    - _vendor_model_id: '65'
                      display: W1850
                      model: W1850
                      type: router
                      vendor: cradlepoint
              schema:
                items:
                  properties:
                    _vendor_model_id:
                      type: string
                    display:
                      type: string
                    model:
                      type: string
                    type:
                      type: string
                    vendor:
                      type: string
                  type: object
                type: array
          description: OK
      summary: listSupportedOtherDeviceModels
      tags:
        - Constants
  /api/v1/const/traffic_types:
    get:
      description: Get List of identified traffic
      operationId: listTrafficTypes
      responses:
        '200':
          $ref: ./components/responses/ConstTrafficTypesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listTrafficTypes
      tags:
        - Constants
  '/api/v1/installer/orgs/{org_id}/alarmtemplates':
    get:
      description: Get List of alarm templates
      operationId: listInstallerAlarmTemplates
      responses:
        '200':
          $ref: ./components/responses/InstallerAlarmtemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerAlarmTemplates
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/deviceprofiles':
    get:
      description: Get List of Device Profiles
      operationId: listInstallerDeviceProfiles
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                      name: DeviceProfile 1
              schema:
                items:
                  properties:
                    id:
                      format: uuid
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerDeviceProfiles
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/devices':
    get:
      description: Get List of recently claimed devices
      operationId: listInstallerListOfRenctlyClaimedDevices
      responses:
        '200':
          $ref: ./components/responses/InstallerDevicesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerListOfRenctlyClaimedDevices
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'This mirrors `POST /api/v1/orgs/{org_id}/inventory` (see Inventory API)'
      operationId: claimInstallerDevices
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  - 6JG8E-PTFV2-A9Z2N
                  - DVH4V-SNMSZ-PDXBR
            schema:
              $ref: ./components/schemas/claimcodes.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OrgInventoryAdd.yml
        '400':
          description: Bad Request if none of the entries are valid
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: claimInstallerDevices
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/devices/{device_mac}':
    delete:
      description: Unassign recently claimed devices
      operationId: unassignInstallerRecentlyClaimedDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unassignInstallerRecentlyClaimedDevice
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    put:
      description: |-
        Provision or Replace a device 

        If replacing_mac is in the request payload, other attributes are ignored, we attempt to replace existing device (with mac replacing_mac) with the inventory device being configured. The replacement device must be in the inventory but not assigned, and the replacing_mac device must be assigned to a site, and satisfy grace period requirements. The Device replaced will become unassigned.
      operationId: provisionInstallerDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  deviceprofile_name: string
                  for_site: true
                  height: 0
                  map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                  name: string
                  orientation: 0
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  site_name: string
                  x: 0
                  'y': 0
            schema:
              $ref: ./components/schemas/installer_provision_device.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          content:
            application/json:
              examples:
                invalid-mac-given-for-replacing_mac:
                  value:
                    detail: invalid replacing_mac
                inventory-device-is-already-assigned:
                  value:
                    detail: device already assigned
                outsite-of-grace-period:
                  value:
                    detail: outside of grace period
                replacing_mac-device-is-not-assigned-to-a-site:
                  value:
                    detail: replacing_mac device is unassigned
                replacing_mac-device-last-modified-outside-of-grace-period:
                  value:
                    detail: replacing_mac device outside of grace period
              schema:
                properties:
                  detail:
                    type: string
                required:
                  - detail
                type: object
          description: Bad Request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          content:
            application/json:
              examples:
                replacing_mac-device-is-not-in-org-inventory:
                  value:
                    detail: replacing_mac inventory not found
                replacing_mac-device-not-found:
                  value:
                    detail: replacing_mac device not found
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: Not Found
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: provisionInstallerDevices
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/devices/{device_mac}/locate':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: 'Locate a Device by blinking it’s LED, it’s a persisted state that has to be stopped by calling Stop Locating API'
      operationId: startInstallerLocateDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: startInstallerLocateDevice
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/devices/{device_mac}/unlocate':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: Stop it
      operationId: stopInstallerLocateDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: stopInstallerLocateDevice
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/devices/{device_mac}/{image_name}':
    delete:
      description: delete image
      operationId: deleteInstallerDeviceImage
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteInstallerDeviceImage
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/image_name.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: Add image
      operationId: addInstallerDeviceImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: string
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addInstallerDeviceImage
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/rftemplates':
    get:
      description: Get List of RF Templates
      operationId: listInstallerRfTemplatesNames
      responses:
        '200':
          $ref: ./components/responses/InstallerRftemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerRfTemplatesNames
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/secpolicies':
    get:
      description: Get List of Secuity Policies
      operationId: listInstallerSecPolicies
      responses:
        '200':
          $ref: ./components/responses/InstallerSecpoliciesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerSecPolicies
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/sitegroups':
    get:
      description: Get List of Site Groups
      operationId: listInstallerSiteGroups
      responses:
        '200':
          $ref: ./components/responses/InstallerSitegroupsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerSiteGroups
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/sites':
    get:
      description: Get List of Sites
      operationId: listInstallerSites
      responses:
        '200':
          $ref: ./components/responses/InstallerSitesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerSites
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/installer/orgs/{org_id}/sites/{site_name}':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/site_name.yml
    put:
      description: 'Often the Installers are asked to assign Devices to Sites. The Sites can either be pre-created or created/modified by the Installer. If this is an update, the same grace period also applies.'
      operationId: createOrUpdateInstallerSites
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  address: '1601 S. Deanza Blvd., Cupertino, CA, 95014'
                  country_code: US
                  latlng:
                    lat: 37.295833
                    lng: -122.032946
                  name: string
                  rftemplate_name: rftemplate1
                  sitegroup_names:
                    - sg1
                    - sg2
                  timezone: America/Los_Angeles
            schema:
              $ref: ./components/schemas/installer_site.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrUpdateInstallerSites
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps':
    get:
      description: Get List of Maps
      operationId: listInstallerMaps
      responses:
        '200':
          $ref: ./components/responses/MapsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listInstallerMaps
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/site_name.yml
  '/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/import':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/site_name.yml
    post:
      description: 'Import data from files is a multipart POST which has an file, an optional json, and an optional csv, to create floorplan, assign & place ap if name or mac matches'
      operationId: importInstallerMap
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: false
                    import_orientation: false
                    vendor_name: ekahau
            schema:
              $ref: ./components/schemas/import_site_map.yml
      responses:
        '200':
          $ref: ./components/responses/MapImport.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importInstallerMap
      tags:
        - Installer
  '/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/{map_id}':
    delete:
      description: Delete Map
      operationId: deleteInstallerMap
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteInstallerMap
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/site_name.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: Create a MAP
      operationId: createInstallerMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                    - coordinate: string
                      id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      name: string
                      nodes:
                        - edges:
                            N2: string
                          name: string
                          position:
                            x: 0
                            'y': 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  width: 0
            schema:
              $ref: ./components/schemas/map.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Map.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createInstallerMap
      tags:
        - Installer
    put:
      description: Update map
      operationId: updateInstallerMap
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/map.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Map.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateInstallerMap
      tags:
        - Installer
  '/api/v1/installer/sites/{site_name}/optimize':
    get:
      description: 'After installation is considered complete (APs are placed on maps, all powered up), you can trigger an optimize operation where RRM will kick in (and maybe other things in the future) before it’s automatically scheduled.'
      operationId: optimizeInstallerRrm
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: optimizeInstallerRrm
      tags:
        - Installer
    parameters:
      - $ref: ./components/parameters/site_name.yml
  '/api/v1/invite/verify/{token}':
    parameters:
      - $ref: ./components/parameters/token.yml
    post:
      description: '**Note**: another call to ```GET /api/v1/self``` is required to see the new set of privileges'
      operationId: verifyAdminInvite
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          content:
            application/json:
              examples:
                invalid-secret:
                  value:
                    detail: invalid secret
                invite-created-by-self:
                  value:
                    detail: invite created by self
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: Not Found
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifyAdminInvite
      tags:
        - Admin
  /api/v1/login:
    post:
      description: |-
        Log in with email/password.
        When 2FA is enabled, there are two ways to login:
        1. login with two_factor token (with Google Authenticator, etc) 
        2. login with email/password, generate the token, and use /login/two_factor with the token
      operationId: login
      requestBody:
        content:
          application/json:
            examples:
              with-2FA:
                value:
                  email: test@mistsys.com
                  password: foryoureyesonly
                  two_factor: '123456'
              without-2FA:
                value:
                  email: test@mistsys.com
                  password: foryoureyesonly
            schema:
              $ref: ./components/schemas/login.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                2FA-required:
                  value:
                    email: test@mistsys.com
                    two_factor_passed: false
                    two_factor_required: true
                OK:
                  value: {}
              schema:
                properties:
                  email:
                    type: string
                  two_factor_passed:
                    type: boolean
                  two_factor_required:
                    type: boolean
                type: object
          description: Login Success
          headers:
            Set-Cookie:
              description: Session Cookie if login/password authentication is successful
              schema:
                example: 'csrftoken=vwvBuq9qkqaKh7lu8tNc0gkvBfEaLAmx; expires=Tue, 15-Mar-2016 19:47:20 GMT; Max-Age=31449600; Path=/'
                type: string
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    detail: sso admin login needs to be initiated by IdP
                    forward_url: 'https://my.sso/idp_sso_url'
              schema:
                oneOf:
                  - properties:
                      detail:
                        type: string
                      forward_url:
                        type: string
                    required:
                      - detail
                    type: object
          description: Login Failed
      summary: login
      tags:
        - Login
  /api/v1/login/lookup:
    post:
      description: Login Lookup
      operationId: lookup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@mistsys.com
            schema:
              $ref: ./components/schemas/model_object_email.yml
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                SSO-user-exists:
                  value:
                    sso_url: 'https://my.sso/idp_sso_url'
                local-user-exists:
                  value: {}
              schema:
                properties:
                  sso_url:
                    type: string
                type: object
          description: account exists
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          description: user does not exist
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: lookup
      tags:
        - Login
  '/api/v1/login/oauth/{provider}':
    delete:
      description: Unlink OAuth2 Provider
      operationId: unlinkOAuth2Provider
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unlinkOAuth2Provider
      tags:
        - Login With OAuth2
    get:
      description: Obtain Authorization URL for Login
      operationId: getOAuth2AuthorizationUrlForLogin
      parameters:
        - in: query
          name: forward
          schema:
            example: 'http://manage.mist.com/oauth/callback.html'
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    authorization_url: 'https://accounts.google.com/o/oauth2/v2/auth?.....'
                    client_id: 173131512-mpbnju32.apps.googleusercontent.com
              schema:
                properties:
                  authorization_url:
                    type: string
                  client_id:
                    type: string
                required:
                  - client_id
                  - authorization_url
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOAuth2AuthorizationUrlForLogin
      tags:
        - Login With OAuth2
    parameters:
      - in: path
        name: provider
        required: true
        schema:
          type: string
    post:
      description: Login via OAuth2
      operationId: loginOAuth2
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 4/S9tegDeLkrYg0L9pWNXV4cgMVbbr3SR9t693A2kSHzw
            schema:
              properties:
                code:
                  type: string
              required:
                - code
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: loginOAuth2
      tags:
        - Login With OAuth2
  /api/v1/login/two_factor:
    post:
      description: Send 2FA Code
      operationId: twoFactor
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  two_factor: '123456'
            schema:
              $ref: ./components/schemas/two_factor.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          description: two_factor code is incorrect or the user hasn’t login yet
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          description: the user doesn’t have 2FA enabled
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: twoFactor
      tags:
        - Login
  /api/v1/logout:
    post:
      description: Logout
      operationId: logout
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    forward_url: 'https://my.sso/custom_logout_url'
              schema:
                properties:
                  forward_url:
                    description: if configured in SSO as custom_logout_url
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: logout
      tags:
        - Login
  '/api/v1/mobile/verify/{secret}':
    parameters:
      - $ref: ./components/parameters/secret.yml
    post:
      description: Verify secret
      operationId: activateSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/model_object_device_id.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    name: Macy's
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    secret: device-specific-secret
              schema:
                properties:
                  name:
                    type: string
                  org_id:
                    format: uuid
                    type: string
                  secret:
                    type: string
                required:
                  - name
                  - org_id
                  - secret
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: activateSdkInvite
      tags:
        - Mobile
  /api/v1/msps:
    post:
      description: Create MSP account
      operationId: createMsp
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: MSP
            schema:
              $ref: ./components/schemas/msp.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Msp.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createMsp
      tags:
        - Msps
  '/api/v1/msps/{msp_id}':
    delete:
      description: Deleting MSP removes the MSP and OrgGroup under the MSP as well as all privileges associated with them. It does not remove any Org or Admins
      operationId: deleteMsp
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteMsp
      tags:
        - Msps
    get:
      description: Get MSP Detail
      operationId: getMspDetails
      responses:
        '200':
          $ref: ./components/responses/Msp.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspDetails
      tags:
        - Msps
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    put:
      description: Update MSP
      operationId: updateMsp
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: MSP
            schema:
              $ref: ./components/schemas/msp.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Msp.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMsp
      tags:
        - Msps
  '/api/v1/msps/{msp_id}/admins':
    get:
      description: Get List of MSP Admins
      operationId: listMspAdmins
      responses:
        '200':
          $ref: ./components/responses/AdminsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspAdmins
      tags:
        - Msps Admins
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/admins/{admin_id}':
    delete:
      description: This removes all privileges this admin has against the MSP. This goes deep all the way to the sites
      operationId: revokeMspAdmin
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: revokeMspAdmin
      tags:
        - Msps Admins
    get:
      description: Get MSP Admins
      operationId: getMspAdmin
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspAdmin
      tags:
        - Msps Admins
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/admin_id.yml
    put:
      description: Update MSP Admin
      operationId: updateMspAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-2:
                value:
                  admin_id: 919c4da0-421a-479a-918d-df80e426d3bf
                  email: user@example.com
                  enable_two_factor: true
                  first_name: string
                  last_name: string
                  oauth_google: true
                  privileges:
                    - for_site: true
                      msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  session_expiry: 0
                  tags:
                    - string
                  two_factor_verified: true
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMspAdmin
      tags:
        - Msps Admins
  '/api/v1/msps/{msp_id}/claim':
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Claim an Order by Activation Code
      operationId: claimMspLicence
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: ZHT3K-H36DT-MG85D-M61AC
            schema:
              properties:
                code:
                  description: activation code
                  minLength: 1
                  type: string
              required:
                - code
              type: object
      responses:
        '200':
          $ref: ./components/responses/claimLicense.yml
        '400':
          description: Response when the key is invalid (or already used)
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: claimMspLicence
      tags:
        - Msps Licenses
  '/api/v1/msps/{msp_id}/insights/{metric}':
    get:
      description: Get MSP SLEs (all/worst Orgs ...)
      operationId: getMspSle
      parameters:
        - description: see /api/v1/const/insight_metrics for more details
          in: query
          name: sle
          schema:
            type: string
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                orgs-sle:
                  value:
                    end: 1643706000
                    interval: 3600
                    limit: 100
                    results:
                      - ap-availability: 0.9919400860511628
                        ap-health: 0.967607512909879
                        capacity: 0.7484652273070254
                        coverage: 0.91217567374857
                        num_aps: 13
                        num_clients: 12
                        org_id: 978c48e6-6ef6-11e6-8bbf-02e208b2d34f
                        roaming: 0.991735537682683
                        roaming-exp: 0.991735537682683
                        successful-connect: 0.46052632135780236
                        throughput: 0.6775702123846302
                        time-to-connect: 0.9349112447196916
                      - ap-availability: 0.9990384613092129
                        ap-health: 0.48201754375507955
                        capacity: 0.9702673450306101
                        coverage: 0.8335392334930375
                        num_aps: 1
                        num_clients: 6
                        org_id: 49ff76e0-a283-4e7d-b38d-041f1e9aff3c
                        roaming: 1
                        roaming-exp: 1
                        successful-connect: 1
                        throughput: 0
                        time-to-connect: 1
                      - ap-availability: 1
                        ap-health: 0.982456140612301
                        capacity: 1
                        coverage: 0.9276041182442488
                        num_aps: 2
                        num_clients: 3
                        org_id: 9b9b48f1-15a4-459e-86cc-9cbec9005983
                        roaming: 1
                        roaming-exp: 1
                        successful-connect: 1
                        throughput: 1
                        time-to-connect: 0.8125
                      - ap-availability: 0.9981132070973234
                        ap-health: 0.9991228068084047
                        capacity: 1
                        coverage: 1
                        num_aps: 1
                        num_clients: 0
                        org_id: eb0e1671-7a6b-472b-94c3-c187dafe5274
                        roaming: 1
                        roaming-exp: 1
                        successful-connect: 1
                        throughput: 0
                        time-to-connect: 0.5
                    start: 1643670000
              schema:
                properties:
                  end:
                    type: number
                  interval:
                    type: number
                  limit:
                    type: number
                  results:
                    items:
                      additionalProperties: {}
                      type: object
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                required:
                  - start
                  - end
                  - interval
                  - limit
                  - results
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspSle
      tags:
        - Msps SLEs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/msps/{msp_id}/inventory/{device_mac}':
    get:
      description: Get Inventoy By device MAC address
      operationId: getMspInventoryByMac
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    mac: 5c5b35000018
                    model: AP200
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    serial: FXLH2015150025
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    type: ap
              schema:
                properties:
                  for_site:
                    readOnly: true
                    type: boolean
                  mac:
                    readOnly: true
                    type: string
                  model:
                    readOnly: true
                    type: string
                  org_id:
                    format: uuid
                    readOnly: true
                    type: string
                  serial:
                    readOnly: true
                    type: string
                  site_id:
                    format: uuid
                    readOnly: true
                    type: string
                  type:
                    readOnly: true
                    type: string
                required:
                  - serial
                  - model
                  - type
                  - mac
                  - org_id
                  - site_id
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspInventoryByMac
      tags:
        - Msps Inventory
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/device_mac.yml
  '/api/v1/msps/{msp_id}/invites':
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: |-
        Invite MSP Admin

        **Note**: An email will also be sent to the user with a link to https://manage.mist.com/verify/invite?token=:token
      operationId: inviteMspAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: inviteMspAdmin
      tags:
        - Msps Invites
  '/api/v1/msps/{msp_id}/invites/{invite_id}':
    delete:
      description: Delete admin invite
      operationId: uninviteMspAdmin
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uninviteMspAdmin
      tags:
        - Msps Invites
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/invite_id.yml
    put:
      description: Update MSP admin invite
      operationId: updateMspAdminInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMspAdminInvite
      tags:
        - Msps Invites
  '/api/v1/msps/{msp_id}/licenses':
    get:
      description: Get List of Msp Licenses
      operationId: listMspLicenses
      responses:
        '200':
          $ref: ./components/responses/Licence.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspLicenses
      tags:
        - Msps Licenses
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    put:
      description: Move or Delete MSP Licenses
      operationId: moveOrDeleteMspLicenseToAnotherOrg
      requestBody:
        content:
          application/json:
            examples:
              delete-license:
                value:
                  op: delete
                  subscription_id: SUB-0000144
              move-micense:
                value:
                  dst_org_id: 3eff35f7-c218-894e-bca2-24e5325601cc
                  op: amend
                  quantity: 10
                  subscription_id: SUB-0000144
              undo-the-license-move:
                value:
                  amendment_id: 2b9116ab-cd1e-e897-6e08-31fccd88e792
                  op: unamend
            schema:
              properties:
                amendment_id:
                  description: required if `op`==`unamend`
                  type: string
                dst_org_id:
                  description: 'required if `op`==`amend`, destination org id'
                  minLength: 1
                  type: string
                notes:
                  description: required if `op`== `annotate`
                  type: string
                op:
                  enum:
                    - amend
                    - unamend
                    - delete
                    - annotate
                  minLength: 1
                  type: string
                quantity:
                  description: required if `op`==`amend`
                  type: number
                subscription_id:
                  description: required if `op`== `annotate`
                  minLength: 1
                  type: string
              required:
                - op
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: moveOrDeleteMspLicenseToAnotherOrg
      tags:
        - Msps Licenses
  '/api/v1/msps/{msp_id}/logo':
    delete:
      description: Delete MSP Logo
      operationId: deleteMspLogo
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteMspLogo
      tags:
        - Msps Logo
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Upload Logo (only for advanced msp tier)
      operationId: postMspLogo
      requestBody:
        content:
          application/json:
            schema:
              properties:
                logo_url:
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: postMspLogo
      tags:
        - Msps Logo
  '/api/v1/msps/{msp_id}/logs':
    get:
      description: Get list of change logs for the current MSP
      operationId: listMspLogs
      parameters:
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: admin name or email
          in: query
          name: admin_name
          schema:
            type: string
        - description: message
          in: query
          name: message
          schema:
            type: string
        - description: sort order
          in: query
          name: sort
          schema:
            enum:
              - timestamp
              - '-timestamp'
              - site_id
              - admin_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/LogsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspLogs
      tags:
        - Msps Logs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/logs/count':
    get:
      description: Count by Distinct Attributes of Audit Logs
      operationId: countMspLogs
      parameters:
        - in: query
          name: distinct
          schema:
            default: admin_name
            enum:
              - admin_id
              - admin_name
              - message
              - org_id
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countMspLogs
      tags:
        - Msps Logs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/orggroups':
    get:
      description: Get List of MSP Org Groups
      operationId: listMspOrgGroups
      responses:
        '200':
          $ref: ./components/responses/OrggroupsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspOrgGroups
      tags:
        - Msps Org Groups
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Create MSP Org Group
      operationId: createMspOrgGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  org_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/orggroup.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Orggroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createMspOrgGroup
      tags:
        - Msps Org Groups
  '/api/v1/msps/{msp_id}/orggroups/{orggroup_id}':
    delete:
      description: Delete MSP Org Group
      operationId: deleteMspOrgGroup
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteMspOrgGroup
      tags:
        - Msps Org Groups
    get:
      description: Get MSP Org Group Details
      operationId: getMspOrgGroup
      responses:
        '200':
          $ref: ./components/responses/Orggroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspOrgGroup
      tags:
        - Msps Org Groups
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/orggroup_id.yml
    put:
      description: Update MSP Org Group
      operationId: updateMspOrgGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/orggroup.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Orggroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMspOrgGroup
      tags:
        - Msps Org Groups
  '/api/v1/msps/{msp_id}/orgs':
    get:
      description: Get List of MSP Orgs
      operationId: listMspOrgs
      responses:
        '200':
          $ref: ./components/responses/OrgsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspOrgs
      tags:
        - Msps Orgs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Create an Org under MSP
      operationId: createMspOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  allow_mist: true
                  name: string
                  orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  session_expiry: 10
            schema:
              $ref: ./components/schemas/org.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createMspOrg
      tags:
        - Msps Orgs
    put:
      description: Assign or Unassign Orgs to an MSP account
      operationId: manageMspOrgs
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  op: assign
                  org_ids:
                    - 2b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              properties:
                op:
                  enum:
                    - assign
                    - unassign
                  type: string
                org_ids:
                  description: list of org_id
                  items:
                    type: string
                  type: array
              required:
                - op
                - org_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: manageMspOrgs
      tags:
        - Msps Orgs
  '/api/v1/msps/{msp_id}/orgs/search':
    get:
      description: Search Org in MSP
      operationId: searchMspOrgs
      parameters:
        - $ref: ./components/parameters/name.yml
        - description: org id
          in: query
          name: org_id
          schema:
            format: uuid
            type: string
        - description: if this org has sufficient subscription
          in: query
          name: sub_insufficient
          schema:
            type: boolean
        - description: if this org is under trial period
          in: query
          name: trial_enabled
          schema:
            type: boolean
        - description: a list of types that enabled by usage
          in: query
          name: usage_types
          schema:
            items:
              type: string
            type: array
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/OrgsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchMspOrgs
      tags:
        - Msps Orgs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/orgs/{org_id}':
    delete:
      description: delete MSP Org
      operationId: deleteMspOrg
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: deleteMspOrg
      tags:
        - Msps Orgs
    get:
      description: Get MSP Org Details
      operationId: getMspOrg
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspOrg
      tags:
        - Msps Orgs
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/org_id.yml
    put:
      description: Update MSP Org
      operationId: updateMspOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/org.yml
      responses:
        '200':
          $ref: ./components/responses/Org.yml
      summary: updateMspOrg
      tags:
        - Msps Orgs
  '/api/v1/msps/{msp_id}/search':
    get:
      description: Search in MSP Orgs
      operationId: searchMspOrgGroup
      parameters:
        - description: orgs
          example: orgs
          in: query
          name: type
          required: true
          schema:
            enum:
              - orgs
            type: string
        - $ref: ./components/parameters/q.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/OrggroupsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchMspOrgGroup
      tags:
        - Msps Org Groups
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/ssoroles':
    get:
      description: Get List of MSP SSO Roles
      operationId: listMspSsoRoles
      responses:
        '200':
          $ref: ./components/responses/SsorolesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspSsoRoles
      tags:
        - Msps SSO Roles
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Create MSP Role
      operationId: createMspSsoRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/ssorole.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ssorole.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createMspSsoRole
      tags:
        - Msps SSO Roles
  '/api/v1/msps/{msp_id}/ssoroles/{ssorole_id}':
    delete:
      description: Delete MSP SSO Roles
      operationId: deleteMspSsoRole
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteMspSsoRole
      tags:
        - Msps SSO Roles
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/ssorole_id.yml
    put:
      description: Update SSO Role
      operationId: updateMspSsoRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/ssorole.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ssorole.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMspSsoRole
      tags:
        - Msps SSO Roles
  '/api/v1/msps/{msp_id}/ssos':
    get:
      description: List MSP SSO Configs
      operationId: listMspSsos
      responses:
        '200':
          $ref: ./components/responses/SsosArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspSsos
      tags:
        - Msps SSO
    parameters:
      - $ref: ./components/parameters/msp_id.yml
    post:
      description: Create MSP SSO profile
      operationId: createMspSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sso.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createMspSso
      tags:
        - Msps SSO
  '/api/v1/msps/{msp_id}/ssos/{sso_id}':
    delete:
      description: Delete MSP SSO Config
      operationId: deleteMspSso
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteMspSso
      tags:
        - Msps SSO
    get:
      description: Get MSP SSO Config
      operationId: getMspSso
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspSso
      tags:
        - Msps SSO
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/sso_id.yml
    put:
      description: Update MSP SSO config
      operationId: updateMspSso
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  custom_logout_url: string
                  idp_cert: string
                  idp_sign_algo: string
                  idp_sso_url: string
                  ignore_unmatched_roles: true
                  issuer: string
                  name: string
                  nameid_format: email
            schema:
              $ref: ./components/schemas/sso.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateMspSso
      tags:
        - Msps SSO
  '/api/v1/msps/{msp_id}/ssos/{sso_id}/failures':
    get:
      description: Get List of MSP SSO Latest Failures
      operationId: listMspSsoLatestFailures
      responses:
        '200':
          $ref: ./components/responses/SsoLatestFailures.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspSsoLatestFailures
      tags:
        - Msps SSO
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/msps/{msp_id}/ssos/{sso_id}/metadata':
    get:
      description: Get MSP SSO SAML Metadata
      operationId: getMspSsoSamlMetadata
      responses:
        '200':
          $ref: ./components/responses/SsoSamlMetadata.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getMspSsoSamlMetadata
      tags:
        - Msps SSO
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/msps/{msp_id}/ssos/{sso_id}/metadata.xml':
    get:
      description: |-
        Download MSP SSO SAML Metadata

        Example of metadata.xml:
        ```xml
        <?xml version="1.0" encoding="UTF-8"?><md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://api.mist.com/api/v1/saml/5hdF5g/login" validUntil="2027-10-12T21:59:01Z" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
            <md:SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
                <md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/logout" />
                <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>
                <md:AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/login" index="0" isDefault="true"/>
                <md:AttributeConsumingService index="0">
                    <md:ServiceName xml:lang="en-US">Mist</md:ServiceName>
                    <md:RequestedAttribute Name="Role" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="true"/>
                    <md:RequestedAttribute Name="FirstName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
                    <md:RequestedAttribute Name="LastName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
                </md:AttributeConsumingService>
            </md:SPSSODescriptor>
        </md:EntityDescriptor>
        ```
      operationId: downloadMspSsoSamlMetadata
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: downloadMspSsoSamlMetadata
      tags:
        - Msps SSO
    parameters:
      - $ref: ./components/parameters/msp_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/msps/{msp_id}/stats/licenses':
    get:
      description: Get List of MSP Licences
      operationId: listMspOrgLicenses
      parameters: []
      responses:
        '200':
          $ref: ./components/responses/Licence.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspOrgLicenses
      tags:
        - Msps Stats
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/stats/orgs':
    get:
      description: Get List of MSP Orgs Stats
      operationId: listMspOrgStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/OrgsArrayStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspOrgStats
      tags:
        - Msps Stats
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/suggestion/count':
    get:
      description: |
        Count Marvis actions
      operationId: countMspsMarvisActions
      parameters:
        - in: query
          name: distinct
          schema:
            default: org_id
            enum:
              - org_id
              - status
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/countMarvisActions.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countMspsMarvisActions
      tags:
        - Msps Marvis
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/tickets':
    get:
      description: Get List of Tickets of a MSP
      operationId: listMspTickets
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/TicketsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listMspTickets
      tags:
        - Msps Tickets
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  '/api/v1/msps/{msp_id}/tickets/count':
    get:
      description: Count tickets
      operationId: countMspTickets
      parameters:
        - in: query
          name: distinct
          schema:
            default: status
            enum:
              - status
              - type
              - org_id
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countMspTickets
      tags:
        - Msps Tickets
    parameters:
      - $ref: ./components/parameters/msp_id.yml
  /api/v1/orgs:
    post:
      description: 'Org admin can invite people to manage the org. Furthermore, he can dictate the level of security those accounts are. The check is enforced when the invited admin tries to “accept” the invitation and every time the admin tries to login'
      operationId: createOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  allow_mist: true
                  msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  orggroup_ids:
                    - 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  session_expiry: 0
            schema:
              $ref: ./components/schemas/org.yml
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrg
      tags:
        - Orgs
  '/api/v1/orgs/{org_id}':
    delete:
      description: Delete Org
      operationId: deleteOrg
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrg
      tags:
        - Orgs
    get:
      description: Get Organization information
      operationId: getOrg
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrg
      tags:
        - Orgs
    parameters:
      - $ref: ./components/parameters/org_id.yml
    put:
      description: Update Org
      operationId: updateOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: 1984805d-2be2-4aec-a8d4-3ddf67fab0df
                  allow_mist: true
                  created_time: 0
                  id: 497f6eca-6276-5021-bfeb-53cbbbba6f2a
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  name: string
                  orggroup_ids: []
                  session_expiry: 1440
            schema:
              $ref: ./components/schemas/org.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrg
      tags:
        - Orgs
  '/api/v1/orgs/{org_id}/128routers/register_cmd':
    get:
      description: 128T devices can be managed/adopted by Mist.
      operationId: getOrg128TRegistrationCommands
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    conductor_cmd: register mist eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdfaWQiOiIyODE4ZTM4Ni04ZGVjLTI1NjItOWVkZS01YjhhMGZiYmRjNzEiLCJzdmMiOiIxMjhyb3V0ZXIiLCJwcm92aWRlciI6ImF3cyIsImVudiI6ImxvY2FsIiwiZXB0ZXJtX3VybCI6IndzczovL2xvY2FsL3dzIiwiaWF0IjoxNjEzODQ3NDg0LCJleHAiOjE2NDUzODM0ODR9.YnhgThKYAj1uaooi6j-zY8dMipp5YqJxnn79B9TB5XQ
                    registration_code: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdfaWQiOiIyODE4ZTM4Ni04ZGVjLTI1NjItOWVkZS01YjhhMGZiYmRjNzEiLCJzdmMiOiIxMjhyb3V0ZXIiLCJwcm92aWRlciI6ImF3cyIsImVudiI6ImxvY2FsIiwiZXB0ZXJtX3VybCI6IndzczovL2xvY2FsL3dzIiwiaWF0IjoxNjEzODQ3NDg0LCJleHAiOjE2NDUzODM0ODR9.YnhgThKYAj1uaooi6j-zY8dMipp5YqJxnn79B9TB5XQ
                    router_shell_cmd: 128agent register --registration-code eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdfaWQiOiIyODE4ZTM4Ni04ZGVjLTI1NjItOWVkZS01YjhhMGZiYmRjNzEiLCJzdmMiOiIxMjhyb3V0ZXIiLCJwcm92aWRlciI6ImF3cyIsImVudiI6ImxvY2FsIiwiZXB0ZXJtX3VybCI6IndzczovL2xvY2FsL3dzIiwiaWF0IjoxNjEzODQ3NDg0LCJleHAiOjE2NDUzODM0ODR9.YnhgThKYAj1uaooi6j-zY8dMipp5YqJxnn79B9TB5XQ
              schema:
                properties:
                  conductor_cmd:
                    type: string
                  registration_code:
                    type: string
                  router_shell_cmd:
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrg128TRegistrationCommands
      tags:
        - Orgs 128T
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/admins':
    get:
      description: Get List of people who can manage the Site/Org under the Org
      operationId: listOrgAdmins
      responses:
        '200':
          $ref: ./components/responses/AdminsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAdmins
      tags:
        - Orgs Admins
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/admins/{admin_id}':
    delete:
      description: This removes all privileges this admin has against the org
      operationId: revokeOrgAdmin
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: revokeOrgAdmin
      tags:
        - Orgs Admins
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/admin_id.yml
    put:
      description: Invite Org Admin
      operationId: updateOrgAdmin
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  admin_id: 456b7016-a916-a4b1-78dd-72b947c152b7
                  email: jsnow@abc.com
                  enable_two_factor: true
                  expire_time: 0
                  first_name: John
                  hours: 24
                  last_name: Sno
                  oauth_google: true
                  phone: string
                  phone2: string
                  privileges:
                    - for_site: true
                      msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                      msp_logo_url: string
                      msp_name: string
                      msp_url: string
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      org_name: string
                      orggroup_ids:
                        - 497f6eca-6276-4993-bfeb-53d5bbba6f08
                      role: admin
                      scope: org
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      sitegroup_ids:
                        - 497f6eca-6276-4993-bfeb-53d6bbba6f08
                      views:
                        - string
                  session_expiry: 1440
                  tags:
                    - string
                  two_factor_verified: true
                  via_sso: true
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAdmin
      tags:
        - Orgs Admins
  '/api/v1/orgs/{org_id}/alarms/ack':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Ack multiple Org Alarms
      operationId: multiAckOrgAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                    - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                    - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              properties:
                alarm_ids:
                  items:
                    format: uuid
                    type: string
                  type: array
                note:
                  description: Some text note describing the intent
                  type: string
              required:
                - alarm_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiAckOrgAlarms
      tags:
        - Orgs Alarms
  '/api/v1/orgs/{org_id}/alarms/ack_all':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Ack all Org Alarms

        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or equal to 1000.
      operationId: ackOrgAllAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: string
            schema:
              $ref: ./components/schemas/note.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: ackOrgAllAlarms
      tags:
        - Orgs Alarms
  '/api/v1/orgs/{org_id}/alarms/count':
    get:
      description: Count Org Alarms
      operationId: countOrgAlarms
      parameters:
        - in: query
          name: distinct
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgAlarms
      tags:
        - Orgs Alarms
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/alarms/search':
    get:
      description: Search Org Alarms
      operationId: searchOrgAlarms
      parameters:
        - in: query
          name: site_id
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AlarmsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgAlarms
      tags:
        - Orgs Alarms
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/alarms/unack':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Unack multiple Org Alarms
      operationId: multiUnackOrgAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                    - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                    - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              properties:
                alarm_ids:
                  items:
                    format: uuid
                    type: string
                  type: array
                note:
                  description: Some text note describing the intent
                  type: string
              required:
                - alarm_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiUnackOrgAlarms
      tags:
        - Orgs Alarms
  '/api/v1/orgs/{org_id}/alarms/unack_all':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Unack all Org Alarms

        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or equal to 1000.
      operationId: unackOrgAllArlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: ./components/schemas/note.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unackOrgAllArlarms
      tags:
        - Orgs Alarms
  '/api/v1/orgs/{org_id}/alarms/{alarm_id}/ack':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/alarm_id.yml
    post:
      description: Ack Org Alarm
      operationId: ackOrgAlarm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: ./components/schemas/note.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: ackOrgAlarm
      tags:
        - Orgs Alarms
  '/api/v1/orgs/{org_id}/alarmtemplates':
    get:
      description: Get List of Org Alarm Templates
      operationId: listOrgAlarmTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AlarmtemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAlarmTemplates
      tags:
        - Orgs Alarm Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Available rules can be found in Orgs>Consts>getAlarmDefs

        The delivery dict is only required if different from the template delivery settings.
      operationId: createOrgAlarmTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/alarmtemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Alarmtemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgAlarmTemplate
      tags:
        - Orgs Alarm Templates
  '/api/v1/orgs/{org_id}/alarmtemplates/suppress':
    delete:
      description: Un-Suppress Suppressed Alarms
      operationId: unsuppressOrgSuppressedAlarms
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unsuppressOrgSuppressedAlarms
      tags:
        - Orgs Alarm Templates
    get:
      description: Get List of Org Alarms Currently Suppressed
      operationId: listOrgSuppressedAlarms
      parameters:
        - in: query
          name: scope
          schema:
            default: site
            enum:
              - org
              - site
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    results:
                      - duration: 48
                        site_id: 581328b6-e382-f54e-c9dc-9c998d183a34
              schema:
                properties:
                  results:
                    items:
                      properties:
                        duration:
                          description: 'duration, in seconds. Maximum duration is 86400 * 14 (14 days). 0 is to un-suppress alarms.'
                          type: integer
                        site_id:
                          type: string
                      type: object
                    type: array
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSuppressedAlarms
      tags:
        - Orgs Alarm Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'In certain situations, for example, scheduled maintenance, you may want to suspend alarms to be triggered against Sites for a period of time.'
      operationId: suppressOrgAlarm
      requestBody:
        content:
          application/json:
            examples:
              org-suppression:
                value:
                  duration: 3600
                  scheduled_time: 1678232980
                  scope: org
              site-suppression:
                value:
                  applies:
                    org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                    site_ids:
                      - 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    sitegroup_ids:
                      - 581328b6-e382-f54e-c9dc-999983183a34
                      - f57096b9-0c2f-4df6-c77b-ae6ae87a3d43
                  duration: 3600
                  scheduled_time: 1678232980
                  scope: site
            schema:
              properties:
                applies:
                  description: |-
                    if `scope`==`site`
                    Object defines the scope (within the org e.g. whole org, and/or some site-groups, and/or some sites) for which the alarm service has to be suppressed for some `duration`
                  properties:
                    org_id:
                      description: 'UUID of the current org (if provided, the alarms will be suppressed at org level)'
                      format: uuid
                      minLength: 1
                      type: string
                    site_ids:
                      description: 'List of UUID of the sites within the org (if provided, the alarms will be suppressed for all the mentioned sites under the org)'
                      items:
                        format: uuid
                        type: string
                      type: array
                    sitegroup_ids:
                      description: 'List of UUID of the site groups within the org (if provided, the alarms will be suppressed for all the sites under those site groups)'
                      items:
                        format: uuid
                        type: string
                      type: array
                  type: object
                duration:
                  default: 3600
                  description: 'duration, in seconds. Maximum duration is 86400 * 180 (180 days). 0 is to un-suppress alarms'
                  maximum: 15552000
                  minimum: 0
                  type: number
                scheduled_time:
                  description: 'poch_time in seconds, Default as now, accepted time range is from now to now + 7 days'
                  type: integer
                scope:
                  default: site
                  description: level of scope
                  enum:
                    - org
                    - site
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: suppressOrgAlarm
      tags:
        - Orgs Alarm Templates
  '/api/v1/orgs/{org_id}/alarmtemplates/{alarmtemplate_id}':
    delete:
      description: Delete Org Alarm Template
      operationId: deleteOrgAlarmTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgAlarmTemplate
      tags:
        - Orgs Alarm Templates
    get:
      description: Get Org Alarm Template Details
      operationId: getOrgAlarmTemplate
      responses:
        '200':
          $ref: ./components/responses/Alarmtemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgAlarmTemplate
      tags:
        - Orgs Alarm Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/alarmtemplate_id.yml
    put:
      description: Update Org Alarm Template
      operationId: updateOrgAlarmTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  delivery:
                    additional_emails:
                      - string
                    enabled: true
                    to_org_admins: true
                    to_site_admins: true
                  name: string
                  rules:
                    adhoc_network:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    air_magnet_scan:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    ap_offline:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    bad_cable:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    beacon_flood:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    bssid_spoofing:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    device_down:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    device_restarted:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    dhcp_failure:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    disassociation_flood:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    dot1x_failure:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_dictionary_attack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_failure_injection:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_handshake_flood:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_spoofed_success:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eapol_logoff_attack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    essid_jack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    excessive_client:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    excessive_eapol_start:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gateway_down:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gw_bad_cable:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gw_negotiation_mismatch:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    honeypot_ssid:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    krack_attack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    missing_vlan:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    monkey_jack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    negotiation_mismatch:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    non_compliant:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    out_of_sequence:
                      enabled: true
                    psk_failure:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    repeated_auth_failures:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    rogue_ap:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    rogue_client:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    secpolicy_violation:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    ssid_injection:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    switch_down:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    tkip_icv_attack:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    vendor_ie_missing:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    watched_station:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    zero_ssid_association:
                      delivery:
                        additional_emails:
                          - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
            schema:
              $ref: ./components/schemas/alarmtemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Alarmtemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAlarmTemplate
      tags:
        - Orgs Alarm Templates
  '/api/v1/orgs/{org_id}/apitokens':
    get:
      description: Get List of Org API Tokens
      operationId: listOrgApiTokens
      responses:
        '200':
          $ref: ./components/responses/ApitokensOrgArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgApiTokens
      tags:
        - Orgs API Tokens
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Create Org API Token
        Note that the token key is only available during creation time.
      operationId: createOrgApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_by: user@mycorp.com
                  name: org_token_xyz
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  privileges:
                    - org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      role: admin
                      scope: org
            schema:
              $ref: ./components/schemas/org_apitoken.yml
      responses:
        '200':
          $ref: ./components/responses/ApitokenOrg.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgApiToken
      tags:
        - Orgs API Tokens
  '/api/v1/orgs/{org_id}/apitokens/{apitoken_id}':
    delete:
      description: Delete Org API Token
      operationId: deleteOrgApiToken
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgApiToken
      tags:
        - Orgs API Tokens
    get:
      description: Get Org API Token
      operationId: getOrgApiToken
      responses:
        '200':
          $ref: ./components/responses/ApitokenOrg.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgApiToken
      tags:
        - Orgs API Tokens
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/apitoken_id.yml
    put:
      description: Update Org API Token
      operationId: updateOrgApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: org_token_xyz
                  privileges:
                    - org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      role: admin
                      scope: org
            schema:
              $ref: ./components/schemas/org_apitoken.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/ApitokenOrg.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgApiToken
      tags:
        - Orgs API Tokens
  '/api/v1/orgs/{org_id}/aptemplates':
    get:
      description: Get List of Org AP Templates
      operationId: listOrgAptemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AptemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAptemplates
      tags:
        - Orgs AP Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org AP Template
      operationId: createOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                      - match_model: string
                        name: string
                        port_config:
                          property1:
                            additional_vlan_ids:
                              - 55
                              - 66
                            authentication_protocol: pap
                            disabled: true
                            dynamic_vlan:
                              default_vlan_id: 999
                              enabled: true
                              type: string
                              vlans:
                                1-10: null
                                user: null
                            enable_mac_auth: false
                            forwarding: all
                            mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                            mxtunnel_name: string
                            port_auth: none
                            port_vlan_id: 1
                            radius_config:
                              acct_interim_interval: 0
                              acct_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1813
                                  secret: testing123
                              auth_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1812
                                  secret: testing123
                              auth_servers_retries: 3
                              auth_servers_timeout: 5
                              coa_enabled: false
                              coa_port: 3799
                              network: string
                              source_ip: string
                            radsec:
                              enabled: true
                              idle_timeout: 60
                              mxcluster_ids:
                                - 572586b7-f97b-a22b-526c-8b97a3f609c4
                              proxy_hosts:
                                - mxedge1.local
                              server_name: radsec.abc.com
                              servers:
                                - host: 1.1.1.1
                                  port: 1812
                              use_mxedge: true
                              use_site_mxedge: false
                            vlan_id: 9
                            vland_ids:
                              - 1
                              - 10
                              - 50
                            wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                            wxtunnel_remote_id: wifiguest
                          property2:
                            additional_vlan_ids:
                              - 55
                              - 66
                            authentication_protocol: pap
                            disabled: true
                            dynamic_vlan:
                              default_vlan_id: 999
                              enabled: true
                              type: string
                              vlans:
                                1-10: null
                                user: null
                            enable_mac_auth: false
                            forwarding: all
                            mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                            mxtunnel_name: string
                            port_auth: none
                            port_vlan_id: 1
                            radius_config:
                              acct_interim_interval: 0
                              acct_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1813
                                  secret: testing123
                              auth_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1812
                                  secret: testing123
                              auth_servers_retries: 3
                              auth_servers_timeout: 5
                              coa_enabled: false
                              coa_port: 3799
                              network: string
                              source_ip: string
                            radsec:
                              enabled: true
                              idle_timeout: 60
                              mxcluster_ids:
                                - 572586b7-f97b-a22b-526c-8b97a3f609c4
                              proxy_hosts:
                                - mxedge1.local
                              server_name: radsec.abc.com
                              servers:
                                - host: 1.1.1.1
                                  port: 1812
                              use_mxedge: true
                              use_site_mxedge: false
                            vlan_id: 9
                            vland_ids:
                              - 1
                              - 10
                              - 50
                            wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                            wxtunnel_remote_id: wifiguest
                  created_time: 0
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53d7bbba6f08
                  modified_time: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: ./components/schemas/aptemplate.yml
      responses:
        '200':
          $ref: ./components/responses/Aptemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgAptemplate
      tags:
        - Orgs AP Templates
  '/api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}':
    delete:
      description: Delete existing AP Template
      operationId: deleteOrgAptemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgAptemplate
      tags:
        - Orgs AP Templates
    get:
      description: Get AP Template
      operationId: getOrgAptemplate
      responses:
        '200':
          $ref: ./components/responses/Aptemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgAptemplate
      tags:
        - Orgs AP Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/aptemplate_id.yml
    put:
      description: Update AP Template
      operationId: updateOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                      - match_model: string
                        name: string
                        port_config:
                          property1:
                            additional_vlan_ids:
                              - 55
                              - 66
                            authentication_protocol: pap
                            disabled: true
                            dynamic_vlan:
                              default_vlan_id: 999
                              enabled: true
                              type: string
                              vlans:
                                1-10: null
                                user: null
                            enable_mac_auth: false
                            forwarding: all
                            mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                            mxtunnel_name: string
                            port_auth: none
                            port_vlan_id: 1
                            radius_config:
                              acct_interim_interval: 0
                              acct_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1813
                                  secret: testing123
                              auth_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1812
                                  secret: testing123
                              auth_servers_retries: 3
                              auth_servers_timeout: 5
                              coa_enabled: false
                              coa_port: 3799
                              network: string
                              source_ip: string
                            radsec:
                              enabled: true
                              idle_timeout: 60
                              mxcluster_ids:
                                - 572586b7-f97b-a22b-526c-8b97a3f609c4
                              proxy_hosts:
                                - mxedge1.local
                              server_name: radsec.abc.com
                              servers:
                                - host: 1.1.1.1
                                  port: 1812
                              use_mxedge: true
                              use_site_mxedge: false
                            vlan_id: 9
                            vland_ids:
                              - 1
                              - 10
                              - 50
                            wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                            wxtunnel_remote_id: wifiguest
                          property2:
                            additional_vlan_ids:
                              - 55
                              - 66
                            authentication_protocol: pap
                            disabled: true
                            dynamic_vlan:
                              default_vlan_id: 999
                              enabled: true
                              type: string
                              vlans:
                                1-10: null
                                user: null
                            enable_mac_auth: false
                            forwarding: all
                            mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                            mxtunnel_name: string
                            port_auth: none
                            port_vlan_id: 1
                            radius_config:
                              acct_interim_interval: 0
                              acct_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1813
                                  secret: testing123
                              auth_servers:
                                - host: 1.2.3.4
                                  keywrap_enabled: true
                                  keywrap_format: hex
                                  keywrap_kek: '1122334455'
                                  keywrap_mack: '1122334455'
                                  port: 1812
                                  secret: testing123
                              auth_servers_retries: 3
                              auth_servers_timeout: 5
                              coa_enabled: false
                              coa_port: 3799
                              network: string
                              source_ip: string
                            radsec:
                              enabled: true
                              idle_timeout: 60
                              mxcluster_ids:
                                - 572586b7-f97b-a22b-526c-8b97a3f609c4
                              proxy_hosts:
                                - mxedge1.local
                              server_name: radsec.abc.com
                              servers:
                                - host: 1.1.1.1
                                  port: 1812
                              use_mxedge: true
                              use_site_mxedge: false
                            vlan_id: 9
                            vland_ids:
                              - 1
                              - 10
                              - 50
                            wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                            wxtunnel_remote_id: wifiguest
                  created_time: 0
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53d8bbba6f08
                  modified_time: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: ./components/schemas/aptemplate.yml
      responses:
        '200':
          $ref: ./components/responses/Aptemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAptemplate
      tags:
        - Orgs AP Templates
  '/api/v1/orgs/{org_id}/assetfilters':
    get:
      description: |-
        Get List of Org BLE asset filters. 
        Each asset filter in the list operates independently. For a filter object to match an asset, all of the filter properties must match (logical ‘AND’ of each filter property). For example, the “Visitor Tags” filter below will match an asset when both the “ibeacon\_uuid” and “ibeacon_major” properties match the asset. All non-matching assets are ignored.
      operationId: listOrgAssetFilters
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AssetfiltersArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAssetFilters
      tags:
        - Orgs Asset Filters
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Create Asset Filter

        Creates a single BLE asset filter for the given site. Any subset of filter properties can be included in the filter. A matching asset must meet the conditions of all given filter properties (logical ‘AND’).
      operationId: createOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  created_time: 0
                  disasbled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  for_site: true
                  ibeacon_major: 0
                  ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                  id: 430f6eca-6276-4993-bfeb-53cb5bba6f08
                  mfg_company_id: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
            schema:
              $ref: ./components/schemas/asset_filter.yml
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgAssetFilters
      tags:
        - Orgs Asset Filters
  '/api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}':
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteOrgAssetFilter
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgAssetFilter
      tags:
        - Orgs Asset Filters
    get:
      description: Get Org Asset Filter Details
      operationId: getOrgAssetFilter
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgAssetFilter
      tags:
        - Orgs Asset Filters
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/assetfilter_id.yml
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  disabled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab2
                  mfg_company_id: 0
                  name: string
            schema:
              $ref: ./components/schemas/asset_filter.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAssetFilters
      tags:
        - Orgs Asset Filters
  '/api/v1/orgs/{org_id}/assets':
    get:
      description: Get List of Org Assets
      operationId: listOrgAssets
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAssets
      tags:
        - Orgs Assets
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Asset
      operationId: createOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgAsset
      tags:
        - Orgs Assets
  '/api/v1/orgs/{org_id}/assets/import':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Impert Org Assets. 

        It can be done via a CSV file or a JSON payload.

        #### CSV File Format
        ```csv
        name,mac
        "asset_name",5c5b53010101
        ``` 
      operationId: importOrgAssets
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - mac: a31eb04e1c38
                    name: Expensive Instrument
                  - mac: a31eb04e1c37
                    name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                  - name
                  - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importOrgAssets
      tags:
        - Orgs Assets
  '/api/v1/orgs/{org_id}/assets/{asset_id}':
    delete:
      description: Delete Org Asset
      operationId: deleteOrgAsset
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '201':
          description: Created
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgAsset
      tags:
        - Orgs Assets
    get:
      description: Get Org Asset Details
      operationId: getOrgAsset
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgAsset
      tags:
        - Orgs Assets
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/asset_id.yml
    put:
      description: Update Org Asset
      operationId: updateOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAsset
      tags:
        - Orgs Assets
  '/api/v1/orgs/{org_id}/call/events/count':
    get:
      description: Count Org Call Events
      operationId: countOrgCallEvents
      parameters:
        - in: query
          name: distinct
          schema:
            enum:
              - type
              - app
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgCallEvents
      tags:
        - Orgs Calls
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/call/events/search':
    get:
      description: Search Org Call Events
      operationId: searchOrgCallEvents
      parameters:
        - description: 'Event Type. See [listCallEventsDefinitions](/#operation/listCallEventsDefinitions)'
          in: query
          name: type
          schema:
            type: string
        - in: query
          name: ap
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: app
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/CallEventsArraySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgCallEvents
      tags:
        - Orgs Calls
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/cert':
    get:
      description: Get Org Certificates
      operationId: getOrgCertificates
      responses:
        '200':
          $ref: ./components/responses/Certificate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgCertificates
      tags:
        - Orgs Cert
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/cert/regenerate':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Clear Org Certificates
      operationId: clearOrgCertificates
      responses:
        '200':
          $ref: ./components/responses/Certificate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearOrgCertificates
      tags:
        - Orgs Cert
  '/api/v1/orgs/{org_id}/claim':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Claim Org licenses / activation codes
      operationId: claimOrgLicense
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: ZHT3K-H36DT-MG85D-M61AC
                  type: all
            schema:
              properties:
                code:
                  description: activation code
                  type: string
                device_type:
                  description: if only intended to claim certain device type
                  enum:
                    - ap
                    - switch
                    - gateway
                  type: string
                type:
                  default: all
                  description: what to claim
                  enum:
                    - all
                    - license
                    - inventory
                  type: string
              required:
                - code
                - type
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/claimLicense.yml
        '400':
          description: invalid key (or already used)
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: claimOrgLicense
      tags:
        - Orgs Licenses
  '/api/v1/orgs/{org_id}/clients/count':
    get:
      description: Count Org Wireless Clients
      operationId: countOrgWirelessClients
      parameters:
        - in: query
          name: distinct
          schema:
            default: device
            enum:
              - mac
              - hostname
              - device
              - os
              - model
              - ap
              - vlan
              - ssid
              - ip
            type: string
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: 'device type, e.g. Mac, Nvidia, iPhone'
          in: query
          name: device
          schema:
            type: string
        - description: 'os, e.g. Sierra, Yosemite, Windows 10'
          in: query
          name: os
          schema:
            type: string
        - description: 'model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”'
          in: query
          name: model
          schema:
            type: string
        - description: AP mac where the client has connected to
          in: query
          name: ap
          schema:
            type: string
        - description: vlan
          in: query
          name: vlan
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - $ref: ./components/parameters/ip.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgWirelessClients
      tags:
        - Orgs Clients - Wireless
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/clients/events/search':
    get:
      description: Get Org Clients Events
      operationId: searchOrgWirelessClientEvents
      parameters:
        - description: 'event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE'
          in: query
          name: type
          schema:
            type: string
        - description: for assoc/disassoc events
          in: query
          name: reason_code
          schema:
            type: integer
        - description: SSID Name
          in: query
          name: ssid
          schema:
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 802.11 standard
          in: query
          name: proto
          schema:
            enum:
              - b
              - g
              - 'n'
              - ac
              - ax
              - a
            type: string
        - description: 24 / 5
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/EventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWirelessClientEvents
      tags:
        - Orgs Clients - Wireless
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/clients/search':
    get:
      description: Search Org Wireless Clients
      operationId: searchOrgWirelessClients
      parameters:
        - description: Site ID
          in: query
          name: site_id
          schema:
            type: string
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - $ref: ./components/parameters/ip.yml
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: 'device type, e.g. Mac, Nvidia, iPhone'
          in: query
          name: device
          schema:
            type: string
        - description: 'os, e.g. Sierra, Yosemite, Windows 10'
          in: query
          name: os
          schema:
            type: string
        - description: 'model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”'
          in: query
          name: model
          schema:
            type: string
        - description: AP mac where the client has connected to
          in: query
          name: ap
          schema:
            type: string
        - $ref: ./components/parameters/psk_id_query.yml
        - description: PSK Name
          in: query
          name: psk_name
          schema:
            type: string
        - description: vlan
          in: query
          name: vlan
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: 'partial / full MAC address, hostname, username, psk_name or ip'
          in: query
          name: text
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWirelessClients
      tags:
        - Orgs Clients - Wireless
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/clients/sessions/count':
    get:
      description: Count Org Wireless Clients Sessions
      operationId: countOrgWirelessClientsSessions
      parameters:
        - in: query
          name: distinct
          required: true
          schema:
            default: device
            enum:
              - ssid
              - ap
              - ip
              - vlan
              - hostname
              - os
              - model
              - device
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 5 / 24
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: 'E.g. “Mac”, “iPhone”, “Apple watch”'
          in: query
          name: client_family
          schema:
            type: string
        - description: E.g. “Apple”
          in: query
          name: client_manufacture
          schema:
            type: string
        - description: 'E.g. “8+”, “XS”'
          in: query
          name: client_model
          schema:
            type: string
        - description: 'E.g. “Mojave”, “Windows 10”, “Linux”'
          in: query
          name: client_os
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgWirelessClientsSessions
      tags:
        - Orgs Clients - Wireless
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/clients/sessions/search':
    get:
      description: Search Org Wireless Clients Sessions
      operationId: searchOrgWirelessClientSessions
      parameters:
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 5 / 24
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: 'E.g. “Mac”, “iPhone”, “Apple watch”'
          in: query
          name: client_family
          schema:
            type: string
        - description: E.g. “Apple”
          in: query
          name: client_manufacture
          schema:
            type: string
        - description: 'E.g. “8+”, “XS”'
          in: query
          name: client_model
          schema:
            type: string
        - description: Username
          in: query
          name: client_username
          schema:
            type: string
        - description: 'E.g. “Mojave”, “Windows 10”, “Linux”'
          in: query
          name: client_os
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - $ref: ./components/parameters/psk_id_query.yml
        - description: PSK Name
          in: query
          name: psk_name
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/WirelessClientSessionsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWirelessClientSessions
      tags:
        - Orgs Clients - Wireless
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/clients/{client_mac}/coa':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/client_mac.yml
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthOrgDot1xWirelessClient
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: reauthOrgDot1xWirelessClient
      tags:
        - Orgs Clients - Wireless
  '/api/v1/orgs/{org_id}/clone':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'Create an Org by cloning from another one. Org Settings, Templates, Wxlan Tags, Wxlan Tunnels, Wxlan Rules, Org Wlans will be copied. Sites and Site Groups will not be copied, and therefore, the copied template will not be applied to any site/sitegroups.'
      operationId: cloneOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: New Org
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Org.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: cloneOrg
      tags:
        - Orgs
  '/api/v1/orgs/{org_id}/crl':
    get:
      description: Get Org CRL File
      operationId: getOrgCrlFile
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgCrlFile
      tags:
        - Orgs CRL
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/crl/truncate':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'By default, all certs used by recently unclaimed devices within 9 month will be included in CRL. If the list grows too big, you can truncate it'
      operationId: truncateOrgCrlFile
      requestBody:
        content:
          application/json:
            schema:
              properties:
                days:
                  default: 30
                  type: integer
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: truncateOrgCrlFile
      tags:
        - Orgs Cert
  '/api/v1/orgs/{org_id}/deviceprofiles':
    get:
      description: Get List of Org Device Profiles
      operationId: listOrgDeviceProfiles
      parameters:
        - in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceprofilesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgDeviceProfiles
      tags:
        - Orgs Device Profiles
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Device Profile
      operationId: createOrgDeviceProfiles
      requestBody:
        content:
          application/json:
            examples:
              deviceprofile_ap:
                value:
                  aeroscout:
                    enabled: false
                    host: aero.pvt.net
                    locate_connected: true
                  ble_config:
                    beacon_enabled: false
                    beacon_rate: 3
                    beacon_rate_mode: custom
                    beam_disabled:
                      - 1
                      - 3
                      - 6
                    custom_ble_packet_enabled: false
                    custom_ble_packet_frame: 0x........
                    custom_ble_packet_freq_msec: 300
                    eddystone_uid_adv_power: -65
                    eddystone_uid_beams: '2-4,7'
                    eddystone_uid_enabled: false
                    eddystone_uid_freq_msec: 200
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_adv_power: -65
                    eddystone_url_beams: '2-4,7'
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 1000
                    eddystone_url_url: 'https://www.abc.com'
                    ibeacon_adv_power: -65
                    ibeacon_beams: '2-4,7'
                    ibeacon_enabled: false
                    ibeacon_freq_msec: 0
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    power: 10
                    power_mode: custom
                  created_time: 0
                  disable_eth1: false
                  disable_eth2: false
                  disable_eth3: false
                  disable_module: false
                  for_site: true
                  height: 0
                  id: 497f6eca-6276-4993-bfeb-53d9bbba6f08
                  iot_config:
                    A1:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A2:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A3:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A4:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    DI1:
                      enabled: false
                      name: string
                      pullup: internal
                    DI2:
                      enabled: false
                      name: string
                      pullup: internal
                    DO:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                  ip_config:
                    dns:
                      - 8.8.8.8
                      - 4.4.4.4
                    dns_suffix:
                      - .mist.local
                      - .mist.com
                    gateway: 10.2.1.254
                    gateway6: '2607:f8b0:4005:808::1'
                    ip: 10.2.1.1
                    ip6: '2607:f8b0:4005:808::2004'
                    mtu: 0
                    netmask: 255.255.255.0
                    netmask6: /32
                    type: static
                    type6: static
                    vlan_id: 1
                  led:
                    brightness: 255
                    enabled: true
                  map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                  mesh:
                    enabled: false
                    group: 1
                    role: base
                  modified_time: 0
                  name: string
                  notes: string
                  ntp_servers:
                    - string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  orientation: 0
                  orientation_overwrite: true
                  poe_passthrough: false
                  port_config:
                    property1:
                      additional_vlan_ids:
                        - 55
                        - 66
                      authentication_protocol: pap
                      disabled: true
                      dynamic_vlan:
                        default_vlan_id: 999
                        enabled: true
                        type: string
                        vlans:
                          1-10: null
                          user: null
                      enable_mac_auth: false
                      forwarding: all
                      mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                      mxtunnel_name: string
                      port_auth: none
                      port_vlan_id: 1
                      radius_config:
                        acct_interim_interval: 0
                        acct_servers:
                          - host: 1.2.3.4
                            keywrap_enabled: true
                            keywrap_format: hex
                            keywrap_kek: '1122334455'
                            keywrap_mack: '1122334455'
                            port: 1813
                            secret: testing123
                        auth_servers:
                          - host: 1.2.3.4
                            keywrap_enabled: true
                            keywrap_format: hex
                            keywrap_kek: '1122334455'
                            keywrap_mack: '1122334455'
                            port: 1812
                            secret: testing123
                        auth_servers_retries: 3
                        auth_servers_timeout: 5
                        coa_enabled: false
                        coa_port: 3799
                        network: string
                        source_ip: string
                      radsec:
                        enabled: true
                        idle_timeout: 60
                        mxcluster_ids:
                          - 572586b7-f97b-a22b-526c-8b97a3f609c4
                        proxy_hosts:
                          - mxedge1.local
                        server_name: radsec.abc.com
                        servers:
                          - host: 1.1.1.1
                            port: 1812
                        use_mxedge: true
                        use_site_mxedge: false
                      vlan_id: 9
                      vland_ids:
                        - 1
                        - 10
                        - 50
                      wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                      wxtunnel_remote_id: wifiguest
                    property2:
                      additional_vlan_ids:
                        - 55
                        - 66
                      authentication_protocol: pap
                      disabled: true
                      dynamic_vlan:
                        default_vlan_id: 999
                        enabled: true
                        type: string
                        vlans:
                          1-10: null
                          user: null
                      enable_mac_auth: false
                      forwarding: all
                      mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                      mxtunnel_name: string
                      port_auth: none
                      port_vlan_id: 1
                      radius_config:
                        acct_interim_interval: 0
                        acct_servers:
                          - host: 1.2.3.4
                            keywrap_enabled: true
                            keywrap_format: hex
                            keywrap_kek: '1122334455'
                            keywrap_mack: '1122334455'
                            port: 1813
                            secret: testing123
                        auth_servers:
                          - host: 1.2.3.4
                            keywrap_enabled: true
                            keywrap_format: hex
                            keywrap_kek: '1122334455'
                            keywrap_mack: '1122334455'
                            port: 1812
                            secret: testing123
                        auth_servers_retries: 3
                        auth_servers_timeout: 5
                        coa_enabled: false
                        coa_port: 3799
                        network: string
                        source_ip: string
                      radsec:
                        enabled: true
                        idle_timeout: 60
                        mxcluster_ids:
                          - 572586b7-f97b-a22b-526c-8b97a3f609c4
                        proxy_hosts:
                          - mxedge1.local
                        server_name: radsec.abc.com
                        servers:
                          - host: 1.1.1.1
                            port: 1812
                        use_mxedge: true
                        use_site_mxedge: false
                      vlan_id: 9
                      vland_ids:
                        - 1
                        - 10
                        - 50
                      wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                      wxtunnel_remote_id: wifiguest
                  pwr_config:
                    base: 0
                  radio_config:
                    allow_rrm_disable: false
                    ant_gain_24: 4
                    ant_gain_5: 5
                    ant_gain_6: 5
                    antenna_mode: default
                    band_24:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_24_usage: '5'
                    band_5:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_6:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    indoor_use: false
                    scanning_enabled: true
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  switch_config:
                    enabled: false
                    eth0:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                    eth1:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                    eth2:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                    eth3:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                    module:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                    wds:
                      additional_vlan_ids:
                        - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                        - 0
                  type: ap
                  usb_config:
                    cacert: string
                    channel: 3
                    enabled: true
                    host: 1.1.1.1
                    port: 0
                    type: imagotag
                    verify_cert: true
                    vlan_id: 1
                  vars: {}
                  x: 0
                  'y': 0
              deviceprofile_hub:
                value:
                  additional_config_cmds:
                    - string
                  bgp_config:
                    property1:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      imported_networks:
                        - dc-apps
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      no_readvertise_to_overlay: false
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                    property2:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      imported_networks:
                        - dc-apps
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      no_readvertise_to_overlay: false
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                  created_time: 0
                  dhcpd_config:
                    property1:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                    property2:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                  extra_routes:
                    property1:
                      via: 192.168.0.1
                    property2:
                      via: 192.168.0.1
                  gateway_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f1c
                  ip_configs:
                    property1:
                      ip: 192.168.0.1
                      netmask: /24
                    property2:
                      ip: 192.168.0.1
                      netmask: /24
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f1d
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                        property2:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                    property2:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f1e
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                        property2:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                  oob_ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: string
                    ip: string
                    netmask: string
                    network: string
                    node1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                      use_mgmt_vrf: false
                      use_mgmt_vrf_for_host_out: false
                      vlan_id: 0
                    property1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    property2:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    type: dynamic
                    use_mgmt_vrf: false
                    use_mgmt_vrf_for_host_out: false
                    vlan_id: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  path_preferences:
                    property1:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                    property2:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                  port_config:
                    property1:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                    property2:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                  routing_policies:
                    property1:
                      terms:
                        - action:
                            accept: true
                            add_community:
                              - '65003:10'
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            exclude_community:
                              - '65003:10'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_neighbor_mac:
                              - string
                            vpn_path:
                              - string
                            vpn_path_sla:
                              max_jitter: 0
                              max_latency: 1500
                              max_loss: 30
                    property2:
                      terms:
                        - action:
                            accept: true
                            add_community:
                              - '65003:10'
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            exclude_community:
                              - '65003:10'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_neighbor_mac:
                              - string
                            vpn_path:
                              - string
                            vpn_path_sla:
                              max_jitter: 0
                              max_latency: 1500
                              max_loss: 30
                  service_policies:
                    - action: allow
                      ewf:
                        - alert_only: true
                          block_message: Access to this URL Category has been blocked
                          enabled: false
                          profille: strict
                      idp:
                        alert_only: string
                        enabled: false
                        profile: strict
                      local_routing: false
                      name: string
                      path_preferences: string
                      servicepolicy_id: a4b81837-7a2f-46c1-bf27-dc8af6edd0a0
                      services:
                        - string
                      tenants:
                        - string
                  tunnel_configs:
                    property1:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                    property2:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                  type: standalone
            schema:
              $ref: ./components/schemas/deviceprofile.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Deviceprofile.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgDeviceProfiles
      tags:
        - Orgs Device Profiles
  '/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}':
    delete:
      description: Delete Org Device Profile
      operationId: deleteOrgDeviceProfile
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgDeviceProfile
      tags:
        - Orgs Device Profiles
    get:
      description: Get Org device Profile Details
      operationId: getOrgDeviceProfile
      responses:
        '200':
          $ref: ./components/responses/Deviceprofile.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgDeviceProfile
      tags:
        - Orgs Device Profiles
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/deviceprofile_id.yml
    put:
      description: Update Org Device Profile
      operationId: updateOrgDeviceProfile
      requestBody:
        content:
          application/json:
            examples:
              deviceprofile_ap:
                value:
                  aeroscout:
                    enabled: true
                    host: string
                  ble_config:
                    beacon_enabled: true
                    beacon_rate: 0
                    beacon_rate_mode: default
                    beam_disabled:
                      - 0
                    eddystone_uid_adv_power: -100
                    eddystone_uid_beams: string
                    eddystone_uid_enabled: true
                    eddystone_uid_freq_msec: 0
                    eddystone_uid_instance: string
                    eddystone_uid_namespace: string
                    eddystone_url_adv_power: 0
                    eddystone_url_beams: string
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 0
                    eddystone_url_url: string
                    ibeacon_adv_power: -100
                    ibeacon_beams: string
                    ibeacon_enabled: true
                    ibeacon_freq_msec: 0
                    ibeacon_major: 0
                    ibeacon_minor: 0
                    ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    power: 1
                    power_mode: string
                  created_time: 0
                  disable_eth1: true
                  disable_module: true
                  id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: 192.168.0.1
                    gateway6: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
                    ip: 192.168.0.1
                    ip6: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
                    mtu: 0
                    netmask: 192.168.0.1
                    netmask6: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
                    type: static
                    type6: static
                    vlan_id: 1
                  mesh:
                    enabled: true
                    group: 0
                    role: base
                  modified_time: 0
                  name: string
                  org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  poe_passthrough: true
                  radio_config:
                    ant_gain_24: 0
                    ant_gain_5: 0
                    band_24:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    band_24_usage: '24'
                    band_5:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    scanning_enabled: true
                  site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  switch_config:
                    enabled: true
                    eth0:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                    eth1:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                    eth2:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                    eth3:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                    module:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                    wds:
                      port_vlan_id: 1
                      vlan_ids:
                        - 0
                  usb_config:
                    cacert: string
                    channel: 0
                    enabled: true
                    host: string
                    port: 0
                    type: imagotag
                    verify_cert: true
              deviceprofile_hub:
                value:
                  additional_config_cmds:
                    - string
                  bgp_config:
                    property1:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      imported_networks:
                        - dc-apps
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      no_readvertise_to_overlay: false
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                    property2:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      imported_networks:
                        - dc-apps
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      no_readvertise_to_overlay: false
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                  created_time: 0
                  dhcpd_config:
                    property1:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                    property2:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                  extra_routes:
                    property1:
                      via: 192.168.0.1
                    property2:
                      via: 192.168.0.1
                  gateway_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                  id: 497f6eca-6276-4993-bfeb-53dabbba6f08
                  ip_configs:
                    property1:
                      ip: 192.168.0.1
                      netmask: /24
                    property2:
                      ip: 192.168.0.1
                      netmask: /24
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53dbbbba6f08
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                        property2:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                    property2:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53dcbbba6f08
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                        property2:
                          affinity: hub
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          no_readvertise_to_lan_bgp: false
                          no_readvertise_to_overlay: true
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                          summarized_subnet_to_lan_bgp: 172.16.0.0/16
                  oob_ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: string
                    ip: string
                    netmask: string
                    network: string
                    node1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                      use_mgmt_vrf: false
                      use_mgmt_vrf_for_host_out: false
                      vlan_id: 0
                    property1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    property2:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    type: dynamic
                    use_mgmt_vrf: false
                    use_mgmt_vrf_for_host_out: false
                    vlan_id: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  path_preferences:
                    property1:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                    property2:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                  port_config:
                    property1:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                    property2:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          bfd_use_tunnel_mode: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                  routing_policies:
                    property1:
                      terms:
                        - action:
                            accept: true
                            add_community:
                              - '65003:10'
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            exclude_community:
                              - '65003:10'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_neighbor_mac:
                              - string
                            vpn_path:
                              - string
                            vpn_path_sla:
                              max_jitter: 0
                              max_latency: 1500
                              max_loss: 30
                    property2:
                      terms:
                        - action:
                            accept: true
                            add_community:
                              - '65003:10'
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            exclude_community:
                              - '65003:10'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_neighbor_mac:
                              - string
                            vpn_path:
                              - string
                            vpn_path_sla:
                              max_jitter: 0
                              max_latency: 1500
                              max_loss: 30
                  service_policies:
                    - action: allow
                      ewf:
                        - alert_only: true
                          block_message: Access to this URL Category has been blocked
                          enabled: false
                          profille: strict
                      idp:
                        alert_only: string
                        enabled: false
                        profile: strict
                      local_routing: false
                      name: string
                      path_preferences: string
                      servicepolicy_id: a4b81837-7a2f-46c1-bf27-dc8af6edd0a0
                      services:
                        - string
                      tenants:
                        - string
                  tunnel_configs:
                    property1:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                    property2:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                  type: standalone
            schema:
              $ref: ./components/schemas/deviceprofile.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Deviceprofile.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgDeviceProfiles
      tags:
        - Orgs Device Profiles
  '/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/assign':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/deviceprofile_id.yml
    post:
      description: Assign Org Device Profile to Devices
      operationId: assignOrgDeviceProfile
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 5c5b350e0001
                    - 5c5b350e0003
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/assignSuccess.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: assignOrgDeviceProfile
      tags:
        - Orgs Device Profiles
  '/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/unassign':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/deviceprofile_id.yml
    post:
      description: Unassign Org Device Profile from Devices
      operationId: unassignOrgDeviceProfiles
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 5c5b350e0001
                    - 5c5b350e0003
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/assignSuccess.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unassignOrgDeviceProfiles
      tags:
        - Orgs Device Profiles
  '/api/v1/orgs/{org_id}/devices':
    get:
      description: Get List of Org Devices
      operationId: listOrgDevices
      responses:
        '200':
          $ref: ./components/responses/OrgDevices.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgDevices
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/count':
    get:
      description: Count Org Devices
      operationId: countOrgDevices
      parameters:
        - example: model
          in: query
          name: distinct
          required: true
          schema:
            default: model
            enum:
              - hostname
              - site_id
              - model
              - mac
              - version
              - ip
              - mxtunnel_status
              - mxedge_id
              - lldp_system_name
              - lldp_system_desc
              - lldp_port_id
              - lldp_mgmt_addr
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: AP mac
          in: query
          name: mac
          schema:
            type: string
        - description: version
          in: query
          name: version
          schema:
            type: string
        - $ref: ./components/parameters/ip.yml
        - description: 'MxTunnel status, up / down'
          in: query
          name: mxtunnel_status
          schema:
            enum:
              - up
              - down
            type: string
        - description: 'Mist Edge id, if AP is connecting to a Mist Edge'
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: LLDP system name
          in: query
          name: lldp_system_name
          schema:
            type: string
        - description: LLDP system description
          in: query
          name: lldp_system_desc
          schema:
            type: string
        - description: LLDP port id
          in: query
          name: lldp_port_id
          schema:
            type: string
        - description: LLDP management ip address
          in: query
          name: lldp_mgmt_addr
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgDevices
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/events/count':
    get:
      description: Count Org Devices Events
      operationId: countOrgDeviceEvents
      parameters:
        - in: query
          name: distinct
          required: true
          schema:
            default: model
            enum:
              - org_id
              - site_id
              - ap
              - apfw
              - model
              - text
              - timestamp
              - type
            type: string
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: AP mac
          in: query
          name: ap
          schema:
            type: string
        - description: AP Firmware
          in: query
          name: apfw
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: event message
          in: query
          name: text
          schema:
            type: string
        - description: event time
          in: query
          name: timestamp
          schema:
            type: string
        - description: Events Type
          in: query
          name: type
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgDeviceEvents
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/events/search':
    get:
      description: Search Org Devices Events
      operationId: searchOrgDeviceEvents
      parameters:
        - description: device mac
          in: query
          name: mac
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: device type
          in: query
          name: device_type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: event message
          in: query
          name: text
          schema:
            type: string
        - description: event time
          in: query
          name: timestamp
          schema:
            type: string
        - description: 'see [listDeviceEventsDefinitions](/#operation/listDeviceEventsDefinitions)'
          in: query
          name: type
          schema:
            type: string
        - description: Return last/recent event for passed in field
          example: port_id
          in: query
          name: last_by
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgDeviceEvents
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/last_config/count':
    get:
      description: Counts the number of entries in device config history for distinct field with given filters
      operationId: countOrgDeviceLastConfigs
      parameters:
        - in: query
          name: device_type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - in: query
          name: distinct
          schema:
            enum:
              - mac
              - version
              - name
              - site_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgDeviceLastConfigs
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/last_config/search':
    get:
      description: Search Device Last Configs
      operationId: searchOrgDeviceLastConfigs
      parameters:
        - in: query
          name: device_type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ConfigsHistorySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgDeviceLastConfigs
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/radio_macs':
    get:
      description: |-
        For some scenarios like E911 or security systems, the BSSIDs are required to identify which AP the client is connecting to. Then the location of the AP can be used as the approximate location of the client.

        Each radio MAC can have 16 BSSIDs (enumerate the last octet from 0-F)
      operationId: listOrgApsMacs
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - mac: 5c5b35000001
                      radio_macs:
                        - 5c5b35000040
                        - 5c5b35000050
                        - 5c5b35000060
                    - mac: 5c5b45000001
                      radio_macs:
                        - 5c5b45000040
                        - 5c5b45000050
                        - 5c5b45000060
              schema:
                items:
                  properties:
                    mac:
                      minLength: 1
                      type: string
                    radio_macs:
                      items:
                        properties: {}
                      type: array
                  required:
                    - mac
                    - radio_macs
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgApsMacs
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/search':
    get:
      description: Search Org Devices
      operationId: searchOrgDevices
      parameters:
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: AP mac
          in: query
          name: mac
          schema:
            type: string
        - description: version
          in: query
          name: version
          schema:
            type: string
        - description: power_constrained
          in: query
          name: power_constrained
          schema:
            type: boolean
        - $ref: ./components/parameters/ip.yml
        - description: 'MxTunnel status, up / down'
          in: query
          name: mxtunnel_status
          schema:
            enum:
              - up
              - down
            type: string
        - description: 'Mist Edge id, if AP is connecting to a Mist Edge'
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: LLDP system name
          in: query
          name: lldp_system_name
          schema:
            type: string
        - description: LLDP system description
          in: query
          name: lldp_system_desc
          schema:
            type: string
        - description: LLDP port id
          in: query
          name: lldp_port_id
          schema:
            type: string
        - description: LLDP management ip address
          in: query
          name: lldp_mgmt_addr
          schema:
            type: string
        - description: Bandwith of band_24
          in: query
          name: band_24_bandwith
          schema:
            type: integer
        - description: Bandwith of band_5
          in: query
          name: band_5_bandwith
          schema:
            type: integer
        - description: Bandwith of band_6
          in: query
          name: band_6_bandwith
          schema:
            type: integer
        - description: Channel of band_24
          in: query
          name: band_24_channel
          schema:
            type: integer
        - description: Channel of band_5
          in: query
          name: band_5_channel
          schema:
            type: integer
        - description: Channel of band_6
          in: query
          name: band_6_channel
          schema:
            type: integer
        - description: Port speed of eth0
          in: query
          name: eth0_port_speed
          schema:
            type: integer
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/DevicesSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgDevices
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/devices/upgrade':
    get:
      description: Get List of Org multi devces upgrades
      operationId: listOrgMultiSitesDevicesUpgrades
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: unique id for the org upgrade
                      format: uuid
                      minLength: 1
                      type: string
                    upgrades:
                      description: site upgrades part of this upgrade
                      items:
                        properties:
                          site_id:
                            description: id of the site upgrade
                            format: uuid
                            minLength: 1
                            type: string
                          upgrade_id:
                            description: site the upgrade belongs to
                            format: uuid
                            minLength: 1
                            type: string
                        required:
                          - site_id
                          - upgrade_id
                        type: object
                      minItems: 1
                      type: array
                      uniqueItems: true
                  required:
                    - id
                    - upgrades
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMultiSitesDevicesUpgrades
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Upgrade Multiple Sites
      operationId: upgradeOrgMultiSitesDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/device_upgrade.yml
      responses:
        '200':
          $ref: ./components/responses/Id.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeOrgMultiSitesDevices
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/devices/upgrade/{upgrade_id}':
    get:
      description: Get Multi Site Upgrade
      operationId: getOrgMultiSitesUpgrade
      responses:
        '200':
          $ref: ./components/responses/OrgDeviceUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMultiSitesUpgrade
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
  '/api/v1/orgs/{org_id}/evpn_topologies':
    get:
      description: Get List of the existing Org EVPN topologies
      operationId: listOrgEvpnTopologies
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgEvpnTopologies
      tags:
        - Orgs EVPN Topologies
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        While all the `evpn_id` / `downlink_ips` can be specifidd by hand, the easiest way is to call the `build_vpn_topology` API, allowing you to examine the diff, and update it yourself. You can also simply call it with `overwrite=true` which will apply the updates for you.

        **Notes:**
        1. You can use `core` / `distribution` / `access` to create a CLOS topology
        2. You can also use `core` / `distribution` to form a 2-tier EVPN topology where ESI-Lag is configured distribution to connect to access switches
        3. In a small/medium campus, `collapsed-core` can be used where core switches are the inter-connected to do EVPN
        4. The API uses a few pre-defined parameters and best-practices to generate the configs. It can be customized by using `evpn_options` in Site Setting / Network Template. (e.g. a different subnet for the underlay)

        #### Collapsed Core
        In a small-medium campus, EVPN can also be enabled only at the core switches (up to 4) by assigning all participating switches with `collapsed-core role`. When there are more than 2 switches, a ring-like topology will be formed.

        #### ESI-Lag
        If the access switchess does not have EVPN support, you can take advantage of EVPN by setting up ESI-Lag on distribution switches

        #### Leaf / Access / Collapsed-Core
        For leaf nodes in a EVPN topology, you’d have to configure the IPs for networks that would participate in EVPN. Optionally, VRFs to isolate traffic from one tenant verus another
      operationId: createOrgEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  id: 9197ec96-4c8d-529f-c595-035895e688b2
                  name: CC
                  pod_names:
                    '1': default
                    '2': default
                  switches:
                    - mac: 5c5b35000003
                      role: collapsed-core
                    - mac: 5c5b35000004
                      role: collapsed-core
            schema:
              $ref: ./components/schemas/junos_evpn_topology.yml
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgEvpnTopology
      tags:
        - Orgs EVPN Topologies
  '/api/v1/orgs/{org_id}/evpn_topologies/{evpn_topology_id}':
    delete:
      description: Delete the Org EVPN Topology
      operationId: deleteOrgEvpnTopology
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgEvpnTopology
      tags:
        - Orgs EVPN Topologies
    get:
      description: Get One EVPN Topology Detail
      operationId: getOrgEvpnTolopogy
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgEvpnTolopogy
      tags:
        - Orgs EVPN Topologies
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/evpn_topology_id.yml
    put:
      description: Update the EVPN Topolgy
      operationId: updateOrgEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  overwrite: false
                  switches:
                    - mac: 5c5b35000003
                      role: collapsed-core
                    - mac: 5c5b35000004
                      role: none
            schema:
              $ref: ./components/schemas/junos_evpn_topology.yml
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgEvpnTopology
      tags:
        - Orgs EVPN Topologies
  '/api/v1/orgs/{org_id}/gatewaytemplates':
    get:
      description: Get List of Org Gateway Templates
      operationId: listOrgGatewayTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/GatewaytemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgGatewayTemplates
      tags:
        - Orgs Gateway Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Gateway Template
      operationId: createOrgGatewayTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                    - string
                  bgp_config:
                    property1:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                    property2:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                  created_time: 0
                  dhcpd_config:
                    property1:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                    property2:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                  extra_routes:
                    property1:
                      via: 192.168.0.1
                    property2:
                      via: 192.168.0.1
                  gateway_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f31
                  ip_configs:
                    property1:
                      ip: 192.168.0.1
                      netmask: /24
                    property2:
                      ip: 192.168.0.1
                      netmask: /24
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f32
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                        property2:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                    property2:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f33
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                        property2:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                  oob_ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: string
                    ip: string
                    netmask: string
                    network: string
                    node1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                      use_mgmt_vrf: false
                      use_mgmt_vrf_for_host_out: false
                      vlan_id: 0
                    property1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    property2:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    type: dynamic
                    use_mgmt_vrf: false
                    use_mgmt_vrf_for_host_out: false
                    vlan_id: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  path_preferences:
                    property1:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                    property2:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                  port_config:
                    property1:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                    property2:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                  routing_policies:
                    property1:
                      terms:
                        - action:
                            accept: true
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                            summarize: 192.168.0.0/16
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_name:
                              - string
                            vpn_path:
                              - string
                    property2:
                      terms:
                        - action:
                            accept: true
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                            summarize: 192.168.0.0/16
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_name:
                              - string
                            vpn_path:
                              - string
                  service_policies:
                    - action: allow
                      ewf:
                        - alert_only: true
                          block_message: Access to this URL Category has been blocked
                          enabled: false
                          profille: strict
                      idp:
                        alert_only: string
                        enabled: false
                        profile: strict
                      local_routing: false
                      name: string
                      path_preferences: string
                      servicepolicy_id: a4b81837-7a2f-46c1-bf27-dc8af6edd0a0
                      services:
                        - string
                      tenants:
                        - string
                  tunnel_configs:
                    property1:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                    property2:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                  type: standalone
            schema:
              $ref: ./components/schemas/gatewaytemplate.yml
        description: Gateway Template
      responses:
        '200':
          $ref: ./components/responses/Gatewaytemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgGatewayTemplate
      tags:
        - Orgs Gateway Templates
  '/api/v1/orgs/{org_id}/gatewaytemplates/{gatewaytemplate_id}':
    delete:
      description: Delete Organization Gateway Template
      operationId: deleteOrgGatewayTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgGatewayTemplate
      tags:
        - Orgs Gateway Templates
    get:
      description: Get Organization Gateway Template details
      operationId: getOrgGatewayTemplate
      responses:
        '200':
          $ref: ./components/responses/Gatewaytemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgGatewayTemplate
      tags:
        - Orgs Gateway Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/gatewaytemplate_id.yml
    put:
      description: Update Organization Gateway Template
      operationId: updateOrgGatewayTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                    - string
                  bgp_config:
                    property1:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                    property2:
                      auth_key: string
                      bfd_minimum_interval: 0
                      communities:
                        - id: string
                          local_preference: 0
                          vpn_name: string
                      disable_bfd: false
                      export: string
                      export_policy: string
                      graceful_restart_time: 0
                      hold_time: 90
                      import: string
                      import_policy: string
                      local_as: 0
                      neighbor_as: 0
                      neighbors:
                        property1:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                        property2:
                          export_policy: string
                          hold_time: 90
                          import_policy: string
                          multihop_ttl: 0
                          neighbor_as: 0
                      networks:
                        - string
                      type: internal
                      via: lan
                      vpn_name: string
                      wan_name: string
                  created_time: 0
                  dhcpd_config:
                    property1:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                    property2:
                      dns_servers:
                        - 192.168.0.1
                      dns_suffix:
                        - string
                      fixed_bindings:
                        property1:
                          ip: 192.168.0.1
                          name: string
                        property2:
                          ip: 192.168.0.1
                          name: string
                      gateway: 192.168.0.1
                      ip_end: 192.168.0.1
                      ip_start: 192.168.0.1
                      servers:
                        - 192.168.0.1
                      type: local
                  extra_routes:
                    property1:
                      via: 192.168.0.1
                    property2:
                      via: 192.168.0.1
                  gateway_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f34
                  ip_configs:
                    property1:
                      ip: 192.168.0.1
                      netmask: /24
                    property2:
                      ip: 192.168.0.1
                      netmask: /24
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f35
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                        property2:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                    property2:
                      created_time: 0
                      disallow_mist_services: false
                      gateway: 192.168.70.1
                      hosts:
                        property1:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                        property2:
                          external_ips: 172.16.10.32-172.16.10.35
                          ips: 192.168.70.32-192.168.70.35
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f36
                      internal_access:
                        enabled: true
                      internet_access:
                        create_simple_service_policy: false
                        destination_nat:
                          property1:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                          property2:
                            internal_ip: 192.168.70.30
                            name: web server
                            port: 443
                        enabled: true
                        restricted: false
                        static_nat:
                          property1:
                            internal_ip: 192.168.70.3
                            name: printer-1
                          property2:
                            internal_ip: 192.168.70.3
                            name: printer-1
                      isolation: true
                      modified_time: 0
                      name: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      subnet: 192.168.70.0/24
                      tenants:
                        property1:
                          addresses: string
                        property2:
                          addresses: string
                      vlan_id: 0
                      vpn_access:
                        property1:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                        property2:
                          allow_ping: true
                          destination_nat:
                            property1:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                            property2:
                              name: web server
                              port: 443
                              to: 192.168.70.5/30
                          nat_pool: 172.16.0.0/26
                          routed: true
                          source_nat:
                            exteral_ip: 172.16.0.8/30
                          static_nat:
                            property1:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                            property2:
                              internal_ip: 192.168.70.3
                              name: pos-station-1
                          summarized_subnet: 172.16.0.0/16
                  oob_ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: string
                    ip: string
                    netmask: string
                    network: string
                    node1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                      use_mgmt_vrf: false
                      use_mgmt_vrf_for_host_out: false
                      vlan_id: 0
                    property1:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    property2:
                      ip: string
                      netmask: string
                      network: string
                      type: dynamic
                    type: dynamic
                    use_mgmt_vrf: false
                    use_mgmt_vrf_for_host_out: false
                    vlan_id: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  path_preferences:
                    property1:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                    property2:
                      paths:
                        cost: 0
                        gateway_ip: string
                        internet_access: false
                        name: string
                        networks:
                          - string
                        target_ips:
                          - string
                        type: local
                      strategy: ordered
                  port_config:
                    property1:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                    property2:
                      description: string
                      disable_autoneg: false
                      dsl_config:
                        ppoe_auth: none
                        ppoe_password: string
                        ppoe_username: string
                      duplex: full
                      ip_config:
                        dns:
                          - string
                        dns_suffix:
                          - string
                        gateway: string
                        ip: string
                        netmask: string
                        network: string
                        poser_password: string
                        ppoe_username: string
                        pppoe_auth: none
                        type: dhcp
                      lte_apn: string
                      lte_auth: none
                      lte_backup: true
                      lte_password: string
                      lte_username: string
                      mtu: 0
                      name: string
                      networks:
                        - string
                      outer_vlan_id: 0
                      poe_disabled: false
                      port_network: string
                      preserve_dscp: true
                      redundant: true
                      reth_idx: 0
                      reth_node: string
                      speed: 1g
                      svr_port_range: 60000-60005
                      traffic_shaping:
                        class_percentages:
                          - 0
                        enabled: false
                      usage: lan
                      vlan_id: 0
                      vpn_paths:
                        property1:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                        property2:
                          bfd_profile: broadband
                          bfd_udp_transform: false
                          role: spoke
                          traffic_shaping:
                            class_percentage:
                              - 0
                            enabled: true
                            max_tx_kbps: 0
                      wan_ext_ip: string
                      wan_source_nat:
                        disabled: false
                        nat_pool: 64.2.4.0/30
                      wan_type: broadband
                  routing_policies:
                    property1:
                      terms:
                        - action:
                            accept: true
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                            summarize: 192.168.0.0/16
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_name:
                              - string
                            vpn_path:
                              - string
                    property2:
                      terms:
                        - action:
                            accept: true
                            community:
                              - '65003:10'
                            exclude_as_path:
                              - '65002'
                            export_communitites:
                              - string
                            local_preference: string
                            prepend_as_path:
                              - '65003'
                            summarize: 192.168.0.0/16
                          matching:
                            as_path:
                              - '65001'
                            community:
                              - '65001:2'
                            network:
                              - string
                            prefix:
                              - 192.168.0.0/16-30
                            protocol:
                              - direct
                            route_exists:
                              route: 192.168.0.0/24
                              vrf_name: default
                            vpn_name:
                              - string
                            vpn_path:
                              - string
                  service_policies:
                    - action: allow
                      ewf:
                        - alert_only: true
                          block_message: Access to this URL Category has been blocked
                          enabled: false
                          profille: strict
                      idp:
                        alert_only: string
                        enabled: false
                        profile: strict
                      local_routing: false
                      name: string
                      path_preferences: string
                      servicepolicy_id: a4b81837-7a2f-46c1-bf27-dc8af6edd0a0
                      services:
                        - string
                      tenants:
                        - string
                  tunnel_configs:
                    property1:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                    property2:
                      auto_provision:
                        enable: true
                        latlng:
                          lat: 37.295833
                          lng: -122.032946
                        primary:
                          num_hosts: string
                          wan_names:
                            - wan0
                        region: auto
                        secondary:
                          num_hosts: string
                          wan_names:
                            - wan0
                      ike_lifetime: 0
                      ike_mode: main
                      ike_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      ipsec_lifetime: 0
                      ipsec_proposals:
                        - auth_algo: sha1
                          dh_group: '14'
                          enc_algo: aes256
                      local_id: string
                      mode: active-standby
                      primary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      probe:
                        interval: 0
                        threshold: 0
                        timeout: 0
                        type: icmp
                      protocol: ipsec
                      provider: zscaler-ipsec
                      psk: string
                      secondary:
                        hosts:
                          - string
                        internal_ips:
                          - string
                        probe_ips:
                          - string
                        remote_ids:
                          - string
                        wan_names:
                          - string
                      version: '2'
                  type: standalone
            schema:
              $ref: ./components/schemas/gatewaytemplate.yml
        description: Gateway Template
      responses:
        '200':
          $ref: ./components/responses/Gatewaytemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgGatewayTemplate
      tags:
        - Orgs Gateway Templates
  '/api/v1/orgs/{org_id}/guests':
    get:
      description: Get List of Org Guest Authorizations
      operationId: listOrgGuestAuthorizations
      responses:
        '200':
          $ref: ./components/responses/GuestsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgGuestAuthorizations
      tags:
        - Orgs Guests
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/guests/count':
    get:
      description: Count Org Authorized Guest
      operationId: countOrgGuestAuthorizations
      parameters:
        - example: auth_method
          in: query
          name: distinct
          schema:
            default: auth_method
            enum:
              - auth_method
              - ssid
              - company
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgGuestAuthorizations
      tags:
        - Orgs Guests
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/guests/search':
    get:
      description: Search Authorized Guest
      operationId: searchOrgGuestAuthorization
      parameters:
        - example: 00000000-0000-0000-0000-000000000000
          in: query
          name: wlan_id
          schema:
            type: string
        - in: query
          name: auth_method
          schema:
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/GuestsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgGuestAuthorization
      tags:
        - Orgs Guests
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/guests/{guest_mac}':
    delete:
      description: Delete Guest Authorization
      operationId: deleteOrgGuestAuthorization
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgGuestAuthorization
      tags:
        - Orgs Guests
    get:
      description: Get Guest Authorization
      operationId: getOrgGuestAuthorization
      responses:
        '200':
          $ref: ./components/responses/Guest.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgGuestAuthorization
      tags:
        - Orgs Guests
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/guest_mac.yml
    put:
      description: Update Guest Authorization
      operationId: updateOrgGuestAuthorization
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  authorized: true
                  authorized_expiring_time: 0
                  authorized_time: 0
                  company: string
                  email: user@example.com
                  field1: string
                  field2: string
                  field3: string
                  field4: string
                  mac: string
                  minutes: 0
                  name: string
            schema:
              $ref: ./components/schemas/guest.yml
      responses:
        '200':
          $ref: ./components/responses/Guest.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgGuestAuthorization
      tags:
        - Orgs Guests
  '/api/v1/orgs/{org_id}/idpprofiles':
    get:
      description: get the list of Org IDP Profiles
      operationId: listOrgIdpProfiles
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/IdpProfileArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgIdpProfiles
      tags:
        - Orgs IDP Profiles
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org IDP Profile
      operationId: createOrgIdpProfile
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  base_profile: strict
                  name: relaxed
                  overwrites:
                    - action: alert
                      matching:
                        attack_name:
                          - 'HTTP:INVALID:HDR-FIELD'
                        dst_subnet:
                          - 63.1.2.0/24
                        severity:
                          - major
            schema:
              $ref: ./components/schemas/idpprofile.yml
      responses:
        '200':
          $ref: ./components/responses/IdpProfile.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgIdpProfile
      tags:
        - Orgs IDP Profiles
  '/api/v1/orgs/{org_id}/idpprofiles/{idpprofile_id}':
    delete:
      description: Delete Org IDP Profile
      operationId: deleteOrgIdpProfile
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgIdpProfile
      tags:
        - Orgs IDP Profiles
    get:
      description: Get Org IDP Profile
      operationId: getOrgIdpProfile
      responses:
        '200':
          $ref: ./components/responses/IdpProfile.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgIdpProfile
      tags:
        - Orgs IDP Profiles
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/idpprofile_id.yml
    put:
      description: Update Org IDP Profile
      operationId: updateOrgIdpProfile
      requestBody:
        content:
          application/json:
            examples:
              idpprofile:
                value:
                  base_profile: strict
                  name: relaxed
                  overwrites:
                    - action: alert
                      matching:
                        attack_name:
                          - 'HTTP:INVALID:HDR-FIELD'
                        dst_subnet:
                          - 63.1.2.0/24
                        severity:
                          - major
            schema:
              $ref: ./components/schemas/idpprofile.yml
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgIdpProfile
      tags:
        - Orgs IDP Profiles
  '/api/v1/orgs/{org_id}/insights/sites-sle':
    get:
      description: Get Org Sites SLE
      operationId: getOrgSitesSle
      parameters:
        - in: query
          name: sle
          schema:
            enum:
              - wan
              - wired
              - wifi
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/OrgSiteSle.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSitesSle
      tags:
        - Orgs SLEs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/insights/{metric}':
    get:
      description: 'Get Org SLEs (all/worst sites, Mx Edges, ...)'
      operationId: getOrgSle
      parameters:
        - description: 'see [listInsightMetrics](/#operation/listInsightMetrics) for more details'
          in: query
          name: sle
          schema:
            type: string
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                worst-sites-by-sle:
                  value:
                    end: 1643706000
                    interval: 3600
                    limit: 100
                    results:
                      - ap-availability: 0.9919400860511628
                        ap-health: 0.967607512909879
                        capacity: 0.7484652273070254
                        coverage: 0.91217567374857
                        num_aps: 13
                        num_clients: 12
                        roaming: 0.991735537682683
                        roaming-exp: 0.991735537682683
                        site_id: 978c48e6-6ef6-11e6-8bbf-02e208b2d34f
                        successful-connect: 0.46052632135780236
                        throughput: 0.6775702123846302
                        time-to-connect: 0.9349112447196916
                      - ap-availability: 0.9990384613092129
                        ap-health: 0.48201754375507955
                        capacity: 0.9702673450306101
                        coverage: 0.8335392334930375
                        num_aps: 1
                        num_clients: 6
                        roaming: 1
                        roaming-exp: 1
                        site_id: 49ff76e0-a283-4e7d-b38d-041f1e9aff3c
                        successful-connect: 1
                        throughput: 0
                        time-to-connect: 1
                      - ap-availability: 1
                        ap-health: 0.982456140612301
                        capacity: 1
                        coverage: 0.9276041182442488
                        num_aps: 2
                        num_clients: 3
                        roaming: 1
                        roaming-exp: 1
                        site_id: 9b9b48f1-15a4-459e-86cc-9cbec9005983
                        successful-connect: 1
                        throughput: 1
                        time-to-connect: 0.8125
                      - ap-availability: 0.9981132070973234
                        ap-health: 0.9991228068084047
                        capacity: 1
                        coverage: 1
                        num_aps: 1
                        num_clients: 0
                        roaming: 1
                        roaming-exp: 1
                        site_id: eb0e1671-7a6b-472b-94c3-c187dafe5274
                        successful-connect: 1
                        throughput: 0
                        time-to-connect: 0.5
                    start: 1643670000
              schema:
                properties:
                  end:
                    type: number
                  interval:
                    type: number
                  limit:
                    type: number
                  results:
                    items:
                      additionalProperties: {}
                      type: object
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                required:
                  - start
                  - end
                  - interval
                  - limit
                  - results
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSle
      tags:
        - Orgs SLEs
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/orgs/{org_id}/inventory':
    get:
      description: |-
        Get Org Inventory

        ### VC (Virtual-Chassis) Management
        Ideally VC should be managed as a single device - where - one managed entity where config / monitoring is anchored against (with a stable identify MAC) - all members appears in the inventory

        In our implementation, we strive to achieve that without manual user configurations by 
        1. during claim or adoption a VC, we require FPC0 to exist and will use its MAC as identify for the entire chassis
        2. other VC members will be automatically populated when they’re all present

        The perceivable result is 
        1. from `/sites/:site_id/stats/devices/:fpc0_mac` API, you’d see the VC where module_stat contains the VC members 
        2. from `/orgs/:org_id/inventory?vc=true` API, you’d see all VC members with vc_mac pointing to the FPC0
      operationId: getOrgInventory
      parameters:
        - description: device serial
          in: query
          name: serial
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - in: query
          name: type
          schema:
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'site id if assigned, null if not assigned'
          in: query
          name: site_id
          schema:
            type: string
        - in: query
          name: vc_mac
          schema:
            type: string
        - in: query
          name: vc
          schema:
            type: string
        - in: query
          name: unassigned
          schema:
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/OrgInventory.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgInventory
      tags:
        - Orgs Inventory
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Add Device to Org Inventory with the device claim codes
      operationId: addOrgInventory
      requestBody:
        content:
          application/json:
            schema:
              description: List of device Claim Codes
              example:
                - 6JG8E-PTFV2-A9Z2N
                - DVH4V-SNMSZ-PDXBR
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OrgInventoryAdd.yml
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value: {}
              schema:
                properties: {}
                type: object
          description: if none of the entries are valid
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addOrgInventory
      tags:
        - Orgs Inventory
    put:
      description: Update Org Inventory
      operationId: updateOrgInventoryAssignment
      requestBody:
        content:
          application/json:
            examples:
              assign:
                value:
                  disable_auto_config: false
                  macs:
                    - 5c5b350e0001
                  managed: false
                  no_reassign: false
                  op: assign
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
              delete:
                value:
                  macs:
                    - 5c5b350e0001
                  op: delete
                  serials:
                    - FXLH2015150025
                    - FXLH2015150026
            schema:
              properties:
                disable_auto_config:
                  default: false
                  description: 'if `op`==`assign`, a **cloud-ready** switch/gateway will be managed/configured by Mist by default, this disabled the behavior'
                  type: boolean
                macs:
                  description: 'if `op`==`assign`, `op`==`unassign`,  `op`==`manage`or `op`==`unmanage` , list of MAC, e.g. ["5c5b350e0001"]'
                  items:
                    type: string
                  type: array
                managed:
                  default: false
                  description: 'if `op`==`assign`, an **adopted** switch/gateway will not be managed/configured by Mist by default, this enables the behavior'
                  type: boolean
                no_reassign:
                  description: 'if `op`==`assign`, if true, treat site assignment against an already assigned AP as error'
                  type: boolean
                op:
                  description: |
                    * if `op`== `manage`: Upgrade to mist-managed
                    * if `op`== `unmanage`: Downgrade to basic monitoring
                    * if `op`== `assign`: Assign inventory to a site
                    * if `op`== `unassign`: Unassign inventory to a site
                    * if `op`== `delete`: Delete multiple inventory from org
                  enum:
                    - assign
                    - unassign
                    - delete
                    - manage
                    - unmanage
                  type: string
                serials:
                  description: 'if `op`==`delete`, list of serial numbers, e.g. ["FXLH2015150025"]'
                  items:
                    type: string
                  type: array
                site_id:
                  description: 'if `op`==`assign`, target site id'
                  format: uuid
                  type: string
              required:
                - op
              type: object
      responses:
        '200':
          $ref: ./components/responses/OrgInventoryChanges.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgInventoryAssignment
      tags:
        - Orgs Inventory
  '/api/v1/orgs/{org_id}/inventory/create_ha_cluster':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create HA Cluster from unassigned Gateways
      operationId: get-api-v1-orgs-org_id-inventory-create_ha_cluster
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  disable_auto_config: true
                  managed: true
                  nodes:
                    - mac: aff827549235
                    - mac: 8396cd006c8c
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: ./components/schemas/create_ha_cluster.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: createOrgGatewayHaCluster
      tags:
        - Orgs Inventory
  '/api/v1/orgs/{org_id}/inventory/delete_ha_cluster':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Delete HA Cluster

        After HA cluster deleted, both of the nodes will be unassigned.
      operationId: deleteOrgGatewayHaCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/delete_ha_cluster.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: deleteOrgGatewayHaCluster
      tags:
        - Orgs Inventory
  '/api/v1/orgs/{org_id}/inventory/reevaluate_auto_assignment':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Reevaluate Auto Assignment
      operationId: reevaluateOrgAutoAssignment
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: reevaluateOrgAutoAssignment
      tags:
        - Orgs Inventory
  '/api/v1/orgs/{org_id}/inventory/replace':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        It’s a common request we get from the customers. When a AP HW has problem and need a replacement, they would want to copy the existing attributes (Device Config) of this old AP to the new one. It can be done by providing the MAC of a device that’s currently in the inventory but not assigned. The Device replaced will become unassigned.

        This API also supports replacement of Mist Edges. This API copies device agnostic attributes from old Mist edge to new one.
        Mist manufactured Mist Edges will be reset to factory settings but will still be in Inventory.Brownfield or VM’s will be
        deleted from Inventory

        **Note:** For Gateway devices only like-for-like replacements (can only replace a SRX320 with a SRX320 and not some otehr model) are allowed.
      operationId: replaceOrgDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  discard: []
                  inventory_mac: 5c5b35000301
                  mac: 5c5b35000101
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: ./components/schemas/req_replace_device.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OrgInventoryChanges.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: replaceOrgDevices
      tags:
        - Orgs Inventory
  '/api/v1/orgs/{org_id}/invites':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'If the request is successful, an email will also be sent to the user with a link to ```https://manage.mist.com/verify/invite?token=:token&expire=1459632743&org=OrgName```'
      operationId: inviteOrgAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: inviteOrgAdmin
      tags:
        - Orgs Admins
  '/api/v1/orgs/{org_id}/invites/{invite_id}':
    delete:
      description: Delete Admin Invite
      operationId: uninviteOrgAdmin
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uninviteOrgAdmin
      tags:
        - Orgs Admins
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/invite_id.yml
    put:
      description: Update Admin Invite
      operationId: updateOrgAdminInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgAdminInvite
      tags:
        - Orgs Admins
  '/api/v1/orgs/{org_id}/jsi/devices':
    get:
      description: Get List of Org devices that connected to JSI
      operationId: listOrgJsiDevices
      parameters:
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - ext_ip: 73.92.124.103
                      last_seen: 1654636867
                      mac: c15353123096
                      model: EX2300-C-12P
                      serial: DGCOO0015
              schema:
                items:
                  properties:
                    ext_ip:
                      description: when available
                      type: string
                    last_seen:
                      type: integer
                    mac:
                      type: string
                    model:
                      type: string
                    serial:
                      type: string
                  type: object
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgJsiDevices
      tags:
        - Orgs JSI
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/jsi/devices/outbound_ssh_cmd':
    get:
      description: |
        Adopt JSI devices
      operationId: adoptOrgJsiDevice
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    cmd: |-
                      set system services ssh...
                      ...
                      set system services outbound-ssh client mist ...
              schema:
                properties:
                  cmd:
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: adoptOrgJsiDevice
      tags:
        - Orgs JSI
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/jsi/devices/{device_mac}/shell':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: Create Shell Session
      operationId: createOrgJsiDeviceShellSession
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    session: 19e73828-937f-05e6-f709-e29efdb0a82b
                    url: 'wss://api-ws.mist.com/ssh?jwt=xxxx'
              schema:
                properties:
                  session:
                    type: string
                  url:
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgJsiDeviceShellSession
      tags:
        - Orgs JSI
  '/api/v1/orgs/{org_id}/jsi/devices/{device_mac}/upgrade':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: Upgrade
      operationId: upgradeOrgJsiDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 3.1.5
            schema:
              properties:
                version:
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeOrgJsiDevice
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/jsi/inventory':
    get:
      description: Get List of all devices purchased from the accounts associated with the Org
      operationId: listOrgJsiPastPurchases
      parameters:
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - contract_end_time: 1708214400
                      contract_id: '68247710'
                      contract_sku: PAR-SDCE-EX4300T48
                      contract_start_time: 1629331200
                      customer_po: '4501942932'
                      distributor: dist1
                      eol_time: 1671062400
                      eos_time: 1828828800
                      installed_address: Address
                      model: EX4300-48T
                      order_id: '15909647'
                      reseller: reseller1
                      serial: PE3721050223
                      sku: EX4300-48T-AFI
                      type: switch
                      warranty_end_time: 2258236800
                      warranty_start_time: 1619395200
                      warranty_type: Enhanced Hardware Warranty
              schema:
                items:
                  properties:
                    contract_end_time:
                      type: integer
                    contract_id:
                      type: string
                    contract_sku:
                      type: string
                    contract_start_time:
                      type: integer
                    contract_type:
                      description: Contract type (Maintenance / Subscription / Premium / Gov AdvCare / Gov TAC / High Sec / AdvCare / Gov Premium)
                      type: string
                    customer_po:
                      description: po number associated with this SKU
                      type: string
                    distributor:
                      description: distributor name
                      type: string
                    eol_time:
                      description: end of life time
                      type: integer
                    eos_time:
                      description: end of support time
                      type: integer
                    installed_address:
                      description: 'address where the device is installed. It is a combination of address , region , country , zip'
                      type: string
                    model:
                      description: model of the install base inventory
                      type: string
                    order_id:
                      description: order ID associated with this SKU
                      type: string
                    reseller:
                      description: reseller name
                      type: string
                    serial:
                      description: serial Number of the inventory
                      type: string
                    shipped_time:
                      description: Shipped date
                      type: number
                    sku:
                      description: serviceable device stock
                      type: string
                    type:
                      enum:
                        - ap
                        - switch
                        - gateway
                      type: string
                    warranty_end_time:
                      type: integer
                    warranty_start_time:
                      type: integer
                    warranty_type:
                      type: string
                  type: object
                type: array
          description: OK
        '400':
          content:
            application/json:
              examples:
                no-juniper-account-linked:
                  value:
                    detail: no-juniper-account-linked
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: Bad Requeno Juniper Account Linkedst
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgJsiPastPurchases
      tags:
        - Orgs JSI
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/licenses':
    get:
      description: Get the list of licenses
      operationId: getOrgLicencesSummary
      responses:
        '200':
          $ref: ./components/responses/Licence.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgLicencesSummary
      tags:
        - Orgs Licenses
    parameters:
      - $ref: ./components/parameters/org_id.yml
    put:
      description: |-
        Move, Undo Move or Delete Org License to Another Org
        If the admin has admin privilege against the `org_id` and `dst_org_id`, he can move some of the licenses to another Org. Given that: 
        1. the specified license is currently active 
        2. there’s enough licenses left in the specified license (by subscription_id) 
        3. there will still be enough entitled licenses for the type of license after the amendment
      operationId: moveOrDeleteOrgLicenseToAnotherOrg
      requestBody:
        content:
          application/json:
            examples:
              annotate:
                value:
                  notes: customer notes
                  op: annotate
                  subscription_id: SUB-000144
              delete:
                value:
                  op: delete
                  subscription_id: SUB-0000144
              move:
                value:
                  dst_org_id: 3eff35f7-c218-894e-bca2-24e5325601cc
                  op: amend
                  quantity: 10
                  subscription_id: SUB-0000144
              undo_move:
                value:
                  amendment_id: 2b9116ab-cd1e-e897-6e08-31fccd88e792
                  op: unamend
            schema:
              properties:
                amendment_id:
                  description: 'if `op`==`unamend`, the ID of the operation to cancel'
                  format: uuid
                  type: string
                dst_org_id:
                  description: 'if `op`==`amend`, the id of the org where the licence is moved'
                  format: uuid
                  type: string
                notes:
                  description: if `op`==`annotate`
                  type: string
                op:
                  description: 'to move a license, use the `amend` operation'
                  enum:
                    - amend
                    - unamend
                    - delete
                    - annotate
                  type: string
                quantity:
                  description: 'if `op`==`amend`, the number of licences to move'
                  type: integer
                subscription_id:
                  description: 'if `op`==`amend` or `op`==`delete`, the ID of the subscription to use'
                  type: string
              required:
                - op
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: moveOrDeleteOrgLicenseToAnotherOrg
      tags:
        - Orgs Licenses
  '/api/v1/orgs/{org_id}/licenses/usages':
    get:
      description: |-
        Get Licenses Usage by Sites
        This shows license usage (i.e. needed) based on the features enabled for the site.
      operationId: getOrgLicencesBySite
      responses:
        '200':
          $ref: ./components/responses/LicenceUsage.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgLicencesBySite
      tags:
        - Orgs Licenses
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/logs':
    get:
      description: Get List of change logs for the current Org
      operationId: listOrgLogs
      parameters:
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: admin name or email
          in: query
          name: admin_name
          schema:
            type: string
        - description: message
          in: query
          name: message
          schema:
            type: string
        - description: sort order
          in: query
          name: sort
          schema:
            enum:
              - timestamp
              - '-timestamp'
              - site_id
              - admin_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/LogsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgLogs
      tags:
        - Orgs Logs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/logs/count':
    get:
      description: Count by Distinct Attributes of Audit Logs
      operationId: countOrgLogs
      parameters:
        - in: query
          name: distinct
          required: true
          schema:
            default: admin_name
            enum:
              - admin_id
              - admin_name
              - message
              - site_id
            type: string
        - in: query
          name: admin_id
          schema:
            type: string
        - in: query
          name: admin_name
          schema:
            type: string
        - in: query
          name: site_id
          schema:
            type: string
        - in: query
          name: message
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgLogs
      tags:
        - Orgs Logs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/maps/import':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Import data from files is a multipart POST which has a file, an optional json, and an optional csv, to create floorplan, assign matching inventory to specific site, place ap if name or mac matches

        ### CSV File Format
        ```csv
        Vendor AP name,Mist AP Mac
        US Office AP-2 - 5c:5b:35:00:00:02,5c5b35000002
        ``` 
      operationId: importOrgMaps
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: false
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    vendor_name: ekahau
            schema:
              $ref: ./components/schemas/import_org_map.yml
      responses:
        '200':
          $ref: ./components/responses/MapImport.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importOrgMaps
      tags:
        - Orgs Maps
  '/api/v1/orgs/{org_id}/mist_nac/test_idp':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        IDP Credential Validation. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, `session` is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ``` json
        {
            "subscribe": "orgs/:org_id/mist_nac/test_idp"
        }

         ```

        ### Response (no idp can be found)

        ``` json
        {
            "event": "data",
            "channel": "/orgs/:org_id/mist_nac/test_idp",
            "status": 
            "data": {
                "status": "failure",
                "error": "No matching IDP found"
            }
        }

         ```

        ### Response OK

        ``` json
        {
            "event": "data",
            "channel": "/orgs/:org_id/mist_nac/test_idp",
            "status": 
            "data": {
                "status": "success",
                "idp_id": "915793c0-1355-4e98-b1c0-23df2227b357",
                "idp_type": "ldap",
                // more attributes will be added later
            }
        }

         ```

        ### Response Invalid Credentials

        ``` json
        {
            "event": "data",
            "channel": "/orgs/:org_id/mist_nac/test_idp",
            "status": 
            "data": {
                "status": "failure",
                "error": "Invalid Credentials",
                "idp_id": "915793c0-1355-4e98-b1c0-23df2227b357",
                "idp_type": "ldap",
            }
        }

         ```
      operationId: validateOrgIdpCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: xxxxxx
                  username: suriyas@juniper.net
            schema:
              properties:
                password:
                  type: string
                username:
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
      summary: validateOrgIdpCredential
      tags:
        - Orgs NAC
  '/api/v1/orgs/{org_id}/mxclusters':
    get:
      description: Get List of Org MxEdge Clusters
      operationId: listOrgMxEdgeClusters
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MxclustersArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMxEdgeClusters
      tags:
        - Orgs MxClusters
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create MxCluster
      operationId: createOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                      - host: string
                        port: 0
                  tunterm_ap_subnets:
                    - string
                  tunterm_hosts:
                    - string
            schema:
              $ref: ./components/schemas/mxcluster.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxcluster.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgMxEdgeCluster
      tags:
        - Orgs MxClusters
  '/api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}':
    delete:
      description: Delete Org MXEdge Cluster
      operationId: deleteOrgMxEdgeCluster
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgMxEdgeCluster
      tags:
        - Orgs MxClusters
    get:
      description: Get Org MxEdge Cluster Details
      operationId: getOrgMxEdgeCluster
      responses:
        '200':
          $ref: ./components/responses/Mxcluster.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxEdgeCluster
      tags:
        - Orgs MxClusters
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxcluster_id.yml
    put:
      description: Update Org MxEdge Cluster
      operationId: updateOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                      - host: string
                        port: 0
                  tunterm_ap_subnets:
                    - string
                  tunterm_hosts:
                    - string
            schema:
              $ref: ./components/schemas/mxcluster.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxcluster.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgMxEdgeCluster
      tags:
        - Orgs MxClusters
  '/api/v1/orgs/{org_id}/mxedges':
    get:
      description: Get List of Org MxEdges
      operationId: listOrgMxEdges
      parameters:
        - description: filter for site level mist edges
          in: query
          name: for_sites
          schema:
            default: any
            enum:
              - any
              - 'true'
              - 'false'
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/MxedgesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMxEdges
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create MxEdge
      operationId: createOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  model: ME-100
                  mxcluster_id: 572586b7-f97b-a22b-526c-8b97a3f609c4
                  mxedge_mgmt: {}
                  name: Guest
                  ntp_servers: []
                  oob_ip_config: {}
                  services:
                    - tunterm
                  tunterm_ip_config:
                    gateway: 10.2.1.254
                    ip: 10.2.1.1
                    netmask: 255.255.255.0
                  tunterm_port_config:
                    downstream_ports:
                      - '0'
                      - '1'
                      - '2'
                      - '3'
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                      - '0'
                      - '1'
                      - '2'
                      - '3'
                  tunterm_switch_config:
                    '0':
                      port_vlan_id: 1
                      vlan_ids:
                        - 5
                        - 2
                        - 3
                    enabled: true
                  versions:
                    mxagent: 2.4.194
                    tunterm: 0.1.928-1
            schema:
              $ref: ./components/schemas/mxedge.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgMxEdge
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/assign':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Assign Org MxEdge to Site
      operationId: assignOrgMxEdgeToSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                    - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              properties:
                mxedge_ids:
                  items:
                    type: string
                  type: array
                site_id:
                  type: string
              required:
                - site_id
                - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/assignSuccess.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: assignOrgMxEdgeToSite
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/claim':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: 'For a Mist Edge in default state, it will show a random claim code like `135-546-673` which you can “claim” it into your Org'
      operationId: claimOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 135-546-673
            schema:
              properties:
                code:
                  type: string
              required:
                - code
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/claimMxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: claimOrgMxEdge
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/count':
    get:
      description: Count Org Mist Edges
      operationId: countOrgMxEdges
      parameters:
        - in: query
          name: distinct
          schema:
            default: model
            enum:
              - model
              - mxcluster_id
              - distro
              - tunterm_version
              - site_id
            type: string
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge site id
          in: query
          name: site_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: model name
          in: query
          name: model
          schema:
            type: string
        - description: 'debian code name(buster, bullseye)'
          in: query
          name: distro
          schema:
            type: string
        - description: tunterm version
          in: query
          name: tunterm_version
          schema:
            type: string
        - description: 'sort options, -prefix represents DESC order, default is -last_seen'
          in: query
          name: sort
          schema:
            type: string
        - description: 'whether to return device stats, default is false'
          in: query
          name: stats
          schema:
            type: boolean
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countOrgMxEdges
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/mxedges/events/count':
    get:
      description: Count Org Mist Edge Events
      operationId: countOrgSiteMxEdgeEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: mxedge_id
            enum:
              - mxedge_id
              - type
              - mxcluster_id
              - package
            type: string
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: 'mist edge event type [Supported Events](/#operation/listGatewayApplications)'
          in: query
          name: type
          schema:
            type: string
        - description: 'service running on mist edge(mxagent, tunterm etc)'
          in: query
          name: service
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countOrgSiteMxEdgeEvents
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/mxedges/events/search':
    get:
      description: Search Org Mist Edge Events
      operationId: searchOrgMistEdgeEvents
      parameters:
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: 'mist edge event type [Supported Events](/#operation/listGatewayApplications)'
          in: query
          name: type
          schema:
            type: string
        - description: 'service running on mist edge(mxagent, tunterm etc)'
          in: query
          name: service
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MxEdgeEventsSearch.yml
      summary: searchOrgMistEdgeEvents
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/mxedges/search':
    get:
      description: Search Org Mist Edges
      operationId: searchOrgMxEdges
      parameters:
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge site id
          in: query
          name: site_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: model name
          in: query
          name: model
          schema:
            type: string
        - description: 'debian code name(buster, bullseye)'
          in: query
          name: distro
          schema:
            type: string
        - description: tunterm version
          in: query
          name: tunterm_version
          schema:
            type: string
        - description: 'sort options, -prefix represents DESC order, default is -last_seen'
          in: query
          name: sort
          schema:
            type: string
        - description: 'whether to return device stats, default is false'
          in: query
          name: stats
          schema:
            type: boolean
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/MxEdgeSearch.yml
      summary: searchOrgMxEdges
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/mxedges/unassign':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Unassign Org MxEdge from Site
      operationId: unassignOrgMxEdgeFromSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                    - 387804a7-3474-85ce-15a2-f9a9684c9c90
            schema:
              properties:
                mxedge_ids:
                  items:
                    type: string
                  type: array
              required:
                - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/assignSuccess.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unassignOrgMxEdgeFromSite
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/upgrade':
    get:
      description: Get List of Org Mist Edge Upgrades
      operationId: listOrgMxEdgeUpgrades
      responses:
        '200':
          $ref: ./components/responses/MxEdgeUpgradesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMxEdgeUpgrades
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Upgrade Mist Edges
      operationId: upgradeOrgMxEdges
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  mxedge_ids:
                    - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  versions:
                    mxagent: current
                    tunterm: default
            schema:
              properties:
                allow_downgrades:
                  description: whether downgrade is allowed when running version is higher than expected version for each service
                  properties:
                    mxagent:
                      default: false
                      type: boolean
                    mxdas:
                      default: false
                      type: boolean
                    mxocproxy:
                      default: false
                      type: boolean
                    radsecproxy:
                      default: false
                      type: boolean
                    tunterm:
                      default: false
                      type: boolean
                  type: object
                channel:
                  default: stable
                  description: 'upgrade channel to follow, stable (default) / beta / alpha'
                  enum:
                    - stable
                    - beta
                    - alpha
                  type: string
                distro:
                  description: 'distro upgrade, optional, to specific codename (e.g. bullseye) with highest qualified versions'
                  type: string
                mxedge_ids:
                  description: 'list of mxedge IDs to upgrade. If not specified, it means all the org mxedges.'
                  items:
                    format: uuid
                    type: string
                  type: array
                strategy:
                  default: big_bang
                  description: |
                    * `big_bang`: upgrade all at once
                    * `serial`: one at a time
                  enum:
                    - big_bang
                    - serial
                  type: string
                versions:
                  description: 'version to upgrade for each service, optional (ignored if distro upgrade)'
                  properties:
                    mxagent:
                      type: string
                    mxdas:
                      type: string
                    mxocproxy:
                      type: string
                    radsecproxy:
                      type: string
                    tunterm:
                      type: string
                  required:
                    - mxagent
                    - tunterm
                  type: object
              required:
                - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeOrgMxEdges
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/mxedges/upgrade/{upgrade_id}':
    get:
      description: Get Mist Edge Upgrade
      operationId: getOrgMxEdgeUpgrade
      responses:
        '200':
          $ref: ./components/responses/MxEdgeUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxEdgeUpgrade
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
  '/api/v1/orgs/{org_id}/mxedges/version':
    get:
      description: Get Mist Edge Upgrade Information
      operationId: getOrgMxEdgeUpgradeInfo
      parameters:
        - description: 'upgrade channel to follow, stable (default) / beta / alpha'
          in: query
          name: channel
          schema:
            default: stable
            enum:
              - stable
              - beta
              - alpha
            type: string
      responses:
        '200':
          $ref: ./components/responses/MxedgeUpdateInfo.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxEdgeUpgradeInfo
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}':
    delete:
      description: Delete Org MxEdge
      operationId: deleteOrgMxEdge
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgMxEdge
      tags:
        - Orgs MxEdges
    get:
      description: Get Org MxEdge details
      operationId: getOrgMxEdge
      responses:
        '200':
          $ref: ./components/responses/Mxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxEdge
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    put:
      description: Update Org MxEdge
      operationId: updateOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  magic: string
                  model: string
                  mxcluster_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  ntp_servers:
                    - string
                  services:
                    - tunterm
                  tunterm_ip_config:
                    dns:
                      - string
                    dns_suffix:
                      - string
                    gateway: string
                    ip: string
                    netmask: string
                  tunterm_port_config:
                    downstream_ports:
                      - string
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                      - string
            schema:
              $ref: ./components/schemas/mxedge.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgMxEdge
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}//image{image_number}':
    delete:
      description: Remove MxEdge Image
      operationId: deleteOrgMxEdgeImage
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgMxEdgeImage
      tags:
        - Orgs MxEdges
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
      - in: path
        name: image_number
        required: true
        schema:
          maximum: 3
          minimum: 1
          type: number
    post:
      description: Attach up to 3 images to a mxedge
      operationId: addOrgMxEdgeImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/image_upload.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addOrgMxEdgeImage
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/restart':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: 'In the case where a Mist Edge is replaced, you would need to unregister it. Which disconnects the currently the connected Mist Edge and allow another to register.'
      operationId: restartOrgMxEdge
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: restartOrgMxEdge
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/tunterm/bounce_port':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: Bounce TunTerm Data Ports
      operationId: bounceOrgMxEdgeDataPorts
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ports:
                    - '0'
                    - '2'
              example-2:
                value:
                  hold_time: 0
                  ports:
                    - string
            schema:
              properties:
                hold_time:
                  description: 'in milli seconds, hold time between multiple port bounces'
                  type: integer
                ports:
                  description: list of ports to bounce
                  items:
                    type: string
                  type: array
              required:
                - ports
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: bounceOrgMxEdgeDataPorts
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/{name}/{action}':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
      - in: path
        name: name
        required: true
        schema:
          enum:
            - tunterm
            - radsecproxy
            - mxagent
            - mxocproxy
            - mxdas
          type: string
      - description: restart or start or stop
        in: path
        name: action
        required: true
        schema:
          enum:
            - restart
            - start
            - stop
          type: string
    post:
      description: Control Services on a Mist Edge
      operationId: controlOrgMxEdgeServices
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: controlOrgMxEdgeServices
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/support':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadOrgMxEdgeSupportFiles
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uploadOrgMxEdgeSupportFiles
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/unregister':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: 'In the case where a Mist Edge is replaced, you would need to unregister it. Which disconnects the currently the connected Mist Edge and allow another to register.'
      operationId: unregisterOrgMxEdge
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unregisterOrgMxEdge
      tags:
        - Orgs MxEdges
  '/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/upgrade':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: Upgrade MxEdge
      operationId: upgradeOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  mxedge_ids:
                    - string
                  versions:
                    mxagent: current
                    tunterm: current
            schema:
              properties:
                channel:
                  default: stable
                  description: 'upgrade channel to follow, stable (default) / beta / alpha'
                  enum:
                    - stable
                    - beta
                    - alpha
                  type: string
                mxedge_ids:
                  description: list of mxedge IDs to upgrade
                  items:
                    type: string
                  type: array
                versions:
                  description: 'version to upgrade for each service, optional, current (assumed) / latest / default / specific version (e.g. 2.5.100)'
                  properties:
                    mxagent:
                      default: current
                      type: string
                    tunterm:
                      default: current
                      type: string
                  type: object
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeOrgMxEdge
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/mxtunnels':
    get:
      description: Get List of Org MxTunnels
      operationId: listOrgMxTunnels
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MxtunnelsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMxTunnels
      tags:
        - Orgs MxTunnels
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create MxTunnel
      operationId: createOrgMxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  cluster_ids:
                    - string
                  created_time: 0
                  for_site: true
                  hello_interval: 60
                  hello_retries: 7
                  id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  ipsec:
                    dns_servers:
                      - string
                    enabled: true
                    extra_routes:
                      - dest: string
                        next_hop: 192.168.0.1
                    split_tunnel: true
                    use_mxedge: true
                  modified_time: 0
                  org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  vlan_ids:
                    - 0
            schema:
              $ref: ./components/schemas/mxtunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgMxTunnel
      tags:
        - Orgs MxTunnels
  '/api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}':
    delete:
      description: Delete Org MxTunnel
      operationId: deleteOrgMxTunnel
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgMxTunnel
      tags:
        - Orgs MxTunnels
    get:
      description: Get Org MxTunnel Details
      operationId: getOrgMxTunnel
      responses:
        '200':
          $ref: ./components/responses/Mxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxTunnel
      tags:
        - Orgs MxTunnels
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxtunnel_id.yml
    put:
      description: Update Org MxTunnel
      operationId: updateOrgMxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/mxtunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Mxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgMxTunnel
      tags:
        - Orgs MxTunnels
  '/api/v1/orgs/{org_id}/nac_clients/count':
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countOrgNacClients
      parameters:
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - last_nacrule_id
              - auth_type
              - last_vlan_id
              - last_nas_vendor
              - last_username
              - last_ap
              - mac
              - last_ssid
              - last_status
              - mdm_compliance_status
              - mdm_provider
            type: string
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: last_nacrule_id
          schema:
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g. “eap-tls”, “eap-ttls”, “eap-teap”, “mab”, “device-auth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: last_vlan_id
          schema:
            type: string
        - description: vendor of NAS device
          in: query
          name: last_nas_vendor
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            type: string
        - description: SSID
          in: query
          name: last_ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: last_username
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: org id
          in: query
          name: org_id
          schema:
            type: string
        - description: 'site id if assigned, null if not assigned'
          in: query
          name: site_id
          schema:
            type: string
        - description: AP MAC connected to by client
          in: query
          name: last_ap
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'Connection status of client i.e “permitted”, “denied, “session_ended”'
          in: query
          name: last_status
          schema:
            type: string
        - description: 'Client type i.e. “wireless”, “wired” etc.'
          in: query
          name: type
          schema:
            type: string
        - description: 'MDM compliancy of client i.e “compliant”, “not compliant”'
          in: query
          name: mdm_compliance_status
          schema:
            type: string
        - description: 'MDM provider of client’s organisation eg “intune”, “jamf”'
          in: query
          name: mdm_provider
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countOrgNacClients
      tags:
        - Orgs Clients - NAC
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/nac_clients/events/count':
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countOrgNacClientEvents
      parameters:
        - in: query
          name: distinct
          schema:
            enum:
              - type
              - nacrule_id
              - dryrun_nacrule_id
              - auth_type
              - vlan
              - nas_vendor
              - username
              - ap
              - mac
              - ssid
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countOrgNacClientEvents
      tags:
        - Orgs Clients - NAC
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/nac_clients/events/search':
    get:
      description: Search NAC Client Events
      operationId: searchOrgNacClientEvents
      parameters:
        - description: 'event type, e.g. NAC_CLIENT_PERMIT'
          in: query
          name: type
          schema:
            type: string
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: nacrule_id
          schema:
            format: uuid
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'NAC Policy Dry Run Rule ID, if present and matched'
          in: query
          name: dryrun_nacrule_id
          schema:
            type: string
        - description: 'True - if dryrun rule present and matched with priority, False - if not matched or not present'
          in: query
          name: dryrun_nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g. “802.1X”, “MAB”, “DeviceAuth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: vlan
          schema:
            type: integer
        - description: vendor of NAS device
          in: query
          name: nas_vendor
          schema:
            type: string
        - description: SSID
          in: query
          name: bssid
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            format: uuid
            type: string
        - description: IDP returned roles/groups for the user
          in: query
          name: idp_role
          schema:
            type: string
        - description: Radius attributes returned by NAC to NAS Devive
          in: query
          name: resp_attrs
          schema:
            items:
              type: string
            type: array
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: username
          schema:
            type: string
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: AP random macMAC
          in: query
          name: random_mac
          schema:
            type: boolean
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/EventsNacClientSearch.yml
      summary: searchOrgNacClientEvents
      tags:
        - Orgs Clients - NAC
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/nac_clients/search':
    get:
      description: Search Org NAC Clients
      operationId: searchOrgNacClients
      parameters:
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: last_nacrule_id
          schema:
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g. “eap-tls”, “eap-ttls”, “eap-teap”, “mab”, “device-auth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: last_vlan_id
          schema:
            type: string
        - description: vendor of NAS device
          in: query
          name: last_nas_vendor
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            type: string
        - description: SSID
          in: query
          name: last_ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: last_username
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: org id
          in: query
          name: org_id
          schema:
            type: string
        - description: 'site id if assigned, null if not assigned'
          in: query
          name: site_id
          schema:
            type: string
        - description: AP MAC connected to by client
          in: query
          name: last_ap
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'Connection status of client i.e “permitted”, “denied, “session_ended”'
          in: query
          name: last_status
          schema:
            type: string
        - description: 'Client type i.e. “wireless”, “wired” etc.'
          in: query
          name: type
          schema:
            type: string
        - description: 'MDM compliancy of client i.e “compliant”, “not compliant”'
          in: query
          name: mdm_compliance_status
          schema:
            type: string
        - description: 'MDM provider of client’s organisation eg “intune”, “jamf”'
          in: query
          name: mdm_provider
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/ClientNacSearch.yml
      summary: searchOrgNacClients
      tags:
        - Orgs Clients - NAC
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/nacrules':
    get:
      description: Get List of Org NAC Rules
      operationId: listOrgNacRules
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/NacRulesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgNacRules
      tags:
        - Orgs NAC Rules
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: create Org NAC Rule
      operationId: createOrgNacRule
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  apply_tags:
                    - c049dfcd-0c73-5014-1c64-062e9903f1e5"
                  matching:
                    auth_type: eap-tls
                    nactags:
                      - 041d5d36-716c-4cfb-4988-3857c6aa14a2
                      - a809a97f-d599-f812-eb8c-c3f84aabf6ba
                    port_types:
                      - wired
                    site_ids:
                      - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                      - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                    sitegroup_ids:
                      - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                      - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                  name: name1
                  not_matching: {}
                  order: 1
            schema:
              $ref: ./components/schemas/nac_rule.yml
      responses:
        '200':
          $ref: ./components/responses/NacRule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgNacRule
      tags:
        - Orgs NAC Rules
  '/api/v1/orgs/{org_id}/nacrules/{nacrule_id}':
    delete:
      description: Delete Org NAC Rule
      operationId: deleteOrgNacRule
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgNacRule
      tags:
        - Orgs NAC Rules
    get:
      description: Get Org NAC Rule
      operationId: getOrgNacRule
      responses:
        '200':
          $ref: ./components/responses/NacRule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgNacRule
      tags:
        - Orgs NAC Rules
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/nacrule_id.yml
    put:
      description: Update Org NAC Rule
      operationId: updateOrgNacRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/nac_rule.yml
      responses:
        '200':
          $ref: ./components/responses/NacRule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgNacRule
      tags:
        - Orgs NAC Rules
  '/api/v1/orgs/{org_id}/nactags':
    get:
      description: Get List of Org NAC Tags
      operationId: listOrgNacTags
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/NacTagsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgNacTags
      tags:
        - Orgs NAC Tags
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org NAC Tag
      operationId: createOrgNacTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/nac_tag.yml
      responses:
        '200':
          $ref: ./components/responses/NacTag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgNacTag
      tags:
        - Orgs NAC Tags
  '/api/v1/orgs/{org_id}/nactags/{nactag_id}':
    delete:
      description: Delete Org NAC Tag
      operationId: deleteOrgNacTag
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgNacTag
      tags:
        - Orgs NAC Tags
    get:
      description: Get Org NAC Tag
      operationId: getOrgNacTag
      responses:
        '200':
          $ref: ./components/responses/NacTag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgNacTag
      tags:
        - Orgs NAC Tags
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/nactag_id.yml
    put:
      description: 'Update Org NAC Tag '
      operationId: updateOrgNacTag
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: ./components/schemas/nac_tag.yml
      responses:
        '200':
          $ref: ./components/responses/NacTag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgNacTag
      tags:
        - Orgs NAC Tags
  '/api/v1/orgs/{org_id}/networks':
    get:
      description: Get List of Org Networks
      operationId: listOrgNetworks
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/NetworksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgNetworks
      tags:
        - Orgs Networks
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Organization Network
      operationId: createOrgNetwork
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 0
                  disallow_mist_services: false
                  gateway: 192.168.70.1
                  hosts:
                    property1:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                    property2:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f37
                  internal_access:
                    enabled: true
                  internet_access:
                    create_simple_service_policy: false
                    destination_nat:
                      property1:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                      property2:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                    enabled: true
                    restricted: false
                    static_nat:
                      property1:
                        internal_ip: 192.168.70.3
                        name: printer-1
                      property2:
                        internal_ip: 192.168.70.3
                        name: printer-1
                  isolation: true
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  subnet: 192.168.70.0/24
                  tenants:
                    property1:
                      addresses: string
                    property2:
                      addresses: string
                  vlan_id: 0
                  vpn_access:
                    property1:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                      summarized_subnet: 172.16.0.0/16
                    property2:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                      summarized_subnet: 172.16.0.0/16
            schema:
              $ref: ./components/schemas/network.yml
      responses:
        '200':
          $ref: ./components/responses/Network.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgNetwork
      tags:
        - Orgs Networks
  '/api/v1/orgs/{org_id}/networks/{network_id}':
    delete:
      description: Delete Organization Network
      operationId: deleteOrgNetwork
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgNetwork
      tags:
        - Orgs Networks
    get:
      description: Get Organization Network Details
      operationId: getOrgNetwork
      responses:
        '200':
          $ref: ./components/responses/Network.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgNetwork
      tags:
        - Orgs Gateway Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/network_id.yml
    put:
      description: Update Organization Network
      operationId: updateOrgNetwork
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 0
                  disallow_mist_services: false
                  gateway: 192.168.70.1
                  hosts:
                    property1:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                    property2:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f38
                  internal_access:
                    enabled: true
                  internet_access:
                    create_simple_service_policy: false
                    destination_nat:
                      property1:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                      property2:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                    enabled: true
                    restricted: false
                    static_nat:
                      property1:
                        internal_ip: 192.168.70.3
                        name: printer-1
                      property2:
                        internal_ip: 192.168.70.3
                        name: printer-1
                  isolation: true
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  subnet: 192.168.70.0/24
                  tenants:
                    property1:
                      addresses: string
                    property2:
                      addresses: string
                  vlan_id: 0
                  vpn_access:
                    property1:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                      summarized_subnet: 172.16.0.0/16
                    property2:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos-station-1
                      summarized_subnet: 172.16.0.0/16
            schema:
              $ref: ./components/schemas/network.yml
      responses:
        '200':
          $ref: ./components/responses/Network.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgNetwork
      tags:
        - Orgs Networks
  '/api/v1/orgs/{org_id}/networktemplates':
    get:
      description: Get List of Org Network Templates
      operationId: listOrgNetworkTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/NetworktemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgNetworkTemplates
      tags:
        - Orgs Network Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Update Org Network Templates
      operationId: createOrgNetworkTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                    - string
                  created_time: 0
                  dhcp_snooping:
                    all_networks: true
                    enable_arp_spoof_check: true
                    enable_ip_source_guard: true
                    enabled: true
                    networks:
                      - string
                  dns_servers:
                    - string
                  dns_suffix:
                    - string
                  extra_routes:
                    property1:
                      via: string
                    property2:
                      via: string
                  group_tags: {}
                  id: 497f6eca-6276-4993-bfeb-53debbba6f08
                  import_org_networks:
                    - ap
                  mist_nac:
                    enabled: true
                    network: string
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                    property2:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                  ntp_servers:
                    - string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                        - equals: string
                          equals_any:
                            - string
                          expression: string
                          src: lldp_chassis_id
                          usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1813
                        secret: testing123
                    auth_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1812
                        secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 111
                      size: 5m
                    console:
                      contents:
                        - facility: any
                          severity: any
                    enabled: false
                    files:
                      - archive:
                          files: 10
                          size: 5m
                        contents:
                          - facility: any
                            severity: any
                        explicit_priority: true
                        file: file-name
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        structured_data: true
                    network: string
                    send_to_all_servers: true
                    servers:
                      - contents:
                          - facility: any
                            severity: any
                        explicit_priority: true
                        facility: any
                        host: syslogd.internal
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        port: 514
                        protocol: udp
                        routing_instance: routing-instance-name
                        severity: any
                        source_address: string
                        structured_data: true
                        tag: string
                    time_format: millisecond
                    users:
                      - contents:
                          - facility: any
                            severity: any
                        match: '"!alarm|ntp|errors.crc_error[chan]"'
                        user: '*'
                  snmp_config:
                    client_list:
                      - client_list_name: clist-1
                        clients:
                          - 151.140.101.218/32
                    contact: cns@juniper.net
                    description: Juniper QFX Series Switch - 1K_5LA
                    enabled: true
                    engine_id: local
                    location: 'Las Vegas, NV'
                    name: TGH-1K-QFX10K
                    network: default
                    trap_groups:
                      - categories:
                          - authentication
                        group_name: profiler
                        targets:
                          - 172.29.158.19
                        version: v2
                    v2c_config:
                      - authorization: read-only
                        client_list_name: clist-1
                        community_name: abc123
                        view: all
                    v3_config:
                      notify:
                        - name: string
                          tag: string
                          type: trap
                      notify_filter:
                        - contents:
                            - include: true
                              oid: 1.3.6.1.4.1
                          profile_name: string
                      target_address:
                        - address: address
                          address_mask: address_mask
                          port: 161
                          tag_list: string
                          target_address_name: target_address_name
                          target_parameters: string
                      target_parameters:
                        - message_processing_model: v1
                          name: string
                          notify_filter: string
                          security_level: authentication
                          security_model: usm
                          security_name: m01620
                      usm:
                        engine-id: '00:00:00:0b:00:00:70:10:6f:08:b6:3f'
                        engine_type: remote_engine
                        users:
                          - authentication_password: strings
                            authentication_type: authentication-md5
                            encryption_password: stringst
                            encryption_type: privacy-aes128
                            name: string
                      vacm:
                        access:
                          - group_name: string
                            prefix_list:
                              - context_prefix: iil
                                notify_view: all
                                read_view: all
                                security_level: privacy
                                security_model: any
                                type: default_context_prefix
                                write_view: all
                        security_to_group:
                          content:
                            - group: string
                              security_name: string
                          security_model: usm
                    views:
                      include: true
                      oid: 1.3.6.1
                      view_name: all
                  switch_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        match_role: string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                        switch_mgmt:
                          ap_affinity_threshold: '10'
                          config_revert_timer: 10
                          dhcp_option_fqdn: false
                          mxedge_proxy_host: string
                          mxedge_proxy_port: 2222
                          use_mxedge_proxy: false
                  switch_mgmt:
                    config_revert: 10
                    protect_re:
                      enabled: false
                    root_password: string
                    tacacs:
                      acct_servers:
                        - host: string
                          port: string
                          secret: string
                          timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                        - host: string
                          port: string
                          secret: string
                          timeout: 10
                  vrf_config:
                    enabled: false
                  vrf_instances:
                    property1:
                      extra_routes:
                        property1:
                          via: string
                        property2:
                          via: string
                      networks:
                        - string
                    property2:
                      extra_routes:
                        property1:
                          via: string
                        property2:
                          via: string
                      networks:
                        - string
            schema:
              $ref: ./components/schemas/networktemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Networktemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgNetworkTemplate
      tags:
        - Orgs Network Templates
  '/api/v1/orgs/{org_id}/networktemplates/{networktemplate_id}':
    delete:
      description: Delete Org Network Template
      operationId: deleteOrgNetworkTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgNetworkTemplate
      tags:
        - Orgs Network Templates
    get:
      description: Get Org Network Templates Details
      operationId: getOrgNetworkTemplate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./components/schemas/networktemplate.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgNetworkTemplate
      tags:
        - Orgs Network Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/networktemplate_id.yml
    put:
      description: Update Org Network Template
      operationId: updateOrgNetworkTemplates
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                    - string
                  created_time: 0
                  dhcp_snooping:
                    all_networks: true
                    enable_arp_spoof_check: true
                    enable_ip_source_guard: true
                    enabled: true
                    networks:
                      - string
                  dns_servers:
                    - string
                  dns_suffix:
                    - string
                  extra_routes:
                    property1:
                      via: string
                    property2:
                      via: string
                  group_tags: {}
                  id: 497f6eca-6276-4993-bfeb-53dfbbba6f08
                  import_org_networks:
                    - ap
                  mist_nac:
                    enabled: true
                    network: string
                  modified_time: 0
                  name: string
                  networks:
                    property1:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                    property2:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                  ntp_servers:
                    - string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                        - equals: string
                          equals_any:
                            - string
                          expression: string
                          src: lldp_chassis_id
                          usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1813
                        secret: testing123
                    auth_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1812
                        secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 111
                      size: 5m
                    console:
                      contents:
                        - facility: any
                          severity: any
                    enabled: false
                    files:
                      - archive:
                          files: 10
                          size: 5m
                        contents:
                          - facility: any
                            severity: any
                        explicit_priority: true
                        file: file-name
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        structured_data: true
                    network: string
                    send_to_all_servers: true
                    servers:
                      - contents:
                          - facility: any
                            severity: any
                        explicit_priority: true
                        facility: any
                        host: syslogd.internal
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        port: 514
                        protocol: udp
                        routing_instance: routing-instance-name
                        severity: any
                        source_address: string
                        structured_data: true
                        tag: string
                    time_format: millisecond
                    users:
                      - contents:
                          - facility: any
                            severity: any
                        match: '"!alarm|ntp|errors.crc_error[chan]"'
                        user: '*'
                  snmp_config:
                    client_list:
                      - client_list_name: clist-1
                        clients:
                          - 151.140.101.218/32
                    contact: cns@juniper.net
                    description: Juniper QFX Series Switch - 1K_5LA
                    enabled: true
                    engine_id: local
                    location: 'Las Vegas, NV'
                    name: TGH-1K-QFX10K
                    network: default
                    trap_groups:
                      - categories:
                          - authentication
                        group_name: profiler
                        targets:
                          - 172.29.158.19
                        version: v2
                    v2c_config:
                      - authorization: read-only
                        client_list_name: clist-1
                        community_name: abc123
                        view: all
                    v3_config:
                      notify:
                        - name: string
                          tag: string
                          type: trap
                      notify_filter:
                        - contents:
                            - include: true
                              oid: 1.3.6.1.4.1
                          profile_name: string
                      target_address:
                        - address: address
                          address_mask: address_mask
                          port: 161
                          tag_list: string
                          target_address_name: target_address_name
                          target_parameters: string
                      target_parameters:
                        - message_processing_model: v1
                          name: string
                          notify_filter: string
                          security_level: authentication
                          security_model: usm
                          security_name: m01620
                      usm:
                        engine-id: '00:00:00:0b:00:00:70:10:6f:08:b6:3f'
                        engine_type: remote_engine
                        users:
                          - authentication_password: strings
                            authentication_type: authentication-md5
                            encryption_password: stringst
                            encryption_type: privacy-aes128
                            name: string
                      vacm:
                        access:
                          - group_name: string
                            prefix_list:
                              - context_prefix: iil
                                notify_view: all
                                read_view: all
                                security_level: privacy
                                security_model: any
                                type: default_context_prefix
                                write_view: all
                        security_to_group:
                          content:
                            - group: string
                              security_name: string
                          security_model: usm
                    views:
                      include: true
                      oid: 1.3.6.1
                      view_name: all
                  switch_matching:
                    enable: true
                    rules:
                      - additional_config_cmds:
                          - string
                        match_role: string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                        switch_mgmt:
                          ap_affinity_threshold: '10'
                          config_revert_timer: 10
                          dhcp_option_fqdn: false
                          mxedge_proxy_host: string
                          mxedge_proxy_port: 2222
                          use_mxedge_proxy: false
                  switch_mgmt:
                    config_revert: 10
                    protect_re:
                      enabled: false
                    root_password: string
                    tacacs:
                      acct_servers:
                        - host: string
                          port: string
                          secret: string
                          timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                        - host: string
                          port: string
                          secret: string
                          timeout: 10
                  vrf_config:
                    enabled: false
                  vrf_instances:
                    property1:
                      extra_routes:
                        property1:
                          via: string
                        property2:
                          via: string
                      networks:
                        - string
                    property2:
                      extra_routes:
                        property1:
                          via: string
                        property2:
                          via: string
                      networks:
                        - string
            schema:
              $ref: ./components/schemas/networktemplate.yml
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    additional_config_cmds:
                      - string
                    created_time: 0
                    dhcp_snooping:
                      all_networks: true
                      enable_arp_spoof_check: true
                      enable_ip_source_guard: true
                      enabled: true
                      networks:
                        - string
                    dns_servers:
                      - string
                    dns_suffix:
                      - string
                    extra_routes:
                      property1:
                        via: string
                      property2:
                        via: string
                    group_tags: {}
                    id: 497f6eca-6276-4993-bfeb-53e0bbba6f08
                    import_org_networks:
                      - ap
                    mist_nac:
                      enabled: true
                      network: string
                    modified_time: 0
                    name: string
                    networks:
                      property1:
                        subnet: 192.168.1.0/24
                        vlan_id: 10
                      property2:
                        subnet: 192.168.1.0/24
                        vlan_id: 10
                    ntp_servers:
                      - string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    port_usages:
                      dynamic:
                        mode: dynamic
                        reset_default_when: link_down
                        rules:
                          - equals: string
                            equals_any:
                              - string
                            expression: string
                            src: lldp_chassis_id
                            usage: string
                      property1:
                        all_networks: false
                        allow_dhcpd: true
                        authentication_protocol: pap
                        bypass_auth_when_server_down: true
                        description: string
                        disable_autoneg: false
                        disabled: false
                        duplex: auto
                        enable_mac_auth: true
                        enable_qos: true
                        guest_network: string
                        mac_auth_only: true
                        mac_limit: 0
                        mode: access
                        mtu: 0
                        networks:
                          - string
                        persist_mac: false
                        poe_disabled: false
                        port_auth: string
                        port_network: string
                        rejected_network: null
                        speed: string
                        storm_control:
                          no_broadcast: false
                          no_multicast: false
                          no_registered_multicast: false
                          no_unknown_unicast: false
                          percentage: 80
                        stp_edge: true
                        voip_network: string
                      property2:
                        all_networks: false
                        allow_dhcpd: true
                        authentication_protocol: pap
                        bypass_auth_when_server_down: true
                        description: string
                        disable_autoneg: false
                        disabled: false
                        duplex: auto
                        enable_mac_auth: true
                        enable_qos: true
                        guest_network: string
                        mac_auth_only: true
                        mac_limit: 0
                        mode: access
                        mtu: 0
                        networks:
                          - string
                        persist_mac: false
                        poe_disabled: false
                        port_auth: string
                        port_network: string
                        rejected_network: null
                        speed: string
                        storm_control:
                          no_broadcast: false
                          no_multicast: false
                          no_registered_multicast: false
                          no_unknown_unicast: false
                          percentage: 80
                        stp_edge: true
                        voip_network: string
                    radius_config:
                      acct_interim_interval: 0
                      acct_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1813
                          secret: testing123
                      auth_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1812
                          secret: testing123
                      auth_servers_retries: 3
                      auth_servers_timeout: 5
                      coa_enabled: false
                      coa_port: 3799
                      network: string
                      source_ip: string
                    remote_syslog:
                      archive:
                        files: 111
                        size: 5m
                      console:
                        contents:
                          - facility: any
                            severity: any
                      enabled: false
                      files:
                        - archive:
                            files: 10
                            size: 5m
                          contents:
                            - facility: any
                              severity: any
                          explicit_priority: true
                          file: file-name
                          match: '!alarm|ntp|errors.crc_error[chan]'
                          structured_data: true
                      network: string
                      send_to_all_servers: true
                      servers:
                        - contents:
                            - facility: any
                              severity: any
                          explicit_priority: true
                          facility: any
                          host: syslogd.internal
                          match: '!alarm|ntp|errors.crc_error[chan]'
                          port: 514
                          protocol: udp
                          routing_instance: routing-instance-name
                          severity: any
                          source_address: string
                          structured_data: true
                          tag: string
                      time_format: millisecond
                      users:
                        - contents:
                            - facility: any
                              severity: any
                          match: '"!alarm|ntp|errors.crc_error[chan]"'
                          user: '*'
                    snmp_config:
                      client_list:
                        - client_list_name: clist-1
                          clients:
                            - 151.140.101.218/32
                      contact: cns@juniper.net
                      description: Juniper QFX Series Switch - 1K_5LA
                      enabled: true
                      engine_id: local
                      location: 'Las Vegas, NV'
                      name: TGH-1K-QFX10K
                      network: default
                      trap_groups:
                        - categories:
                            - authentication
                          group_name: profiler
                          targets:
                            - 172.29.158.19
                          version: v2
                      v2c_config:
                        - authorization: read-only
                          client_list_name: clist-1
                          community_name: abc123
                          view: all
                      v3_config:
                        notify:
                          - name: string
                            tag: string
                            type: trap
                        notify_filter:
                          - contents:
                              - include: true
                                oid: 1.3.6.1.4.1
                            profile_name: string
                        target_address:
                          - address: address
                            address_mask: address_mask
                            port: 161
                            tag_list: string
                            target_address_name: target_address_name
                            target_parameters: string
                        target_parameters:
                          - message_processing_model: v1
                            name: string
                            notify_filter: string
                            security_level: authentication
                            security_model: usm
                            security_name: m01620
                        usm:
                          engine-id: '00:00:00:0b:00:00:70:10:6f:08:b6:3f'
                          engine_type: remote_engine
                          users:
                            - authentication_password: strings
                              authentication_type: authentication-md5
                              encryption_password: stringst
                              encryption_type: privacy-aes128
                              name: string
                        vacm:
                          access:
                            - group_name: string
                              prefix_list:
                                - context_prefix: iil
                                  notify_view: all
                                  read_view: all
                                  security_level: privacy
                                  security_model: any
                                  type: default_context_prefix
                                  write_view: all
                          security_to_group:
                            content:
                              - group: string
                                security_name: string
                            security_model: usm
                      views:
                        include: true
                        oid: 1.3.6.1
                        view_name: all
                    switch_matching:
                      enable: true
                      rules:
                        - additional_config_cmds:
                            - string
                          match_role: string
                          name: string
                          port_config:
                            property1:
                              ae_disable_lacp: true
                              ae_idx: 0
                              aggregated: false
                              critical: true
                              description: string
                              disable_autoneg: false
                              duplex: auto
                              dynamic_usage: string
                              esilag: true
                              mtu: 1514
                              no_local_overwrite: true
                              poe_disabled: false
                              speed: auto
                              usage: string
                            property2:
                              ae_disable_lacp: true
                              ae_idx: 0
                              aggregated: false
                              critical: true
                              description: string
                              disable_autoneg: false
                              duplex: auto
                              dynamic_usage: string
                              esilag: true
                              mtu: 1514
                              no_local_overwrite: true
                              poe_disabled: false
                              speed: auto
                              usage: string
                          property1: string
                          property2: string
                          switch_mgmt:
                            ap_affinity_threshold: '10'
                            config_revert_timer: 10
                            dhcp_option_fqdn: false
                            mxedge_proxy_host: string
                            mxedge_proxy_port: 2222
                            use_mxedge_proxy: false
                    switch_mgmt:
                      config_revert: 10
                      protect_re:
                        enabled: false
                      root_password: string
                      tacacs:
                        acct_servers:
                          - host: string
                            port: string
                            secret: string
                            timeout: 10
                        enabled: true
                        network: string
                        tacplus_servers:
                          - host: string
                            port: string
                            secret: string
                            timeout: 10
                    vrf_config:
                      enabled: false
                    vrf_instances:
                      property1:
                        extra_routes:
                          property1:
                            via: string
                          property2:
                            via: string
                        networks:
                          - string
                      property2:
                        extra_routes:
                          property1:
                            via: string
                          property2:
                            via: string
                        networks:
                          - string
              schema:
                $ref: ./components/schemas/networktemplate.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgNetworkTemplates
      tags:
        - Orgs Network Templates
  '/api/v1/orgs/{org_id}/ocdevices/outbound_ssh_cmd':
    get:
      description: |-
        Get Org Juniper Devices command

        Juniper devices can be managed/adopted by Mist. Currently outbound-ssh + netconf is used.
        A few lines of CLI commands are generated per-Org, allowing the Juniper devices to phone home to Mist.
      operationId: getOrgJuniperDevicesCommand
      parameters:
        - description: site_id would be used for proxy config check of the site and automatic site assignment
          in: query
          name: site_id
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    cmd: |-
                      set system services ssh...
                      ...
                      set system services outbound-ssh client mist ...
              schema:
                properties:
                  cmd:
                    type: string
                required:
                  - cmd
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgJuniperDevicesCommand
      tags:
        - Orgs Devices
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/otherdevices':
    get:
      description: Get List of Org other devices (3rd party devices)
      operationId: listOrgOtherDevices
      parameters:
        - in: query
          name: vendor
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceOtherArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgOtherDevices
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
    put:
      description: 'If the Site / Device cannot be identified, a manual association can be made. Either a site_id or a device_mac needs to be provided.'
      operationId: updateOrgOtherDevices
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  device_mac: 0adfea67e65b
                  macs:
                    - 5c5b350e0001
                    - 5c5b350e0003
                  op: assign
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              properties:
                device_mac:
                  description: List of otherdevice mac addresses.
                  type: string
                macs:
                  description: The mac address of the peer device.
                  items:
                    type: string
                  type: array
                op:
                  description: The operation being performed
                  enum:
                    - assign
                    - unassign
                  type: string
                site_id:
                  description: Either a site_id OR a device_mac must be provided
                  type: string
              required:
                - op
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgOtherDevices
      tags:
        - Orgs Devices Others
  '/api/v1/orgs/{org_id}/otherdevices/events/count':
    get:
      description: Count Org OtherDevices Events
      operationId: countOrgOtherDeviceEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - mac
              - type
              - vendor
              - site_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgOtherDeviceEvents
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/otherdevices/events/search':
    get:
      description: Search Org OtherDevices Events
      operationId: searchOrgOtherDeviceEvents
      parameters:
        - description: site id
          in: query
          name: site_id
          schema:
            type: string
        - description: mac
          in: query
          name: mac
          schema:
            type: string
        - description: mac of attached device
          in: query
          name: device_mac
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: vendor name
          in: query
          name: vendor
          schema:
            type: string
        - description: event type
          in: query
          name: type
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/EventsOtherDevicesSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgOtherDeviceEvents
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/otherdevices/{device_mac}':
    delete:
      description: Delete OtherDevice
      operationId: deleteOrgOtherDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgOtherDevice
      tags:
        - Orgs Devices Others
    get:
      description: Get Org other device (3rd party device)
      operationId: getOrgOtherDevice
      responses:
        '200':
          $ref: ./components/responses/DeviceOther.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgOtherDevice
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    put:
      description: 'If the Site / Device cannot be identified, a manual association can be made'
      operationId: updateOrgOtherDevice
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  device_mac: 0adfea67e65b
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              properties:
                device_mac:
                  type: string
                site_id:
                  type: string
              type: object
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgOtherDevice
      tags:
        - Orgs Devices Others
  '/api/v1/orgs/{org_id}/otherdevices/{device_mac}/reboot':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
    post:
      description: Reboot OtherDevice
      operationId: rebootOrgOtherDevice
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: rebootOrgOtherDevice
      tags:
        - Orgs Devices Others
  '/api/v1/orgs/{org_id}/pma/dashboards':
    get:
      description: Get List of premium analytics dashboards for this Org
      operationId: listOrgPmaDashboards
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - name: dashboard_1
                      url: 'https://mist.looker.com/login/embed/%2Fembed%2Fdashboards%2F1?group_ids=%5B3%5D&last_name=%22%22&models=%5B%22generic%22%5D&.....'
              schema:
                items:
                  properties:
                    description:
                      description: description of the dashboard
                      example: Dashboard 1 description
                      type: string
                    label:
                      description: group label name
                      example: Wireless
                      type: string
                    name:
                      description: name of the dashboard
                      example: dashboard_1
                      type: string
                    url:
                      description: url to access dashboard. Url will redirect the user to the dashboard
                      example: 'https://api.mist.com/api/v1/forward/looker?jwt=...'
                      type: string
                  type: object
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgPmaDashboards
      tags:
        - Orgs Premium Analytics
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/pskportals':
    get:
      description: Get List of Org Psk Portals
      operationId: listOrgPskPortals
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/PskPortalsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgPskPortals
      tags:
        - Orgs Psk Portals
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Psk Portal
      operationId: createOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  created_time: 0
                  expire: 0
                  id: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: string
                  required_fields:
                    - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: ./components/schemas/psk_portal.yml
      responses:
        '200':
          $ref: ./components/responses/PskPortal.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgPskPortal
      tags:
        - Orgs Psk Portals
  '/api/v1/orgs/{org_id}/pskportals/logs':
    get:
      description: Get the list of PSK Portals Logs
      operationId: listOrgPskPortalLogs
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/PskPortalLogsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgPskPortalLogs
      tags:
        - Orgs Psk Portals
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/pskportals/logs/count':
    get:
      description: Count by Distinct Attributes of PskPortal Logs
      operationId: countOrgPskPortalLogs
      parameters:
        - in: query
          name: distinct
          schema:
            default: pskportal_id
            enum:
              - admin_id
              - admin_name
              - psk_name
              - psk_id
              - pskportal_id
              - user_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgPskPortalLogs
      tags:
        - Orgs Psk Portals
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/pskportals/logs/search':
    get:
      description: Search Org PSK Portal Logs
      operationId: searchOrgPskPortalLogs
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
        - in: query
          name: psk_name
          schema:
            type: string
        - in: query
          name: psk_id
          schema:
            format: uuid
            type: string
        - in: query
          name: pskportal_id
          schema:
            format: uuid
            type: string
        - description: audit_id
          in: query
          name: id
          schema:
            format: uuid
            type: string
        - in: query
          name: admin_name
          schema:
            type: string
        - in: query
          name: admin_id
          schema:
            format: uuid
            type: string
        - description: name_id used in SSO
          in: query
          name: name_id
          schema:
            format: uuid
            type: string
      responses:
        '200':
          $ref: ./components/responses/PskPortalLogsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgPskPortalLogs
      tags:
        - Orgs Psk Portals
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/pskportals/{pskportal_id}':
    delete:
      description: Delete Org Psk Portal
      operationId: deleteOrgPskPortal
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgPskPortal
      tags:
        - Orgs Psk Portals
    get:
      description: get Org Psk Portal Details
      operationId: getOrgPskPortal
      responses:
        '200':
          $ref: ./components/responses/PskPortal.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgPskPortal
      tags:
        - Orgs Psk Portals
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/pskportal_id.yml
    put:
      description: update Org Psk Portal
      operationId: updateOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  created_time: 0
                  expire: 0
                  id: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: string
                  required_fields:
                    - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: ./components/schemas/psk_portal.yml
      responses:
        '200':
          $ref: ./components/responses/PskPortal.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgPskPortal
      tags:
        - Orgs Psk Portals
  '/api/v1/orgs/{org_id}/psks':
    get:
      description: Get List of Org Psks
      operationId: listOrgPsks
      parameters:
        - example: psk_name
          in: query
          name: name
          schema:
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgPsks
      tags:
        - Orgs Psks
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org PSK
      operationId: createOrgPsk
      parameters:
        - description: 'if a key exists with the same `name`, replace it with the new one'
          in: query
          name: upsert
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/psk.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgPsk
      tags:
        - Orgs Psks
    put:
      description: Update multi PSKs
      operationId: updateOrgMultiPsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - created_time: 0
                    expire_time: 1614990263
                    id: 426f6eca-6286-4993-bfeb-53cbbbba6f07
                    mac: string
                    max_usage: 0
                    modified_time: 0
                    name: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    passphrase: stringst
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    ssid: string
                    usage: multi
                    vlan_id: 0
            schema:
              items:
                $ref: ./components/schemas/psk.yml
              type: array
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgMultiPsks
      tags:
        - Orgs Psks
  '/api/v1/orgs/{org_id}/psks/import':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: "Import PSK from CSV file or JSON\n\n##\_CSV File Format\n```\nPSK Import CSV File Format:\nname,ssid,passphrase,usage,vlan_id,mac,max_usage,role,expire_time,notify_expiry,expiry_notification_time,notify_on_create_or_edit,email\nCommon,warehouse,foryoureyesonly,single,35,a31425f31278,0,student,1618594236\nJustin,reception,visible,multi,1002,200,teacher,1618594236\nCommon2,ssid,1245678-xx,single,35,a31425f31278,0,student,1618594236,true,7,true,admin@test.com\n```"
      operationId: importOrgPsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - created_time: 0
                    expire_time: 1614990263
                    id: 425f6eca-6376-4993-bfeb-53cbbbba6f06
                    mac: string
                    max_usage: 0
                    modified_time: 0
                    name: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    passphrase: stringst
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    ssid: string
                    usage: multi
                    vlan_id: 0
            schema:
              items:
                $ref: ./components/schemas/psk.yml
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importOrgPsks
      tags:
        - Orgs Psks
  '/api/v1/orgs/{org_id}/psks/{psk_id}':
    delete:
      description: Delete Org PSK
      operationId: deleteOrgPsk
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgPsk
      tags:
        - Orgs Psks
    get:
      description: Get Org PSK Details
      operationId: getOrgPsk
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgPsk
      tags:
        - Orgs Psks
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/psk_id.yml
    put:
      description: 'Update Org PSK '
      operationId: updateOrgPsk
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/psk.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgPsk
      tags:
        - Orgs Psks
  '/api/v1/orgs/{org_id}/psks/{psk_id}/delete_old_passphrase':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/psk_id.yml
    post:
      description: |-
        Delete `old_passphrase` from PSK. 
        If successful, response is same as GET, returns the PSK with `old_passphrase` removed.
      operationId: deleteOrgPskOldPassphrase
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgPskOldPassphrase
      tags:
        - Orgs Psks
  '/api/v1/orgs/{org_id}/rftemplates':
    get:
      description: Get List of Org RF Template
      operationId: listOrgRfTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/RftemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgRfTemplates
      tags:
        - Orgs RF Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org RF Template
      operationId: createOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/rftemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Rftemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgRfTemplate
      tags:
        - Orgs RF Templates
  '/api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}':
    delete:
      description: Delete Org RF Template
      operationId: deleteOrgRfTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgRfTemplate
      tags:
        - Orgs RF Templates
    get:
      description: Get Org RF Template Details
      operationId: getOrgRfTemplate
      responses:
        '200':
          $ref: ./components/responses/Rftemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgRfTemplate
      tags:
        - Orgs RF Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/rftemplate_id.yml
    put:
      description: 'Update Org RF Template '
      operationId: updateOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/rftemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Rftemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgRfTemplate
      tags:
        - Orgs RF Templates
  '/api/v1/orgs/{org_id}/sdkclients/{sdkclient_id}':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdkclient_id.yml
    put:
      description: Update SDK Client
      operationId: updateSdkClient
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: John Smith
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSdkClient
      tags:
        - Orgs SDK Clients
  '/api/v1/orgs/{org_id}/sdkinvites':
    get:
      description: Get List of Org SDK Invites
      operationId: listSdkInvites
      responses:
        '200':
          $ref: ./components/responses/SdkinvitesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSdkInvites
      tags:
        - Orgs SDK Clients
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create SDK Invite
      operationId: createSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  name: string
                  quota: 0
                  quota_limited: true
            schema:
              $ref: ./components/schemas/sdkinvite.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sdkinvite.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSdkInvite
      tags:
        - Orgs SDK Clients
  '/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}':
    delete:
      description: Revoke SDK Invite
      operationId: revokeSdkInvite
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: revokeSdkInvite
      tags:
        - Orgs SDK Clients
    get:
      description: Get SDK Invite Details
      operationId: getSdkInvite
      responses:
        '200':
          $ref: ./components/responses/Sdkinvite.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSdkInvite
      tags:
        - Orgs SDK Clients
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdkinvite_id.yml
    put:
      description: Update SDK Invite
      operationId: updateSdkInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sdkinvite.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sdkinvite.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSdkInvite
      tags:
        - Orgs SDK Clients
  '/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/email':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdkinvite_id.yml
    post:
      description: Send SDK Invite by Email
      operationId: sendSdkInviteEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@abc.com
            schema:
              $ref: ./components/schemas/model_object_email.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: sendSdkInviteEmail
      tags:
        - Orgs SDK Clients
  '/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/qrcode':
    get:
      description: Revoke SDK Invite
      operationId: getSdkInviteQrCode
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSdkInviteQrCode
      tags:
        - Orgs SDK Clients
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdkinvite_id.yml
  '/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/sms':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdkinvite_id.yml
    post:
      description: Send SDK Invite by SMS
      operationId: sendSdkInviteSms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  number: '14081234567'
            schema:
              properties:
                number:
                  type: string
              required:
                - number
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: sendSdkInviteSms
      tags:
        - Orgs SDK Clients
  '/api/v1/orgs/{org_id}/sdktemplates':
    get:
      description: Get List of Org SDK Templates
      operationId: listSdkTemplates
      responses:
        '200':
          $ref: ./components/responses/SdktemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSdkTemplates
      tags:
        - Orgs SDK Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create SDK Template
      operationId: createSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sdktemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sdktemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSdkTemplate
      tags:
        - Orgs SDK Templates
  '/api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}':
    delete:
      description: Delete SDK Template
      operationId: deleteSdkTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSdkTemplate
      tags:
        - Orgs SDK Templates
    get:
      description: Get SDK Template Details
      operationId: getSdkTemplate
      responses:
        '200':
          $ref: ./components/responses/Sdktemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSdkTemplate
      tags:
        - Orgs SDK Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sdktemplate_id.yml
    put:
      description: Update SDK Template
      operationId: updateSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sdktemplate.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sdktemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSdkTemplate
      tags:
        - Orgs SDK Templates
  '/api/v1/orgs/{org_id}/secpolicies':
    get:
      description: Get List of Org Security Policies
      operationId: listOrgSecPolicies
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/SecpoliciesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSecPolicies
      tags:
        - Orgs SecPolicies
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Security Policy
      operationId: createOrgSecPolicies
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 0
                  id: 497f6eca-6276-4993-bfeb-53e1bbba6f08
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  wlans:
                    - acct_immediate_update: false
                      acct_interim_interval: 0
                      acct_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1813
                          secret: testing123
                      airwatch:
                        api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                        console_url: 'https://hs1.airwatchportals.com'
                        enabled: true
                        password: user1
                        username: test123
                      allow_ipv6_ndp: true
                      allow_mdns: false
                      allow_ssdp: false
                      ap_ids:
                        - 497f6eca-6276-4993-bfeb-53e2bbba6f08
                      app_limit:
                        apps:
                          dropbox: 300
                          netflix: 60
                        enabled: false
                        wxtag_ids:
                          f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                      app_qos:
                        apps:
                          skype-business-video:
                            dscp: 32
                            dst_subnet: 10.2.0.0/16
                            src_subnet: 10.2.0.0/16
                        enabled: true
                        others:
                          - dscp: 32
                            dst_subnet: 10.2.0.0/16
                            port_ranges: '80,1024-6553'
                            protocol: udp
                            src_subnet: 10.2.0.0/16
                      apply_to: site
                      arp_filter: false
                      auth:
                        anticlog_threshold: 16
                        eap_reauth: false
                        enable_mac_auth: false
                        key_idx: 1
                        keys:
                          - string
                        multi_psk_only: false
                        owe: string
                        pairwise:
                          - wpa2-ccmp
                        private_wlan: true
                        psk: foryoureyesonly
                        type: psk
                        wep_as_secondary_auth: true
                      auth_server_selection: ordered
                      auth_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1812
                          secret: testing123
                      auth_servers_nas_id: 5c5b350e0101-nas
                      auth_servers_nas_ip: 15.3.1.5
                      auth_servers_retries: 5
                      auth_servers_timeout: 5
                      band: string
                      band_steer: false
                      band_steer_force_band5: false
                      bands:
                        - '24'
                        - '5'
                      block_blacklist_clients: false
                      bonjour:
                        additional_vlan_ids:
                          - 0
                        enabled: false
                        services:
                          airplay:
                            radius_groups:
                              - teachers
                            scope: same_ap
                      cisco_cwa:
                        allowed_hostnames:
                          - snapchat.com
                        allowed_subnets:
                          - 63.5.3.0/24
                        blocked_subnets:
                          - 192.168.0.0/16
                        enabled: false
                      client_limit_down: 0
                      client_limit_down_enabled: false
                      client_limit_up: 0
                      client_limit_up_enabled: false
                      coa_servers:
                        - disable_event_timestamp_check: false
                          enabled: false
                          ip: 1.2.3.4
                          port: 3799
                          secret: testing456
                      created_time: 0
                      disable_11ax: false
                      disable_ht_vht_rates: false
                      disable_uapsd: false
                      disable_v1_roam_notify: false
                      disable_v2_roam_notify: false
                      disable_wmm: false
                      dns_server_rewrite:
                        enabled: false
                        radius_groups:
                          contractor: 172.1.1.1
                          guest: 8.8.8.8
                      dtim: 2
                      dynamic_psk:
                        default_psk: foryoureyesonly
                        default_vlan_id: 999
                        enabled: false
                        source: cloud_psks
                        vlan_ids:
                          - 1
                      dynamic_vlan:
                        default_vlan_id: 999
                        enabled: false
                        local_vlan_ids:
                          - 1
                        type: airespace-interface-name
                        vlans:
                          '131': default
                          '322': 'fast,video'
                      enable_local_keycaching: false
                      enable_wireless_bridging: false
                      enabled: true
                      fast_dot1x_timers: false
                      for_site: true
                      hide_ssid: false
                      hostname_ie: false
                      hotspot20:
                        domain_name:
                          - mist.com
                        enabled: true
                        nai_realms:
                          - string
                        operators:
                          - google
                          - att
                        rcoi:
                          - 5A03BA0000
                        venue_name: some_name
                      id: 497f6eca-6276-4993-bfeb-53e3bbba6f08
                      interface: all
                      isolation: false
                      l2_isolation: false
                      legacy_overds: false
                      limit_bcast: false
                      limit_probe_response: true
                      max_idletime: 1800
                      mist_nac:
                        enabled: false
                      modified_time: 0
                      msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                      mxtunnel: {}
                      mxtunnel_ids:
                        - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                      mxtunnel_name:
                        - default
                      no_static_dns: false
                      no_static_ip: false
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      portal:
                        amazon_client_id: string
                        amazon_client_secret: string
                        amazon_email_domains:
                          - string
                        amazon_enabled: false
                        auth: none
                        azure_client_id: string
                        azure_client_secret: string
                        azure_enabled: false
                        azure_tenant_id: string
                        broadnet_password: password
                        broadnet_sid: MIST
                        broadnet_user_id: juniper
                        bypass_when_cloud_down: false
                        clickatell_api_key: string
                        cross_site: false
                        email_enabled: true
                        enabled: false
                        expire: 1440
                        external_portal_url: string
                        facebook_client_id: string
                        facebook_client_secret: string
                        facebook_email_domains:
                          - string
                        facebook_enabled: false
                        forward: false
                        forward_url: 'http://abc.com/promotions'
                        google_client_id: string
                        google_client_secret: string
                        google_email_domains:
                          - mydomain.edu
                          - mydomain.org
                        google_enabled: false
                        gupshup_password: string
                        gupshup_userid: string
                        microsoft_client_id: string
                        microsoft_client_secret: string
                        microsoft_email_domains:
                          - string
                        microsoft_enabled: false
                        passphrase_enabled: false
                        password: let me in
                        portal_allowed_hostnames: string
                        portal_allowed_subnets: string
                        portal_api_secret: string
                        portal_denied_hostnames: string
                        portal_image: 'https://url/to/image.png'
                        portal_sso_url: string
                        predefined_sponsors_enabled: true
                        privacy: true
                        puzzel_password: string
                        puzzel_service_id: string
                        puzzel_username: string
                        smsMessageFormat: string
                        sms_enabled: false
                        sms_provider: twilio
                        sponsor_auto_approve: false
                        sponsor_email_domains:
                          - reserved.net
                          - reserved.org
                        sponsor_enabled: false
                        sponsor_link_validity_duration: 30
                        sponsor_notify_all: false
                        sponsor_status_notify: false
                        sponsors:
                          sponsor1@company.com: FirstName1 LastName1
                          sponsor2@company.com: FirstName2 LastName2
                        sso_default_role: string
                        sso_forced_role: string
                        sso_idp_cert: string
                        sso_idp_sign_algo: string
                        sso_idp_sso_url: string
                        sso_issuer: string
                        sso_nameid_format: email
                        telstra_client_id: string
                        telstra_client_secret: string
                        thumbnail: string
                        twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                        twilio_phone_number: '+18548888888'
                        twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                      portal_allowed_hostnames:
                        - snapchat.com
                        - ibm.com
                      portal_allowed_subnets:
                        - 63.5.3.0/24
                      portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                      portal_denied_hostnames:
                        - msg.snapchat.com
                      portal_image: 'http://example.com'
                      portal_sso_url: string
                      portal_template_url: string
                      qos:
                        class: best_effort
                        overwrite: false
                      radsec:
                        enabled: true
                        idle_timeout: 60
                        mxcluster_ids:
                          - 572586b7-f97b-a22b-526c-8b97a3f609c4
                        proxy_hosts:
                          - mxedge1.local
                        server_name: radsec.abc.com
                        servers:
                          - host: 1.1.1.1
                            port: 1812
                        use_mxedge: true
                        use_site_mxedge: false
                      rateset:
                        '5':
                          ht: 00ff00ff00ff
                          legacy:
                            - '6'
                            - '9'
                            - '12'
                            - '18'
                            - 24b
                            - '36'
                            - '48'
                            - '54'
                          min_rssi: -70
                          template: string
                          vht: 03ff03ff03ff01ff
                        '24':
                          ht: 00ff00ff00ff
                          legacy:
                            - '6'
                            - '9'
                            - '12'
                            - '18'
                            - 24b
                            - '36'
                            - '48'
                            - '54'
                          min_rssi: -70
                          template: string
                          vht: 03ff03ff03ff01ff
                      roam_mode: none
                      schedule:
                        enabled: false
                        hours:
                          fri: '09:00-17:00'
                          mon: '09:00-17:00'
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      sle_excluded: false
                      ssid: corporate
                      template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                      thumbnail: 'http://example.com'
                      use_eapol_v1: false
                      vlan_enabled: false
                      vlan_id: 1
                      vlan_ids:
                        - 3
                        - 4
                        - 5
                      vlan_pooling: false
                      wlan_limit_down: 0
                      wlan_limit_down_enabled: false
                      wlan_limit_up: 0
                      wlan_limit_up_enabled: false
                      wxtag_ids:
                        - 497f6eca-6276-4993-bfeb-53e4bbba6f08
                      wxtunnel_id: string
                      wxtunnel_remote_id: string
            schema:
              $ref: ./components/schemas/secpolicy.yml
      responses:
        '200':
          $ref: ./components/responses/Secpolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSecPolicies
      tags:
        - Orgs SecPolicies
  '/api/v1/orgs/{org_id}/secpolicies/{secpolicy_id}':
    delete:
      description: Delete Org Security Policy
      operationId: deleteOrgSecPolicy
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgSecPolicy
      tags:
        - Orgs SecPolicies
    get:
      description: Get Org Security Policy
      operationId: getOrgSecPolicy
      responses:
        '200':
          $ref: ./components/responses/Secpolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSecPolicy
      tags:
        - Orgs SecPolicies
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/secpolicy_id.yml
    put:
      description: Update Org Security Policy
      operationId: updateOrgSecPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/secpolicy.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Secpolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSecPolicies
      tags:
        - Orgs SecPolicies
  '/api/v1/orgs/{org_id}/servicepolicies':
    get:
      description: Get List of Org Service Policies
      operationId: listOrgServicePolicies
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/ServicePoliciesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgServicePolicies
      tags:
        - Orgs Service Policies
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Serrvice Policy
      operationId: createOrgServicePolicy
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  name: string
                  services:
                    - string
                  tenants:
                    - string
            schema:
              $ref: ./components/schemas/service_policy.yml
      responses:
        '200':
          $ref: ./components/responses/ServicePolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgServicePolicy
      tags:
        - Orgs Service Policies
  '/api/v1/orgs/{org_id}/servicepolicies/{servicepolicy_id}':
    delete:
      description: Delete Org Service Policuy
      operationId: deleteOrgServicePolicy
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgServicePolicy
      tags:
        - Orgs Service Policies
    get:
      description: Get Org Service Policy Details
      operationId: getOrgServicePolicy
      responses:
        '200':
          $ref: ./components/responses/ServicePolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgServicePolicy
      tags:
        - Orgs Service Policies
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/servicepolicy_id.yml
    put:
      description: Update Org Serrvice Policy
      operationId: updateOrgServicePolicy
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  name: string
                  services:
                    - string
                  tenants:
                    - string
            schema:
              $ref: ./components/schemas/service_policy.yml
      responses:
        '200':
          $ref: ./components/responses/ServicePolicy.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgServicePolicy
      tags:
        - Orgs Service Policies
  '/api/v1/orgs/{org_id}/services':
    get:
      description: Get List of Org Services
      operationId: listOrgServices
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/ServicesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgServices
      tags:
        - Orgs Services
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create getOrgServices Service
      operationId: createOrgService
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  app_key: string
                  name: string
                  network_id: d6797cf4-42b9-4cad-8591-9dd91c3f0fc3
                  specs:
                    - address: string
                      port: 0
                      protocol: any
                  subnet: string
                  type: custom
            schema:
              $ref: ./components/schemas/service.yml
      responses:
        '200':
          $ref: ./components/responses/Service.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgService
      tags:
        - Orgs Services
  '/api/v1/orgs/{org_id}/services/{service_id}':
    delete:
      description: deleteOrgService
      operationId: deleteOrgService
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgService
      tags:
        - Orgs Services
    get:
      description: Get Org Service
      operationId: getOrgService
      responses:
        '200':
          $ref: ./components/responses/Service.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgService
      tags:
        - Orgs Services
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/service_id.yml
    put:
      description: update Org Service
      operationId: updateOrgService
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  addresses:
                    - string
                  app_caetgories:
                    - string
                  apps:
                    - string
                  dscp: 0
                  failover_policy: revertable
                  hostnames:
                    - string
                  max_jitter: 0
                  max_latency: string
                  max_loss: 0
                  name: string
                  sle_enabled: false
                  specs:
                    - port_range: '0'
                      protocol: any
                  traffic_class: best_effort
                  traffic_type: data_best_effort
                  type: custom
                  vpn_name: addresses
            schema:
              $ref: ./components/schemas/service.yml
      responses:
        '200':
          $ref: ./components/responses/Service.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgService
      tags:
        - Orgs Services
  '/api/v1/orgs/{org_id}/setting':
    get:
      description: Get Org Settings
      operationId: getOrgSettings
      responses:
        '200':
          $ref: ./components/responses/OrgSetting.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSettings
      tags:
        - Orgs Setting
    parameters:
      - $ref: ./components/parameters/org_id.yml
    put:
      description: Update Org Settings
      operationId: updateOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/org_setting.yml
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    auto_device_naming:
                      enable: true
                      rules:
                        - expression: string
                          model: string
                          prefix: string
                          src: name
                          subnet: string
                          suffix: string
                          value: string
                    auto_deviceprofile_assignment:
                      enable: true
                      rules:
                        - expression: string
                          model: string
                          prefix: string
                          src: name
                          subnet: string
                          suffix: string
                          value: string
                    auto_site_assignment:
                      enable: true
                      rules:
                        - expression: string
                          model: string
                          prefix: string
                          src: name
                          subnet: string
                          suffix: string
                          value: string
                    cacerts:
                      - string
                    cloudshark:
                      apitoken: string
                      url: string
                    created_time: 0
                    device_cert:
                      cert: string
                      key: string
                    disable_pcap: true
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    installer:
                      allow_all_sites: true
                      extra_site_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      grace_period: 0
                    mgmt:
                      mxtunnel_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      use_mxtunnel: true
                      use_wxtunnel: true
                    modified_time: 0
                    msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    password_policy:
                      enabled: true
                      freshness: 0
                      min_length: 8
                      requires_special_char: true
                      requires_two_factor_auth: true
                    pcap:
                      bucket: string
                      max_pkt_len: 0
                    pcap_bucket_verified: true
                    remote_syslog:
                      enabled: true
                      send_to_all_servers: true
                      servers:
                        - facility: change-log
                          host: string
                          port: 0
                          protocol: udp
                          severity: critical
                          tag: string
                    security:
                      disable_local_ssh: true
                      fips_zeroize_password: string
                      limit_ssh_access: true
                    tags:
                      - string
                    ui_idle_timeout: 0
              schema:
                $ref: ./components/schemas/org_setting.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSettings
      tags:
        - Orgs Setting
  '/api/v1/orgs/{org_id}/setting/blacklist':
    delete:
      description: Delete Org Blacklist Station Clients
      operationId: deleteOrgWirelessClientsBlocklist
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWirelessClientsBlocklist
      tags:
        - Orgs Setting
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |
        Create Org Blacklist Client List. 

        If there is already a blacklist, this API will replace it with the new one. 

        Max number of blacklist clients is 1000. 

        Retrieve the current blacklisted clients from `blacklist_url` under Org:Setting
      operationId: createOrgWirelessClientsBlocklist
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 18-65-90-de-f4-c6
                    - 84-89-ad-5d-69-0d
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/MacsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWirelessClientsBlocklist
      tags:
        - Orgs Setting
  '/api/v1/orgs/{org_id}/setting/cradlepoint/setup':
    delete:
      description: This deletes the Cradlepoint integration in Mist
      operationId: deleteOrgCradlepointConnection
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgCradlepointConnection
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: This sets up cradlepoint webhooks to send events to Mist
      operationId: setupOrgCradlepointConnectionToMist
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              properties:
                cp_api_id:
                  example: 84446d61-2206-4ea5-855a-0043f980be54
                  type: string
                cp_api_key:
                  example: 79c329da9893e34099c7d8ad5cb9c941
                  type: string
                ecm_api_id:
                  example: 73446d61-2206-4ea5-855a-0043f980be62
                  type: string
                ecm_api_key:
                  example: 68b329da9893e34099c7d8ad5cb9c9405
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setupOrgCradlepointConnectionToMist
      tags:
        - Orgs Devices Others
    put:
      description: This updates the Cradlepoint integration settings in Mist
      operationId: updateOrgCradlepointConnectionToMist
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cp_api_id: 84446d61-2206-4ea5-855a-0043f980be54
                  cp_api_key: 79c329da9893e34099c7d8ad5cb9c941
                  ecm_api_id: 73446d61-2206-4ea5-855a-0043f980be62
                  ecm_api_key: 68b329da9893e34099c7d8ad5cb9c9405
            schema:
              properties:
                cp_api_id:
                  type: string
                cp_api_key:
                  type: string
                ecm_api_id:
                  type: string
                ecm_api_key:
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgCradlepointConnectionToMist
      tags:
        - Orgs Devices Others
  '/api/v1/orgs/{org_id}/setting/cradlepoint/sync':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: This syncs cradlepoint devices with Mist. We’ll also attempt to use the LLDP data from cradlepoint to identify the linkage against Mist Site / Device
      operationId: syncOrgCradlepointRouters
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: syncOrgCradlepointRouters
      tags:
        - Orgs Devices Others
  '/api/v1/orgs/{org_id}/setting/jse/info':
    get:
      description: Retrieves the list of JSE orgs associated with the account.
      operationId: getOrgJseInfo
      responses:
        '200':
          $ref: ./components/responses/JseInfo.yml
      summary: getOrgJseInfo
      tags:
        - Orgs JSE
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/setting/jse/setup':
    delete:
      description: Delete JSE credential
      operationId: deleteOrgJsecCredential
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgJsecCredential
      tags:
        - Orgs JSE
    get:
      description: Get Org JSE Credential
      operationId: getOrgJsecCredential
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    cloud_name: devcentral.juniperclouds.net
                    username: john@abc.com
              schema:
                properties:
                  cloud_name:
                    example: devcentral.juniperclouds.net
                    type: string
                  username:
                    example: john@abc.com
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgJsecCredential
      tags:
        - Orgs JSE
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        in JSE UI: 
        1. Create custom role with Read access to service-location and RW access to site and IPSec profile APIs. 
        2. Create a user with the above custom role. - email: john@abc.com 
        3. Activate the user in the JSE account. 
        4. Create the service locations on the JSE account.
      operationId: setupOrgJsecCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cloud_name: devcentral.juniperclouds.net
                  password: foryoureyesonly
                  username: john@abc.com
            schema:
              properties:
                cloud_name:
                  example: devcentral.juniperclouds.net
                  type: string
                password:
                  example: foryoureyesonly
                  type: string
                username:
                  example: john@abc.com
                  type: string
              required:
                - username
                - password
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    cloud_name: devcentral.juniperclouds.net
                    username: john@abc.com
              schema:
                properties:
                  cloud_name:
                    example: devcentral.juniperclouds.net
                    type: string
                  username:
                    example: john@abc.com
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setupOrgJsecCredential
      tags:
        - Orgs JSE
  '/api/v1/orgs/{org_id}/setting/juniper/link_accounts':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Link Juniper Accounts
      operationId: linkOrgToJuniperJuniperAccount
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: password
                  username: john@nmo.com
            schema:
              $ref: ./components/schemas/account_juniper_write.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    account:
                      linked_by: John Smith (john@abccorp.com)
                      name: ABC Corp
              schema:
                $ref: ./components/schemas/account_juniper_read.yml
          description: account linked
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    detail: 'Account[ABC Corp] already linked'
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: account already linked
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: linkOrgToJuniperJuniperAccount
      tags:
        - Orgs
  '/api/v1/orgs/{org_id}/setting/juniper/unlink_account':
    delete:
      description: |-
        Unlink Juniper Customer ID
        `linked_by` field is only required if there are duplicate account_names.
      operationId: unlinkOrgFromJuniperCustomerId
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account:
                    linked_by: John Smith (john@abccorp.com)
                    name: ABC Corp
            schema:
              $ref: ./components/schemas/account_juniper_read.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unlinkOrgFromJuniperCustomerId
      tags:
        - Orgs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/setting/mist_nac_crls':
    get:
      description: Returns all uploaded CRL file IDs with names for the orgI
      operationId: get-api-v1-orgs-org_id-setting-mist_nac_crls
      responses:
        '200':
          $ref: ./components/responses/NacCrlFilesArray.yml
      summary: getOrgNacCrl
      tags:
        - Orgs NAC CRL
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Import NAC Org CRL file is a multipart POST which has a .crl file to allow user to manually upload a Certificate Revocation List file. We support one file upload per Issuer. Re-uploads for the same issuer will overwrite the existing file.
      operationId: importOrgNacCrl
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: a binary .crl file
                  format: binary
                  type: string
                json:
                  description: json string with name for .crl file (optional)
                  type: string
              type: object
        description: ''
      responses:
        '200':
          $ref: ./components/responses/NacCrlFile.yml
      summary: importOrgNacCrl
      tags:
        - Orgs NAC CRL
  '/api/v1/orgs/{org_id}/setting/mist_nac_crls/{naccrl_id}':
    delete:
      description: Delete NAC Org CRL file is a DELETE request to delete CRL file identified by its ID (ID assigned on file upload/creation)
      operationId: deleteOrgNacCrl
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: deleteOrgNacCrl
      tags:
        - Orgs NAC CRL
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/naccrl_id.yml
  '/api/v1/orgs/{org_id}/setting/pcap_bucket/setup':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Provide Customer Bucket Name

        Setting up Custom PCAP Bucket Involves the following:
        * provide the bucket name
        * we’ll attempt to write a file MIST_TOKEN
        * you have to verify the ownership of the bucket by providing the content of the MIST_TOKEN
      operationId: setOrgCustomBucket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bucket: company-private-pcap
            schema:
              properties:
                bucket:
                  type: string
              required:
                - bucket
              type: object
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                Failed:
                  value:
                    bucket: company-private-pcap
                    detail: failed to write bucket - 403 AccessDenied
                Success:
                  value: {}
              schema:
                properties:
                  bucket:
                    type: string
                  detail:
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setOrgCustomBucket
      tags:
        - Orgs Setting
  '/api/v1/orgs/{org_id}/setting/pcap_bucket/verify':
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Verify Customer PCAP Bucket

        **Note**: If successful, a “VERIFIED” file will be created in the bucket
      operationId: verifyOrgCustomBucket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bucket: company-private-pcap
                  verify_token: eyJhbGciOiJIUzI1J9.eyJzdWIiOiIxMjM0joiMjgxOG5MDIyfQ.2rzcRvMA3Eg09NnjCAC-1EWMRtxAnFDM
            schema:
              properties:
                bucket:
                  type: string
                verify_token:
                  type: string
              required:
                - bucket
                - verify_token
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifyOrgCustomBucket
      tags:
        - Orgs Setting
  '/api/v1/orgs/{org_id}/setting/zscaler/setup':
    delete:
      description: |
        To delete Zscaler credential
      operationId: deleteOrgZscalerCredential
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgZscalerCredential
      tags:
        - Orgs Devices Zscaler
    get:
      description: To get Zscaler credential
      operationId: getOrgZscalerCredential
      responses:
        '200':
          $ref: ./components/responses/ZscalerAccount.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgZscalerCredential
      tags:
        - Orgs Devices Zscaler
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |
        To setup Zscaler credential
      operationId: setupOrgZscalerCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cloud_name: zscalerbeta.net
                  parnter_key: K35vrZcK3JvrZc
                  password: password
                  username: john@nmo.com
            schema:
              $ref: ./components/schemas/account_zscaler_write.yml
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setupOrgZscalerCredential
      tags:
        - Orgs Devices Zscaler
  '/api/v1/orgs/{org_id}/setting/{app_name}/link_accounts':
    delete:
      description: Delete Org Level OAuth Application Authorization With Mist Portal
      operationId: deleteOrgOauthAppAuthorization
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account_id: iojzXIJWEuiD73ZvydOfg
            schema:
              properties:
                account_id:
                  description: 'Required for OAuth Apps: `app_name`==`zoom`, `app_name`==`teams` or `app_name`==`intune`. account id'
                  type: string
              type: object
      responses:
        '200':
          description: Successful
        '400':
          description: Unsuccessful
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgOauthAppAuthorization
      tags:
        - Orgs Linked Applications
    get:
      description: Get Org Level OAuth Application Linked Status
      operationId: getOrgOauthAppLinkedStatus
      parameters:
        - description: Mist portal url to which backend needs to redirect after succesful OAuth authorization. **Required** to get the `authorization_url`
          in: query
          name: forward
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/OauthAppLink.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgOAuthAppAuthorizationUrl
      tags:
        - Orgs Linked Applications
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - description: OAuth application name
        in: path
        name: app_name
        required: true
        schema:
          enum:
            - zomm
            - teams
            - intune
            - jamf
            - vmware
          type: string
    post:
      description: 'Add Jamf, VMware Authorization With Mist Portal'
      operationId: addOrgOauthAppAccounts
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: ./components/schemas/account_jamf_write.yml
                - $ref: ./components/schemas/account_vmware_write.yml
      responses:
        '200':
          description: Successful
        '400':
          description: Unsuccessful
      summary: addOrgOauthAppAccounts
      tags:
        - Orgs Linked Applications
    put:
      description: |-
        Update Zoom, Teams, Intune Authorization.

        Request Payload, These Field And Values Will Be Specific To Each Of The Third Party Apps Accounts.
      operationId: updateOrgOauthAppAccounts
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account_id: iojzXIJWEuiD73ZvydOfg
                  max_daily_api_requests: 5000
            schema:
              $ref: ./components/schemas/account_oauth_write.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: updateOrgOauthAppAccounts
      tags:
        - Orgs Linked Applications
  '/api/v1/orgs/{org_id}/sitegroups':
    get:
      description: Get List of Org Site Groups
      operationId: listOrgSiteGroups
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/SitegroupsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSiteGroups
      tags:
        - Orgs Sitegroups
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Site Group
      operationId: createOrgSiteGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
            schema:
              $ref: ./components/schemas/sitegroup.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sitegroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSiteGroup
      tags:
        - Orgs Sitegroups
  '/api/v1/orgs/{org_id}/sitegroups/{sitegroup_id}':
    delete:
      description: Delete Org Site Group
      operationId: deleteOrgSiteGroup
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgSiteGroup
      tags:
        - Orgs Sitegroups
    get:
      description: Get Org Site Group
      operationId: getOrgSiteGroup
      responses:
        '200':
          $ref: ./components/responses/Sitegroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSiteGroup
      tags:
        - Orgs Sitegroups
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sitegroup_id.yml
    put:
      description: Update Org Site Group
      operationId: updateOrgSiteGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
            schema:
              properties:
                id:
                  format: uuid
                  type: string
                name:
                  type: string
              required:
                - id
                - name
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sitegroup.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSiteGroup
      tags:
        - Orgs Sitegroups
  '/api/v1/orgs/{org_id}/sites':
    get:
      description: Get List of Org Sites
      operationId: listOrgSites
      parameters:
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/SitesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSites
      tags:
        - Orgs Sites
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Site
      operationId: createOrgSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  address: '1601 S. Deanza Blvd., Cupertino, CA, 95014'
                  alarmtemplate_id: 684dfc5c-fe77-2290-eb1d-ef3d677fe168
                  apporttemplate_id: string
                  aptemplate_id: 16bdf952-ade2-4491-80b0-85ce506c760b
                  country_code: US
                  gatewaytemplate_id: 6f9b2e75-9b2f-b5ae-81e3-e14c76f1a90f
                  latlng:
                    lat: 37.295833
                    lng: -122.032946
                  name: Mist Office
                  networktemplate_id: 12ae9bd2-e0ab-107b-72e8-a7a005565ec2
                  notes: string
                  rftemplate_id: bb8a9017-1e36-5d6c-6f2b-551abe8a76a2
                  secpolicy_id: 3bcd0beb-5d0a-4cbd-92c1-14aea91e98ef
                  sitegroup_ids:
                    - 497f6eca-6276-4997-bfeb-53cbbbba6f3b
                  timezone: America/Los_Angeles
            schema:
              $ref: ./components/schemas/site.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Site.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSite
      tags:
        - Orgs Sites
  '/api/v1/orgs/{org_id}/sites/count':
    get:
      description: Count Sites
      operationId: countOrgSites
      parameters:
        - in: query
          name: distinct
          schema:
            default: id
            enum:
              - analytic_enabled
              - app_waking
              - asset_enabled
              - auto_upgrade_enabled
              - auto_upgrade_version
              - country_code
              - honeypot_enabled
              - id
              - locate_unconnected
              - mesh_enabled
              - name
              - rogue_enabled
              - remote_syslog_enabled
              - rtsa_enabled
              - vna_enabled
              - wifi_enabled
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgSites
      tags:
        - Orgs Sites
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/sites/search':
    get:
      description: Search Sites
      operationId: searchOrgSites
      parameters:
        - description: if Advanced Analytic feature is enabled
          in: query
          name: analytic_enabled
          schema:
            type: boolean
        - description: if App Waking feature is enabled
          in: query
          name: app_waking
          schema:
            type: boolean
        - description: if Asset Tracking is enabled
          in: query
          name: asset_enabled
          schema:
            type: boolean
        - description: if Auto Upgrade feature is enabled
          in: query
          name: auto_upgrade_enabled
          schema:
            type: boolean
        - description: if Auto Upgrade feature is enabled
          in: query
          name: auto_upgrade_version
          schema:
            type: string
        - description: site country code
          in: query
          name: country_code
          schema:
            type: string
        - description: if Honeypot detection is enabled
          in: query
          name: honeypot_enabled
          schema:
            type: boolean
        - description: site id
          in: query
          name: id
          schema:
            type: string
        - description: if unconnected client are located
          in: query
          name: locate_unconnected
          schema:
            type: boolean
        - description: if Mesh feature is enabled
          in: query
          name: mesh_enabled
          schema:
            type: boolean
        - description: site name
          in: query
          name: name
          schema:
            type: string
        - description: if Rogue detection is enabled
          in: query
          name: rogue_enabled
          schema:
            type: boolean
        - description: if Remote Syslog is enabled
          in: query
          name: remote_syslog_enabled
          schema:
            type: boolean
        - description: if managed mobility feature is enabled
          in: query
          name: rtsa_enabled
          schema:
            type: boolean
        - description: if Virtual Network Assistant is enabled
          in: query
          name: vna_enabled
          schema:
            type: boolean
        - description: if WIFI feature is enabled
          in: query
          name: wifi_enabled
          schema:
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SitesSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgSites
      tags:
        - Orgs Sites
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/sites/{site_name}/maps/import':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/site_name.yml
    post:
      description: |-
        Import data from files is a multipart POST which has a file, an optional json, and an optional csv, to create floorplan, assign matching inventory to specific site, place ap if name or mac matches

        #### Request

        ```
        "json": a JSON string describing your upload
        "file": a binary file
        ```
      operationId: importOrgMapToSite
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: true
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    vendor_name: ekahau
            schema:
              $ref: ./components/schemas/import_site_map.yml
        description: |-
          a JSON string, site id required, vendor option: ekahau, ibwave, etc., import_all_floorplans: optional, default: false, import_height: optional, default: true, import_orientation: optional, default: true
          "file": a binary file, option: .esx
          "csv": a csv file for ap name mapping, optional
      responses:
        '200':
          $ref: ./components/responses/MapImport.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importOrgMapToSite
      tags:
        - Orgs Sites
  '/api/v1/orgs/{org_id}/sitetemplates':
    get:
      description: Get List of Org Site Templates
      operationId: listOrgSiteTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/SiteTemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSiteTemplates
      tags:
        - Orgs Site Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Site Template
      operationId: createOrgSiteTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sitetemplate.yml
      responses:
        '200':
          $ref: ./components/responses/SiteTemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSiteTemplates
      tags:
        - Orgs Site Templates
  '/api/v1/orgs/{org_id}/sitetemplates/{sitetemplate_id}':
    delete:
      description: Delete Org Site Template
      operationId: deleteOrgSiteTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgSiteTemplate
      tags:
        - Orgs Site Templates
    get:
      description: Get Org Site Template
      operationId: getOrgSiteTemplate
      responses:
        '200':
          $ref: ./components/responses/SiteTemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSiteTemplate
      tags:
        - Orgs Site Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sitetemplate_id.yml
    put:
      description: Update Org Site Template
      operationId: updateOrgSiteTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sitetemplate.yml
      responses:
        '200':
          $ref: ./components/responses/SiteTemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSiteTemplate
      tags:
        - Orgs Site Templates
  '/api/v1/orgs/{org_id}/ssoroles':
    get:
      description: Get List of Org SSO Roles
      operationId: listOrgSsoRoles
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/SsorolesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSsoRoles
      tags:
        - Orgs SSO Roles
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org SSO Role
      operationId: createOrgSsoRole
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/ssorole.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ssorole.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSsoRole
      tags:
        - Orgs SSO Roles
  '/api/v1/orgs/{org_id}/ssoroles/{ssorole_id}':
    delete:
      description: Delete Org SSO Role
      operationId: deleteOrgSsoRole
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgSsoRole
      tags:
        - Orgs SSO Roles
    get:
      description: Get Org SSO Role Details
      operationId: getOrgSsoRole
      responses:
        '200':
          $ref: ./components/responses/Ssorole.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSsoRole
      tags:
        - Orgs SSO Roles
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/ssorole_id.yml
    put:
      description: Update Org SSO Role
      operationId: updateOrgSsoRole
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  privileges:
                    - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      msp_name: string
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      org_name: string
                      orggroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      role: admin
                      scope: org
                      site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      sitegroup_ids:
                        - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: ./components/schemas/ssorole.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ssorole.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSsoRole
      tags:
        - Orgs SSO Roles
  '/api/v1/orgs/{org_id}/ssos':
    get:
      description: Get List of Org SSO Configuration
      operationId: listOrgSsos
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/SsosArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSsos
      tags:
        - Orgs SSO
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org SSO Configuration
      operationId: createOrgSso
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  custom_logout_url: string
                  idp_cert: string
                  idp_sign_algo: string
                  idp_sso_url: string
                  ignore_unmatched_roles: true
                  issuer: string
                  name: string
                  nameid_format: email
            schema:
              $ref: ./components/schemas/sso.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgSso
      tags:
        - Orgs SSO
  '/api/v1/orgs/{org_id}/ssos/{sso_id}':
    delete:
      description: Delete Org SSO Configuration
      operationId: deleteOrgSso
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgSso
      tags:
        - Orgs SSO
    get:
      description: Get Org SSO Configuration Details
      operationId: getOrgSso
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSso
      tags:
        - Orgs SSO
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sso_id.yml
    put:
      description: Update Org SSO Configuration
      operationId: updateOrgSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/sso.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Sso.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgSso
      tags:
        - Orgs SSO
  '/api/v1/orgs/{org_id}/ssos/{sso_id}/failures':
    get:
      description: Get List of Org SSO Latest Failures
      operationId: listOrgSsoLatestFailures
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SsoLatestFailures.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSsoLatestFailures
      tags:
        - Orgs SSO
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/orgs/{org_id}/ssos/{sso_id}/metadata':
    get:
      description: Get Org SSO SAML Metadata
      operationId: getOrgSsoSamlMetadata
      responses:
        '200':
          $ref: ./components/responses/SsoSamlMetadata.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgSsoSamlMetadata
      tags:
        - Orgs SSO
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/orgs/{org_id}/ssos/{sso_id}/metadata.xml':
    get:
      description: |-
        Download Org SSO SAML Metdata

        Example of metadata.xml:
        ```xml
        <?xml version="1.0" encoding="UTF-8"?><md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://api.mist.com/api/v1/saml/5hdF5g/login" validUntil="2027-10-12T21:59:01Z" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
            <md:SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
                <md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/logout" />
                <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>
                <md:AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://api.mist.com/api/v1/saml/5hdF5g/login" index="0" isDefault="true"/>
                <md:AttributeConsumingService index="0">
                    <md:ServiceName xml:lang="en-US">Mist</md:ServiceName>
                    <md:RequestedAttribute Name="Role" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="true"/>
                    <md:RequestedAttribute Name="FirstName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
                    <md:RequestedAttribute Name="LastName" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic" isRequired="false"/>
                </md:AttributeConsumingService>
            </md:SPSSODescriptor>
        </md:EntityDescriptor>
        ```
      operationId: downloadOrgSsoSamlMetadata
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: downloadOrgSsoSamlMetadata
      tags:
        - Orgs SSO
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/sso_id.yml
  '/api/v1/orgs/{org_id}/ssr/upgrade':
    get:
      description: Get List of Org SSR Upgrades
      operationId: listOrgSsrUpgrades
      responses:
        '200':
          $ref: ./components/responses/SsrUpgradesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgSsrUpgrades
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Upgrade Org SSRs
      operationId: upgradeOrgSsrs
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  device_ids:
                    - 00000000-0000-0000-1000-5c5b3500001f
                    - 00000000-0000-0000-1000-5c5b35000020
                  strategy: big_bang
                  version: 5.3.0-93
            schema:
              properties:
                channel:
                  default: stable
                  description: upgrade channel to follow
                  enum:
                    - stable
                    - beta
                    - alpha
                  minLength: 1
                  type: string
                device_ids:
                  description: list of 128T device IDs to upgrade
                  items:
                    format: uuid
                    type: string
                  type: array
                reboot_at:
                  description: 'reboot start time in epoch seconds, default is start_time, -1 disables reboot'
                  type: integer
                start_time:
                  description: '128T firmware download start time in epoch seconds, default is now, -1 disables download'
                  type: integer
                strategy:
                  default: big_bang
                  description: |-
                    * `big_bang`: upgrade all at once
                    * `serial`: one at a time
                  enum:
                    - big_bang
                    - serial
                  minLength: 1
                  type: string
                version:
                  description: 128T firmware version to upgrade (e.g. 5.3.0-93)
                  minLength: 1
                  type: string
              required:
                - device_ids
              type: object
      responses:
        '200':
          $ref: ./components/responses/SsrUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeOrgSsrs
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/ssr/upgrade/{upgrade_id}/cancel':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
    post:
      description: |
        Best effort to cancel an upgrade. Devices which are already upgraded wont be touched↵
      operationId: cancelOrgSsrUpgrade
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: cancelOrgSsrUpgrade
      tags:
        - Orgs Devices Upgrades
  '/api/v1/orgs/{org_id}/ssr/versions':
    get:
      description: Get available version for SSR
      operationId: listOrgAvailableSsrVersions
      parameters:
        - in: query
          name: channel
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - _version: 128T-5.3.1-17.el7.x86_64
                      default: true
                      package: 128T
                      version: 5.3.1-17
                    - _version: 128T-wheeljack-0.1.0-1212.x86_64
                      package: 128T-wheeljack
                      version: 0.1.0-1212
              schema:
                items:
                  properties:
                    _version:
                      type: string
                    default:
                      type: boolean
                    package:
                      minLength: 1
                      type: string
                    version:
                      minLength: 1
                      type: string
                  required:
                    - package
                    - version
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAvailableSsrVersions
      tags:
        - Orgs Devices Upgrades
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats':
    get:
      description: Get Org Stats
      operationId: getOrgStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/OrgStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgStats
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/assets':
    get:
      description: Get List of Org Assets Stats
      operationId: listOrgAssetsStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArrayStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgAssetsStats
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/assets/count':
    get:
      description: Count Org Assets
      operationId: countOrgAssetsByDistanceField
      parameters:
        - in: query
          name: distinct
          schema:
            enum:
              - site_id
              - mac
              - map_id
              - ibeacon_uuid
              - ibeacon_major
              - ibeacon_minor
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgAssetsByDistanceField
      tags:
        - Orgs Assets
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/assets/search':
    get:
      description: Search for Org Assets
      operationId: searchOrgAssets
      parameters:
        - in: query
          name: site_id
          schema:
            format: uuid
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: device_name
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: map_id
          schema:
            format: uuid
            type: string
        - in: query
          name: ibeacon_uuid
          schema:
            format: uuid
            type: string
        - in: query
          name: ibeacon_major
          schema:
            type: string
        - in: query
          name: ibeacon_minor
          schema:
            type: string
        - in: query
          name: eddystone_uid_namespace
          schema:
            type: string
        - in: query
          name: eddystone_uid_instance
          schema:
            type: string
        - in: query
          name: eddystone_url
          schema:
            type: string
        - in: query
          name: ap_mac
          schema:
            type: string
        - in: query
          name: beam
          schema:
            type: integer
        - in: query
          name: rssi
          schema:
            type: integer
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArrayStatsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgAssets
      tags:
        - Orgs Assets
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/bgp_peers/count':
    get:
      description: Count Org BGP Stats
      operationId: countOrgBgpStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: mac
                    end: 1619519007.8000295
                    limit: 10
                    results:
                      - count: 2
                        mac: 02000111d2dc
                    start: 1619518707.800029
                    total: 1
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: number
                  limit:
                    type: integer
                  results:
                    items:
                      properties:
                        count:
                          type: integer
                        mac:
                          type: string
                      type: object
                    type: array
                  start:
                    type: number
                  total:
                    type: integer
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgBgpStats
      tags:
        - Orgs Devices Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/bgp_peers/search':
    get:
      description: Search Org BGP Stats
      operationId: searchOrgBgpStats
      responses:
        '200':
          $ref: ./components/responses/BgpStatsArraySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgBgpStats
      tags:
        - Orgs Devices Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/devices':
    get:
      description: |-
        Get List of Org Devices stats
        This API renders some high-level device stats, pagination is assumed and returned in response header (as the response is an array)
      operationId: listOrgDevicesStats
      parameters:
        - in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
              - all
            type: string
        - in: query
          name: status
          schema:
            default: all
            enum:
              - all
              - connected
              - disconnected
            type: string
        - in: query
          name: site_id
          schema:
            format: uuid
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - description: EVPN Topology ID
          in: query
          name: evpntopo_id
          schema:
            format: uuid
            type: string
        - description: 'if `evpn_unused`==`true`, find EVPN eligible switches which don’t belong to any EVPN Topology yet'
          in: query
          name: evpn_unused
          schema:
            type: string
        - $ref: ./components/parameters/fields.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/DevicesArrayStatsOrg.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgDevicesStats
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/mxedges':
    get:
      description: Get List of Org MxEdge Stats
      operationId: listOrgMxEdgesStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - description: filter for site level mist edges
          in: query
          name: for_site
          schema:
            default: 'false'
            enum:
              - 'true'
              - 'false'
              - any
            type: string
      responses:
        '200':
          $ref: ./components/responses/MxedgesArrayStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgMxEdgesStats
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/mxedges/{mxedge_id}':
    get:
      description: Get Org MxEdge Details Stats
      operationId: getOrgMxEdgeStats
      responses:
        '200':
          $ref: ./components/responses/MxedgeStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgMxEdgeStats
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
  '/api/v1/orgs/{org_id}/stats/otherdevices/{device_mac}':
    get:
      description: Get Otherdevice Stats
      operationId: getOrgOtherDeviceStats
      responses:
        '200':
          $ref: ./components/responses/DeviceOtherStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgOtherDeviceStats
      tags:
        - Orgs Devices Others
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/device_mac.yml
  '/api/v1/orgs/{org_id}/stats/ports/search':
    get:
      description: Search Switch / Gateway Ports
      operationId: searchOrgSwOrGwPorts
      parameters:
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Output errors
          in: query
          name: tx_errors
          schema:
            type: integer
        - description: Input errors
          in: query
          name: rx_errors
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: Limit on number of dynamically learned macs
          in: query
          name: mac_limit
          schema:
            type: integer
        - description: Number of mac addresses in the forwarding table
          in: query
          name: mac_count
          schema:
            type: integer
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: if `up`==`true` && has Authenticator role
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/PortStatsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgSwOrGwPorts
      tags:
        - Orgs Devices Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/switch_ports/count':
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countOrgSwitchPorts
      parameters:
        - description: 'port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up'
          in: query
          name: distinct
          schema:
            default: mac
            enum:
              - port_id
              - port_mac
              - full_duplex
              - mac
              - neighbor_mac
              - neighbor_port_desc
              - neighbor_system_name
              - poe_disabled
              - poe_mode
              - poe_on
              - speed
              - up
            type: string
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: if `up`==`true`
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: mac
                    end: 1513177200
                    limit: 100
                    results:
                      - count: 217
                        mac: '112233445566'
                      - count: 35
                        mac: '001122334455'
                    start: 1511967600
                    total: 20
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: integer
                  limit:
                    type: integer
                  results:
                    items:
                      properties:
                        count:
                          type: integer
                        mac:
                          type: string
                      required:
                        - count
                        - mac
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - start
                  - end
                  - limit
                  - distinct
                  - total
                  - results
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgSwitchPorts
      tags:
        - Orgs Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/tunnels/count':
    get:
      description: Count Mist Tunnels Stats
      operationId: countOrgTunnelsStats
      parameters:
        - description: |-
            - If `type`==`wxtunnel`: wxtunnel_id / ap / remote_ip / remote_port / state / mxedge_id / mxcluster_id / site_id / peer_mxedge_id; default is wxtunnel_id 
            - If `type`==`wan`: mac / site_id / node / peer_ip / peer_host/ ip / tunnel_name / protocol / auth_algo / encrypt_algo / ike_version / last_event / up
          in: query
          name: distinct
          schema:
            enum:
              - auth_algo
            type: string
        - in: query
          name: type
          schema:
            default: wxtunnel
            enum:
              - wxtunnel
              - wan
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgTunnelsStats
      tags:
        - Orgs Tunnels Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/tunnels/search':
    get:
      description: Search Org Tunnels Stats
      operationId: searchOrgTunnelsStats
      parameters:
        - description: if `type`==`wxtunnel`
          in: query
          name: mxcluster_id
          schema:
            type: string
        - in: query
          name: site_id
          schema:
            type: string
        - description: if `type`==`wxtunnel`
          in: query
          name: wxtunnel_id
          schema:
            type: string
        - description: if `type`==`wxtunnel`
          in: query
          name: ap
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: mac
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: node
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: peer_ip
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: peer_host
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: ip
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: tunnel_name
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: protocol
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: auth_algo
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: encrypt_algo
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: ike_version
          schema:
            type: string
        - description: if `type`==`wan`
          in: query
          name: up
          schema:
            type: string
        - in: query
          name: type
          schema:
            default: wxtunnel
            enum:
              - wxtunnel
              - wan
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/TunnelsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgTunnelsStats
      tags:
        - Orgs Tunnels Stats
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/vpn_peers/count':
    get:
      description: Count Org Peer Path Statgs
      operationId: countOrgPeerPathStats
      parameters:
        - in: query
          name: distinct
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgPeerPathStats
      tags:
        - Orgs VPNs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/stats/vpn_peers/search':
    get:
      description: Search Org Peer Path Stats
      operationId: searchOrgPeerPathStats
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1619518989.4989712
                    limit: 10
                    results:
                      - auth_algo: hmac-sha1-96
                        enc_algo: aes-cbc-128
                        ike_version: '1'
                        is_active: true
                        last_seen: 1619518709.222
                        mac: 020001c04668
                        org_id: 0c160b7f-1027-4cd1-923b-744534c4b070
                        peer_mac: 020001367edd
                        peer_port_id: DC_Internet
                        peer_site_id: 725a8d34-a126-4f2c-b990-d1219421cb75
                        port_id: Lte
                        site_id: 725a8d34-a126-4f2c-b990-d1219421cb75
                        type: svr
                        up: true
                        uptime: 1527128046
                      - is_active: true
                        last_seen: 1619518709.222
                        latency: 91
                        mac: 020001c04668
                        mos: 436
                        mtu: 1500
                        org_id: 0c160b7f-1027-4cd1-923b-744534c4b070
                        peer_mac: 020001367edd
                        peer_port_id: DC_Internet
                        peer_router_name: RIDCBBP1
                        peer_site_id: 725a8d34-a126-4f2c-b990-d1219421cb75
                        port_id: Lte
                        router_name: RIST01544AP1
                        site_id: 725a8d34-a126-4f2c-b990-d1219421cb75
                        type: svr
                        up: true
                        uptime: 1527128046
                    start: 1619518689.4989705
                    total: 2
              schema:
                properties:
                  end:
                    type: number
                  limit:
                    type: integer
                  next:
                    type: string
                  results:
                    items:
                      properties:
                        is_active:
                          description: Redundancy status of the associated interface
                          type: boolean
                        last_seen:
                          type: number
                        latency:
                          type: number
                        mac:
                          description: router mac address
                          minLength: 1
                          type: string
                        mos:
                          type: number
                        mtu:
                          type: integer
                        org_id:
                          minLength: 1
                          type: string
                        peer_mac:
                          description: peer router mac address
                          minLength: 1
                          type: string
                        peer_port_id:
                          description: peer router device interface
                          minLength: 1
                          type: string
                        peer_router_name:
                          minLength: 1
                          type: string
                        peer_site_id:
                          minLength: 1
                          type: string
                        port_id:
                          description: router device interface
                          minLength: 1
                          type: string
                        router_name:
                          minLength: 1
                          type: string
                        site_id:
                          minLength: 1
                          type: string
                        type:
                          description: '`ipsec`for SRX, `svr` for 128T'
                          minLength: 1
                          type: string
                        up:
                          type: boolean
                        uptime:
                          type: integer
                      type: object
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                  total:
                    type: integer
                required:
                  - end
                  - limit
                  - results
                  - start
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgPeerPathStats
      tags:
        - Orgs VPNs
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/subscriptions':
    delete:
      description: |-
        Unsubscribe from Org Alarms/Reports
        Subscriptions define how Org Alarms/Reports are delivered to whom
      operationId: unsubscribeOrgAlarmsReports
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unsubscribeOrgAlarmsReports
      tags:
        - Orgs Subscriptions
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Subscribe to Org Alarms/Reports
        Subscriptions define how Org Alarms/Reports are delivered to whom
      operationId: subscribeOrgAlarmsReports
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: subscribeOrgAlarmsReports
      tags:
        - Orgs Subscriptions
  '/api/v1/orgs/{org_id}/templates':
    get:
      description: Get List of Org WLAN Templates
      operationId: listOrgTemplates
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/TemplatesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgTemplates
      tags:
        - Orgs Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Template
      operationId: createOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/template.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Template.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgTemplate
      tags:
        - Orgs Templates
  '/api/v1/orgs/{org_id}/templates/{template_id}':
    delete:
      description: Delete Org Template
      operationId: deleteOrgTemplate
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgTemplate
      tags:
        - Orgs Templates
    get:
      description: Get Org Template Details
      operationId: getOrgTemplate
      responses:
        '200':
          $ref: ./components/responses/Template.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgTemplate
      tags:
        - Orgs Templates
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/template_id.yml
    put:
      description: Update Org Template
      operationId: updateOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/template.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Template.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgTemplate
      tags:
        - Orgs Templates
  '/api/v1/orgs/{org_id}/templates/{template_id}/clone':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/template_id.yml
    post:
      description: Clone Org Template
      operationId: cloneOrgTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: Cloned
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Template.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: cloneOrgTemplate
      tags:
        - Orgs Templates
  '/api/v1/orgs/{org_id}/tickets':
    get:
      description: Get List of Tickets of an Org
      operationId: listOrgTickets
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/TicketsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgTickets
      tags:
        - Orgs Tickets
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create a support ticket
      operationId: createOrgTicket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  comment: string
                  subject: string
                  type: question
            schema:
              $ref: ./components/schemas/ticket.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ticket.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgTicket
      tags:
        - Orgs Tickets
  '/api/v1/orgs/{org_id}/tickets/count':
    get:
      description: Count Org Tickets
      operationId: countOrgTickets
      parameters:
        - in: query
          name: distinct
          schema:
            default: status
            enum:
              - status
              - type
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgTickets
      tags:
        - Orgs Tickets
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/tickets/{ticket_id}':
    get:
      description: Get support ticket details
      operationId: getOrgTicket
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/Ticket.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgTicket
      tags:
        - Orgs Tickets
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/ticket_id.yml
    put:
      description: Update support ticket
      operationId: updateOrgTicket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  comment: string
                  subject: string
                  type: question
            schema:
              $ref: ./components/schemas/ticket.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ticket.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgTicket
      tags:
        - Orgs Tickets
  '/api/v1/orgs/{org_id}/tickets/{ticket_id}/comments':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/ticket_id.yml
    post:
      description: Add Comment to support ticket
      operationId: addOrgTicketComment
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  comment: this is urgent
            schema:
              properties:
                comment:
                  type: string
              type: object
          multipart/form-data:
            examples:
              Example:
                value:
                  comment: this is urgent
                  file: string
            schema:
              properties:
                comment:
                  type: string
                file:
                  format: binary
                  type: string
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ticket.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addOrgTicketComment
      tags:
        - Orgs Tickets
  '/api/v1/orgs/{org_id}/troubleshoot':
    get:
      description: |-
        Troubleshoot sites, devices, clients, and wired clients. See search APIs for device information:
        - [search Device](/#operation/searchOrgDevices)
        - [search Wireless Client](/#operation/searchOrgWirelessClients)
        - [search Wired Client](/#operation/searchOrgWiredClients)
        - [search Wan Client](/#operation/searchOrgWanClients)

        **NOTE**: requires Marvis subscription license
      operationId: troubleshootOrg
      parameters:
        - description: '**required** when troubleshooting device or a client'
          in: query
          name: mac
          schema:
            type: string
        - description: '**required** when troubleshooting site'
          in: query
          name: site_id
          schema:
            format: uuid
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - description: 'when troubleshooting site, type of network to troubleshoot'
          in: query
          name: type
          schema:
            enum:
              - wireless
              - wired
              - wan
            type: string
      responses:
        '200':
          $ref: ./components/responses/Troubleshoot.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: troubleshootOrg
      tags:
        - Orgs Marvis
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/vars/search':
    get:
      description: |-
        Search vars

        Example: /api/v1/orgs/:org_id/vars/search?vars=*
      operationId: searchOrgVars
      parameters:
        - in: query
          name: site_id
          schema:
            type: string
        - in: query
          name: vars
          schema:
            type: string
        - in: query
          name: src
          schema:
            enum:
              - site
              - deviceprofile
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    end: 1693952979
                    limit: 10
                    results:
                      - created_time: 1618457655.384858
                        modified_time: 1693610886.477805
                        org_id: 0c160b7f-1027-4cd1-923b-744534c4b070
                        site_id: 1519f016-4e41-47c0-a396-cce4d04bac0b
                        src: setting
                        var: mvp
                    start: 1693949379
                    total: 1
              schema:
                properties:
                  end:
                    type: integer
                  limit:
                    type: integer
                  results:
                    items:
                      properties:
                        created_time:
                          type: number
                        modified_time:
                          type: number
                        org_id:
                          type: string
                        site_id:
                          type: string
                        src:
                          type: string
                        var:
                          type: string
                      type: object
                    type: array
                  start:
                    type: integer
                  total:
                    type: integer
                type: object
          description: OK
      summary: searchOrgVars
      tags:
        - Orgs Vars
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/vpns':
    get:
      description: Get List of Org VPNs
      operationId: listOrgsVpns
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/VpnsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgsVpns
      tags:
        - Orgs VPNs
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org VPN
      operationId: createOrgVpns
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  paths:
                    property1:
                      bfd_profile: broadband
                      ip: string
                    property2:
                      bfd_profile: lte
                      ip: string
            schema:
              $ref: ./components/schemas/vpn.yml
      responses:
        '200':
          $ref: ./components/responses/Vpn.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgVpns
      tags:
        - Orgs VPNs
  '/api/v1/orgs/{org_id}/vpns/{vpn_id}':
    delete:
      description: delete Org Vpn
      operationId: deleteOrgVpn
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgVpn
      tags:
        - Orgs VPNs
    get:
      description: getOrgVpn
      operationId: getOrgVpn
      responses:
        '200':
          $ref: ./components/responses/Vpn.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgVpn
      tags:
        - Orgs VPNs
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/vpn_id.yml
    put:
      description: update Org Vpn
      operationId: updateOrgVpn
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  paths:
                    property1:
                      bfd_profile: broadband
                      ip: string
                    property2:
                      bfd_profile: broadband
                      ip: string
            schema:
              $ref: ./components/schemas/vpn.yml
      responses:
        '200':
          $ref: ./components/responses/Vpn.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgVpn
      tags:
        - Orgs VPNs
  '/api/v1/orgs/{org_id}/wan_client/events/count':
    get:
      description: |
        Count by Distinct Attributes of Org WAN Client-Events
      operationId: countOrgWanClientEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - hostname
              - ip
              - mfg
              - mac
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgWanClientEvents
      tags:
        - Orgs Clients - Wan
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wan_clients/count':
    get:
      description: Count Org WAN Clients
      operationId: countOrgWanClients
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - hostname
              - ip
              - mfg
              - mac
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgWanClients
      tags:
        - Orgs Clients - Wan
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wan_clients/events/search':
    get:
      description: |
        Search Org WAN Client Events
      operationId: searchOrgWanClientEvents
      parameters:
        - description: 'Event type, e.g. CLIENT_IP_ASSIGNED, CLIENT_IP_RENEWED, CLIENT_IP_EXPIRED'
          in: query
          name: type
          schema:
            type: string
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: client IP
          in: query
          name: ip
          schema:
            type: string
        - description: Manufacture
          in: query
          name: mfg
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/WanClientEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWanClientEvents
      tags:
        - Orgs Clients - Wan
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wan_clients/search':
    get:
      description: Search Org WAN Clients
      operationId: searchOrgWanClients
      parameters:
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: client IP
          in: query
          name: ip
          schema:
            type: string
        - description: Manufacture
          in: query
          name: mfg
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/WanClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWanClients
      tags:
        - Orgs Clients - Wan
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/webhooks':
    get:
      description: Get List of Org Webhooks
      operationId: listOrgWebhooks
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WebhooksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgWebhooks
      tags:
        - Orgs Webhooks
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: |-
        Create Org Webhook

        **N.B**. For org webhooks, only device-events/alarms/audits/client-join/client-sessions/device-updowns/mxedge-events Infrastructure topics are supported.
      operationId: createOrgWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/webhook.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWebhook
      tags:
        - Orgs Webhooks
  '/api/v1/orgs/{org_id}/webhooks/{webhook_id}':
    delete:
      description: Delete Org Webhook
      operationId: deleteOrgWebhook
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWebhook
      tags:
        - Orgs Webhooks
    get:
      description: Get Org Webhook Details
      operationId: getOrgWebhook
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWebhook
      tags:
        - Orgs Webhooks
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/webhook_id.yml
    put:
      description: Update Org Webhook
      operationId: updateOrgWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/webhook.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWebhook
      tags:
        - Orgs Webhooks
  '/api/v1/orgs/{org_id}/webhooks/{webhook_id}/events/search':
    get:
      description: |-
        Search webhooks deliveries

        To get a list of webhook deliveries in error, use the query parameter `?error=*`
      operationId: searchOrgWebhooksDeliveries
      parameters:
        - in: query
          name: site_id
          schema:
            format: uuid
            type: string
        - in: query
          name: error
          schema:
            type: string
        - in: query
          name: status_code
          schema:
            type: integer
        - description: webhook topic
          in: query
          name: topic
          schema:
            enum:
              - alarms
              - audits
              - device-updowns
              - ping
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WebhookDeliverySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWebhooksDeliveries
      tags:
        - Orgs Webhooks
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/webhook_id.yml
  '/api/v1/orgs/{org_id}/webhooks/{webhook_id}/ping':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/webhook_id.yml
    post:
      description: send a Ping event to the webhook
      operationId: pingOrgWebhook
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: pingOrgWebhook
      tags:
        - Orgs Webhooks
  '/api/v1/orgs/{org_id}/wired_clients/count':
    get:
      description: |-
        Count by Distinct Attributes of Clients

        Note: For list of avaialable `type` values, please refer to [listClientEventsDefinitions](/#operation/listClientEventsDefinitions)
      operationId: countOrgWiredClients
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - port_id
              - vlan
              - mac
              - device_mac
              - site_id
              - type
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countOrgWiredClients
      tags:
        - Orgs Clients - Wired
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wired_clients/search':
    get:
      description: |-
        Search for Wired Clients in org

        Note: For list of avaialable `type` values, please refer to [listClientEventsDefinitions](/#operation/listClientEventsDefinitions)
      operationId: searchOrgWiredClients
      parameters:
        - description: Site ID
          in: query
          name: site_id
          schema:
            type: string
        - description: device mac
          in: query
          name: device_mac
          schema:
            type: string
        - description: client mac
          in: query
          name: mac
          schema:
            type: string
        - description: port id
          in: query
          name: port_id
          schema:
            type: string
        - description: vlan
          in: query
          name: vlan
          schema:
            type: integer
        - description: ip
          in: query
          name: ip
          schema:
            type: string
        - description: client manufacturer
          in: query
          name: manufacture
          schema:
            type: string
        - description: single entry of hostname/mac
          in: query
          name: text
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/WiredClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchOrgWiredClients
      tags:
        - Orgs Clients - Wired
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wlans':
    get:
      description: Get List of Org Wlans
      operationId: listOrgWlans
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WlansArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgWlans
      tags:
        - Orgs Wlans
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org Wlan
      operationId: createOrgWlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/wlan.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wlan.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWlan
      tags:
        - Orgs Wlans
  '/api/v1/orgs/{org_id}/wlans/{wlan_id}':
    delete:
      description: Delete Org WLAN
      operationId: deleteOrgWlan
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWlan
      tags:
        - Orgs Wlans
    get:
      description: Get Org Wlan Detail
      operationId: getOrgWLAN
      responses:
        '200':
          $ref: ./components/responses/WlansArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWLAN
      tags:
        - Orgs Wlans
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    put:
      description: Update Org Wlan
      operationId: updateOrgWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: 'https://hs1.airwatchportals.com'
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                    - 497f6eca-6276-4993-bfeb-53e5bbba6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                      - dscp: 32
                        dst_subnet: 10.2.0.0/16
                        port_ranges: '80,1024-6553'
                        protocol: udp
                        src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                      - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                      - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                    - '24'
                    - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                      - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                          - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                      - snapchat.com
                    allowed_subnets:
                      - 63.5.3.0/24
                    blocked_subnets:
                      - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                    - disable_event_timestamp_check: false
                      enabled: false
                      ip: 1.2.3.4
                      port: 3799
                      secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                      - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                      - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': 'fast,video'
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                      - mist.com
                    enabled: true
                    nai_realms:
                      - string
                    operators:
                      - google
                      - att
                    rcoi:
                      - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53e6bbba6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                    - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                    - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                      - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                      - string
                    facebook_enabled: false
                    forward: false
                    forward_url: 'http://abc.com/promotions'
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                      - mydomain.edu
                      - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                      - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: 'https://url/to/image.png'
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                      - reserved.net
                      - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                    - snapchat.com
                    - ibm.com
                  portal_allowed_subnets:
                    - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                    - msg.snapchat.com
                  portal_image: 'http://example.com'
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                      - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                      - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                      - host: 1.1.1.1
                        port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: '09:00-17:00'
                      mon: '09:00-17:00'
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: 'http://example.com'
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                    - 3
                    - 4
                    - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                    - 497f6eca-6276-4993-bfeb-53e7bbba6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: ./components/schemas/wlan.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wlan.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWlan
      tags:
        - Orgs Wlans
  '/api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_image':
    delete:
      description: Delete Org WLAN Portal Image
      operationId: deleteOrgWlanPortalImage
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWlanPortalImage
      tags:
        - Orgs Wlans
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    post:
      description: Upload Org WLAN Portal Image
      operationId: uploadOrgWlanPortalImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./components/schemas/image_upload.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uploadOrgWlanPortalImage
      tags:
        - Orgs Wlans
  '/api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_template':
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    put:
      description: |-
        Update a Portal Template

        #### Sponsor Email Template
        Sponsor Email Template supports following template variables:

        | **Name** | **Description** |
        | --- | --- |
        | approve_url | Renders URL to approve the request; optionally &minutes=N query param can be appended to change the Authorization period of the guest, where N is a valid integer denoting number of minutes a guest remains authorized |
        | deny_url | Renders URL to reject the request |
        | guest_email | Renders Email ID of the guest |
        | guest_name | Renders Name of the guest |
        | field1 | Renders value of the Custom Field 1 |
        | field2 | Renders value of the Custom Field 2 |
        | company | Renders value of the Company field |
        | sponsor_link_validity_duration | Renders validity time of the request (i.e. Approve/Deny URL) |
        | auth_expire_minutes | Renders Wlan-level configured Guest Authorization Expiration time period (in minutes), If not configured then default (1 day in minutes) |
      operationId: updateOrgWlanPortalTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/wlan_portal_template.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Portaltemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWlanPortalTemplate
      tags:
        - Orgs Wlans
  '/api/v1/orgs/{org_id}/wxrules':
    get:
      description: Get List of Org WxRules
      operationId: listOrgWxRules
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxruleArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgWxRules
      tags:
        - Orgs WxRules
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org WxRule
      operationId: createOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                    - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                    - mist
                    - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                    - fff34466-eec0-3756-6765-381c728a6037
                    - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                    - aaa34466-eec0-3756-6765-381c728a6037
                    - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53e8bbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                    - 8bfc2490-d726-3587-038d-cb2e71bd2330
                    - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: ./components/schemas/wxlan_rule.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWxRule
      tags:
        - Orgs WxRules
  '/api/v1/orgs/{org_id}/wxrules/derived':
    get:
      description: Get Derived Org WxRule
      operationId: getOrgWxRulesDerived
      responses:
        '200':
          $ref: ./components/responses/WxruleArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWxRulesDerived
      tags:
        - Orgs WxRules
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wxrules/{wxrules_id}':
    delete:
      description: Delete Org WxRule
      operationId: deleteOrgWxRule
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWxRule
      tags:
        - Orgs WxRules
    get:
      description: Get Org WxRule Details
      operationId: getOrgWxRule
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWxRule
      tags:
        - Orgs WxRules
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wxrules_id.yml
    put:
      description: Update Org WxRule
      operationId: updateOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                    - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                    - mist
                    - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                    - fff34466-eec0-3756-6765-381c728a6037
                    - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                    - aaa34466-eec0-3756-6765-381c728a6037
                    - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53e9bbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                    - 8bfc2490-d726-3587-038d-cb2e71bd2330
                    - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: ./components/schemas/wxlan_rule.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWxRule
      tags:
        - Orgs WxRules
  '/api/v1/orgs/{org_id}/wxtags':
    get:
      description: Get List of Org WxLAN Tags
      operationId: listOrgWxTags
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxtagArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgWxTags
      tags:
        - Orgs WxTags
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create WxLAN Tag
      operationId: createOrgWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                    - gmail
                    - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file-servers
                  type: match
                  values:
                    - b0c4e7001543
                    - a0c4e7001543
                    - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                    - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file-servers
                  type: match
                  values:
                    - 10.1.2.1
                    - 10.2.3.4/24
                    - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                    - '80'
                    - '8000'
                    - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                    - test_key1
                    - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                    - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                    - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                    - john@abc.com
                    - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                    - port_range: '80'
                      protocol: tcp
                      subnets:
                        - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                    - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: ./components/schemas/wxlan_tag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWxTag
      tags:
        - Orgs WxTags
  '/api/v1/orgs/{org_id}/wxtags/apps':
    get:
      description: Get Application List
      operationId: getOrgApplicationList
      responses:
        '200':
          $ref: ./components/responses/WxTagsAppsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgApplicationList
      tags:
        - Orgs WxTags
    parameters:
      - $ref: ./components/parameters/org_id.yml
  '/api/v1/orgs/{org_id}/wxtags/{wxtag_id}':
    delete:
      description: Delete WxLAN Tag
      operationId: deleteOrgWxTag
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWxTag
      tags:
        - Orgs WxTags
    get:
      description: Get WxLAN Tag Details
      operationId: getOrgWxTag
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWxTag
      tags:
        - Orgs WxTags
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wxtag_id.yml
    put:
      description: Update WxLAN Tag
      operationId: updateOrgWxTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/wxlan_tag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWxTag
      tags:
        - Orgs WxTags
  '/api/v1/orgs/{org_id}/wxtags/{wxtag_id}/clients':
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getOrgCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: ./components/responses/WxtagClients.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgCurrentMatchingClientsOfAWxTag
      tags:
        - Orgs WxTags
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wxtag_id.yml
  '/api/v1/orgs/{org_id}/wxtunnels':
    get:
      description: Get List of Org WxLAN Tunnels
      operationId: listOrgWxTunnels
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxtunnelArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listOrgWxTunnels
      tags:
        - Orgs WxTunnels
    parameters:
      - $ref: ./components/parameters/org_id.yml
    post:
      description: Create Org WxAN Tunnel
      operationId: createOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/wxlan_tunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createOrgWxTunnel
      tags:
        - Orgs WxTunnels
  '/api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}':
    delete:
      description: Delete Org WxLAN Tunnel
      operationId: deleteOrgWxTunnel
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteOrgWxTunnel
      tags:
        - Orgs WxTunnels
    get:
      description: Get Org WxLAN Tunnel Details
      operationId: getOrgWxTunnel
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOrgWxTunnel
      tags:
        - Orgs WxTunnels
    parameters:
      - $ref: ./components/parameters/org_id.yml
      - $ref: ./components/parameters/wxtunnel_id.yml
    put:
      description: Update Org WxLAN Tunnel
      operationId: updateOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/wxlan_tunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateOrgWxTunnel
      tags:
        - Orgs WxTunnels
  /api/v1/recover:
    post:
      description: |-
        Recover Password
        An email will also be sent to the user with a link to https://manage.mist.com/verify/recover?token=:token
      operationId: recoverPassword
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  email: test@mistsys.com
                  recaptcha: string
                  recaptcha_flavor: hcaptcha
            schema:
              $ref: ./components/schemas/recover.yml
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: recoverPassword
      tags:
        - Recover Password
  '/api/v1/recover/verify/{token}':
    parameters:
      - $ref: ./components/parameters/token.yml
    post:
      description: |-
        Verify Recover Password
        With correct verification, the user will be authenticated. UI can then prompt for new password
      operationId: verifyRecoverPasssword
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifyRecoverPasssword
      tags:
        - Recover Password
  /api/v1/register:
    post:
      description: |-
        Register a new admin and his/her org
        An email will also be sent to the user with a link to `/verify/register?token={token}`

        ### reCAPTCHA
        Google reCAPTCHA is the choice to prevent bot registration

        It needs this 

        &lt;script src='https://www.google.com/recaptcha/api.js' &gt;&lt;/script&gt;

        and this &lt;div&gt; in the desired place
        ```html
        <div class="g-recaptcha" data-sitekey="6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd"></div>
        ```

        Use GET /api/v1/register/recaptcha to read the current setting.
        Response example:
        ```json
        {    
          "flavor": "google",
          "required": true,    
          "sitekey": "6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd"
        }
        ```

        ### hCaptcha
        Alternative to reCAPTCHA is hCaptcha to prevent bot registration

        It needs this script

        &lt;script src='https://js.hcaptcha.com/1/api.js' async defer &gt;&lt;/script&gt;

        and this &lt;div&gt; in the desired place
        ```html
        <div class="h-recaptcha" data-sitekey="6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd"></div>
        ```

        Use GET /api/v1/register/recaptcha?recaptcha_flavor=hcaptcha to read the current setting for hcaptcha with reply.
        Response example:
        ```json
        {
          "flavor": "hcaptcha",
          "required": true,
          "sitekey": "6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd"
        }"
        ```
      operationId: registerNewAdmin
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account_only: false
                  allow_mist: false
                  city: Cupertino
                  country: United States
                  email: test@mistsys.com
                  first_name: John
                  invite_code: MISTROCKS
                  last_name: Smith
                  org_name: Smith LLC
                  password: foryoureyesonly
                  recaptcha: string
                  recaptcha_flavor: hcaptcha
                  referer_invite_token: Dm2gtT8dwMeM4Bc2E8FLIaA96VHOjPat
                  return_to: 'http://mist.zendesk.com/hc/quickstart.pdf'
                  state: California
                  street_address: 1601 S De Anza Blvd Ste 248
                  street_address 2: 1601 S De Anza Blvd Ste 248
                  zipcode: '95014'
            schema:
              $ref: ./components/schemas/new_admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: registerNewAdmin
      tags:
        - Orgs Admins
  /api/v1/register/recaptcha:
    get:
      description: Get Registration Information
      operationId: getAdminRegistrationInfo
      parameters:
        - in: query
          name: recaptcha_flavor
          schema:
            default: google
            enum:
              - google
              - hcaptcha
            type: string
      responses:
        '200':
          $ref: ./components/responses/Recaptcha.yml
      summary: getAdminRegistrationInfo
      tags:
        - Admin
  '/api/v1/register/verify/{token}':
    parameters:
      - $ref: ./components/parameters/token.yml
    post:
      description: Verify registration
      operationId: verifyRegistration
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  value:
                    return_to: 'http://mist.zendesk.com/hc/quickstart.pdf'
                success-but-failed-to-apply-the-invitation-automatically:
                  value:
                    detail: password policy not met
                    invite_not_applied: true
                    min_length: 8
              schema:
                properties:
                  detail:
                    type: string
                  invite_not_applied:
                    type: boolean
                  min_length:
                    type: integer
                  return_to:
                    type: string
                type: object
          description: OK
          headers:
            Set-Cookie:
              schema:
                example: 'csrftoken=vwvBuq9qkqaKh7lu8tNc0gkvBfEaLAmx; expires=Tue, 15-Mar-2016 19:47:20 GMT; Max-Age=31449600; Path=/'
                type: string
        '400':
          content:
            application/json:
              examples:
                already-registered:
                  value:
                    detail: already registered
                verification-expired:
                  value:
                    detail: expired
              schema:
                properties:
                  detail:
                    type: string
                required:
                  - detail
                type: object
          description: Response if verification expired or already registered
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          content:
            application/json:
              examples:
                not-found:
                  value:
                    detail: Not found.
              schema:
                properties:
                  detail:
                    type: string
                required:
                  - detail
                type: object
          description: Response if secret is invalid
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifyRegistration
      tags:
        - Orgs Admins
  /api/v1/self:
    delete:
      description: |-
        To delete ones account and every associated with it. The effects:

        the account would be deleted
        any orphaned Org (that only has this account as admin) will be deleted
        along with all data with Org (sites, wlans, devices) will be gone.
      operationId: deleteSelf
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          content:
            application/json:
              examples:
                if-any-of-the-org-to-be-deleted-still-has-inventory:
                  value:
                    detail: inventory not empty
                    org_id: 424f6eca-7276-4993-bfeb-53cbbbba6f05
              schema:
                properties:
                  detail:
                    type: string
                  org_id:
                    format: uuid
                    type: string
                required:
                  - detail
                  - org_id
                type: object
          description: Bad Request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSelf
      tags:
        - Self Account
    get:
      description: Get ‘whoami’ and privileges (which org and which sites I have access to)
      operationId: getSelf
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSelf
      tags:
        - Self Account
    put:
      description: update Account Information
      operationId: updateSelf
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: john.smith@mycorp.net
                  enable_two_factor: true
                  first_name: John
                  last_name: Smith
                  password: foryoureyesonly
                  persona: security
                  phone: '14081112222'
                  phone2: '14083334444'
            schema:
              $ref: ./components/schemas/admin.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Admin.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSelf
      tags:
        - Self Account
  /api/v1/self/apitokens:
    get:
      description: Get List of Current User API Tokens
      operationId: listApiTokens
      responses:
        '200':
          $ref: ./components/responses/ApitokensUserArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listApiTokens
      tags:
        - Self API Token
    post:
      description: |-
        Create API Token
        Note that the key is only available during creation time.
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 1626875902
                  last_used: 1690115110
                  name: org_token_xyz
            schema:
              $ref: ./components/schemas/user_apitoken.yml
      responses:
        '200':
          $ref: ./components/responses/ApitokensUserArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createApiToken
      tags:
        - Self API Token
  '/api/v1/self/apitokens/{apitoken_id}':
    delete:
      description: Delete an API Token
      operationId: deleteApiToken
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteApiToken
      tags:
        - Self API Token
    get:
      description: Get User API Token
      operationId: getApiToken
      responses:
        '200':
          $ref: ./components/responses/ApitokenUser.yml
      summary: getApiToken
      tags:
        - Self API Token
    parameters:
      - $ref: ./components/parameters/apitoken_id.yml
    put:
      description: Update User API Token
      operationId: updateApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: org_token_xyz
            schema:
              $ref: ./components/schemas/user_apitoken.yml
      responses:
        '200':
          $ref: ./components/responses/ApitokenUser.yml
      summary: updateApiToken
      tags:
        - Self API Token
  /api/v1/self/logs:
    get:
      description: |-
        Get List of change logs across all Orgs for current admin
        Audit logs records all administrative activities done by current admin across all orgs
      operationId: listSelfAuditLogs
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1428954000
                    limit: 100
                    page: 1
                    results:
                      - admin_id: 72bfa2bd-e58a-4670-9d20-a1468f7a6f58
                        admin_name: test@mistsys.com
                        after:
                          auth:
                            type: open
                        before:
                          auth:
                            type: psk
                        id: c6f9347b-b0a4-4a23-b927-fa9249f2ffb2
                        message: Update WLAN "Corporate"
                        org_id: 423f6eca-6276-4994-bfeb-53cbbbba6f04
                        site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                        timestamp: 1431382121
                    start: 1428939600
                    total: 135
              schema:
                properties:
                  end:
                    type: integer
                  limit:
                    type: integer
                  page:
                    type: integer
                  results:
                    items:
                      properties:
                        admin_id:
                          format: uuid
                          type: string
                        admin_name:
                          type: string
                        after:
                          description: field values after the change
                          properties:
                            auth:
                              properties:
                                type:
                                  type: string
                              required:
                                - type
                              type: object
                          required:
                            - auth
                          type: object
                        before:
                          description: field values prior to the change
                          properties:
                            auth:
                              properties:
                                type:
                                  type: string
                              required:
                                - type
                              type: object
                          required:
                            - auth
                          type: object
                        for_site:
                          readOnly: true
                          type: boolean
                        id:
                          format: uuid
                          type: string
                        message:
                          type: string
                        org_id:
                          format: uuid
                          type: string
                        site_id:
                          format: uuid
                          type: string
                        timestamp:
                          type: number
                      required:
                        - admin_id
                        - admin_name
                        - id
                        - message
                        - org_id
                        - site_id
                        - timestamp
                      type: object
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - end
                  - limit
                  - page
                  - results
                  - start
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSelfAuditLogs
      tags:
        - Self Audit Logs
  '/api/v1/self/oauth/{provider}':
    get:
      description: Obtain Authorization URL for Linking
      operationId: getOAuth2UrlForLinking
      parameters:
        - in: query
          name: forward
          schema:
            example: 'http://manage.mist.com/oauth/callback.html'
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    authorization_url: 'https://accounts.google.com/o/oauth2/v2/auth?.....'
                    linked: false
              schema:
                properties:
                  authorization_url:
                    type: string
                  linked:
                    type: boolean
                required:
                  - linked
                  - authorization_url
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getOAuth2UrlForLinking
      tags:
        - Self OAuth2
    parameters:
      - in: path
        name: provider
        required: true
        schema:
          type: string
    post:
      description: Link Mist account with an OAuth2 Provider
      operationId: linkOAuth2MistAccount
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 4/S9tegDeLkrYg0L9pWNXV4cgMVbbr3SR9t693A2kSHzw
            schema:
              properties:
                code:
                  type: string
              required:
                - code
              type: object
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    action: oauth account linked
                    id: google-user-id
              schema:
                properties:
                  action:
                    type: string
                  id:
                    type: string
                required:
                  - action
                  - id
                type: object
          description: OK
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    error: access_denied
                    error_description: The resource owner or authorization server denied the request.
              schema:
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
                type: object
          description: Authorization Error
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: linkOAuth2MistAccount
      tags:
        - Self OAuth2
  /api/v1/self/subscriptions:
    get:
      description: Get List of all the subscriptions
      operationId: listAlarmSubscriptions
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    org_id:
                      format: uuid
                      type: string
                  required:
                    - org_id
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listAlarmSubscriptions
      tags:
        - Self Alarms
  /api/v1/self/two_factor/token:
    get:
      description: Generate Secret Key for 2FA verification
      operationId: generateSecretFor2faVerification
      parameters:
        - description: 'if `by`==`qrcode`, returns the secret as a qrcode image'
          in: query
          name: by
          schema:
            default: qrcode
            enum:
              - qrcode
            type: string
      responses:
        '200':
          $ref: ./components/responses/TwoFactorSecret.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: generateSecretFor2faVerification
      tags:
        - Self MFA
  /api/v1/self/two_factor/verify:
    post:
      description: |
        Verify Two-factor (OTP)

        To verify two-factor authentication by using a code generated by app (e.g. Google Authenticator, Authy). Upon successful verification, the `two_factor_passed` will be set to true if it hasn’t already been.
      operationId: verifyTwoFactor
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  two_factor: '123456'
            schema:
              properties:
                two_factor:
                  type: string
              required:
                - two_factor
              type: object
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: Response when 2FA verification is successful
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifyTwoFactor
      tags:
        - Self MFA
  /api/v1/self/update:
    post:
      description: |-
        Change Email
        We require the user to verify that they actually own the email address they intend to change it to.

        After the API call, the user will receive an email to the new email address with a link like https://manage.mist.com/verify/update?expire=:exp_time&email=:admin_email&token=:token

        Upon clicking the link, the user is provided with a login page to authenticate using existing credentials. After successful login, the email address of the user gets updated

        **Note**: The request parameter email can be used by UI to validate that the current session (if any) belongs to the admin or provide a login page (by pre-populating the email on login screen). UI can also use the request parameter expire to validate token expiry.
      operationId: updateSelfEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: new@mistsys.com
            schema:
              $ref: ./components/schemas/model_object_email.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          content:
            application/json:
              examples:
                invalid-email-address:
                  value: {}
                new-email-address-already-exists:
                  value:
                    detail: email already existed
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: invalid email address or new email address already exists
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSelfEmail
      tags:
        - Self Account
  '/api/v1/self/update/verify/{token}':
    get:
      description: Verify Email change
      operationId: verifySelfEmail
      responses:
        '200':
          content:
            application/json:
              schema:
                properties: {}
                type: object
          description: 'With correct verification, the email address of the user will be updated'
        '400':
          content:
            application/json:
              examples:
                invalid-or-expired-token:
                  value:
                    detail: invalid token
                new-email-address-already-exists:
                  value:
                    detail: email already existed
                request-comes-from-authenticated-users-other-than-admin:
                  value:
                    detail: invalid token
              schema:
                properties:
                  detail:
                    type: string
                required:
                  - detail
                type: object
          description: Bad Request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: verifySelfEmail
      tags:
        - Self Account
    parameters:
      - $ref: ./components/parameters/token.yml
  '/api/v1/sites/{site_id}':
    delete:
      description: Delete Site
      operationId: deleteSite
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSite
      tags:
        - Sites
    get:
      description: Get Site Info
      operationId: getSiteInfo
      responses:
        '200':
          $ref: ./components/responses/Site.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteInfo
      tags:
        - Sites
    parameters:
      - $ref: ./components/parameters/site_id.yml
    put:
      description: Update Site Info
      operationId: updateSiteInfo
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  address: string
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  country_code: string
                  latlng:
                    lat: 0
                    lng: 0
                  name: string
                  networktemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  notes: string
                  rftemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  secpolicy_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  timezone: string
            schema:
              $ref: ./components/schemas/site.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Site.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteInfo
      tags:
        - Sites
  '/api/v1/sites/{site_id}/alarms/ack':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Ack multiple Site Alarms
      operationId: multiAckSiteAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                    - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                    - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              properties:
                alarm_ids:
                  items:
                    format: uuid
                    type: string
                  type: array
                note:
                  description: Some text note describing the intent
                  type: string
              required:
                - alarm_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiAckSiteAlarms
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/alarms/ack_all':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Ack all Site Alarms

        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or equal to 1000.
      operationId: ackSiteAllAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: string
            schema:
              $ref: ./components/schemas/note.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: ackSiteAllAlarms
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/alarms/count':
    get:
      description: Count Site Alarms
      operationId: countSiteAlarms
      parameters:
        - description: Group by and count the alarms by some distinct field
          in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - acked
              - severity
              - group
            type: string
        - description: Name of the admins who have acked the alarms; accepts multiple values separated by comma
          in: query
          name: ack_admin_name
          schema:
            type: string
        - in: query
          name: acked
          schema:
            type: boolean
        - description: Key-name of the alarms; accepts multiple values separated by comma
          in: query
          name: type
          schema:
            type: string
        - description: Alarm severity; accepts multiple values separated by comma
          in: query
          name: severity
          schema:
            type: string
        - description: Alarm group name; accepts multiple values separated by comma
          in: query
          name: group
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteAlarms
      tags:
        - Sites Alarms
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/alarms/search':
    get:
      description: Search Site Alarms
      operationId: searchSiteAlarms
      parameters:
        - description: Key-name of the alarms; accepts multiple values separated by comma
          in: query
          name: type
          schema:
            type: string
        - description: Name of the admins who have acked the alarms; accepts multiple values separated by comma
          in: query
          name: ack_admin_name
          schema:
            type: string
        - in: query
          name: acked
          schema:
            type: boolean
        - description: Alarm severity; accepts multiple values separated by comma
          in: query
          name: severity
          schema:
            type: string
        - description: Alarm group name; accepts multiple values separated by comma
          in: query
          name: group
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AlarmsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteAlarms
      tags:
        - Sites Alarms
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/alarms/unack':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Unack multiple Site Alarms
      operationId: multiUnackSiteAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                    - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                    - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              properties:
                alarm_ids:
                  items:
                    format: uuid
                    type: string
                  type: array
                note:
                  description: Some text note describing the intent
                  type: string
              required:
                - alarm_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiUnackSiteAlarms
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/alarms/unack_all':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Unack all Site Alarms

        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or equal to 1000.
      operationId: unackSiteAllArlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: ./components/schemas/note.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unackSiteAllArlarms
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/alarms/{alarm_id}/ack':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/alarm_id.yml
    post:
      description: Ack Site Alarm
      operationId: ackSiteAlarm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: ./components/schemas/note.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: ackSiteAlarm
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/alarms/{alarm_id}/unack':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/alarm_id.yml
    post:
      description: Unack Site Alarm
      operationId: unackSiteAlarm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: ./components/schemas/note.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unackSiteAlarm
      tags:
        - Sites Alarms
  '/api/v1/sites/{site_id}/anomaly/client/{client_mac}/{metric}':
    get:
      description: Get Client Anomaly Events
      operationId: getSiteAnomalyEventsForClient
      responses:
        '200':
          $ref: ./components/responses/AnomalyMetrics.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAnomalyEventsForClient
      tags:
        - Sites Anomaly
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/sites/{site_id}/anomaly/device/{device_mac}/{metric}':
    get:
      description: Get Device Anomaly Events
      operationId: getSiteAnomalyEventsforDevice
      responses:
        '200':
          $ref: ./components/responses/AnomalyMetrics.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAnomalyEventsforDevice
      tags:
        - Sites Anomaly
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/metric.yml
      - $ref: ./components/parameters/device_mac.yml
  '/api/v1/sites/{site_id}/anomaly/{metric}':
    get:
      description: Get Site Anomaly Events
      operationId: getSiteAnomalyEvents
      responses:
        '200':
          $ref: ./components/responses/AnomalyMetrics.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAnomalyEvents
      tags:
        - Sites Anomaly
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/sites/{site_id}/apps':
    get:
      description: Get List of Site Applications
      operationId: listSiteApps
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - group: string
                      key: string
                      name: string
              schema:
                items:
                  properties:
                    group:
                      minLength: 1
                      type: string
                    key:
                      minLength: 1
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - key
                    - name
                    - group
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteApps
      tags:
        - Sites Applications
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/aptemplates/derived':
    get:
      description: Get derived AP Templates for Site
      operationId: getSiteApTemplateDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/Aptemplate.yml
      summary: getSiteApTemplateDerived
      tags:
        - Sites AP Templates
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/assetfilters':
    get:
      description: Get List of Site Asset Filters
      operationId: listSiteAssetFilters
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AssetfiltersArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteAssetFilters
      tags:
        - Sites Asset Filters
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site Asset Filter
      operationId: createSiteAssetFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset_filter.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteAssetFilters
      tags:
        - Sites Asset Filters
  '/api/v1/sites/{site_id}/assetfilters/{assetfilter_id}':
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteSiteAssetFilter
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteAssetFilter
      tags:
        - Sites Asset Filters
    get:
      description: Get Site Asset Filter Details
      operationId: getSiteAssetFilter
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAssetFilter
      tags:
        - Sites Asset Filters
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/assetfilter_id.yml
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateSiteAssetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset_filter.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Assetfilter.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteAssetFilter
      tags:
        - Sites Asset Filters
  '/api/v1/sites/{site_id}/assets':
    get:
      description: Get List of Site Assets
      operationId: listSiteAssets
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteAssets
      tags:
        - Sites Assets
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site Asset
      operationId: createSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteAsset
      tags:
        - Sites Assets
  '/api/v1/sites/{site_id}/assets/import':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Impert Site Assets. 

        It can be done via a CSV file or a JSON payload.

        ## CSV File Format
        ```csv
        name,mac
        "asset_name",5c5b53010101
        ``` 
      operationId: importSiteAssets
      parameters:
        - description: 'API will replace the assets with same mac if provided `upsert`==`True`, otherwise will report in errors in response.'
          in: query
          name: upsert
          schema:
            default: 'False'
            enum:
              - 'True'
              - 'False'
            type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - mac: a31eb04e1c38
                    name: Expensive Instrument
                  - mac: a31eb04e1c37
                    name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                  - name
                  - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importSiteAssets
      tags:
        - Sites Assets
  '/api/v1/sites/{site_id}/assets/{asset_id}':
    delete:
      description: Delete Site Asset
      operationId: deleteSiteAsset
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '201':
          description: Created
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteAsset
      tags:
        - Sites Assets
    get:
      description: Get Site Asset Details
      operationId: getSiteAsset
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAsset
      tags:
        - Sites Assets
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/asset_id.yml
    put:
      description: Update Site Asset
      operationId: updateSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/asset.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Asset.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteAsset
      tags:
        - Sites Assets
  '/api/v1/sites/{site_id}/beacons':
    get:
      description: Get List of Site Beacons
      operationId: listSiteBeacons
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/BeaconsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteBeacons
      tags:
        - Sites Beacons
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site Beacon
      operationId: createSiteBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  'y': 0
            schema:
              $ref: ./components/schemas/beacon.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Beacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteBeacon
      tags:
        - Sites Beacons
  '/api/v1/sites/{site_id}/beacons/{beacon_id}':
    delete:
      description: Delete Site Beacon
      operationId: deleteSiteBeacons
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteBeacons
      tags:
        - Sites Beacons
    get:
      description: Get Site Beacon Details
      operationId: getSiteBeacon
      responses:
        '200':
          $ref: ./components/responses/Beacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteBeacon
      tags:
        - Sites Beacons
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/beacon_id.yml
    put:
      description: Update Site Beacon
      operationId: updateSiteBeacons
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  'y': 0
            schema:
              $ref: ./components/schemas/beacon.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Beacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteBeacons
      tags:
        - Sites Beacons
  '/api/v1/sites/{site_id}/call/events/count':
    get:
      description: Count Site Call Events
      operationId: countSiteCallEvents
      parameters:
        - in: query
          name: distinct
          schema:
            enum:
              - type
              - app
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteCallEvents
      tags:
        - Sites Calls
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/call/events/search':
    get:
      description: Search Site Call Events
      operationId: searchSiteCallEvents
      parameters:
        - description: 'Event Type. See [listCallEventsDefinitions](/#operation/listCallEventsDefinitions)'
          in: query
          name: type
          schema:
            type: string
        - in: query
          name: ap
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: app
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/CallEventsArraySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteCallEvents
      tags:
        - Sites Calls
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/count':
    get:
      description: Count by Distinct Attributes of Clients
      operationId: countSiteWirelessClients
      parameters:
        - example: hostname
          in: query
          name: distinct
          required: true
          schema:
            default: device
            enum:
              - ssid
              - ap
              - ip
              - vlan
              - hostname
              - os
              - model
              - device
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - in: query
          name: ap
          schema:
            type: string
        - $ref: ./components/parameters/ip.yml
        - in: query
          name: vlan
          schema:
            type: string
        - in: query
          name: hostname
          schema:
            type: string
        - in: query
          name: os
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWirelessClients
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/disconnect':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: To unauthorize multiple clients
      operationId: disconnectSiteMultipleClients
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - 683b679ac024
            schema:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: disconnectSiteMultipleClients
      tags:
        - Sites Clients - Wireless
  '/api/v1/sites/{site_id}/clients/events/count':
    get:
      description: Count by Distinct Attributes of Client-Events
      operationId: countSiteWirelessClientEvents
      parameters:
        - description: type / proto / band / channel / wlan_id / ssid
          example: type
          in: query
          name: distinct
          schema:
            enum:
              - type
              - proto
              - band
              - channel
              - wlan_id
              - ssid
            type: string
        - description: 'event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE'
          in: query
          name: type
          schema:
            type: string
        - description: for assoc/disassoc events
          in: query
          name: reason_code
          schema:
            type: integer
        - description: SSID Name
          in: query
          name: ssid
          schema:
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 802.11 standard
          in: query
          name: proto
          schema:
            enum:
              - b
              - g
              - 'n'
              - ac
              - ax
              - a
            type: string
        - description: 24 / 5
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWirelessClientEvents
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/events/search':
    get:
      description: Get Site Clients Events
      operationId: searchSiteWirelessClientEvents
      parameters:
        - description: 'event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE'
          in: query
          name: type
          schema:
            type: string
        - description: for assoc/disassoc events
          in: query
          name: reason_code
          schema:
            type: integer
        - description: SSID Name
          in: query
          name: ssid
          schema:
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 802.11 standard
          in: query
          name: proto
          schema:
            enum:
              - b
              - g
              - 'n'
              - ac
              - ax
              - a
            type: string
        - description: 24 / 5
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/EventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWirelessClientEvents
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/search':
    get:
      description: |-
        Search Wireless Clients

        **NOTE**: fuzzy logic can be used with ‘*’, supported filters: mac, hostname, device, os, model. E.g. /clients/search?device=Mac*&hostname=jerry
      operationId: searchSiteWirelessClients
      parameters:
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - $ref: ./components/parameters/ip.yml
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: 'device type, e.g. Mac, Nvidia, iPhone'
          in: query
          name: device
          schema:
            type: string
        - description: 'os, e.g. Sierra, Yosemite, Windows 10'
          in: query
          name: os
          schema:
            type: string
        - description: 'model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”'
          in: query
          name: model
          schema:
            type: string
        - description: AP mac where the client has connected to
          in: query
          name: ap
          schema:
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - description: 'partial / full MAC address, hostname, username, psk_name or ip'
          in: query
          name: text
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWirelessClients
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/sessions/count':
    get:
      description: Count by Distinct Attributes of Client Sessions
      operationId: countSiteWirelessClientSessions
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - ssid
              - wlan_id
              - ap
              - mac
              - client_family
              - client_manufacture
              - client_model
              - client_os
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 24 /5
          in: query
          name: band
          schema:
            type: string
        - description: 'E.g. “Mac”, “iPhone”, “Apple watch”'
          in: query
          name: client_family
          schema:
            type: string
        - description: E.g. “Apple”
          in: query
          name: client_manufacture
          schema:
            type: string
        - description: 'E.g. “8+”, “XS”'
          in: query
          name: client_model
          schema:
            type: string
        - description: 'E.g. “Mojave”, “Windows 10”, “Linux”'
          in: query
          name: client_os
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWirelessClientSessions
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/sessions/search':
    get:
      description: Search Client Sessions
      operationId: searchSiteWirelessClientSessions
      parameters:
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: 5 / 24
          in: query
          name: band
          schema:
            enum:
              - '24'
              - '5'
            type: string
        - description: 'E.g. “Mac”, “iPhone”, “Apple watch”'
          in: query
          name: client_family
          schema:
            type: string
        - description: E.g. “Apple”
          in: query
          name: client_manufacture
          schema:
            type: string
        - description: 'E.g. “8+”, “XS”'
          in: query
          name: client_model
          schema:
            type: string
        - description: Username
          in: query
          name: client_username
          schema:
            type: string
        - description: 'E.g. “Mojave”, “Windows 10”, “Linux”'
          in: query
          name: client_os
          schema:
            type: string
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: wlan_id
          in: query
          name: wlan_id
          schema:
            type: string
        - $ref: ./components/parameters/psk_id_query.yml
        - description: PSK Name
          in: query
          name: psk_name
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ClientSessionsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWirelessClientSessions
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/clients/unauthorize':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: 'This unauthorize clients (if they are guest) and disconnect them. From the guest’s perspective, they will see the splash page again and go through the flow (e.g. Terms of Use) again.'
      operationId: unauthorizeSiteMultipleClients
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - 683b679ac024
            schema:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unauthorizeSiteMultipleClients
      tags:
        - Sites Clients - Wireless
  '/api/v1/sites/{site_id}/clients/{client_mac}/coa':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthSiteDot1xWirelessClient
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: reauthSiteDot1xWirelessClient
      tags:
        - Sites Clients - Wireless
  '/api/v1/sites/{site_id}/clients/{client_mac}/disconnect':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
    post:
      description: This disconnect a client (and it’s likely to connect back)
      operationId: disconnectSiteWirelessClient
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: disconnectSiteWirelessClient
      tags:
        - Sites Clients - Wireless
  '/api/v1/sites/{site_id}/clients/{client_mac}/events':
    get:
      description: Get the list of events for a specific client
      operationId: getSiteEventsForClient
      parameters:
        - description: e.g. MARVIS_EVENT_CLIENT_DHCP_STUCK
          in: query
          name: type
          schema:
            enum:
              - b
              - g
              - 'n'
            type: string
        - description: a / b / g / n / ac / ax
          in: query
          name: proto
          schema:
            enum:
              - a
              - b
              - g
              - 'n'
              - ac
              - ax
            type: string
        - description: 24 / 5
          in: query
          name: band
          schema:
            type: string
        - in: query
          name: channel
          schema:
            type: string
        - in: query
          name: wlan_id
          schema:
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ClientEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteEventsForClient
      tags:
        - Sites Clients - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
  '/api/v1/sites/{site_id}/clients/{client_mac}/unauthorize':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
    post:
      description: 'This unauthorize a client (if it’s a guest) and disconnect it. From the guest’s perspective, s/he will see the splash page again and go through the flow (e.g. Terms of Use) again.'
      operationId: unauthorizeSiteWirelessClient
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: unauthorizeSiteWirelessClient
      tags:
        - Sites Clients - Wireless
  '/api/v1/sites/{site_id}/deviceprofiles/derived':
    get:
      description: Retrieves the list of Device Profiles available for the Site
      operationId: listSiteDeviceProfilesDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/DeviceprofilesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteDeviceProfilesDerived
      tags:
        - Sites Service Policies
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices':
    get:
      description: Get list of devices on the site.
      operationId: listSiteDevices
      parameters:
        - description: device type
          in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
              - all
            type: string
        - $ref: ./components/parameters/name.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/DevicesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteDevices
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/ap_channels':
    get:
      description: Get a list of allowed channels (per channel width)
      operationId: getSiteDeviceRadioChannels
      parameters:
        - description: 'country code for the site (for AP config generation), in [two-character](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)'
          example: US
          in: query
          name: country_code
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/DeviceRadioChannels.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceRadioChannels
      tags:
        - Sites Devices - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/config_history/count':
    get:
      description: Counts the number of entries in device config history for distinct field with given filters
      operationId: countSiteDeviceConfigHistory
      parameters:
        - in: query
          name: distinct
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteDeviceConfigHistory
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/config_history/search':
    get:
      description: Search for entries in device config history
      operationId: searchSiteDeviceConfigHistory
      parameters:
        - in: query
          name: device_type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: Device MAC Address
          in: query
          name: mac
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ConfigsHistorySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDeviceConfigHistory
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/count':
    get:
      description: Counts the number of entries in ap events history for distinct field with given filters
      operationId: countSiteDevices
      parameters:
        - in: query
          name: distinct
          schema:
            default: model
            enum:
              - model
              - version
              - map_id
              - hostname
              - mxtunnel_status
              - mxedge_id
              - lldp_system_name
              - lldp_system_desc
              - lldp_port_id
              - lldp_mgmt_addr
            type: string
        - in: query
          name: hostname
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: mxtunnel_status
          schema:
            type: string
        - in: query
          name: mxedge_id
          schema:
            type: string
        - in: query
          name: lldp_system_name
          schema:
            type: string
        - in: query
          name: lldp_system_desc
          schema:
            type: string
        - in: query
          name: lldp_port_id
          schema:
            type: string
        - in: query
          name: lldp_mgmt_addr
          schema:
            type: string
        - in: query
          name: map_id
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: model
                    end: 1604304258.674506
                    limit: 10
                    percentage: 100
                    results:
                      - count: 1
                        model: AP41
                      - count: 1
                        model: AP43
                    start: 1604217858.6744902
                    total: 2
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: number
                  limit:
                    type: integer
                  percentage:
                    type: integer
                  results:
                    items:
                      properties:
                        count:
                          type: integer
                        model:
                          type: string
                      required:
                        - model
                        - count
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - end
                  - limit
                  - distinct
                  - total
                  - percentage
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteDevices
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/events/count':
    get:
      description: Counts the number of entries in ap events history for distinct field with given filters
      operationId: countSiteDeviceEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: model
            enum:
              - model
              - type
              - type_code
              - mac
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: type_code
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: type
                    end: 1531862583
                    limit: 10
                    percentage: 100
                    results:
                      - count: 10
                        type: AP_CONNECT_STATUS
                      - count: 4
                        type: AP_CONFIGURED
                    start: 1531776183
                    total: 2
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: integer
                  limit:
                    type: integer
                  percentage:
                    type: integer
                  results:
                    items:
                      properties:
                        count:
                          type: integer
                        type:
                          type: string
                      required:
                        - count
                        - type
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - end
                  - distinct
                  - results
                  - start
                  - limit
                  - percentage
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteDeviceEvents
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/events/search':
    get:
      description: Search Devices Events
      operationId: searchSiteDeviceEvents
      parameters:
        - in: query
          name: device_type
          schema:
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: device mac
          in: query
          name: mac
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: event message
          in: query
          name: text
          schema:
            type: string
        - description: event time
          in: query
          name: timestamp
          schema:
            type: string
        - description: 'see [Event Types Definition](/#operation/listDeviceEventsDefinitions)'
          in: query
          name: type
          schema:
            type: string
        - description: Return last/recent event for passed in field
          example: port_id
          in: query
          name: last_by
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1531862583
                    limit: 2
                    next: /api/v1/sites/8aaba0aa-09cc-44bd-9709-33b98040550c/devices/events/search?ap=5c5b350e0001&end=1531855849.000&limit=2&start=1531776183.0
                    results:
                      - last_reboot_time: 1531854327
                        text: Success
                        timestamp: 1531855849.226722
                        type: AP_CONNECT_STATUS
                        type_code: 2002
                      - timestamp: 1531854326
                        type: AP_CONFIGURED
                    start: 1531776183
                    total: 14
              schema:
                properties:
                  end:
                    type: integer
                  limit:
                    type: integer
                  next:
                    type: string
                  results:
                    items:
                      $ref: ./components/schemas/events_device_ap.yml
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - end
                  - limit
                  - next
                  - results
                  - start
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDeviceEvents
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/export':
    get:
      description: To download the exported device information
      operationId: exportSiteDevices
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: exportSiteDevices
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/import':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Import Information for Multiple Devices

        CSV format:
        ```csv
        mac,name,map_id,x,y,height,orientation,labels,band_24.power,band_24.bandwidth,band_24.channel,band_24.disabled,band_5.power,band_5.bandwidth,band_5.channel,band_5.disabled,band_6.power,band_6.bandwidth,band_6.channel,band_6.disabled
        5c5b53010101,"AP 1",845a23bf-bed9-e43c-4c86-6fa474be7ae5,30,10,2.3,45,"guest, campus, vip",1,20,0,false,0,40,0,false,17,80,0,false
        ```
      operationId: importSiteDevices
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  - aeroscout:
                      enabled: false
                      host: aero.pvt.net
                      locate_connected: true
                    ble_config:
                      beacon_enabled: false
                      beacon_rate: 3
                      beacon_rate_mode: custom
                      beam_disabled:
                        - 1
                        - 3
                        - 6
                      custom_ble_packet_enabled: false
                      custom_ble_packet_frame: 0x........
                      custom_ble_packet_freq_msec: 300
                      eddystone_uid_adv_power: -65
                      eddystone_uid_beams: '2-4,7'
                      eddystone_uid_enabled: false
                      eddystone_uid_freq_msec: 200
                      eddystone_uid_instance: 5c5b35000001
                      eddystone_uid_namespace: 2818e3868dec25629ede
                      eddystone_url_adv_power: -65
                      eddystone_url_beams: '2-4,7'
                      eddystone_url_enabled: true
                      eddystone_url_freq_msec: 1000
                      eddystone_url_url: 'https://www.abc.com'
                      ibeacon_adv_power: -65
                      ibeacon_beams: '2-4,7'
                      ibeacon_enabled: false
                      ibeacon_freq_msec: 0
                      ibeacon_major: 13
                      ibeacon_minor: 138
                      ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                      power: 10
                      power_mode: custom
                    centrak:
                      enabled: false
                    client_bridge:
                      auth:
                        psk: foryoureyesonly
                        type: psk
                      enabled: false
                      ssid: Uplink-SSID
                    created_time: 0
                    deviceprofile_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                    disable_eth1: false
                    disable_eth2: false
                    disable_eth3: false
                    disable_module: false
                    esl_config:
                      cacert: string
                      channel: 3
                      enabled: false
                      host: 1.1.1.1
                      port: 0
                      type: imagotag
                      verify_cert: true
                      vlan_id: 1
                    for_site: true
                    height: 2.75
                    id: 497f6eca-6276-4993-bfeb-53eabbba6f08
                    image1_url: string
                    image2_url: string
                    image3_url: string
                    iot_config:
                      A1:
                        enabled: false
                        name: motion
                        output: true
                        pullup: internal
                        value: 0
                      A2:
                        enabled: false
                        name: motion
                        output: true
                        pullup: internal
                        value: 0
                      A3:
                        enabled: false
                        name: motion
                        output: true
                        pullup: internal
                        value: 0
                      A4:
                        enabled: false
                        name: motion
                        output: true
                        pullup: internal
                        value: 0
                      DI1:
                        enabled: false
                        name: string
                        pullup: internal
                      DI2:
                        enabled: false
                        name: string
                        pullup: internal
                      DO:
                        enabled: false
                        name: motion
                        output: true
                        pullup: internal
                        value: 0
                    ip_config:
                      dns:
                        - 8.8.8.8
                        - 4.4.4.4
                      dns_suffix:
                        - .mist.local
                        - .mist.com
                      gateway: 10.2.1.254
                      gateway6: '2607:f8b0:4005:808::1'
                      ip: 10.2.1.1
                      ip6: '2607:f8b0:4005:808::2004'
                      mtu: 0
                      netmask: 255.255.255.0
                      netmask6: /32
                      type: static
                      type6: static
                      vlan_id: 1
                    led:
                      brightness: 255
                      enabled: true
                    locked: true
                    map_id: 63eda950-c6da-11e4-a628-60f81dd250cc
                    mesh:
                      enabled: false
                      group: 1
                      role: base
                    modified_time: 0
                    name: conference room
                    notes: slightly off center
                    ntp_servers:
                      - string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    orientation: 45
                    poe_passthrough: false
                    port_config:
                      property1:
                        additional_vlan_ids:
                          - 55
                          - 66
                        authentication_protocol: pap
                        disabled: true
                        dynamic_vlan:
                          default_vlan_id: 999
                          enabled: true
                          type: string
                          vlans:
                            1-10: null
                            user: null
                        enable_mac_auth: false
                        forwarding: all
                        mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                        mxtunnel_name: string
                        port_auth: none
                        port_vlan_id: 1
                        radius_config:
                          acct_interim_interval: 0
                          acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                          auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                          auth_servers_retries: 3
                          auth_servers_timeout: 5
                          coa_enabled: false
                          coa_port: 3799
                          network: string
                          source_ip: string
                        radsec:
                          enabled: true
                          idle_timeout: 60
                          mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                          proxy_hosts:
                            - mxedge1.local
                          server_name: radsec.abc.com
                          servers:
                            - host: 1.1.1.1
                              port: 1812
                          use_mxedge: true
                          use_site_mxedge: false
                        vlan_id: 9
                        vland_ids:
                          - 1
                          - 10
                          - 50
                        wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                        wxtunnel_remote_id: wifiguest
                      property2:
                        additional_vlan_ids:
                          - 55
                          - 66
                        authentication_protocol: pap
                        disabled: true
                        dynamic_vlan:
                          default_vlan_id: 999
                          enabled: true
                          type: string
                          vlans:
                            1-10: null
                            user: null
                        enable_mac_auth: false
                        forwarding: all
                        mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                        mxtunnel_name: string
                        port_auth: none
                        port_vlan_id: 1
                        radius_config:
                          acct_interim_interval: 0
                          acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                          auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                          auth_servers_retries: 3
                          auth_servers_timeout: 5
                          coa_enabled: false
                          coa_port: 3799
                          network: string
                          source_ip: string
                        radsec:
                          enabled: true
                          idle_timeout: 60
                          mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                          proxy_hosts:
                            - mxedge1.local
                          server_name: radsec.abc.com
                          servers:
                            - host: 1.1.1.1
                              port: 1812
                          use_mxedge: true
                          use_site_mxedge: false
                        vlan_id: 9
                        vland_ids:
                          - 1
                          - 10
                          - 50
                        wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                        wxtunnel_remote_id: wifiguest
                    pwr_config:
                      base: 2000
                      prefer_usb_over_wifi: false
                    radio_config:
                      allow_rrm_disable: false
                      ant_gain_24: 4
                      ant_gain_5: 5
                      ant_gain_6: 5
                      antenna_mode: default
                      band_24:
                        allow_rrm_disable: true
                        ant_gain: 0
                        antenna_mode: default
                        bandwidth: 20
                        channel: 0
                        channels:
                          - 0
                        disabled: true
                        power: 0
                        power_max: 0
                        power_min: 0
                        preamble: short
                        usage: '24'
                      band_24_usage: '5'
                      band_5:
                        allow_rrm_disable: true
                        ant_gain: 0
                        antenna_mode: default
                        bandwidth: 20
                        channel: 0
                        channels:
                          - 0
                        disabled: true
                        power: 0
                        power_max: 0
                        power_min: 0
                        preamble: short
                        usage: '24'
                      band_5_on_24_radio:
                        allow_rrm_disable: true
                        ant_gain: 0
                        antenna_mode: default
                        bandwidth: 20
                        channel: 0
                        channels:
                          - 0
                        disabled: true
                        power: 0
                        power_max: 0
                        power_min: 0
                        preamble: short
                        usage: '24'
                      band_6:
                        allow_rrm_disable: true
                        ant_gain: 0
                        antenna_mode: default
                        bandwidth: 20
                        channel: 0
                        channels:
                          - 0
                        disabled: true
                        power: 0
                        power_max: 0
                        power_min: 0
                        preamble: short
                        usage: '24'
                      indoor_use: false
                      scanning_enabled: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    uplink_port_config:
                      dot1x: false
                      keep_wlans_up_if_down: false
                    usb_config:
                      cacert: string
                      channel: 3
                      enabled: true
                      host: 1.1.1.1
                      port: 0
                      type: imagotag
                      verify_cert: true
                      vlan_id: 1
                    vars:
                      RADIUS_IP1: 172.31.2.5
                      RADIUS_SECRET: 11s64632d
                    x: 53.5
                    'y': 173.1
            schema:
              items:
                $ref: ./components/schemas/device_ap.yml
              type: array
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        '200':
          $ref: ./components/responses/DevicesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importSiteDevices
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/last_config/count':
    get:
      description: Counts the number of entries in device config history for distinct field with given filters
      operationId: countSiteDeviceLastConfig
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - version
              - name
              - site_id
              - mac
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: ap
                    end: 1604310805
                    limit: 10
                    percentage: 100
                    results:
                      - ap: 5c5b35000000
                        count: 1
                      - ap: 5c5b35000001
                        count: 1
                    start: 1604307205
                    total: 2
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: integer
                  limit:
                    type: integer
                  percentage:
                    type: integer
                  results:
                    items:
                      properties:
                        ap:
                          type: string
                        count:
                          type: integer
                      required:
                        - ap
                        - count
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - end
                  - limit
                  - distinct
                  - total
                  - percentage
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteDeviceLastConfig
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/last_config/search':
    get:
      description: Search Device Last Configs
      operationId: searchSiteDeviceLastConfigs
      parameters:
        - in: query
          name: device_type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ConfigsHistorySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDeviceLastConfigs
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/reprovision':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: 'To force all APs to reprovision itself again. '
      operationId: reprovisionSiteAllAps
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: reprovisionSiteAllAps
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/reset_radio_config':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Reset all APs in the Site to use RRM
      operationId: resetSiteAllApsToUseRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                    - '24'
                    - '5'
                    - '6'
                  force: false
            schema:
              properties:
                bands:
                  description: list of bands
                  items:
                    type: string
                  type: array
                force:
                  default: false
                  description: 'whether to reset those with radio disabled. default is false (i.e. if user intentionally disables a radio, honor it)'
                  type: boolean
              required:
                - bands
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: resetSiteAllApsToUseRrm
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/restart':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Note that only the devices that are connected will be restarted.
      operationId: multiRestartSiteDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_ids:
                    - 00000000-0000-0000-1000-5c5b35584a6f
                    - 00000000-0000-0000-1000-5c5b350ea3b3
              example-2:
                value:
                  device_ids:
                    - 421f6eca-6276-4893-bfeb-53cbbbba6f02
                  node: node0
            schema:
              properties:
                device_ids:
                  items:
                    format: uuid
                    type: string
                  type: array
                node:
                  description: |-
                    only for SSR: if node is not present, both nodes are restarted
                    for other devices: node should not be present
                  type: string
              required:
                - device_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiRestartSiteDevices
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/search':
    get:
      description: Search Device
      operationId: searchSiteDevices
      parameters:
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: device type
          in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: device MAC
          in: query
          name: mac
          schema:
            type: string
        - description: version
          in: query
          name: version
          schema:
            type: string
        - description: power_constrained
          in: query
          name: power_constrained
          schema:
            type: boolean
        - $ref: ./components/parameters/ip.yml
        - description: 'MxTunnel status, up / down'
          in: query
          name: mxtunnel_status
          schema:
            enum:
              - up
              - down
            type: string
        - description: 'Mist Edge id, if AP is connecting to a Mist Edge'
          in: query
          name: mxedge_id
          schema:
            format: uuid
            type: string
        - description: LLDP system name
          in: query
          name: lldp_system_name
          schema:
            type: string
        - description: LLDP system description
          in: query
          name: lldp_system_desc
          schema:
            type: string
        - description: LLDP port id
          in: query
          name: lldp_port_id
          schema:
            type: string
        - description: LLDP management ip address
          in: query
          name: lldp_mgmt_addr
          schema:
            type: string
        - description: Channel of band_24
          in: query
          name: band_24_channel
          schema:
            type: integer
        - description: Channel of band_5
          in: query
          name: band_5_channel
          schema:
            type: integer
        - description: Channel of band_6
          in: query
          name: band_6_channel
          schema:
            type: integer
        - description: Bandwidth of band_24
          in: query
          name: band_24_bandwith
          schema:
            type: integer
        - description: Bandwidth of band_5
          in: query
          name: band_5_bandwith
          schema:
            type: integer
        - description: Bandwidth of band_6
          in: query
          name: band_6_bandwith
          schema:
            type: integer
        - description: Port speed of eth0
          in: query
          name: eth0_port_speed
          schema:
            type: integer
        - description: sort options
          in: query
          name: sort
          schema:
            default: timestamp
            enum:
              - timestamp
              - mac
              - model
              - sku
            type: string
        - description: sort options in reverse order
          in: query
          name: desc-sort
          schema:
            enum:
              - timestamp
              - mac
              - model
              - sku
            type: string
        - description: whether to return device stats
          in: query
          name: stats
          schema:
            default: false
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/DevicesSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDevices
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/send_ble_beacon':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Send arbitrary BLE Beacon for a period of time

        Note that only the devices that are connected will be restarted.
      operationId: sendSiteDevicesArbitratryBleBeacon
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  beacon_frame: 68b329da9893e34099c7d8ad5cb9c940
                  beacon_freq: 100
                  duration: 10
                  macs:
                    - 5c5b35584a6f
                    - 5c5b350ea3b3
                  map_ids:
                    - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
            schema:
              properties:
                beacon_frame:
                  example: 68b329da9893e34099c7d8ad5cb9c940
                  type: string
                beacon_freq:
                  example: 100
                  type: integer
                duration:
                  example: 10
                  maximum: 60
                  minimum: 1
                  type: integer
                macs:
                  example:
                    - 5c5b35584a6f
                    - 5c5b350ea3b3
                  items:
                    type: string
                  type: array
                map_ids:
                  example:
                    - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: sendSiteDevicesArbitratryBleBeacon
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/upgrade':
    get:
      description: Get all upgrades for site
      operationId: listSiteDevicesUpgrade
      parameters:
        - in: query
          name: status
          schema:
            enum:
              - downloading
              - completed
              - created
              - downloaded
              - upgrading
              - cancelled
              - failed
            type: string
      responses:
        '200':
          $ref: ./components/responses/DeviceUpgradeArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteDevicesUpgrade
      tags:
        - Sites Devices Upgrades
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Upgrade Multiple Device

        **Note**: this call doesn’t guarantee the devices to be upgraded right away (they may be offline)
      operationId: multiUpgradeSiteDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  canary_phases:
                    - 1
                    - 10
                    - 50
                    - 100
                  device_ids:
                    - string
                  enable_p2p: true
                  force: false
                  max_failure_percentage: 5
                  max_failures:
                    - 0
                  models:
                    - string
                  start_time: 0
                  strategy: big_bang
                  version: stable
            schema:
              $ref: ./components/schemas/device_upgrade.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/DeviceUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: multiUpgradeSiteDevices
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}':
    get:
      description: Get Site Device Upgrade
      operationId: getSiteUpgrade
      responses:
        '200':
          $ref: ./components/responses/DeviceUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteUpgrade
      tags:
        - Sites Devices Upgrades
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
  '/api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}/cancel':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
    post:
      description: Best effort to cancel an upgrade. Devices which are already upgraded wont be touched
      operationId: cancelSiteDeviceUpgrade
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: cancelSiteDeviceUpgrade
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/devices/upgrade_bios':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Upgrade Bios Multiple Device
      operationId: upgraseSiteMultipleDevicesBios
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  device_ids:
                    - 00000000-0000-0000-1000-5c5b35584a6f
                  models:
                    - EX4400-48T
                  version: CDEN_P_EX1_00.15.01.00
            schema:
              properties:
                device_ids:
                  description: list of device id to upgrade bios
                  items:
                    example: 00000000-0000-0000-1000-5c5b35584a6f
                    format: uuid
                    type: string
                  type: array
                models:
                  description: list of device model to upgrade bios
                  items:
                    example: EX4400-48T
                    type: string
                  type: array
                reboot:
                  default: false
                  description: Reboot device immediately after upgrade is completed
                  type: boolean
                version:
                  description: specific bios version
                  example: CDEN_P_EX1_00.15.01.00
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: upgraseSiteMultipleDevicesBios
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/devices/versions':
    get:
      description: Get List of Available Device Versions
      operationId: listSiteAvailableDeviceVersions
      parameters:
        - description: fetch version for device type (E.g. switch)
          in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
            type: string
        - description: 'fetch version for device model, use/combine with `type` as needed (for switch and gateway devices)'
          in: query
          name: model
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/DeviceVersion.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteAvailableDeviceVersions
      tags:
        - Sites Devices Upgrades
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/devices/zerioze':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Zeroize all FIPS APs in the Site
      operationId: zeroizeSiteFipsAllAps
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  password: NUKETHESITE
            schema:
              properties:
                password:
                  description: FIPS zeroize password
                  type: string
              required:
                - password
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: zeroizeSiteFipsAllAps
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/{device_id}':
    delete:
      description: Delete Site Device
      operationId: deleteSiteDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteDevice
      tags:
        - Sites Devices
    get:
      description: Get Device Configuration
      operationId: getSiteDevice
      responses:
        '200':
          $ref: ./components/responses/Device.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDevice
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    put:
      description: Update Device Configuration
      operationId: updateSiteDevice
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: conference room
              oneOf:
                - $ref: ./components/schemas/device_ap.yml
                - $ref: ./components/schemas/device_switch.yml
                - $ref: ./components/schemas/device_gateway.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Device.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteDevice
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/{device_id}/arp':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        ARP can be performed on the Device. The output will be available through websocket. As there can be multiple command issued against the same AP at the same time and the output all goes through the same websocket stream, session is introduced for demux.


        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```json
        { 
         "event": "data", 
         "channel": "/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd", 
         "data": { 
           "session": "session_id", 
           "raw": 
           "Output": "\tMAC\t\tDEV\tVLAN\tRx Packets\t\t Rx Bytes\t\tTx Packets\t\t Tx Bytes\tFlows\tIdle sec\n-----------------------------------------------------------------------------------------------------------------------"
          } 
        }
        ```
      operationId: arpFromDevice
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
            schema:
              properties:
                node:
                  description: only for HA
                  enum:
                    - node0
                    - node1
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: arpFromDevice
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/bounce_port':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Port Bounce can be performed from the Switch.The output will be available through websocket. As there can be multiple command issued against the same AP at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```json
        {
            "event": "data",
            "channel": "/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd",
            "data": {
                "session": "session_id",
                "raw": "Port bounce complete."
            }
        }
        ```
      operationId: portsBounceFromSwitch
      requestBody:
        content:
          application/json:
            examples:
              multiple:
                value:
                  ports:
                    - ge-0/0/0
                    - ge-0/0/1
              single:
                value:
                  port: ge-0/0/0
            schema:
              properties:
                port:
                  description: the port to bounce
                  type: string
                ports:
                  description: list of ports to bounce
                  items:
                    type: string
                  type: array
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: portsBounceFromSwitch
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/cable_test':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        TDR can be performed from the Switch. The output will be available through websocket. As there can be multiple command issued against the same Switch at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```json
        {
            "event": "data",
            "channel": "/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd",
            "data": {
                "session": "session_id",
                "raw": "Interface TDR detail:\nTest status : Test successfully executed  ge-0/0/0\n"
            }
        }
        ```
      operationId: cableTestFromSwitch
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  port: ge-0/0/0
            schema:
              properties:
                port:
                  description: the port to run the cable test
                  type: string
              required:
                - port
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: cableTestFromSwitch
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/check_radius_server':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Ping test from the AP to confirm ‘reachability’ of the Radius server. Utilize Juniper EX switch(to which an AP is connected to) radius test capabilities to get details on the Radius Server ‘availability’.
      operationId: startSiteSwitchRadiusSyntheticTest
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  password: string
                  profile: dot1x
                  user: string
            schema:
              properties:
                password:
                  description: Specify the password associated with the username
                  type: string
                profile:
                  default: dot1x
                  description: Specify the access profile associated with the subscriber
                  type: string
                user:
                  description: Specify the subscriber username to test
                  type: string
              required:
                - user
                - password
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: triggerSiteSwitchRadiusSyntheticTest
      tags:
        - Sites Synthetic Tests
  '/api/v1/sites/{site_id}/devices/{device_id}/clear_arp':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Clear the entire ARP cache or a subset if arguments are provided.

        *Note*: port_id is optional if neither vlan nor ip is specified
      operationId: clearSiteSsrArpCache
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ip: 10.1.1.1
                  node: node0
                  port_id: wan
                  vlan: 1000
            schema:
              properties:
                ip:
                  description: The IP address for which to clear an ARP entry. port_id must be specified. Both vlan and ip cannot be specified.
                  example: 10.1.1.1
                  type: string
                node:
                  description: only for HA
                  enum:
                    - node0
                    - node1
                  type: string
                port_id:
                  description: The device interface on which to clear the ARP cache.
                  example: wan
                  type: string
                vlan:
                  description: The VLAN on which to clear the ARP cache. port_id must be specified. Both vlan and ip cannot be specified.
                  example: 1000
                  type: integer
              type: object
          application/xml:
            schema:
              properties:
                ip:
                  description: The IP address for which to clear an ARP entry. port_id must be specified. Both vlan and ip cannot be specified.
                  type: string
                port_id:
                  description: The device interface on which to clear the ARP cache.
                  type: string
                vlan:
                  description: The VLAN on which to clear the ARP cache. port_id must be specified. Both vlan and ip cannot be specified.
                  type: integer
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          description: |-
            port_id must be specified with vlan or ip
            Both vlan and ip cannot be specified
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteSsrArpCache
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/clear_bgp':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Clear routes associated with one or all BGP neighbors
      operationId: clearSiteSsrBgpRoutes
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  neighbor: all
                  type: in
                  vrf: TestVrf
            schema:
              $ref: ./components/schemas/req_clear_bgp.yml
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          description: parameter neighbor absent
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteBgpRoutes
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/clear_bpdu_error':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Clear bridge protocol data unit (BPDU) error condition caused by the detection of a possible bridging loop from Spanning Tree Protocol (STP) operation that renders the port unoperational.
      operationId: clearBpduErrosFromPortsOnSwitch
      requestBody:
        content:
          application/json:
            schema:
              properties:
                port:
                  description: 'the port on which to clear the detected BPDU error, or `all` for all ports'
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          description: Port not specified
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearBpduErrosFromPortsOnSwitch
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/clear_macs':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'Clear all learned MAC addresses, including persistent MAC addresses, on a port.'
      operationId: clearAllLearnedMacsFromPortOnSwitch
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ports:
                    - ge-0/0/0.0
            schema:
              properties:
                ports:
                  description: 'the ports on which to clear the detected BPDU error, or `["all"]` for all ports'
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearAllLearnedMacsFromPortOnSwitch
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/config_cmd':
    get:
      description: |-
        Get Config CLI Commands
        For a brown-field switch deployment where we adopted the switch through Adoption Command, we do not wipe out / overwrite the existing config automatically. Instead, we generate CLI commands that we would have generated. The user can inspect, modify, and incorporate this into their existing config manually.

        Once they feel comfortable about the config we generate, they can enable allow_mist_config where we will take full control of their config like a claimed switch
      operationId: getSiteDeviceConfigCmd
      parameters:
        - description: Make output cmds sorted (for better readability) or not.
          in: query
          name: sort
          schema:
            default: 'false'
            enum:
              - 'true'
              - 'false'
            type: string
      responses:
        '200':
          $ref: ./components/responses/DeviceConfigCmd.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceConfigCmd
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
  '/api/v1/sites/{site_id}/devices/{device_id}/ha':
    delete:
      description: Delete HA Cluster
      operationId: deleteSiteDeviceHaCluster
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteDeviceHaCluster
      tags:
        - Sites Devices - WAN HA
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        ## Create HA Cluster
        Both nodes has to be in the same site. We expect the user to configure ha_sync / ha_data port in port_configs already

        ### SRX cabling

        see [Chassis Cluster User Guide for SRX Series Devices](https://www.juniper.net/documentation/us/en/software/junos/chassis-cluster-security-devices/topics/concept/chassis-cluster-srx-series-node-interface-understanding.html) Here’s the recommended cabling.

        #### SRX300

        From ZTP / default state, ge-0/0/0 and ge-0/0/7 (SFP) are default WAN ports and will get DHCP IP. However, ge-0/0/0 becomes OOB/fxp0 after cluster is enabled (i.e. using it for reach Mist is not recommended)

        1.  form cluster in UI
        2.  configure ge-0/0/7,ge-1/0/7 for WAN (reth0)
        3.  configure ge-0/0/2,ge-1/0/2 for ha_data
        4.  configure ge-0/0/3- for LAN or additional WAN e.g.
            

        ``` json
        {
            "port_config": {
                "ge-0/0/2,ge-1/0/2": {
                    "usage": "ha_data"
                },
                "ge-0/0/7,ge-1/0/7": {
                    "usage": "wan",
                    "redundant": true,
                    "reth_idx": 0,
                    "ip_config": {"type": "dhcp"}
                },
            }
        }

        ```

        1.  connect ge-0/0/1 back to back for ha_control
        2.  connect ge-0/0/2 back to back for ha_data
        3.  connect both ge-0/0/7 to uplink switch to WAN and to reach Mist
        4.  power up both devices
        5.  it takes about 30 minutes for the cluster to form
            

        #### SRX320

        From ZTP / default state, ge-0/0/0, ge-0/0/7 (SFP) and cl-1/0/0 (LTE) are default WAN ports and will get DHCP IP. However, ge-0/0/0 becomes OOB/fxp0 after cluster is enabled (i.e. using it for reach Mist is not recommended)

        ##### ZTP via ge-0/0/7

        Similar to SRX300

        ##### ZTP via cl-1/0/0 (LTE)

        1.  form cluster in UI
        2.  configure cl-1/0/0, cl-3/0/0 as WAN (reth0)
        3.  configure ge-0/0/2,ge-3/0/2 for ha_data
        4.  same as above
            

        #### SRX340 / SRX345 / SRX380

        SRX340/SRX345 has dedicated OOB/fxp0 ports

        1.  form cluster in UI
        2.  configure ge-0/0/0,ge-5/0/0 for WAN (reth0)
        3.  configure ge-0/0/2,ge-5/0/2 for ha_data
        4.  configure ge-0/0/3- for LAN or additional WAN
        5.  connect ge-0/0/0 to uplink switch to WAN and to reach Mist
        6.  connect ge-0/0/1 back-to-back for ha_control
        7.  connect ge-0/0/2 back-to-back for ha_data (fabric); or for SRX380, xe-0/0/16 if 10G SFP+ is used
        8.  connect ge-0/0/3- to LAN or additional WANs
            

        #### SRX550

        ge-0/0/0 becomes OOB/fxp0 after cluster is enabled, make suenable oob_ip_config as dhcp to maintain cloud connectivity

        1.  connect ge-0/0/0 to reach Mist (after cluster is fully up, this port becomes OOB/fxp0)
        2.  connect ge-0/0/1 back-to-back for ha_control
        3.  connect ge-0/0/2 back-to-back for ha_data (fabric)
        4.  connect ge-0/0/3 to WAN (after cluster is up, intended to be used for reth0)
        5.  connect ge-0/0/4- to LAN or additional WANs
            

        #### SRX1500

        SRX1500 has, additionally, dedicated HA Control port

        1.  form cluster in UI
        2.  configure ge-0/0/0,ge-5/0/0 for WAN (reth0)
        3.  configure ge-0/0/1,ge-5/0/1 for ha_data
        4.  configure ge-0/0/2- for LAN or additional WAN
        5.  connect dedicated ha_control back-to-back
        6.  connect ge-0/0/0 to uplink switch to WAN and to reach Mist
        7.  connect ge-0/0/1 back-to-back for ha_data
        8.  connect ge-0/0/2- to LAN or additional WANs
            

        #### SRX4100

        SRX4100 has dedicated ha_control and ha_data (fabric) ports

        1.  connect dedicated ha_control back-to-back
        2.  connect dedicated ha_data back-to-back
        3.  connect xe-0/0/0 to WAN to reach Mist
        4.  connect xe-0/0/1- to LAN or additional WANs
            

        #### VSRX

        When standalone, VSRX has fxp0 as first Network Adapter, then ge-0/0/0-N When clustered, VSRX has fxp0, em0, then ge-0/0/0-N

        1.  connect net0 (fxp0) to WAN to reach Mist
        2.  connect net1 back-to-back for ha_control
        3.  connect net2 (ge-0/0/0) back-to-back for ha_data (fab0/fab1)
        4.  connect net3 (ge-0/0/1) to WAN, intended to be used for reth0
        5.  connect net4 (ge-0/0/2) to LAN
            

        SRX340/SRX345 has dedicated OOB/fxp0 ports VSRX has fxp0 as first Network Adapter, then ge-0/0/0-N

        1.  connect ge-0/0/0 to WAN to reach Mist
        2.  connect ge-0/0/1 back-to-back for ha_control
        3.  connect ge-0/0/2 back-to-back for ha_data (fabric); or for SRX380, xe-0/0/16 if 10G SFP+ is used
        4.  connect ge-0/0/3- to LAN or additional WANs
            

        #### SRX550

        ge-0/0/0 becomes OOB/fxp0 after cluster is enabled, make suenable oob_ip_config as dhcp to maintain cloud connectivity

        1.  connect ge-0/0/0 to reach Mist (after cluster is fully up, this port becomes OOB/fxp0)
        2.  connect ge-0/0/1 back-to-back for ha_control
        3.  connect ge-0/0/2 back-to-back for ha_data (fabric)
        4.  connect ge-0/0/3 to WAN (after cluster is up, intended to be used for reth0)
        5.  connect ge-0/0/4- to LAN or additional WANs
            

        #### SRX1500

        SRX1500 has, additionally, dedicated HA Control port

        1. form cluster in UI
        2. configure ge-0/0/0,ge-7/0/0 for WAN (reth0)
        3. configure ge-0/0/1,ge-7/0/1 for ha_data
        4. configure ge-0/0/2- for LAN or additional WAN
        5. connect dedicated ha_control back-to-back
        6. connect ge-0/0/0 to uplink switch to WAN and to reach Mist
        7. connect ge-0/0/1 back-to-back for ha_data
        8. connect ge-0/0/2- to LAN or additional WANs

            
        #### SRX1600

        SRX1600 has, additionally, two dedicated HA Control port

        1. form cluster in UI
        2. configure ge-0/0/0,ge-7/0/0 for WAN (reth0)
        3. configure ge-0/0/1,ge-7/0/1 for ha_data
        4. configure ge-0/0/2- for LAN or additional WAN
        5. connect dedicated both ha_control back-to-back
        6. connect ge-0/0/0 to uplink switch to WAN and to reach Mist
        7. connect ge-0/0/1 back-to-back for ha_data
        8. connect ge-0/0/2- to LAN or additional WANs


        #### SRX4100

        SRX4100 has dedicated ha_control and ha_data (fabric) ports

        1.  connect dedicated ha_control back-to-back
        2.  connect dedicated ha_data back-to-back
        3.  connect xe-0/0/0 to WAN to reach Mist
        4.  connect xe-0/0/1- to LAN or additional WANs


        ## Replace a Node in a HA Cluster
        Usually Device Replacement is done by Device Replacement API. For a HA cluster, you can also replace a node by another device in the same site.
      operationId: createSiteDeviceHaCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  nodes:
                    - mac: aff827549235
                    - mac: 8396cd006c8c
            schema:
              properties:
                nodes:
                  items:
                    properties:
                      mac:
                        description: 'when replacing a noce, either mac has to remain the same as existing cluster'
                        minLength: 1
                        type: string
                    required:
                      - mac
                    type: object
                  minItems: 1
                  type: array
                  uniqueItems: true
              required:
                - nodes
              type: object
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteDeviceHaCluster
      tags:
        - Sites Devices - WAN HA
    put:
      deprecated: true
      description: Swap nodes on the HA Cluster
      operationId: swapSiteDeviceHaClusterNode
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mac:
                  description: "when `op`\_==`replacement_nodeX`, new node1\n's MAC, the device has to be standalone and assigned to the same site"
                  type: string
                op:
                  default: swap
                  enum:
                    - swap
                    - replace_node1
                  minLength: 1
                  type: string
              required:
                - op
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: swapSiteDeviceHaClusterNode
      tags:
        - Sites Devices - WAN HA
  '/api/v1/sites/{site_id}/devices/{device_id}/image{image_number}':
    delete:
      description: Delete image from a device
      operationId: deleteSiteDeviceImage
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteDeviceImage
      tags:
        - Sites Devices
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
      - in: path
        name: image_number
        required: true
        schema:
          type: integer
    post:
      description: Attach up to 3 images to a device
      operationId: addSiteDeviceImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./components/schemas/image_upload.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addSiteDeviceImage
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/{device_id}/iot':
    get:
      description: Returns the current state of each enabled IoT pin configured as an output.
      operationId: getSiteDeviceIotPort
      responses:
        '200':
          $ref: ./components/responses/DeviceIot.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceIotPort
      tags:
        - Sites Devices - Wireless
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    put:
      description: |-
        **Note**: For each IoT pin referenced:
         * The pin must be enabled using the Device `iot_config` API
         * The pin must support the output direction
      operationId: setSiteDeviceIotPort
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: integer
              description: Property key is the IoT port name (e.g A0)
              example:
                A1: 1
                DO: 0
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/DeviceIot.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setSiteDeviceIotPort
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/{device_id}/local_port_config':
    delete:
      description: Sometimes HelpDesk Admin needs to change port configs
      operationId: deleteSiteLocalSwitchPortConfig
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteLocalSwitchPortConfig
      tags:
        - Sites Devices - Wired
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    put:
      description: Sometimes HelpDesk Admin needs to change port configs
      operationId: updateSiteLocalSwitchPortConfig
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ae_disable_lacp: true
                  ae_idx: 0
                  aggregated: false
                  description: string
                  disable_autoneg: true
                  duplex: auto
                  dynamic_usage: string
                  esilag: true
                  poe_disabled: true
                  speed: auto
                  usage: string
            schema:
              $ref: ./components/schemas/junos_port_config.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteLocalSwitchPortConfig
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/locate':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'Locate a Device by blinking it’s LED, it’s a persisted state that has to be stopped by calling Stop Locating API'
      operationId: startSiteLocateDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: startSiteLocateDevice
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/{device_id}/ping':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Ping from AP, Switch and SSR

        Ping can be performed from the Device. The output will be available through websocket. As there can be multiple command issued against the same AP at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```json
        {
            "event": "data",
            "channel": "/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd",
            "data": {
                "session": "session_id",
                "raw": "64 bytes from 23.211.0.110: seq=8 ttl=58 time=12.323 ms\n"
            }
        }
        ```
      operationId: pingFromDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  count: 10
                  host: 1.1.1.1
            schema:
              properties:
                count:
                  default: 10
                  type: integer
                egress_interface:
                  description: Interface through which packet needs to egress
                  type: string
                host:
                  example: 1.1.1.1
                  format: ipv4
                  type: string
                node:
                  description: Only for HA
                  enum:
                    - node0
                    - node1
                  type: string
                size:
                  default: 56
                  maximum: 65535
                  minimum: 56
                  type: integer
              required:
                - host
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: pingFromDevice
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/poll_stats':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'This API can be used to poll statistics from the Switch proactively once. After it is called, the statistics will be pushed back to the cloud within the statistics interval.'
      operationId: pollSiteSwitchStats
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: pollSiteSwitchStats
      tags:
        - Sites Devices - Wired
  '/api/v1/sites/{site_id}/devices/{device_id}/readopt':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'For the octerm devices, the device ID must come from fpc0. However, for a VC, the users may change the original fpc0 from CLI. To fix the issue, the readopt API could be used to trigger the readopt process so the device would get the corret device ID to connect the cloud.'
      operationId: readoptSiteOctermDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          description: he device is not a virtual chassis
      summary: readoptSiteOctermDevice
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/release_dhcp':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Releases an active DHCP lease.
      operationId: releaseSiteSsrDhcpLease
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  port: string
            schema:
              properties:
                node:
                  description: only for HA
                  enum:
                    - node0
                    - node1
                  type: string
                port:
                  description: The nework interface on which to release the current DHCP release
                  example: wan-interface
                  minLength: 1
                  type: string
              required:
                - port
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          description: Parameter `port ` absent
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: releaseSiteSsrDhcpLease
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/request_ztp_password':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'In the case where soemthing happens during/after ZTP, the root-password is modified (required for ZTP to set up outbound-ssh) but the user-defined password config has not be configured. This API can be used to retrieve the temporary password.'
      operationId: getSiteDeviceZtpPassword
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    root_password: ef8070ef8f924edb592e1819ed64b31172ab8de9d5cde75d3f46acd9506202ab9b1cbb97e381c5aa11037f17e5ed7b4b609461cd813d944670549d410ef82f2e
              schema:
                properties:
                  root_password:
                    minLength: 1
                    type: string
                required:
                  - root_password
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceZtpPassword
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/{device_id}/resolve_dns':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        DNS resolutions are performed on the Device. The output will be available through websocket. As there can be multiple command issued against the same SSR at the same time and the output all goes through the same websocket stream, `session` is used for demux.
         
         #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```
         Router      | Hostname               | Resolved | Last Resolved        | Expiration
        -------------|------------------------|----------|----------------------|---------------------
         test-device | xxx.yyy.net            | Y        | 2022-03-28T03:56:49Z | 2022-03-28T03:57:49Z
        ```
      operationId: testSiteSsrDnsResolution
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: testSiteSsrDnsResolution
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/restart':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Restart / Reboot a device
      operationId: restartSiteDevice
      requestBody:
        content:
          application/json:
            schema:
              properties:
                member:
                  description: optional for VC member
                  type: string
                node:
                  description: |-
                    only for SSR: if node is not present, both nodes are restarted
                    for other devices: node should not be present
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: restartSiteDevice
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/{device_id}/service_ping':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Ping from SSR

        Service Ping can be performed from the Device. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```json
        {
            "event": "data",
            "channel": "/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd",
            "data": {
                "session": "session_id",
                "raw": "64 bytes from 23.211.0.110: seq=8 ttl=58 time=12.323 ms\n"
            }
        }
        ```
      operationId: servicePingFromSsr
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  count: 10
                  host: 1.1.1.1
                  service: web-session
            schema:
              properties:
                count:
                  default: 10
                  type: integer
                host:
                  format: ipv4
                  type: string
                service:
                  description: ping packet takes the same path as the service
                  type: string
                size:
                  default: 56
                  maximum: 65535
                  minimum: 56
                  type: integer
                tenant:
                  description: tenant context in which the packet is sent
                  type: string
              required:
                - host
                - service
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: servicePingFromSsr
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/show_arp':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |
        Get ARP Table from the Device. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, `session` is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
      operationId: getSiteDeviceArpTable
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  neighbor: 192.168.4.1
                  prefix: 192.168.0.5/30
                  protocol: bgp
                  route: advertised
                  vrf_name: default
            schema:
              properties:
                ip:
                  example: 192.168.30.7
                  type: string
                port:
                  example: ge-0/0/0.0
                  type: string
                vrf:
                  example: guest
                  type: string
              type: object
        description: all attributes are optional
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceArpTable
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/show_mac_table':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |
        Get MAC Table from the Device. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, `session` is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
      operationId: getSiteDeviceMacTable
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  neighbor: 192.168.4.1
                  prefix: 192.168.0.5/30
                  protocol: bgp
                  route: advertised
                  vrf_name: default
            schema:
              properties:
                mac_address:
                  example: '112233445566'
                  type: string
                port:
                  example: ge-0/0/0.0
                  type: string
                vlan_id:
                  example: ge-0/0/0.0
                  type: string
              type: object
        description: all attributes are optional
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceMacTable
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/show_route':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Get routes from SSR, SRX and Switch. 
        The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, `session` is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```
        admin@labsystem1.fiedler# show bgp neighbors
        BGP neighbor is 192.168.4.1, remote AS 4200000001, local AS 4200000128, external
        link
          BGP version 4, remote router ID 1.1.1.1
          BGP state = Established, up for 00:27:25
          Last read 00:00:25, hold time is 90, keepalive interval is 30 seconds
          Configured hold time is 90, keepalive interval is 30 seconds
          Neighbor capabilities:
            4 Byte AS: advertised and received
            Route refresh: advertised and received(old &amp; new)
            Address family IPv4 Unicast: advertised and received
            Graceful Restart Capabilty: advertised and received
              Remote Restart timer is 120 seconds
              Address families by peer:
                none
                ...
        ```
      operationId: getSiteSsrAndSrxRoutes
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  neighbor: 192.168.4.1
                  prefix: 192.168.0.5/30
                  protocol: bgp
                  route: advertised
                  vrf_name: default
            schema:
              $ref: ./components/schemas/req_show_route.yml
        description: all attributes are optional
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceRoutes
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/show_service_path':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Get service path information of the Device. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, session is introduced for demux.


        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```
        show service-path

        Service    Service-route     Type              Destination  Next-Hop  Interface  Vector  Cost  Rate  Capacity        State

        Web        web-route1        service-agent     4.4.4.4      1.1.1.2     lan        red     10    1    200/3000       Up*
        Web        web-route1        service-agent     4.4.4.4      1.1.1.3     lan        red     10    1    200/3000       Up
        Web        web-route2        service-agent     5.5.5.5      2.2.2.2     lan       blue     20    2    50/unlimited   Down
        Login      <None>            BgpOverSVR        10.1.1.1     1.2.3.4     wan        red     10    3        -          Up
        Login      <None>            BgpOverSVR        11.1.1.1     1.2.3.4     wan        red     10    1        -          Up
        App1       <None>            Routed                -           -         -          -      -     -        -          -
        App1       learned-routed    Routed                -           -         -          -      -     -        -          -
        ```
      operationId: getSiteSsrServicePath
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  service_name: any
            schema:
              description: The exact service name for which to display the service path
              properties:
                node:
                  description: only for HA
                  enum:
                    - node0
                    - node1
                  type: string
                service_name:
                  example: any
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSsrServicePath
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/show_session':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Get active sessions passing through the Device. The output will be available through websocket. As there can be multiple command issued against the same device at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
        ##### Example output from ws stream
        ```
        admin@ssr.node# show sessions
        Fri 2020-04-17 16:55:34 UTC

        Node: node1

        ====================================== ===== ============= =========== ========== ====== ======= ================= ========== ================= =========== ================= ========== =================== ========= =================
         Session Id                             Dir   Service       Tenant      Dev Name   VLAN   Proto   Src IP            Src Port   Dest IP           Dest Port   NAT IP            NAT Port   Payload Encrypted   Timeout   Uptime
        ====================================== ===== ============= =========== ========== ====== ======= ================= ========== ================= =========== ================= ========== =================== ========= =================
         01187fb8-765a-45e5-ae90-37d77f15e292   fwd   Internet      lanSubnet   lan           0   udp     192.168.0.28         44674   35.166.173.18          9930   96.230.191.130       19569   false                   154   0 days  0:00:28
         01187fb8-765a-45e5-ae90-37d77f15e292   rev   Internet      lanSubnet   wan           0   udp     35.166.173.18         9930   96.230.191.130        19569   0.0.0.0                  0   false                   154   0 days  0:00:28
         0859a4ae-bcff-4aa6-b812-79a5236a6c13   fwd   Internet      lanSubnet   lan           0   tcp     192.168.0.41         60843   17.249.171.246          443   96.230.191.130       51941   false                     2   0 days  0:00:10

        ```
      operationId: getSiteSsrAndSrxSessions
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  service_name: any
            schema:
              properties:
                node:
                  description: 'only for '
                  enum:
                    - node0
                    - node1
                  type: string
                service_name:
                  description: The exact service name for which to display the active sessions
                  example: any
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSsrAndSrxSessions
      tags:
        - Sites Devices - WAN
  '/api/v1/sites/{site_id}/devices/{device_id}/snapshot':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: 'Create recovery device snapshot (Available on Junos OS EX2300-, EX3400-, EX4400- devices)'
      operationId: createSiteDeviceSnapshot
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    status_id: string
                    staus: starting
                    timestamp: 0
              schema:
                properties:
                  status_id:
                    description: the internal status id
                    type: string
                  staus:
                    enum:
                      - starting
                      - inprogress
                      - success
                      - error
                      - scheduled
                    type: string
                  timestamp:
                    type: number
                type: object
          description: OK
        '400':
          content:
            application/json:
              examples:
                cannot-snapshot-an-offline-device:
                  value: cannot snapshot an offline device
                snapshot-not-supported:
                  value: snapshot not supported
              schema:
                type: string
          description: Bad Request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteDeviceSnapshot
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/support':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Support / Upload device support files

        #### Info Param
        **Parameter**|**Description** 
         :-------------: |:-------------: |:-------------: 
        process|Upload 1 file with output of show system processes extensive
        outbound-ssh|Upload 1 file that concatenates all /var/log/outbound-ssh.log* files
        messages|Upload 1 to 10 /var/log/messages* files
        core-dumps|Upload all core dump files, if any
        full|string|Upload 1 file with output of request support information, 1 file that concatenates all /var/log/outbound-ssh.log files, all core dump files, the 3 most recent /var/log/messages files, and Mist agent logs (for Junos devices running the Mist agent)
        var-logs|Upload all non-empty files in the /var/log/ directory
        jma-logs|Upload Mist agent logs (for Junos devices running the Mist agent only)
      operationId: uploadSiteDeviceSupportFile
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  info: full
            schema:
              properties:
                info:
                  default: full
                  description: 'optional choice: process, outbound-ssh, and full (default)'
                  enum:
                    - process
                    - outbound-ssh
                    - messages
                    - code-dumps
                    - full
                    - var-logs
                    - jma-logs
                  type: string
                node:
                  description: 'optional: for SSR, if node is not present, both nodes support files are uploaded'
                  type: string
                num_messages_files:
                  default: 1
                  description: 'optional: number of most recent messages files to upload.'
                  maximum: 10
                  minimum: 1
                  type: integer
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          description: Device not online
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uploadSiteDeviceSupportFile
      tags:
        - Sites Devices
  '/api/v1/sites/{site_id}/devices/{device_id}/synthetic_test':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |
        Device Synthetic Test
      operationId: triggerSiteDeviceSyntheticTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/synthetic_test_device.yml
      responses:
        '200':
          description: scheduled
        '400':
          description: Device not online / Device not supported / Already in progress
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: triggerSiteDeviceSyntheticTest
      tags:
        - Sites Synthetic Tests
  '/api/v1/sites/{site_id}/devices/{device_id}/traceroute':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        Traceroute can be performed from the Device. The output will be available through websocket. As there can be multiple command issued against the same AP at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            "subscribe": "/sites/{site_id}/devices/{device_id}/cmd"
        }
        ```
      operationId: tracerouteFromDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  host: string
                  port: 33434
                  protocol: udp
            schema:
              $ref: ./components/schemas/req_traceroute.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Session.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: tracerouteFromDevice
      tags:
        - Sites Devices Utilities
  '/api/v1/sites/{site_id}/devices/{device_id}/unlocate':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Stop Locate a Device
      operationId: stopSiteLocateDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: stopSiteLocateDevice
      tags:
        - Sites Devices - Wireless
  '/api/v1/sites/{site_id}/devices/{device_id}/upgrade':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Device Upgrade
      operationId: upgradeSiteDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 3.1.5
            schema:
              properties:
                reboot:
                  default: false
                  description: Reboot device immediately after upgrade is completed (Available on Junos OS devices)
                  type: boolean
                snapshot:
                  default: false
                  description: Perform recovery snapshot after device is rebooted (Available on Junos OS devices)
                  type: boolean
                version:
                  default: stable
                  description: 'specific `version` / `stable`, default is to use the latest'
                  type: string
              required:
                - version
              type: object
      responses:
        '200':
          $ref: ./components/responses/UpgradeStatus.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeSiteDevice
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/devices/{device_id}/upgrade_bios':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Upgrade device bios
      operationId: upgradeSiteDeviceBios
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  version: CDEN_P_EX1_00.20.01.00
            schema:
              properties:
                reboot:
                  default: false
                  description: Reboot device immediately after upgrade is completed
                  type: boolean
                version:
                  description: specific bios version
                  example: CDEN_P_EX1_00.20.01.00
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    status: inprogress
                    timestamp: 1428949501
              schema:
                properties:
                  status:
                    type: string
                  timestamp:
                    type: integer
                type: object
          description: OK
      summary: upgradeSiteDeviceBios
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/devices/{device_id}/vc':
    delete:
      description: |-
        When all the member switches of VC are removed and only member ID 0 is left, the cloud would detect this situation and automatically changes the single switch to non-VC role.

        For some unexpected cases that the VC is gone and disconncted, the API below could be used to change the state of VC’s switches to be standalone. After it is executed, all the switches will be shown as standalone switches under Inventory.
      operationId: deleteSiteVirtualChassis
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteVirtualChassis
      tags:
        - Sites Devices - Wired Virtual Chassis
    get:
      description: |-
        Get VC Status

        The API returns a combined view of the VC status which includes topology and stats_
      operationId: getSiteDeviceVirtualChassis
      responses:
        '200':
          $ref: ./components/responses/Vc.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceVirtualChassis
      tags:
        - Sites Devices - Wired Virtual Chassis
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: |-
        For models (e.g. EX3400 and up) having dedicated VC ports, it is easier to form a VC by just connecting cables with the dedicated VC ports. Cloud will detect the new VC and update the inventory.

        In case that the user would like to choose the dedicated switch as a VC master. Or for EX2300-C-12P and EX2300-C-12T which doesn’t have dedicated VC ports, below are procedures to automate the VC creation:

        1. Power on the switch that is choosen as the VC master first. And the powering on the other member switches.
        2. Claim or adopt all these switches under the same organization’s Inventory
        3. Assign these switches into the same Site
        4. Invoke vc command on the switch choosen to be the VC master. For EX2300-C-12P, VC ports will be created automatically.
        5. Connect the cables to the VC ports for these switches
        6. Wait for the VC to be formed. The Org’s inventory will be updated for the new VC.
      operationId: createSiteVirtualChassis
      requestBody:
        content:
          application/json:
            examples:
              create-a-VC-with-three-members:
                value:
                  members:
                    - mac: aff827549235
                      vc_ports:
                        - xe-0/1/0
                      vc_role: master
                    - mac: 8396cd006c8c
                      vc_ports:
                        - xe-0/1/0
                        - xe-0/1/1
                      vc_role: backup
                    - mac: 8396cd00888c
                      vc_ports:
                        - xe-0/1/0
                      vc_role: linecard
              create-a-pre-provisioned-VC-with-three-members:
                value:
                  members:
                    - mac: aff827549235
                      member_id: 0
                      vc_ports:
                        - xe-0/1/0
                        - xe-0/1/1
                      vc_role: master
                    - mac: 8396cd006c8c
                      member_id: 1
                      vc_ports:
                        - xe-0/1/0
                      vc_role: linecard
                    - mac: 8396cd00888c
                      member_id: 2
                      vc_ports:
                        - xe-0/1/0
                      vc_role: backup
                  preprovisioned: true
            schema:
              $ref: ./components/schemas/device_switch_vc.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Vc.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteVirtualChassis
      tags:
        - Sites Devices - Wired Virtual Chassis
    put:
      description: |-
        The VC creation and adding member switch API will update the device’s virtual chassis config which is applied after VC is formed to create JUNOS pre-provisioned virtual chassis configuration.

        ## Change to use preprovisioned VC
        To switch the VC to use preprovisioned VC, enable preprovisioned in virtual_chassis config. Both vc_role master and backup will be matched to routing-engine role in Junos preprovisioned VC config.

        In this config, fpc0 has to be the same as the mac of device_id. Use renumber if you want to replace fpc0 which involves device_id change.

        Notice: to configure preprovisioned VC, every member of the VC must be in the inventory.

        ## Add new members
        For models (e.g. EX4300 and up) having dedicated VC ports, it is easier to add new member switches into a VC by just connecting cables with the dedicated VC ports. Cloud will detect the new members and update the inventory.

        For EX2300 VC, adding new members requires to follow the procedures below:
        1. Powering on the new member switches and ensuring cables are not connected to any VC ports.
        2. Claim or adopt all new member switches under the VC’s organization Inventory
        3. Assign all new member switches to the same Site as the VC
        4. Invoke vc command to add switches to the VC.
        5. Connect the cables to the VC ports for these switches
        6. After a while, the Org’s Inventory shows this new switches has been added into the VC.

        ## Removing member switch
        To remove a member switch from the VC, following the procedures below:

        1. Ensuring the VC is connected to the cloud first
        2. Unplug the cable from the VC port of the switch
        3. Waiting for the VC state (vc_state) of this switch is changed to not-present
        4. Invoke update_vc with remove to remove this switch from the VC
        5. The Org’s Inventory shows the switch is removed.

        Please notice that member ID 0 (fpc0) cannot be removed. When a VC has two switches left, unpluging the cable may result in the situation that fpc0 becomes a line card (LC). When this situation is happened, please re-plug in the cable, wait for both switches becoming present (show virtual-chassis) and then removing the cable again.

        ## Renumber a member switch
        When a member switch doesn’t work properly and needed to be replaced, the renumber API could be used. The following two types of renumber are supported:

        1. Replace a non-fpc0 member switch
        2. Replace fpc0. When fpc0 is relaced, PAPI device config and JUNOS config will be both updated.

        For renumber to work, the following procedures are needed: 
        1. Ensuring the VC is connected to the cloud and the state of the member switch to be replaced must be non present. 
        2. Adding the new member switch to the VC 
        3. Waiting for the VC state (vc_state) of this VC to be updated to API server 
        4. Invoke vc with renumber to replace the new member switch from fpc X to

        ## Perprovision VC members
        By specifying “preprovision” op, you can convert the current VC to pre-provisioned mode, update VC members as well as specify vc_ports when adding new members for device models without dedicated vc ports. Use renumber for fpc0 replacement which involves device_id change.

        Note: 
        1. vc_ports is used for adding new members and not needed if * the device model has dedicated vc ports, or * no new member is added 
        2. New VC members to be added should exist in the same Site as the VC

        Update Device’s VC config can achieve similar purpose by directly modifying current virtual_chassis config. However, it cannot fulfill requests to enabling vc_ports on new members that are yet to belong to current VC.
      operationId: updateSiteVirtualChassisMember
      requestBody:
        content:
          application/json:
            examples:
              adding-two-new-switches-as-line-cards-into-the-VC:
                value:
                  members:
                    - mac: aff827549235
                      member: 0
                      vc_ports:
                        - xe-0/1/1
                      vc_role: linecard
                    - mac: 8396cd00777c
                      vc_ports:
                        - xe-0/1/0
                      vc_role: linecard
                  op: add
              convert-to-pre-provisioned-VC:
                value:
                  member: 0
                  members:
                    - mac: string
                      member: 0
                      vc_ports:
                        - string
                      vc_role: master
                  new-member: 0
                  op: add
              removing-two-switches-from-VC:
                value:
                  members:
                    - member: 2
                    - member: 3
                  op: remove
              renumber-member-ID-3-to-member-ID-2:
                value:
                  member: 3
                  new-member: 2
                  op: renumber
            schema:
              $ref: ./components/schemas/device_switch_vc_update.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Vc.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteVirtualChassisMember
      tags:
        - Sites Devices - Wired Virtual Chassis
  '/api/v1/sites/{site_id}/devices/{device_id}/vc/vc_port':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Set VC port
      operationId: setSiteVcPort
      requestBody:
        content:
          application/json:
            examples:
              delete-VC-port-of-xe-0/1/1-of-member-0-and-member-2:
                value:
                  members:
                    - member: 0
                      vc_ports:
                        - xe-0/1/1
                    - member: 2
                      vc_ports:
                        - xe-0/1/1
                  op: delete
              set-VC-port-of-xe-0/1/1-of-member-0-and-member-2:
                value:
                  members:
                    - member: 0
                      vc_ports:
                        - xe-0/1/1
                    - member: 2
                      vc_ports:
                        - xe-0/1/1
                  op: set
            schema:
              properties:
                members:
                  items:
                    properties:
                      member:
                        type: number
                      vc_ports:
                        items:
                          type: string
                        type: array
                    required:
                      - member
                    type: object
                  minItems: 1
                  type: array
                  uniqueItems: true
                op:
                  enum:
                    - set
                    - delete
                  minLength: 1
                  type: string
              required:
                - op
                - members
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: setSiteVcPort
      tags:
        - Sites Devices - Wired Virtual Chassis
  '/api/v1/sites/{site_id}/events/fast_roam':
    get:
      description: Get Roaming Events data
      operationId: getSiteRoamingEvents
      parameters:
        - description: event type
          in: query
          name: type
          schema:
            enum:
              - success
              - fail
              - none
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/EventsFastroam.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteRoamingEvents
      tags:
        - Sites Events
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/events/system/count':
    get:
      description: Count System Events
      operationId: countSiteSystemEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteSystemEvents
      tags:
        - Sites Events
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/events/system/search':
    get:
      description: Search System Events
      operationId: searchSiteSystemEvents
      parameters:
        - in: query
          name: type
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteSystemEvents
      tags:
        - Sites Events
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/evpn_topologies':
    get:
      description: Get the existing EVPN topology
      operationId: getSiteEvpnTopology
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteEvpnTopology
      tags:
        - Sites EVPN Topologies
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        While all the `evpn_id` / `downlink_ips` can be specifidd by hand, the easiest way is to call the `build_vpn_topology` API, allowing you to examine the diff, and update it yourself. You can also simply call it with `overwrite=true` which will apply the updates for you.

        **Notes:**
        1. You can use `core` / `distribution` / `access` to create a CLOS topology
        2. You can also use `core` / `distribution` to form a 2-tier EVPN topology where ESI-Lag is configured distribution to connect to access switches
        3. In a small/medium campus, `collapsed-core` can be used where core switches are the inter-connected to do EVPN
        4. The API uses a few pre-defined parameters and best-practices to generate the configs. It can be customized by using `evpn_options` in Site Setting / Network Template. (e.g. a different subnet for the underlay)

        #### Collapsed Core
        In a small-medium campus, EVPN can also be enabled only at the core switches (up to 4) by assigning all participating switches with `collapsed-core role`. When there are more than 2 switches, a ring-like topology will be formed.

        #### ESI-Lag
        If the access switchess does not have EVPN support, you can take advantage of EVPN by setting up ESI-Lag on distribution switches

        #### Leaf / Access / Collapsed-Core
        For leaf nodes in a EVPN topology, you’d have to configure the IPs for networks that would participate in EVPN. Optionally, VRFs to isolate traffic from one tenant verus another
      operationId: createSiteEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: CC
                  overwrite: true
                  pod_names:
                    '1': default
                    '2': default
                  switches:
                    - mac: 5c5b35000003
                      role: collapsed-core
                    - mac: 5c5b35000004
                      role: collapsed-core
            schema:
              $ref: ./components/schemas/junos_evpn_topology.yml
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteEvpnTopology
      tags:
        - Sites EVPN Topologies
  '/api/v1/sites/{site_id}/evpn_topologies/{evpn_topology_id}':
    delete:
      description: Delete the site EVPN Topology
      operationId: deleteSiteEvpnTopology
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteEvpnTopology
      tags:
        - Sites EVPN Topologies
    get:
      description: Get One EVPN Topology Detail
      operationId: getSiteEvpnTolopogy
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteEvpnTolopogy
      tags:
        - Sites EVPN Topologies
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/evpn_topology_id.yml
    put:
      description: Update the EVPN Topolgy
      operationId: updateSiteEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  overwrite: false
                  switches:
                    - mac: 5c5b35000003
                      role: collapsed-core
                    - mac: 5c5b35000004
                      role: none
            schema:
              $ref: ./components/schemas/junos_evpn_topology.yml
      responses:
        '200':
          $ref: ./components/responses/EvpnTopology.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteEvpnTopology
      tags:
        - Sites EVPN Topologies
  '/api/v1/sites/{site_id}/gatewaytemplates/derived':
    get:
      description: Get derived Gateway Templates for Site
      operationId: getSiteGatewayTemplateDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/Gatewaytemplate.yml
      summary: getSiteGatewayTemplateDerived
      tags:
        - Sites Site Templates
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/guests':
    get:
      description: Get List of Site Guest Authorizations
      operationId: listSiteAllGuestAuthorizations
      parameters:
        - description: UUID of single or multiple (Comma separated) WLAN under Site `site_id` (to filter by WLAN)
          in: query
          name: wlan_id
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/GuestsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteAllGuestAuthorizations
      tags:
        - Sites Guests
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/guests/count':
    get:
      description: Count Authorized Guest
      operationId: countSiteGuestAuthorizations
      parameters:
        - example: auth_method
          in: query
          name: distinct
          schema:
            default: auth_method
            enum:
              - auth_method
              - ssid
              - company
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteGuestAuthorizations
      tags:
        - Sites Guests
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/guests/search':
    get:
      description: Search Authorized Guest
      operationId: searchSiteGuestAuthorization
      parameters:
        - example: 00000000-0000-0000-0000-000000000000
          in: query
          name: wlan_id
          schema:
            type: string
        - in: query
          name: auth_method
          schema:
            type: string
        - in: query
          name: ssid
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/GuestsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteGuestAuthorization
      tags:
        - Sites Guests
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/guests/{guest_mac}':
    delete:
      description: Delete Guest Authorization
      operationId: deleteSiteGuestAuthorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteGuestAuthorization
      tags:
        - Sites Guests
    get:
      description: Get Guest Authorization
      operationId: getSiteGuestAuthorization
      responses:
        '200':
          $ref: ./components/responses/Guest.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteGuestAuthorization
      tags:
        - Sites Guests
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/guest_mac.yml
    put:
      description: 'Update Guest Authorization  '
      operationId: updateSiteGuestAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/guest.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Guest.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteGuestAuthorization
      tags:
        - Sites Guests
  '/api/v1/sites/{site_id}/insights/client/{client_mac}/{metric}':
    get:
      description: |-
        Get Client Insight Metrics
        See metrics possibilities at /api/v1/const/insight_metrics
      operationId: getSiteInsightMetricsForClient
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/InsightMetric.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteInsightMetricsForClient
      tags:
        - Sites Insights
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/sites/{site_id}/insights/device/{device_mac}/{metric}':
    get:
      description: |-
        Get AP Insight Metrics
        See metrics possibilities at /api/v1/const/insight_metrics
      operationId: getSiteInsightMetricsForDevice
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceMetric.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteInsightMetricsForDevice
      tags:
        - Sites Insights
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/metric.yml
      - $ref: ./components/parameters/device_mac.yml
  '/api/v1/sites/{site_id}/insights/rogues':
    get:
      description: Get List of Site Rogue/Neighbor APs
      operationId: listSiteRogueAPs
      parameters:
        - $ref: ./components/parameters/rogue_type.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/InsightRogue.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteRogueAPs
      tags:
        - Sites Rogues
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/insights/rogues/clients':
    get:
      description: Get List of Site Rogue Clients
      operationId: listSiteRogueClients
      parameters:
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/InsightRogueClients.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteRogueClients
      tags:
        - Sites Rogues
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/insights/{metric}':
    get:
      description: |-
        Get Site Insight Metrics
        See metrics possibilities at /api/v1/const/insight_metrics
      operationId: getSiteInsightMetrics
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/interval.yml
      responses:
        '200':
          $ref: ./components/responses/InsightMetric.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteInsightMetrics
      tags:
        - Sites Insights
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/metric.yml
  '/api/v1/sites/{site_id}/licenses/usages':
    get:
      description: This shows license usage (i.e. needed) based on the features enabled for the site.
      operationId: getSiteLicenseUsage
      responses:
        '200':
          $ref: ./components/responses/getLicenceUsage.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteLicenseUsage
      tags:
        - Sites Licenses
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/location/coverage':
    get:
      description: Get Beam Coverage Overview
      operationId: getSiteBeamCoverageOverview
      parameters:
        - description: map_id (filter by map_id)
          example: 00000000-0000-0000-0000-000000000000
          in: query
          name: map_id
          schema:
            type: string
        - in: query
          name: type
          schema:
            default: sdkclient
            enum:
              - sdkclient
              - client
              - asset
            type: string
        - description: where the start time will be calculated (with end time is now)
          in: query
          name: duration
          schema:
            default: 1h
            enum:
              - 1d
              - 5h
              - 1h
              - 30m
            type: string
        - $ref: ./components/parameters/resolution.yml
        - description: client_type (as filter. optional)
          in: query
          name: client_type
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    beams_means:
                      - - 1
                        - 3
                        - 3.2
                      - - 6
                        - 10
                        - 6.5
                    end: 1428954000
                    gridsize: 1
                    result_def:
                      - x
                      - 'y'
                      - beams_mean
                      - beacons_mean
                      - max_rssi
                      - avg_rssi
                    results:
                      - - 1
                        - 3
                        - 3.2
                        - 18.5
                        - -68
                        - -70
                      - - 6
                        - 10
                        - 6.5
                        - 30
                        - 1
                        - -72.5
                        - -75
                    start: 1428939600
              schema:
                properties:
                  beams_means:
                    description: 'list of [x, y, mean]s, x/y are in meters (UI would need to use map.ppm to calulate the pixel location from top-left).'
                    items:
                      items:
                        type: number
                      type: array
                    type: array
                  end:
                    type: integer
                  gridsize:
                    description: 'the size of grid, in meter'
                    type: number
                  result_def:
                    description: list of names annotating the fields in results
                    items:
                      type: string
                    type: array
                  results:
                    description: 'list of results, see result_def.'
                    items:
                      items:
                        type: number
                      type: array
                    type: array
                  start:
                    type: integer
                required:
                  - start
                  - end
                  - beams_means
                  - gridsize
                  - result_def
                  - results
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteBeamCoverageOverview
      tags:
        - Sites Location
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/location/ml/current':
    get:
      description: |-
        Get Machine Learning Current Stat
        For each VBLE AP, it has ML model parameters (e.g. Path-loss-estimate, Intercept) as well as completion indicators (Level and PercentageComplete). For the completeness, ML takes N sample to finish its first level and use N*0.25 samples to complete each successive level. When a device is moved, the completeness will be reset as it has to re-learn.
      operationId: getSiteMachineLearningCurrentStat
      parameters:
        - description: 'map_id (as filter, optional)'
          example: 00000000-0000-0000-0000-000000000000
          in: query
          name: map_id
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/Ml.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteMachineLearningCurrentStat
      tags:
        - Sites Location
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/location/ml/defaults':
    get:
      description: Get Default PLF for Models
      operationId: getSiteDefaultPlfForModels
      responses:
        '200':
          $ref: ./components/responses/Ml.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDefaultPlfForModels
      tags:
        - Sites Location
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/location/ml/device/{device_id}':
    delete:
      description: Clear ML Overwrite for Device
      operationId: clearSiteMlOverwriteForDevice
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteMlOverwriteForDevice
      tags:
        - Sites Location
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    put:
      description: Overwrite ML For Device
      operationId: overwriteSiteMlForDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: ./components/schemas/model_ml.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ml.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: overwriteSiteMlForDevice
      tags:
        - Sites Location
  '/api/v1/sites/{site_id}/location/ml/map/{map_id}':
    delete:
      description: Clear ML Overwrite for Map
      operationId: clearSiteMlOverwriteForMap
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteMlOverwriteForMap
      tags:
        - Sites Location
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    put:
      description: Overwrite ML For Map
      operationId: overwriteSiteMlForMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: ./components/schemas/model_ml.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Ml.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: overwriteSiteMlForMap
      tags:
        - Sites Location
  '/api/v1/sites/{site_id}/location/ml/reset/map/{map_id}':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: Reset ML Stats by Map
      operationId: resetSiteMlStatsByMap
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: resetSiteMlStatsByMap
      tags:
        - Sites Location
  '/api/v1/sites/{site_id}/maps':
    get:
      description: Get List of Site Maps
      operationId: listSiteMaps
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MapsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteMaps
      tags:
        - Sites Maps
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site Map
      operationId: createSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                    - coordinate: string
                      id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      name: string
                      nodes:
                        - edges:
                            N2: string
                          name: string
                          position:
                            x: 0
                            'y': 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  width: 0
                  width_m: 0
            schema:
              $ref: ./components/schemas/map.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Map.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteMap
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/import':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Import data from files is a multipart POST which has an file, an optional json, and an optional csv, to create floorplan, assign matching inventory to specific site, place ap if name or mac matches.

        # Note
        This endpoint (at the site level), the AP must be already assigned to the site to be placed on the floorplan. If you want to place APs from the Org inventory, it is required to use the endpoint at the Org level [importOrgMaps](#operation/importOrgMaps)

        # CSV File Format
        ```csv
        Vendor AP name,Mist AP Mac
        US Office AP-2,5c:5b:35:00:00:02
        US Office AP-3,5c5b35000002
        ``` 
      operationId: importSiteMaps
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: true
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    vendor_name: ekahau
            schema:
              $ref: ./components/schemas/import_site_map.yml
      responses:
        '200':
          $ref: ./components/responses/MapImport.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importSiteMaps
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/{map_id}':
    delete:
      description: Delete Site Map
      operationId: deleteSiteMap
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteMap
      tags:
        - Sites Maps
    get:
      description: Get Site Map Details
      operationId: getSiteMap
      responses:
        '200':
          $ref: ./components/responses/Map.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteMap
      tags:
        - Sites Maps
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    put:
      description: Update Site Map
      operationId: updateSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                    - coordinate: string
                      id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      name: string
                      nodes:
                        - edges:
                            N2: string
                          name: string
                          position:
                            x: 0
                            'y': 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                      - edges:
                          N2: string
                        name: string
                        position:
                          x: 0
                          'y': 0
                  width: 0
                  width_m: 0
            schema:
              $ref: ./components/schemas/map.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Map.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteMap
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/{map_id}/auto_orient':
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoOrientation
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteApAutoOrientation
      tags:
        - Sites Maps Auto-orientation
    parameters:
      - $ref: ./components/parameters/map_id.yml
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        This API is called to trigger a map for auto orientation. For auto orient feature to work, BLE data needs to be collected from the APs on the map. This precess is not disruptive unlike FTM collection. Repeated POST to this endpoint while a map is still running will be rejected.

        List of devices to provide suggestions for is an optional parameter that can be given to this API. This will provide auto orient suggestions only for the devices specified. If no list of devices is provided, all APs asociated with that map are considered by default
      operationId: startSiteApAutoOrientation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_collection:
                  default: false
                  description: |-
                    If `force_collection`==`false`, the API attempts to start auto orientation with existing BLE data. 
                    If `force_collection`==`true`, the API attempts to start BLE orchestration.
                  type: boolean
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                enqueued:
                  value:
                    state: Not Started
                    time_queued: 1675414259
                not-started:
                  value:
                    state: Not Started
                    time_queued: -1
                oriented:
                  value:
                    state: Oriented
                    time_queued: 1675414259
              schema:
                properties:
                  state:
                    description: The state of auto orient for a given map derived from an Enum
                    enum:
                      - Not Started
                      - Enqueued
                      - Oriented
                    type: string
                  time_queued:
                    description: Time when auto orient process was last queued for this map
                    type: number
                type: object
          description: Map queued for auto orientation
        '400':
          content:
            application/json:
              examples:
                Example:
                  value:
                    detail: Map has less than 3 APs associated with it to perform auto orient
                Example-2:
                  value:
                    detail: Auto AP orient is already in progress for this Map
                Example-3:
                  value:
                    detail: Auto orient data does not exist or has gone stale
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: Bad Request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: startSiteApAutoOrientation
      tags:
        - Sites Maps Auto-orientation
  '/api/v1/sites/{site_id}/maps/{map_id}/auto_placement':
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoplacement
      responses:
        '200':
          description: Autoplacement Process has stopped for this map
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteApAutoplacement
      tags:
        - Sites Maps Auto-placement
    get:
      description: |-
        This API is called to view the current status of auto placement for a given map.


        #### Status Descriptions

        | Status | Description |
        | --- | --- |
        | `pending` | Autoplacement has not been requested for this map |
        | `inprogress` | Autoplacement is currently processing |
        | `done` | The autoplacement process has completed |
        | `data_needed` | Additional position data is required for autoplacement. Users should verify the requested anchor APs have a position on the map |
        | `invalid_model` | Autoplacement is not supported on the model of the APs on the map |
        | `invalid_version` | Autoplacement is not supported with the APs current firmware version |
        | `error` | There was an error in the autoplacement process |
      operationId: getSiteApAutoPlacement
      responses:
        '200':
          content:
            application/json:
              examples:
                done:
                  value:
                    end_time: 1678900362
                    start_time: 1678900062
                    status: done
                error:
                  value:
                    end_time: 1678900362
                    start_time: 1678900062
                    status: error
                in-Progress:
                  value:
                    est_time_left: 300
                    start_time: 1678900062
                    status: inprogress
                pending:
                  value:
                    status: pending
              schema:
                properties:
                  end_time:
                    description: time when autoplacement completed or was manually stopped
                    type: number
                  est_time_left:
                    description: (Only when inprogress) estimate of the time to completion
                    type: number
                  start_time:
                    description: time when autoplacement process was last queued for this map
                    type: number
                  status:
                    description: the status of autoplacement for a given map
                    enum:
                      - pending
                      - inprogress
                      - done
                      - error
                    type: string
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteApAutoplacement
      tags:
        - Sites Maps Auto-placement
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: |-
        This API is called to trigger a map for auto placement. For auto placement feature to work, RTT-FTM data need to be collected from the APs on the map. This scan is disruptive and therefore the user must be notified of service disrution during the functioning of auto placement Repeated POST to this endpoint while a map is still running will be rejected.

        List of devices to provide suggestions for is an optional parameter that can be given to this API. This will provide autoplacement suggestions only for the devices specified. If no list of devices is provided, all APs asociated with that map are considered by default
      operationId: runSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_collection:
                  default: false
                  description: |-
                    * If `force_collection`==`false`: the API Iattempts to start localization with existing data. 
                    * If `force_collection`==`true`: maintenance the API attempts to start orchestration.
                  type: boolean
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          description: Autoplacement Process has begun for this map
        '400':
          description: |-
            * Map has less than 3 APs associated with it to perform auto placement 
            * Auto AP Placement is already in progress for this Map
            * Autoplacement data does not exist or has gone stale
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: runSiteApAutoplacement
      tags:
        - Sites Maps Auto-placement
  '/api/v1/sites/{site_id}/maps/{map_id}/clear_auto_orient':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: This API is used to destroy the autoorientations of a map or subset of APs on a map.
      operationId: clearSiteApAutoOrient
      requestBody:
        content:
          application/json:
            schema:
              properties:
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteApAutoOrient
      tags:
        - Sites Maps Auto-orientation
  '/api/v1/sites/{site_id}/maps/{map_id}/clear_autoplacement':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: This API is used to destroy the cached autoplacement locations of a map or subset of APs on a map.
      operationId: clearSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              properties:
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: clearSiteApAutoplacement
      tags:
        - Sites Maps Auto-placement
  '/api/v1/sites/{site_id}/maps/{map_id}/image':
    delete:
      description: Delete Site Map Image
      operationId: deleteSiteMapImage
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteMapImage
      tags:
        - Sites Maps
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: Add image map is a multipart POST which has an file (Image) and an optional json parameter
      operationId: addSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./components/schemas/image_upload.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: addSiteMapImage
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/{map_id}/replace':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: |-
        Replace Map Image


        This works like an PUT where the image will be replaced. If transform is provided, all the locations of the objects on the map (AP, Zone, Vbeacon, Beacon) will be transformed as well (relative to the new Map)
      operationId: replaceSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  file: string
                  json:
                    transform:
                      rotate: 0
                      scale: 0
                      x: 0
                      'y': 0
            schema:
              properties:
                file:
                  format: binary
                  minLength: 1
                  type: string
                json:
                  properties:
                    transform:
                      description: 'If `transform` is provided, all the locations of the objects on the map (AP, Zone, Vbeacon, Beacon) will be transformed as well (relative to the new Map)'
                      properties:
                        rotate:
                          type: number
                        scale:
                          type: number
                        x:
                          type: number
                        'y':
                          type: number
                      type: object
                  type: object
              required:
                - file
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: replaceSiteMapImage
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/{map_id}/set_map':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: |-
        This API can be used to assign a list of AP Macs associated with site_id to the specified map_id. Note that map_id must be associated with corresponding site_id. This API obeys the following rules 
        1. if AP is unassigned to any Map, it gets associated with map_id 
        2. Any moved APs are returned in the response 
        3. If the AP is considered a locked AP, no action will be taken
      operationId: bulkAssignSiteApsToMap
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  macs:
                    - 5c5b35000001
                    - 5c5b35584a6f
            schema:
              properties:
                macs:
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    locked:
                      - 5c5b35584a6f
                    moved:
                      - 5c5b35000001
              schema:
                properties:
                  locked:
                    items:
                      example: 5c5b35584a6f
                      type: string
                    type: array
                  moved:
                    items:
                      example: 5c5b35000001
                      type: string
                    type: array
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: bulkAssignSiteApsToMap
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/maps/{map_id}/use_auto_ap_values':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: 'This API is used to accept or reject the cached autoplacement and auto orientation values of a map or subset of APs on a map. A rejected AP will retain its current X,Y and orientation until accpeted.'
      operationId: confirmSiteApLocalizationData
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  accept: false
                  device_macs:
                    - string
                  for: placement
            schema:
              properties:
                accept:
                  default: false
                  description: 'If accept is true, accepts placement for devices in list otherwise. If false, reject for devices in list.'
                  type: boolean
                for:
                  default: placement
                  description: 'The selector to choose auto placement or auto orientation. '
                  enum:
                    - placement
                    - orientation
                  type: string
                macs:
                  description: A list of macs to accept/reject. If a list is not provided the API will accept/reject for the full map.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          description: Success
        '400':
          description: 'Invalid localization service expected: placement or orientation'
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: confirmSiteApLocalizationData
      tags:
        - Sites Maps Auto-placement
  '/api/v1/sites/{site_id}/maps/{map_id}/wayfinding/import':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
    post:
      description: This imports the vendor map meta data into the Map JSON. This is required by the SDK and App in order to access/render the vendor Map properly.
      operationId: importSiteWayfindings
      requestBody:
        content:
          application/json:
            examples:
              Jimbstream:
                value:
                  client_id: 199d6770-0f6f-407a-9bd5-fc33c7840194
                  client_secret: /9Nog3yDzcYj0bY91XJZQLCt+m9DXaIVhx+Ghk3ddd
                  customer_id: 123
                  endpoint_url: 'https://api.jibestream.com'
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mmpp: 223
                  ppm: 4
                  vendor_name: jibestream
                  venue_id: 123
              Micello:
                value:
                  account_key: adasdf
                  default_level_id: 5
                  map_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  vendor_name: micello
            schema:
              oneOf:
                - properties:
                    client_id:
                      description: the client id
                      format: uuid
                      type: string
                    client_secret:
                      description: the client secret
                      type: string
                    customer_id:
                      description: the jibestream customer record id
                      format: uuid
                      type: integer
                    endpoint_url:
                      description: the map contents endpoint host
                      type: string
                    map_id:
                      description: the jibestream map id
                      format: uuid
                      type: string
                    mmpp:
                      description: millimeter per pixel
                      type: integer
                    ppm:
                      description: 'pixel per meter, same as the map JSON value.'
                      type: number
                    vendor_name:
                      default: jibestream
                      description: the vendor ‘jibestream’
                      enum:
                        - jibestream
                      type: string
                    venue_id:
                      description: the venue or organization id
                      format: uuid
                      type: integer
                  required:
                    - vendor_name
                    - venue_id
                    - map_id
                    - ppm
                    - client_id
                    - client_secret
                    - customer_id
                    - endpoint_url
                    - mmpp
                - properties:
                    account_key:
                      description: the account key that has access to the map
                      type: string
                    default_level_id:
                      description: micello floor/level id
                      type: integer
                    map_id:
                      description: micello map id
                      format: uuid
                      type: string
                    vendor_name:
                      default: micello
                      description: the vendor ‘micello’
                      enum:
                        - micello
                      type: string
                  required:
                    - vendor_name
                    - account_key
                    - map_id
                    - default_level_id
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importSiteWayfindings
      tags:
        - Sites Maps
  '/api/v1/sites/{site_id}/mxedges':
    get:
      description: Get List of Site Mist Edges
      operationId: listSiteMxEdges
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MxedgesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteMxEdges
      tags:
        - Sites MxEdges
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site Mist Edge
      operationId: createSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/mxedge.yml
      responses:
        '200':
          $ref: ./components/responses/Mxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteMxEdge
      tags:
        - Sites MxEdges
  '/api/v1/sites/{site_id}/mxedges/events/count':
    get:
      description: Count Mist Edge Events
      operationId: countSiteMxEdgeEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: mxedge_id
            enum:
              - mxedge_id
              - type
              - mxcluster_id
              - package
            type: string
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: 'mist edge event type [Supported Events](/#operation/listGatewayApplications)'
          in: query
          name: type
          schema:
            type: string
        - description: 'service running on mist edge(mxagent, tunterm etc)'
          in: query
          name: service
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countSiteMxEdgeEvents
      tags:
        - Sites MxEdges
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/mxedges/events/search':
    get:
      description: Search Site Mist Edge Events
      operationId: searcSitehMistEdgeEvents
      parameters:
        - description: mist edge id
          in: query
          name: mxedge_id
          schema:
            type: string
        - description: mist edge cluster id
          in: query
          name: mxcluster_id
          schema:
            type: string
        - description: 'mist edge event type [Supported Events](/#operation/listGatewayApplications)'
          in: query
          name: type
          schema:
            type: string
        - description: 'service running on mist edge(mxagent, tunterm etc)'
          in: query
          name: service
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/MxEdgeEventsSearch.yml
      summary: searcSitehMistEdgeEvents
      tags:
        - Sites MxEdges
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/mxedges/{mxedge_id}':
    delete:
      description: Delete Site Mist Edge
      operationId: deleteSiteMxEdge
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteMxEdge
      tags:
        - Sites MxEdges
    get:
      description: get Site Mist Edge
      operationId: getSiteMxEdge
      responses:
        '200':
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteMxEdge
      tags:
        - Sites MxEdges
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    put:
      description: Update Site Mist Edge settings
      operationId: updateSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/mxedge.yml
      responses:
        '200':
          $ref: ./components/responses/Mxedge.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteMxEdge
      tags:
        - Sites MxEdges
  '/api/v1/sites/{site_id}/mxedges/{mxedge_id}/support':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadSiteMxEdgeSupportFiles
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 1574114372
                    for_site: true
                    id: b025de9b-7bb6-43bd-8a71-bf3cu840c9ad
                    magic: S2ZD-srTcoOp9GGttZpq1ISQEq4iPY3EhWpAKB9pb9JdWjeP12bjIbFYsDy5jP3a
                    model: ME-100
                    modified_time: 1574117211
                    mxagent_registered: false
                    mxcluster_id: c88aa7a2-ac27-7d87-b633-1ac3a7837929
                    name: staging_edge
                    org_id: 5a5ed2f4-632f-41f3-b8ed-d3afa4b27f96
                    services:
                      - tunterm
                    site_id: c88aa7a2-ac27-7d87-b633-1ac3a7837928
                    status: disconnected
                    tunterm_ip_config:
                      gateway: ''
                      ip: ''
                      netmask: ''
                    tunterm_port_config:
                      downstream_ports:
                        - '0'
                      separate_upstream_downstream: false
                      upstream_ports:
                        - '0'
                    tunterm_registered: false
              schema:
                properties:
                  created_time:
                    type: integer
                  for_site:
                    type: boolean
                  id:
                    type: string
                  magic:
                    type: string
                  model:
                    type: string
                  modified_time:
                    type: integer
                  mxagent_registered:
                    type: boolean
                  mxcluster_id:
                    format: uuid
                    type: string
                  name:
                    type: string
                  org_id:
                    type: string
                  services:
                    items:
                      type: string
                    type: array
                  site_id:
                    type: string
                  status:
                    type: string
                  tunterm_ip_config:
                    properties:
                      gateway:
                        type: string
                      ip:
                        type: string
                      netmask:
                        type: string
                    type: object
                  tunterm_port_config:
                    properties:
                      downstream_ports:
                        items:
                          type: string
                        type: array
                      separate_upstream_downstream:
                        type: boolean
                      upstream_ports:
                        items:
                          type: string
                        type: array
                    type: object
                  tunterm_registered:
                    type: boolean
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uploadSiteMxEdgeSupportFiles
      tags:
        - Sites MxEdges
  '/api/v1/sites/{site_id}/mxtunnels/{mxtunnel_id}/preempt_aps':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/mxtunnel_id.yml
    post:
      description: To preempt AP’s which are not connected to preferred peer to the preferred peer
      operationId: preemptSitesMxTunnel
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  preempted_aps:
                    items:
                      type: string
                    type: array
                required:
                  - preempted_aps
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: preemptSitesMxTunnel
      tags:
        - Sites MxTunnels
  '/api/v1/sites/{site_id}/nac_clients/count':
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countSiteNacClients
      parameters:
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - last_nacrule_id
              - auth_type
              - last_vlan_id
              - last_nas_vendor
              - last_username
              - last_ap
              - mac
              - last_ssid
              - last_status
              - mdm_compliance_status
              - mdm_provider
            type: string
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: last_nacrule_id
          schema:
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g. “eap-tls”, “eap-ttls”, “eap-teap”, “mab”, “device-auth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: last_vlan_id
          schema:
            type: string
        - description: vendor of NAS device
          in: query
          name: last_nas_vendor
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            type: string
        - description: SSID
          in: query
          name: last_ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: last_username
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: org id
          in: query
          name: org_id
          schema:
            type: string
        - description: 'site id if assigned, null if not assigned'
          in: query
          name: site_id
          schema:
            type: string
        - description: AP MAC connected to by client
          in: query
          name: last_ap
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'Connection status of client i.e “permitted”, “denied, “session_ended”'
          in: query
          name: last_status
          schema:
            type: string
        - description: 'Client type i.e. “wireless”, “wired” etc.'
          in: query
          name: type
          schema:
            type: string
        - description: 'MDM compliancy of client i.e “compliant”, “not compliant”'
          in: query
          name: mdm_compliance_status
          schema:
            type: string
        - description: 'MDM provider of client’s organisation eg “intune”, “jamf”'
          in: query
          name: mdm_provider
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countSiteNacClients
      tags:
        - Sites Clients - NAC
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/nac_clients/events/count':
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countSiteNacClientEvents
      parameters:
        - in: query
          name: distinct
          schema:
            enum:
              - type
              - nacrule_id
              - dryrun_nacrule_id
              - auth_type
              - vlan
              - nas_vendor
              - username
              - ap
              - mac
              - ssid
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countSiteNacClientEvents
      tags:
        - Sites Clients - NAC
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/nac_clients/events/search':
    get:
      description: Search NAC Client Events
      operationId: searcSitegNacClientEvents
      parameters:
        - description: 'event type, e.g. NAC_CLIENT_PERMIT'
          in: query
          name: type
          schema:
            type: string
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: nacrule_id
          schema:
            format: uuid
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'NAC Policy Dry Run Rule ID, if present and matched'
          in: query
          name: dryrun_nacrule_id
          schema:
            type: string
        - description: 'True - if dryrun rule present and matched with priority, False - if not matched or not present'
          in: query
          name: dryrun_nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g.  “eap-tls”, “eap-ttls”, “eap-teap”, “mab”, “device-auth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: vlan
          schema:
            type: integer
        - description: vendor of NAS device
          in: query
          name: nas_vendor
          schema:
            type: string
        - description: SSID
          in: query
          name: bssid
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            format: uuid
            type: string
        - description: IDP returned roles/groups for the user
          in: query
          name: idp_role
          schema:
            type: string
        - description: Radius attributes returned by NAC to NAS Devive
          in: query
          name: resp_attrs
          schema:
            items:
              type: string
            type: array
        - description: SSID
          in: query
          name: ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: username
          schema:
            type: string
        - description: AP MAC
          in: query
          name: ap
          schema:
            type: string
        - description: AP random macMAC
          in: query
          name: random_mac
          schema:
            type: boolean
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/EventsNacClientSearch.yml
      summary: searcSitegNacClientEvents
      tags:
        - Sites Clients - NAC
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/nac_clients/search':
    get:
      description: Search Site NAC Clients
      operationId: searchSiteNacClients
      parameters:
        - description: 'NAC Policy Rule ID, if matched'
          in: query
          name: last_nacrule_id
          schema:
            type: string
        - description: NAC Policy Rule Matched
          in: query
          name: nacrule_matched
          schema:
            type: boolean
        - description: 'authentication type, e.g. “eap-tls”, “eap-ttls”, “eap-teap”, “mab”, “device-auth”'
          in: query
          name: auth_type
          schema:
            type: string
        - description: Vlan ID
          in: query
          name: last_vlan_id
          schema:
            type: string
        - description: vendor of NAS device
          in: query
          name: last_nas_vendor
          schema:
            type: string
        - description: 'SSO ID, if present and used'
          in: query
          name: idp_id
          schema:
            type: string
        - description: SSID
          in: query
          name: last_ssid
          schema:
            type: string
        - description: Username presented by the client
          in: query
          name: last_username
          schema:
            type: string
        - description: 'start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: org id
          in: query
          name: org_id
          schema:
            type: string
        - description: 'site id if assigned, null if not assigned'
          in: query
          name: site_id
          schema:
            type: string
        - description: AP MAC connected to by client
          in: query
          name: last_ap
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: 'Connection status of client i.e “permitted”, “denied, “session_ended”'
          in: query
          name: last_status
          schema:
            type: string
        - description: 'Client type i.e. “wireless”, “wired” etc.'
          in: query
          name: type
          schema:
            type: string
        - description: 'MDM compliancy of client i.e “compliant”, “not compliant”'
          in: query
          name: mdm_compliance_status
          schema:
            type: string
        - description: 'MDM provider of client’s organisation eg “intune”, “jamf”'
          in: query
          name: mdm_provider
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/ClientNacSearch.yml
      summary: searchSiteNacClients
      tags:
        - Sites Clients - NAC
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/networks/derived':
    get:
      description: Retrieves the list of Networks available for the Site
      operationId: listSiteNetworksDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/NetworksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteNetworksDerived
      tags:
        - Sites Networks
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/networktemplates/derived':
    get:
      description: Get derived Network Templates for Site
      operationId: getSiteNetworkTemplateDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/Networktemplate.yml
      summary: getSiteNetworkTemplateDerived
      tags:
        - Sites Network Templates
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/otherdevices':
    get:
      description: Get List of Site other devices (3rd party devices)
      operationId: listSiteOtherDevices
      parameters:
        - in: query
          name: vendor
          schema:
            type: string
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/DeviceOtherArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteOtherDevices
      tags:
        - Sites Devices Others
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/otherdevices/events/count':
    get:
      description: Count Site OtherDevices Events
      operationId: countSiteOtherDeviceEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - mac
              - type
              - vendor
              - site_id
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteOtherDeviceEvents
      tags:
        - Sites Devices Others
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/otherdevices/events/search':
    get:
      description: Search Site OtherDevices Events
      operationId: searchSiteOtherDeviceEvents
      parameters:
        - description: mac
          in: query
          name: mac
          schema:
            type: string
        - description: mac of attached device
          in: query
          name: device_mac
          schema:
            type: string
        - description: vendor name
          in: query
          name: vendor
          schema:
            type: string
        - description: event type
          in: query
          name: type
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/EventsOtherDevicesSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteOtherDeviceEvents
      tags:
        - Sites Devices Others
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/pcaps':
    get:
      description: Get List of Site Packet Captures
      operationId: listSitePacketCaptures
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - description: optional client mac filter
          in: query
          name: client_mac
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/PcapsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSitePacketCaptures
      tags:
        - Sites Pcaps
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/pcaps/capture':
    delete:
      description: Stop current capture
      operationId: stopSitePacketCapture
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: stopSitePacketCapture
      tags:
        - Sites Pcaps
    get:
      description: Get Capturing status
      operationId: getSiteCapturingStatus
      responses:
        '200':
          $ref: ./components/responses/PcapStatus.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteCapturingStatus
      tags:
        - Sites Pcaps
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Initiate a Packet Capture

        The output will be available through websocket. As there can be multiple command issued against the same AP at the same time and the output all goes through the same websocket stream, session is introduced for demux.

        #### Subscribe to Device Command outputs
        `WS /api-ws/v1/stream`

        ```json
        {
            subscribe: "/sites/{site_id}/pcaps"
        }
        ```
        #### Response (Wireless/RadioTap)
        ```json
        {
            "event": "data"
            "channel": "/sites/:site_id/pcaps"
            "data": {
                 "capture_id": "6b1be4fb-b239-44d9-9d3b-cb1ff3af1721",
             "lost_messages": 0
                 "pcap_dict": {
                     "channel_frequency": 2412,
                     "channel": "1",
                     "datarate": "1.0 Mbps",
                     "rssi": -75, 
                     "dst": "78:bd:bc:ca:0b:0a",
                     "src": "18:b8:1f:4c:91:c0",
                     "bssid": "18:b8:1f:4c:91:c0",
                     "frame_type": "Management", 
                     "frame_subtype": "Probe Response", 
                 "proto": "802.11", 
                     "ap_mac": "d4:20:b0:81:99:2e", 
                     "direction": "tx", 
                     "timestamp": 1652246543, 
                     "length": 416.0,
                     "interface": "radiotap",
                     "info": "1652246544.467733 1683216786us tsft 1.0 Mb/s 2412 MHz 11g -75dBm signal -82dBm noise antenna 0 Probe Response (ATTKmsWiVS) [1.0* 2.0* 5.5* 11.0* 18.0 24.0 36.0 54.0 Mbit] CH: 2, PRIVACY\\n",
                 }, 
                "pcap_raw": "1MOyoQIABAAAAAAAAAAAAP//AAABAAAAEEh7Yh5VBwCgAQAAoAEAAAAAKwBvCADAAQAAAIw7reCS2VNkAAAAABACbAmABLWuAAEAEBgAAwACAABQADoBeL28ygsKGLgfTJHAGLgfTJHAcIZ2WDlBJQAAAGQAERUACkFUVEttc1dpVlMBCIKEi5YkMEhsAwECBwZVUyABCx4gAQAjAhkAKgEEMgQMEhhgMBQBAAAPrAQBAAAPrAQBAAAPrAIMAAsFAQAbAABGBTIIAQAALRqtCR////8AAAAAAAAAAAAAAAAAAAAAAAAAAD0WAggVAAAAAAAAAAAAAAAAAAAAAAAAAH8IBAAIAAAAAEDdkwBQ8gQQSgABEBBEAAECEDsAAQMQRwAQn2481frn3KT+uGod2ERx+RAhAAtBcnJpcywgSW5jLhAjAApCR1cyMTAtNzAwECQACkJHVzIxMC03MDAQQgAKQkdXMjEwLTcwMBBUAAgABgBQ8gQAARARAA5BcnJpcyBXaXJlbGVzcxAIAAIgCBA8AAEBEEkABgA3KgABIN0JABAYAgEQHAAA3RgAUPICAQGEAAOkAAAnpAAAQkNeAGIyLwAzjakr"
        }
        ```

        #### vResponse (Wired)
        ```json
        {
            "event": "data"
            "channel": "/sites/67970e46-4e12-11e6-9188-0242ac110007/pcaps"
            "data": {
                "capture_id": "f039b1b4-a23e-48b2-906a-0da40524de73", 
                "pcap_dict": {
                     "dst_mac": "68:ec:c5:09:2e:87",
                     "src_mac": "8c:3b:ad:e0:47:40", 
                     "vlan": 1, 
                     "src_ip": "34.224.147.117", 
                     "dst_ip": "192.168.1.55",
                     "dst_port": 51635, 
                     "src_port": 443,
                     "proto": "TCP", 
                     "ap_mac": "d4:20:b0:81:99:2e",
                     "direction": "tx", 
                     "timestamp": 1652247615, 
                     "length": 159.0, 
                     "interface": "wired",
                     "info": "1652247616.007409 IP ec2-34-224-147-117.compute-1.amazonaws.com.https > ip-192-168-1-55.ec2.internal.51635: Flags [P.], seq 2192123968:2192124057, ack 4035166782, win 12, options [nop,nop,TS val 597467050 ecr 740580660], length 89\\n",
                     }, 
                "pcap_raw": "1MOyoQIABAAAAAAAAAAAAP//AAABAAAAQEx7YhMzAACfAAAAnwAAAGjsxQkuh4w7reBHQIEAAAEIAEUAAI1bLEAAKAZ/CiLgk3XAqAE3AbvJs4KpKEDwg8I+gBgADFf9AAABAQgKI5yfqiwkXTQXAwMAVKY5JopoKQrVEn0/3ld4YntctGEH/rTZuwtCvzSncFw71QJveJi9uxHs57KC8w9Apph3YvXJrmWg7M37+o+YV0KH/xmr626s5Bkhb3QhKOu+NoNEmA=="

            }
        }
        ```

        #### Stop Response (Wired/Wireless)
        ```json
        {
            "event": "data"
            "channel": "/sites/67970e46-4e12-11e6-9188-0242ac110007/pcaps"
            "data": {
              "capture_id": "a2f7374d-6a70-41fd-8a3f-71e42573baaf", 
              "lost_messages": 0,
              "pcap_dict": null
            }
        }
        ```
      operationId: startSitePacketCapture
      requestBody:
        content:
          application/json:
            examples:
              AP-New-Wireless-Client-Associations-Packet-Capture:
                value:
                  client_mac: 60a10a773412
                  duration: 600
                  includes_mcast: false
                  max_pkt_len: 128
                  num_packets: 100
                  type: new_assoc
              AP-Radiotap-Packet-Capture:
                value:
                  duration: 600
                  max_pkt_len: 68
                  num_packets: 100
                  type: radiotap
              AP-Radiotap-Packet-Capture-and-Wired-Packet-Capture:
                value:
                  ap_mac: string
                  client_mac: string
                  duration: 600
                  includes_mcast: true
                  max_pkt_len: 128
                  num_packets: 1024
                  ssid: string
                  type: client
              AP-Scan-radio-Packet-Capture:
                value:
                  ap_mac: null
                  band: '24'
                  bandwidth: 20
                  channel: 1
                  client_mac: 38f9d3972ff1
                  duration: 600
                  format: stream
                  max_pkt_len: 68
                  num_packets: 100
                  tcpdump_expression: tcp port 80
                  type: scan
              AP-Wired-Packet-Capture:
                value:
                  duration: 600
                  max_pkt_len: 68
                  num_packets: 100
                  tcpdump_expression: tcp port 80
                  type: wired
              AP-Wireless-Packet-Capture:
                value:
                  ap_mac: null
                  band: '24'
                  duration: 600
                  max_pkt_len: 128
                  num_packets: 100
                  type: wireless
              Client-Packet-Capture:
                value:
                  client_mac: 60a10a773412
                  duration: 300
                  includes_mcast: false
                  max_pkt_len: 128
                  num_packets: 1000
                  type: client
              SSR-Packet-Capture:
                value:
                  duration: 600
                  format: stream
                  gateways:
                    '001122334455':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: tcp
                        ge-0/0/1:
                          tcpdump_expression: port 443
                        ge-1/0/0:
                          tcpdump_expression: tcp
                        ge-1/0/1:
                          tcpdump_expression: port 443
                    '001122334466':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: udp
                        ge-0/0/1:
                          tcpdump_expression: port 32768
                  max_pkt_len: 1500
                  num_packets: 100
                  type: gateway
              Switch-Packet-Capture:
                value:
                  duration: 600
                  format: stream
                  max_pkt_len: 1500
                  num_packets: 100
                  switches:
                    '001122334455':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: udp
                        ge-0/0/1: {}
                        ge-1/0/0: null
                        ge-1/0/1: {}
                    '001122334466':
                      ports:
                        ge-0/0/0: {}
                        ge-0/0/1: {}
                  tcpdump_expression: port 443
                  type: switch
            schema:
              $ref: ./components/schemas/capture.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/PcapStart.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: startSitePacketCapture
      tags:
        - Sites Pcaps
  '/api/v1/sites/{site_id}/pcaps/{pcap_id}':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/pcap_id.yml
    put:
      description: Update or add notes to a completed packet capture
      operationId: updateSitePacketCapture
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  notes: wired pcap test
            schema:
              properties:
                notes:
                  example: wired pcap test
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSitePacketCapture
      tags:
        - Sites Pcaps
  '/api/v1/sites/{site_id}/psks':
    get:
      description: Get List of Site PSKs
      operationId: listSitePsks
      parameters:
        - in: query
          name: ssid
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
        - $ref: ./components/parameters/name.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSitePsks
      tags:
        - Sites Psks
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site PSK
      operationId: createSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: ./components/schemas/psk.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSitePsk
      tags:
        - Sites Psks
    put:
      description: Update multi PSKs
      operationId: updateSitePsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - id: 2f64a022-9422-4fa3-92aa-ff6559a9f7f9
                    name: common123
                    passphrase: foryoureyesonly2
                    ssid: warehouse
                  - id: 110c59ae-d7b2-40f9-9bf2-82367370e55a
                    name: common12
                    passphrase: foryoureyesonly1
                    role: teacher
                    ssid: warehouse
                    usage: single
            schema:
              items:
                $ref: ./components/schemas/psk.yml
              type: array
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSitePsks
      tags:
        - Sites Psks
  '/api/v1/sites/{site_id}/psks/import':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        Import PSK from CSV file or JSON

        ## CSV File Format
        ```csv
        PSK Import CSV File Format:
        name,ssid,passphrase,usage,vlan_id,mac
        Common,warehouse,foryoureyesonly,single,35,a31425f31278
        Justin,reception,visible,multi,1002
        ```
      operationId: importSitePsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - created_time: 0
                    expire_time: 1614990263
                    id: 419f6eca-6276-4993-cfeb-53cbbbba6f00
                    mac: string
                    max_usage: 0
                    modified_time: 0
                    name: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    passphrase: stringst
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    ssid: string
                    usage: multi
                    vlan_id: 0
            schema:
              items:
                $ref: ./components/schemas/psk.yml
              type: array
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: ./components/responses/PsksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: importSitePsks
      tags:
        - Sites Psks
  '/api/v1/sites/{site_id}/psks/{psk_id}':
    delete:
      description: Delete Site PSK
      operationId: deleteSitePsk
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSitePsk
      tags:
        - Sites Psks
    get:
      description: Get Site PSK Details
      operationId: getSitePsk
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSitePsk
      tags:
        - Sites Psks
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/psk_id.yml
    put:
      description: Update Site PSK
      operationId: updateSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: ./components/schemas/psk.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Psk.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSitePsk
      tags:
        - Sites Psks
  '/api/v1/sites/{site_id}/rfdiags':
    get:
      description: List RF Glass Recording
      operationId: getSiteSiteRfdiagRecording
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/RfdiagsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSiteRfdiagRecording
      tags:
        - Sites Rfdiags
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Start RF Glass Recording
      operationId: startSiteRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/rfdiag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Rfdiag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: startSiteRecording
      tags:
        - Sites Rfdiags
  '/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}':
    delete:
      description: Delete Recording
      operationId: deleteSiteRfdiagRecording
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteRfdiagRecording
      tags:
        - Sites Rfdiags
    get:
      description: Get RF Diage Recording Details
      operationId: getSiteRfdiagRecording
      responses:
        '200':
          $ref: ./components/responses/Rfdiag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteRfdiagRecording
      tags:
        - Sites Rfdiags
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rfdiag_id.yml
    put:
      description: Update Recording
      operationId: updateSiteRfdiagRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/rfdiag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Rfdiag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteRfdiagRecording
      tags:
        - Sites Rfdiags
  '/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/download':
    get:
      description: |-
        Download Recording
        Download raw_events blob
      operationId: downloadSiteRfdiagRecording
      responses:
        '200':
          $ref: ./components/responses/File.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: downloadSiteRfdiagRecording
      tags:
        - Sites Rfdiags
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rfdiag_id.yml
  '/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/stop':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rfdiag_id.yml
    post:
      description: 'If the recording session is active for the given rfdiag_id, it will finish the recording. duration and end_time will be updated to reflect the correct values.'
      operationId: stopSiteRfdiagRecording
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: stopSiteRfdiagRecording
      tags:
        - Sites Rfdiags
  '/api/v1/sites/{site_id}/rftemplates/derived':
    get:
      description: Get derived RF Templates for Site
      operationId: getSiteRfTemplateDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/Rftemplate.yml
      summary: getSiteRfTemplateDerived
      tags:
        - Sites RF Templates
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/rogues/events/count':
    get:
      description: Count Rogue Events
      operationId: countSiteRogueEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: bssid
            enum:
              - bssid
              - ssid
              - ap
              - type
            type: string
        - $ref: ./components/parameters/rogue_type.yml
        - description: ssid of the network detected as threat
          in: query
          name: ssid
          schema:
            type: string
        - description: bssid of the network detected as threat
          in: query
          name: bssid
          schema:
            type: string
        - description: mac of the device that had strongest signal strength for ssid/bssid pair
          in: query
          name: ap_mac
          schema:
            type: string
        - description: channel over which ap_mac heard ssid/bssid pair
          in: query
          name: channel
          schema:
            type: string
        - description: whether the reporting AP see a wireless client (on LAN) connecting to it
          in: query
          name: seen_on_lan
          schema:
            type: boolean
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteRogueEvents
      tags:
        - Sites Rogues
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/rogues/events/search':
    get:
      description: Search Rogue Events
      operationId: searchSiteRogueEvents
      parameters:
        - $ref: ./components/parameters/rogue_type.yml
        - description: ssid of the network detected as threat
          in: query
          name: ssid
          schema:
            type: string
        - description: bssid of the network detected as threat
          in: query
          name: bssid
          schema:
            type: string
        - description: mac of the device that had strongest signal strength for ssid/bssid pair
          in: query
          name: ap_mac
          schema:
            type: string
        - description: channel over which ap_mac heard ssid/bssid pair
          in: query
          name: channel
          schema:
            type: integer
        - description: whether the reporting AP see a wireless client (on LAN) connecting to it
          in: query
          name: seen_on_lan
          schema:
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/RogueEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteRogueEvents
      tags:
        - Sites Rogues
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/rogues/{rogue_bssid}':
    get:
      description: Get Rogue AP Details
      operationId: getSiteRogueAP
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    manufacture: Intel Corporate
                    seen_as_client: true
              schema:
                properties:
                  manufacture:
                    type: string
                  seen_as_client:
                    type: boolean
                required:
                  - seen_as_client
                  - manufacture
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteRogueAP
      tags:
        - Sites Rogues
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rogue_bssid.yml
  '/api/v1/sites/{site_id}/rogues/{rogue_bssid}/deauth_clients':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rogue_bssid.yml
    post:
      description: Send Deauth frame to clients connected to a Rogue AP
      operationId: deauthSiteWirelessClientsConnectedToARogue
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deauthSiteWirelessClientsConnectedToARogue
      tags:
        - Sites Rogues
  '/api/v1/sites/{site_id}/rrm/current':
    get:
      description: Get Current Channel Planning
      operationId: getSiteCurrentChannelPlanning
      responses:
        '200':
          $ref: ./components/responses/Rrm.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteCurrentChannelPlanning
      tags:
        - Sites RRM
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/rrm/current/devices/{device_id}/band/{band}':
    get:
      description: Get Current RRM Considerations for an AP on a Specific Band
      operationId: getSiteSpecificRrmConsiderations
      responses:
        '200':
          $ref: ./components/responses/RrmConsideration.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSpecificRrmConsiderations
      tags:
        - Sites RRM
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
      - description: radio band
        in: path
        name: band
        required: true
        schema:
          enum:
            - '24'
            - '5'
            - '6'
          type: string
  '/api/v1/sites/{site_id}/rrm/events':
    get:
      description: Get Site RRM Events
      operationId: getSiteRrmEvents
      parameters:
        - in: query
          name: band
          required: true
          schema:
            enum:
              - '24'
              - '5'
              - '6'
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/RrmEvents.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteRrmEvents
      tags:
        - Sites RRM
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/rrm/optimize':
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Optimize Site RRM
      operationId: optimizeSiteRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                    - '24'
                    - '5'
                    - '6'
            schema:
              properties:
                bands:
                  description: list of bands
                  items:
                    type: string
                  type: array
                macs:
                  description: 'targeting AP (neighbor APs may get changed, too), default is empty for ALL APs'
                  items:
                    example: 5c5b35000001
                    type: string
                  type: array
                txpower_only:
                  default: false
                  description: only changng TX Power (will not disconnect clients)
                  type: boolean
              required:
                - bands
              type: object
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: optimizeSiteRrm
      tags:
        - Sites RRM
  '/api/v1/sites/{site_id}/rssizones':
    get:
      description: Get List of Site RSSI Zone (RSSI-based)
      operationId: listSiteRssiZones
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - created_time: 0
                      devices:
                        - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                          rssi: 0
                      id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      modified_time: 0
                      name: string
                      org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                items:
                  $ref: ./components/schemas/rssizone.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteRssiZones
      tags:
        - Sites Rssizones
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create RSSI Zone
      operationId: createSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                  name: string
            schema:
              $ref: ./components/schemas/rssizone.yml
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 0
                    devices:
                      - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                        rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                $ref: ./components/schemas/rssizone.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteRssiZone
      tags:
        - Sites Rssizones
  '/api/v1/sites/{site_id}/rssizones/{rssizone_id}':
    delete:
      description: Delete Site RSSI Zone
      operationId: deleteSiteRssiZone
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteRssiZone
      tags:
        - Sites Rssizones
    get:
      description: Get Site RSSI Zone details
      operationId: getSiteRssiZone
      responses:
        '200':
          $ref: ./components/responses/RssizonesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteRssiZone
      tags:
        - Sites Rssizones
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/rssizone_id.yml
    put:
      description: Update Site RSSI Zone
      operationId: updateSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                  name: string
            schema:
              $ref: ./components/schemas/rssizone.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Rssizone.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteRssiZone
      tags:
        - Sites Rssizones
  '/api/v1/sites/{site_id}/servicepolicies/derived':
    get:
      description: Retrieves the list of Service Policies available for the Site
      operationId: listSiteServicePoliciesDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/ServicePoliciesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteServicePoliciesDerived
      tags:
        - Sites Service Policies
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/services/derived':
    get:
      description: Retrieves the list of Services available for the Site
      operationId: listSiteServicesDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/ServicesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteServicesDerived
      tags:
        - Sites Services
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/services/events/count':
    get:
      description: Count Service Path Events
      operationId: countSiteServicePathEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - mac
              - vpn_name
              - vpn_path
              - policy
              - port_id
              - model
              - site_id
            type: string
        - description: 'Event type, e.g. GW_SERVICE_PATH_DOWN'
          in: query
          name: type
          schema:
            type: string
        - description: Description of the event including the reason it is triggered
          in: query
          name: text
          schema:
            type: string
        - description: Peer name
          in: query
          name: vpn_name
          schema:
            type: string
        - description: Peer path name
          in: query
          name: vpn_path
          schema:
            type: string
        - description: Service policy associated with that specific path
          in: query
          name: policy
          schema:
            type: string
        - description: Network interface
          in: query
          name: port_id
          schema:
            type: string
        - description: Device model
          in: query
          name: model
          schema:
            type: string
        - description: Device firmware version
          in: query
          name: version
          schema:
            type: string
        - description: 'Start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: Org id
          in: query
          name: org_id
          schema:
            type: string
        - description: Site id
          in: query
          name: site_id
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
      summary: countSiteServicePathEvents
      tags:
        - Sites Services
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/services/events/search':
    get:
      description: Search Service Path Events
      operationId: searchSiteServicePathEvents
      parameters:
        - description: 'Event type, e.g. GW_SERVICE_PATH_DOWN'
          in: query
          name: type
          schema:
            type: string
        - description: Description of the event including the reason it is triggered
          in: query
          name: text
          schema:
            type: string
        - description: Peer name
          in: query
          name: vpn_name
          schema:
            type: string
        - description: Peer path name
          in: query
          name: vpn_path
          schema:
            type: string
        - description: Service policy associated with that specific path
          in: query
          name: policy
          schema:
            type: string
        - description: Network interface
          in: query
          name: port_id
          schema:
            type: string
        - description: Device model
          in: query
          name: model
          schema:
            type: string
        - description: Device firmware version
          in: query
          name: version
          schema:
            type: string
        - description: 'Start time, in epoch'
          in: query
          name: timestamp
          schema:
            type: number
        - description: Org id
          in: query
          name: org_id
          schema:
            type: string
        - description: Site id
          in: query
          name: site_id
          schema:
            type: string
        - description: MAC address
          in: query
          name: mac
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/ServicePathEventsSearch.yml
      summary: searchSiteServicePathEvents
      tags:
        - Sites Services
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/setting':
    get:
      description: Get Site Settings
      operationId: getSiteSetting
      responses:
        '200':
          $ref: ./components/responses/SiteSettings.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSetting
      tags:
        - Sites Setting
    parameters:
      - $ref: ./components/parameters/site_id.yml
    put:
      description: Update Site Settings
      operationId: updateSiteSettings
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                    - string
                  analytic:
                    enabled: false
                  ap_matching:
                    enabled: true
                    rules:
                      - 'eth1,eth2':
                          port_vlan_id: 1
                          vlan_ids:
                            - 1
                            - 10
                            - 50
                  ap_port_config:
                    model_specific:
                      AP32:
                        'eth1,eth2':
                          port_vlan_id: 1
                          vlan_ids:
                            - 1
                            - 10
                            - 50
                  auto_placement:
                    orientation: 45
                    x: 30
                    'y': 60
                  auto_preemption:
                    day_of_week: any
                    enabled: false
                    time_of_day: any
                  auto_upgrade:
                    custom_versions:
                      AP21: stable
                      AP41: 0.1.5135
                      AP61: 0.1.7215
                    day_of_week: sun
                    enabled: false
                    time_of_day: '12:00'
                    version: beta
                  blacklist_url: 'https://papi.s3.amazonaws.com/blacklist/xxx...'
                  ble_config:
                    beacon_enabled: false
                    beacon_rate: 3
                    beacon_rate_mode: custom
                    beam_disabled:
                      - 1
                      - 3
                      - 6
                    custom_ble_packet_enabled: false
                    custom_ble_packet_frame: 0x........
                    custom_ble_packet_freq_msec: 300
                    eddystone_uid_adv_power: -65
                    eddystone_uid_beams: '2-4,7'
                    eddystone_uid_enabled: false
                    eddystone_uid_freq_msec: 200
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_adv_power: -65
                    eddystone_url_beams: '2-4,7'
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 1000
                    eddystone_url_url: 'https://www.abc.com'
                    ibeacon_adv_power: -65
                    ibeacon_beams: '2-4,7'
                    ibeacon_enabled: false
                    ibeacon_freq_msec: 0
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    power: 10
                    power_mode: custom
                  config_auto_revert: false
                  created_time: 0
                  device_updown_threshold: 0
                  dns_servers:
                    - string
                  dns_suffix:
                    - string
                  engagement:
                    dwell_tag_names:
                      bounce: Bounce
                      engaged: Engaged
                      passerby: Passer By
                      stationed: Stationed
                    dwell_tags:
                      bounce: 'null'
                      engaged: 300-14400
                      passerby: 'null'
                      stationed: 14400-43200
                    hours:
                      fri: '09:00-17:00'
                      mon: '09:00-17:00'
                      sat: '09:00-12:00'
                      sun: '09:00-12:00'
                      thu: '09:00-17:00'
                      tue: '09:00-17:00'
                      wed: '09:00-17:00'
                    max_dwell: 43200
                    min_dwell: 0
                  evpn_options:
                    auto_loopback_subnet: 100.101.0.0/16
                    auto_router_id_subnet: 100.100.0.0/24
                    core_as_border: false
                    overlay:
                      as: 65000
                    per_vlan_vga_v4_mac: false
                    routed_at: edge
                    underlay:
                      as_base: 65001
                      routed_id_prefix: /24
                      subnet: 10.255.240.0/20
                  flags:
                    property1: string
                    property2: string
                  for_site: true
                  gateway_additional_config_cmds:
                    - string
                  gateway_mgmt:
                    admin_sshkeys:
                      - string
                    app_probing:
                      apps:
                        - string
                      custom_apps:
                        - app_type: string
                          hostname:
                            - string
                          name: string
                          protocol: http
                      enabled: true
                    app_usage: true
                    auto_signature_update:
                      day_of_week: string
                      enable: true
                      time_of_day: string
                    config_revert_timer: 10
                    probe_hosts:
                      - string
                    root_password: string
                    security_log_source_address: string
                    security_log_source_interface: string
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f10
                  led:
                    brightness: 255
                    enabled: true
                  modified_time: 0
                  mxedge:
                    mist_das:
                      coa_servers:
                        - disable_event_timestamp_check: false
                          enabled: true
                          host: string
                          port: 3799
                          secret: string
                      enabled: false
                    radsec:
                      acct_servers:
                        - host: string
                          port: 1813
                          secret: string
                          ssids:
                            - string
                      auth_servers:
                        - host: string
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: string
                          keywrap_mack: string
                          port: 1812
                          secret: string
                          ssids:
                            - string
                      enabled: true
                      match_ssid: true
                      proxy_hosts:
                        - string
                      server_selection: ordered
                      source: any
                  mxedge_mgmt:
                    mist_password: MIST_PASSWORD
                    root_password: ROOT_PASSWORD
                  mxtunnels:
                    ap_subnets:
                      - 0.0.0.0/0
                    auto_preemption:
                      day_of_week: mon
                      enabled: false
                      time_of_day: '12:00'
                    clusters:
                      - name: 'primary,'
                        tunterm_hosts:
                          - mxedge1
                          - mxedge2.local
                    created_time: 0
                    enabled: true
                    for_site: true
                    hello_interval: 60
                    hello_retries: 3
                    hosts:
                      - string
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f18
                    modified_time: 0
                    mtu: 1100
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    protocol: udp
                    radsec:
                      acct_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1813
                          secret: testing123
                      auth_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1812
                          secret: testing123
                      enabled: false
                      use_mxedge: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    vlan_ids:
                      - 3
                      - 5
                      - 6
                      - 7-9
                  networks:
                    property1:
                      dns:
                        - string
                      dns_suffix:
                        - string
                      gateway: string
                      ospf_interface_type: string
                      subnet: string
                      vlan_id: 0
                      zone: string
                    property2:
                      dns:
                        - string
                      dns_suffix:
                        - string
                      gateway: string
                      ospf_interface_type: string
                      subnet: string
                      vlan_id: 0
                      zone: string
                  ntp_servers:
                    - string
                  occupancy:
                    assets_enabled: false
                    clients_enabled: true
                    min_duration: 3000
                    sdkclients_enabled: false
                    unconnected_clients_enabled: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  ospf_areas:
                    property1:
                      include_loopback: false
                      networks:
                        corp:
                          auth_keys:
                            '1': auth-key-1
                          auth_type: md5
                          bfd_minimum_interval: 500
                          dead_interval: 40
                          hello_interval: 10
                          interface_type: nbma
                          metric: 10000
                        guest:
                          passive: true
                      type: default
                    property2:
                      include_loopback: false
                      networks:
                        corp:
                          auth_keys:
                            '1': auth-key-1
                          auth_type: md5
                          bfd_minimum_interval: 500
                          dead_interval: 40
                          hello_interval: 10
                          interface_type: nbma
                          metric: 10000
                        guest:
                          passive: true
                      type: default
                  persist_config_on_device: false
                  port_mirroring:
                    property1:
                      egress_port_ids:
                        - ge-0/0/3
                      ingress_networks:
                        - corp
                      ingress_port_ids:
                        - ge-0/0/3
                      output_network: analyze
                      output_port_id: ge-0/0/5
                    property2:
                      egress_port_ids:
                        - ge-0/0/3
                      ingress_networks:
                        - corp
                      ingress_port_ids:
                        - ge-0/0/3
                      output_network: analyze
                      output_port_id: ge-0/0/5
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                        - equals: string
                          equals_any:
                            - string
                          expression: string
                          src: lldp_chassis_id
                          usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                        - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  proxy:
                    url: 'http://proxy.internal:8080/'
                  radio_config:
                    allow_rrm_disable: false
                    ant_gain_24: 4
                    ant_gain_5: 5
                    ant_gain_6: 5
                    antenna_mode: default
                    band_24:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_24_usage: '5'
                    band_5:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_6:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                        - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    indoor_use: false
                    scanning_enabled: true
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1813
                        secret: testing123
                    auth_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1812
                        secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 20
                      size: 5m
                    console:
                      contents:
                        - facility: config
                          severity: warning
                    enabled: false
                    files:
                      - archive:
                          files: 10
                          size: 5m
                        contents:
                          - facility: config
                            severity: warning
                        explicit_priority: true
                        file: file-name
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        structured_data: true
                    network: default
                    send_to_all_servers: false
                    servers:
                      - facility: config
                        host: syslogd.internal
                        port: 514
                        protocol: udp
                        severity: info
                        tag: ''
                    time_format: millisecond
                    users:
                      - contents:
                          - facility: config
                            severity: warning
                        match: '"!alarm|ntp|errors.crc_error[chan]"'
                        user: '*'
                  report_gatt: false
                  rogue:
                    enabled: false
                    honeypot_enabled: false
                    min_duration: 10
                    min_rssi: -80
                    whitelisted_bssids:
                      - NeighborSSID
                    whitelisted_ssids:
                      - 'cc:8e:6f:d4:bf:16'
                      - cc-8e-6f-d4-bf-16
                      - cc-73-*
                      - 'cc:82:*'
                  rtsa:
                    app_waking: false
                    disable_dead_reckoning: true
                    disable_pressure_sensor: false
                    enabled: true
                    track_asset: false
                  simple_alert:
                    arp_failure:
                      client_count: 10
                      duration: 20
                      incident_count: 10
                    dhcp_failure:
                      client_count: 10
                      duration: 10
                      incident_count: 20
                    dns_failure:
                      client_count: 20
                      duration: 10
                      incident_count: 30
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  skyatp:
                    enabled: true
                    send_ip_mac_mapping: true
                  srx_app:
                    enabled: false
                  ssh_keys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA...Wxa6p6UW0ZbcP john@host
                  ssr:
                    conductor_hosts:
                      - '"1.1.1.1", "2.2.2.2"'
                    disable_stats: true
                  status_portal:
                    enabled: false
                    hostnames:
                      - my.misty.com
                  switch_matching:
                    additional_config_cmds:
                      - set snmp community public
                    enabled: false
                    rules:
                      - {}
                  switch_mgmt:
                    ap_affinity_threshold: 10
                    config_revert_timer: 10
                    dhcp_option_fqdn: false
                    mxedge_proxy_host: string
                    mxedge_proxy_port: 2222
                    protect_re:
                      allowed_services:
                        - '["snmp", "icmp"]'
                      custom:
                        - port_range: string
                          protocol: any
                          subnets:
                            - string
                      enabled: true
                      trusted_hosts:
                        - '["10.242.3.0/24"]'
                    root_password: string
                    tacacs:
                      acct_servers:
                        - host: string
                          port: 0
                          secret: string
                          timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                        - host: string
                          port: 0
                          secret: string
                          timeout: 10
                    use_mxedge_proxy: true
                  track_anonymous_devices: false
                  tunterm_monitoring:
                    - host: 10.2.8.15
                      port: 80
                      protocol: tcp
                      timeout: 300
                  tunterm_monitoring_disabled: false
                  vars:
                    RADIUS_IP1: 172.31.2.5
                    RADIUS_SECRET: 11s64632d
                  vna:
                    enabled: false
                  vrf_instances:
                    guest:
                      extra_routes:
                        0.0.0.0/0:
                          via: 192.168.31.1
                      networks:
                        - guest
                  vrrp_groups:
                    property1:
                      auth_key: auth-key-1
                      auth_password: string
                      auth_type: md5
                      networks:
                        data:
                          ip: 10.182.96.1
                        mgmt:
                          ip: 10.182.104.1
                        v10:
                          ip: 10.182.104.129
                        wap:
                          ip: 10.182.102.1
                    property2:
                      auth_key: auth-key-1
                      auth_password: string
                      auth_type: md5
                      networks:
                        data:
                          ip: 10.182.96.1
                        mgmt:
                          ip: 10.182.104.1
                        v10:
                          ip: 10.182.104.129
                        wap:
                          ip: 10.182.102.1
                  vs_instances:
                    property1:
                      networks:
                        - guest
                    property2:
                      networks:
                        - guest
                  wan_vna:
                    enabled: false
                  watched_station_url: 'https://papi.s3.amazonaws.com/watched_station/xxx...'
                  whitelist_url: 'https://papi.s3.amazonaws.com/whitelist/xxx...'
                  wids:
                    repeated_auth_failures:
                      duration: 60
                      threshold: 0
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: false
                    enable_arp_spoof_check: false
                    enable_shared_radio_scanning: true
                    enabled: true
                    locate_connected: true
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: false
                    mesh_enabled: false
                    mesh_psk: string
                    mesh_ssid: string
                    proxy_arp: default
                  wired_vna:
                    enabled: false
                  zone_occupancy_alert:
                    email_notifiers:
                      - foo@juniper.net
                      - bar@juniper.net
                    enabled: false
                    threshold: 5
            schema:
              $ref: ./components/schemas/site_setting.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/SiteSettings.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteSettings
      tags:
        - Sites Setting
  '/api/v1/sites/{site_id}/setting/blacklist':
    delete:
      description: Delete Site Blacklist Station Clients
      operationId: deleteSiteWirelessClientsBlocklist
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWirelessClientsBlocklist
      tags:
        - Sites Setting
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        This endpoint is to provide list of client macs for annotation blacklist.

        Retrieve the current clients list `blacklist_url` under Site:Setting
      operationId: createSiteWirelessClientsBlocklist
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 18-65-90-de-f4-c6
                    - 84-89-ad-5d-69-0d
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/MacsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWirelessClientsBlocklist
      tags:
        - Sites Setting
  '/api/v1/sites/{site_id}/setting/jse/info':
    get:
      description: Retrieves the list of JSE orgs associated with the account
      operationId: getSiteJseInfo
      responses:
        '200':
          $ref: ./components/responses/JseInfo.yml
      summary: getSiteJseInfo
      tags:
        - Sites JSE
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/setting/watched_station':
    delete:
      description: Delete Site Watched Station Clients
      operationId: deleteSiteWatchedStations
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWatchedStations
      tags:
        - Sites Setting
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        This endpoint is to provide list of client macs for annotation as  watched station.

        Retrieve the current clients list from  `watched_station_url` under Site:Setting
      operationId: createSiteWatchedStations
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 18-65-90-de-f4-c6
                    - 84-89-ad-5d-69-0d
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/MacsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWatchedStations
      tags:
        - Sites Setting
  '/api/v1/sites/{site_id}/setting/whitelist':
    delete:
      description: Delete Site Whitelist Station Clients
      operationId: deleteSiteWirelessClientsAllowlist
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWirelessClientsAllowlist
      tags:
        - Sites Setting
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |-
        This endpoint is to provide list of client macs for annotation as whitelist.

        Retrieve the current clients list from `whitelist_url` under Site:Setting
      operationId: createSiteWirelessClientsAllowlist
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                    - 18-65-90-de-f4-c6
                    - 84-89-ad-5d-69-0d
            schema:
              $ref: ./components/schemas/model_object_macs_array_string.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/MacsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWirelessClientsAllowlist
      tags:
        - Sites Setting
  '/api/v1/sites/{site_id}/sitetemplates/derived':
    get:
      description: Get derived Site Templates for Site
      operationId: getSiteSiteTemplateDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/SiteTemplate.yml
      summary: getSiteSiteTemplateDerived
      tags:
        - Sites Site Templates
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/skyatp/events/count':
    get:
      description: Count by Distinct Attributes of Skyatp Events (WIP)
      operationId: countSiteSkyatpEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - mac
              - device_mac
              - threat_level
            type: string
        - description: 'event type, e.g. cc, fs, mw'
          in: query
          name: type
          schema:
            type: string
        - description: client MAC
          in: query
          name: mac
          schema:
            type: string
        - description: device MAC
          in: query
          name: device_mac
          schema:
            type: string
        - description: threat level
          in: query
          name: threat_level
          schema:
            type: integer
        - $ref: ./components/parameters/ip.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteSkyatpEvents
      tags:
        - Sites Skyatp
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/skyatp/events/search':
    get:
      description: Search Skyatp Events (WIP)
      operationId: searchSiteSkyatpEvents
      parameters:
        - description: 'event type, e.g. cc, fs, mw'
          in: query
          name: type
          schema:
            type: string
        - description: client MAC
          in: query
          name: mac
          schema:
            type: string
        - description: device MAC
          in: query
          name: device_mac
          schema:
            type: string
        - description: threat level
          in: query
          name: threat_level
          schema:
            type: integer
        - $ref: ./components/parameters/ip.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1513176951
                    limit: 10
                    results:
                      - device_mac: 658279bb1fa4
                        ip: 172.16.0.11
                        mac: b019c66c8348
                        org_id: 3139f2c2-fac6-11e5-8156-0242ac110006
                        site_id: 70e0f468-fc13-11e5-85ad-0242ac110008
                        threat_level: 7
                        timestamp: 1592524478
                        type: cc
                    start: 1512572151
                    total: 1
              schema:
                properties:
                  end:
                    type: integer
                  limit:
                    type: integer
                  next:
                    type: string
                  results:
                    items:
                      $ref: ./components/schemas/events_skyatp.yml
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: integer
                  total:
                    type: integer
                required:
                  - end
                  - limit
                  - results
                  - start
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteSkyatpEvents
      tags:
        - Sites Skyatp
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifier/{classifier}/summary':
    get:
      description: Get SLE classifier details
      operationId: getSiteSleClassifierDetails
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SleClassifierSummary.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleClassifierDetails
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
      - in: path
        name: classifier
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifiers':
    get:
      description: Get the list of classifiers for a specific metric
      operationId: getSiteSleMetricClassifiers
      responses:
        '200':
          content:
            application/json:
              examples:
                example:
                  value:
                    - asymmetry-uplink
                    - weak-signal
                    - asymmetry-downlink
              schema:
                items:
                  type: string
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleMetricClassifiers
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/histogram':
    get:
      description: Get the histogram for the SLE metric
      operationId: getSiteSleHistogram
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SleHistogram.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleHistogram
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impact-summary':
    get:
      description: |-
        Get impact summary counts optionally filtered by classifier and failure type
         
        * Wireless SLE Fields: `wlan`, `device_type`, `device_os` ,`band`, `ap`, `server`, `mxedge`
        * Wired SLE Fields: `switch`, `client`, `vlan`, `interface`, `chassis`
        * WAN SLE Fields: `gateway`, `client`, `interface`, `chassis`, `peer_path`, `gateway_zones`
      operationId: getSiteSleImpactSummary
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: fields
          schema:
            enum:
              - wlan
              - device_type
              - device_os
              - band
              - ap
              - server
              - mxedge
              - switch
              - client
              - vlan
              - interface
              - chassis
              - gateway
              - peer_path
              - gateway_zones
            type: string
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactSummary.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactSummary
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-applications':
    get:
      description: For WAN SLEs. Get list of impacted interfaces optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedApplications
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedApplications.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedApplications
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - switch
            - gateway
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-aps':
    get:
      description: For Wireless SLEs. Get list of impacted APs optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedAps
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedAps.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedAps
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-chassis':
    get:
      description: For Wired and WAN SLEs. Get list of impacted interfaces optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedChassis
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedChassis.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedChassis
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - switch
            - gateway
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-clients':
    get:
      description: For Wired SLEs. Get list of impacted interfaces optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedWiredClients
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedClients.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedWiredClients
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - switch
            - gateway
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-gateways':
    get:
      description: For WAN SLEs. Get list of impacted interfaces optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedGateways
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedGateways.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedGateways
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-interfaces':
    get:
      description: For Wired and WAN SLEs. Get list of impacted interfaces optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedInterfaces
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedInterfaces.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedInterfaces
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - switch
            - gateway
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-switches':
    get:
      description: For Wired SLEs. Get list of impacted switches optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedSwitches
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedSwitches.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedSwitches
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-users':
    get:
      description: For Wireless SLEs. Get list of impacted wireless users optionally filtered by classifier and failure type
      operationId: getSiteSleImpactedWirelessClients
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - in: query
          name: classifier
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/SleImpactedUsers.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleImpactedWirelessClients
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
          type: string
      - in: path
        name: scope_id
        required: true
        schema:
          format: uuid
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/summary':
    get:
      description: ' Get the summary for the SLE metric'
      operationId: getSiteSleSummary
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SleSummary.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleSummary
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold':
    get:
      description: Get the SLE threshold
      operationId: getSiteSleThreshold
      responses:
        '200':
          $ref: ./components/responses/SleThreshold.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSleThreshold
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
      - description: 'values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics'
        in: path
        name: metric
        required: true
        schema:
          type: string
    post:
      description: Replace the SLE threshold
      operationId: replaceSiteSleThreshold
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  maximum: -60
                  minimum: -90
            schema:
              $ref: ./components/schemas/sle_threshold.yml
      responses:
        '200':
          $ref: ./components/responses/SleThreshold.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: replaceSiteSleThreshold
      tags:
        - Sites SLEs
    put:
      description: Update the SLE threshold
      operationId: updateSiteSleThreshold
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  maximum: -60
                  minimum: -90
            schema:
              $ref: ./components/schemas/sle_threshold.yml
      responses:
        '200':
          $ref: ./components/responses/SleThreshold.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteSleThreshold
      tags:
        - Sites SLEs
  '/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics':
    get:
      description: Get the list of metrics for the given scope
      operationId: getSiteSlesMetrics
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    enabled:
                      - coverage
                      - capacity
                      - time-to-connect
                      - failed-to-connect
                      - roaming
                      - roaming-v2
                      - throughput
                      - switch-health
                      - switch-throughput
                      - switch-stc
                      - gateway-health
                      - application-health
                      - wan-link-health
                      - ap-availability
                    supported:
                      - coverage
                      - capacity
                      - time-to-connect
                      - failed-to-connect
                      - roaming
                      - roaming-v2
                      - location-jitter
                      - location-latency
                      - throughput
                      - location-dropped-requests
                      - switch-health
                      - switch-throughput
                      - switch-stc
                      - gateway-health
                      - application-health
                      - wan-link-health
                      - ap-availability
                      - location-sdk-connect-time
                      - location-ble-hung
              schema:
                properties:
                  enabled:
                    items:
                      type: string
                    type: array
                  supported:
                    items:
                      type: string
                    type: array
                required:
                  - supported
                  - enabled
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSlesMetrics
      tags:
        - Sites SLEs
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - in: path
        name: scope
        required: true
        schema:
          enum:
            - site
            - ap
            - switch
            - gateway
            - client
          type: string
      - description: |-
          * site_id if `scope`==`site`
          * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`
          * mac if `scope`==`client`
        in: path
        name: scope_id
        required: true
        schema:
          type: string
  '/api/v1/sites/{site_id}/ssr/upgrade/{upgrade_id}':
    get:
      description: Get Specific Site SSR Upgrade
      operationId: getSiteSsrUpgrade
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    channel: stable
                    device_type: gateway
                    id: 5cbcee0a-c620-4bb4-a25e-15000934e9d8
                    status: upgrading
                    targets:
                      failed: []
                      queued: []
                      success: []
                      upgrading:
                        - 8e525f1d-4178-4ae1-a988-2b0176855e55
                    versions: {}
              schema:
                properties:
                  channel:
                    minLength: 1
                    type: string
                  device_type:
                    type: string
                  id:
                    minLength: 1
                    type: string
                  status:
                    minLength: 1
                    type: string
                  targets:
                    properties:
                      failed:
                        items:
                          type: string
                        type: array
                      queued:
                        items:
                          type: string
                        type: array
                      success:
                        items:
                          type: string
                        type: array
                      upgrading:
                        items:
                          type: string
                        type: array
                    required:
                      - queued
                      - upgrading
                      - success
                      - failed
                    type: object
                  versions:
                    type: object
                required:
                  - status
                  - versions
                  - channel
                  - id
                  - targets
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSsrUpgrade
      tags:
        - Sites Devices Upgrades
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/upgrade_id.yml
  '/api/v1/sites/{site_id}/ssr/{device_id}/upgrade':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
    post:
      description: Upgrade Site SSR device
      operationId: upgradeSiteSsr
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  version: 5.3.1-170-93
            schema:
              properties:
                channel:
                  default: stable
                  description: upgrade channel to follow
                  enum:
                    - stable
                    - beta
                    - alpha
                  type: string
                reboot_at:
                  description: 'eboot start time in epoch seconds, default is start_time, -1 disables reboot'
                  type: integer
                start_time:
                  description: '128T firmware download start time in epoch seconds, default is now, -1 disables download'
                  type: integer
                version:
                  default: stable
                  description: 128T firmware version to upgrade (e.g. 5.3.0-93)
                  minLength: 1
                  type: string
              required:
                - version
              type: object
      responses:
        '200':
          $ref: ./components/responses/SsrUpgrade.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: upgradeSiteSsr
      tags:
        - Sites Devices Upgrades
  '/api/v1/sites/{site_id}/stats':
    get:
      description: Get Site Stats
      operationId: getSiteStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    address: string
                    alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    country_code: string
                    created_time: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    lat: 0
                    latlng:
                      lat: 0
                      lng: 0
                    lng: 0
                    modified_time: 0
                    msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    networktemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    num_ap: 0
                    num_ap_connected: 0
                    num_clients: 0
                    num_devices: 0
                    num_devices_connected: 0
                    num_gateway: 0
                    num_gateway_connected: 0
                    num_switch: 0
                    num_switch_connected: 0
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rftemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                      - 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                    timezone: string
                    tzoffset: 0
              schema:
                $ref: ./components/schemas/stats_site.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/apps/count':
    get:
      description: Count by Distinct Attributes of Applications
      operationId: countSiteApps
      parameters:
        - description: Default for wireless devices is `ap`. Default for wired devices is `device_mac`
          in: query
          name: distinct
          schema:
            enum:
              - ap
              - wcid
              - ssid
              - wlan_id app
              - device_mac
              - src_ip
              - port_id
              - app
              - category
              - service
            type: string
        - description: MAC of the device
          in: query
          name: device_mac
          schema:
            type: string
        - description: Application name
          in: query
          name: app
          schema:
            type: string
        - description: If a device is wired or wireless. Default is False.
          in: query
          name: wired
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteApps
      tags:
        - Sites Applications
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/assets':
    get:
      description: Get List of Site Assets Stats
      operationId: listSiteAssetsStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArrayStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteAssetsStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/assets/asset_id':
    get:
      description: Get Site Asset Details
      operationId: getSiteAssetStats
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AssetStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAssetStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/assets/count':
    get:
      description: Count Asset by distinct field
      operationId: countSiteAssets
      parameters:
        - in: query
          name: distinct
          schema:
            default: map_id
            enum:
              - mac
              - map_id
              - ibeacon_uuid
              - ibeacon_major
              - ibeacon_minor
              - eddystone_uid_namespace
              - eddystone_uid_instance
              - eddystone_url
              - by
              - name
              - device_name
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteAssets
      tags:
        - Sites Assets
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/assets/search':
    get:
      description: Assets Search
      operationId: searchSiteAssets
      parameters:
        - in: query
          name: mac
          schema:
            type: string
        - in: query
          name: map_id
          schema:
            format: uuid
            type: string
        - in: query
          name: ibeacon_uuid
          schema:
            format: uuid
            type: string
        - in: query
          name: ibeacon_major
          schema:
            type: integer
        - in: query
          name: ibeacon_minor
          schema:
            type: integer
        - in: query
          name: eddystone_uid_namespace
          schema:
            type: string
        - in: query
          name: eddystone_uid_instance
          schema:
            type: string
        - in: query
          name: eddystone_url
          schema:
            type: string
        - in: query
          name: device_name
          schema:
            type: string
        - in: query
          name: by
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: ap_mac
          schema:
            type: string
        - in: query
          name: beam
          schema:
            type: string
        - in: query
          name: rssi
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/AssetsArrayStatsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteAssets
      tags:
        - Sites Assets
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/beacons':
    get:
      description: Get List of Site Beacons Stats
      operationId: listSiteBeaconsStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: ./components/schemas/stats_beacon.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteBeaconsStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/bgp_peers/count':
    get:
      description: Count BGP Stats
      operationId: countSiteBgpStats
      parameters:
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: distinct
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteBgpStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/bgp_peers/search':
    get:
      description: Search BGP Stats
      operationId: searchSiteBgpStats
      responses:
        '200':
          $ref: ./components/responses/BgpStatsArraySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteBgpStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/calls/client/{client_mac}/troubleshoot':
    get:
      description: Troubleshoot a call
      operationId: troubleshootSiteCall
      parameters:
        - description: meeting_id
          in: query
          name: meeting_id
          required: true
          schema:
            type: string
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Third party app name
          in: query
          name: app
          schema:
            example: zoom
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/CallTroubleshoot.yml
      summary: troubleshootSiteCall
      tags:
        - Sites Calls
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
  '/api/v1/sites/{site_id}/stats/calls/count':
    get:
      description: Count by Distinct Attributes of Calls
      operationId: countSiteCalls
      parameters:
        - in: query
          name: distrinct
          schema:
            default: mac
            enum:
              - mac
            type: string
        - description: 'feedback rating (e.g. "rating=1" or "rating=1,2")'
          in: query
          name: rating
          schema:
            maximum: 5
            minimum: 1
            type: integer
        - in: query
          name: app
          schema:
            type: string
        - in: query
          name: start
          schema:
            type: string
        - in: query
          name: end
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteCalls
      tags:
        - Sites Calls
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/calls/search':
    get:
      description: Search Calls
      operationId: searchSiteCalls
      parameters:
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Third party app name
          in: query
          name: app
          schema:
            example: zoom
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/CallStatsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteCalls
      tags:
        - Sites Calls
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/clients':
    get:
      description: Get List of Site All Clients Stats Details
      operationId: listSiteWirelessClientsStats
      parameters:
        - in: query
          name: wired
          schema:
            default: false
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                wired-client:
                  value:
                    - _id: 003ee1bec926
                      _ttl: 277
                      ap_id: 00000000-0000-0000-1000-d420b085fdff
                      auth_state: authorizedForCompleteAccess
                      eth_port: eth1
                      last_seen: 1645060912.0751352
                      mac: e45f01319a43
                      rx_bytes: 0
                      rx_pkts: 0
                      site_id: 1916d52a-4a90-11e5-8b45-1258369c38a9
                      tx_bytes: 0
                      tx_pkts: 0
                      uptime: 8723766
                      vlan_id: 70
                wireless-client:
                  value:
                    - _ttl: 0
                      accuracy: 0
                      airespace_ifname: string
                      airwatch:
                        authorized: true
                      ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                      ap_mac: string
                      band: '24'
                      channel: 0
                      dual_band: true
                      family: string
                      guest:
                        authorized: false
                        authorized_expiring_time: 0
                        authorized_time: 0
                        company: string
                        email: string
                        field1: string
                        name: string
                      hostname: string
                      idle_time: 0
                      ip: string
                      is_guest: false
                      key_mgmt: string
                      last_seen: 0
                      mac: string
                      manufacture: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      model: string
                      num_locating_aps: 0
                      os: string
                      power_saving: true
                      proto: a
                      psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                      rssi: 0
                      rssizones:
                        - id: 500f6eca-6276-4993-ffeb-53cbbbb06f08
                          since: 0
                      rx_bps: 0
                      rx_bytes: 0
                      rx_packets: 0
                      rx_rate: 0
                      rx_retries: 0
                      snr: 0
                      ssid: string
                      tx_bps: 0
                      tx_bytes: 0
                      tx_packets: 0
                      tx_rate: 0
                      tx_retries: 0
                      type: string
                      uptime: 0
                      username: string
                      vbeacons:
                        - id: 496f6eca-6276-4993-bfeb-63cbbbb16f08
                          since: 0
                      vlan_id: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                      wxrule_id: 722ef429-6c3a-422c-83d1-2c18f12bd5d4
                      wxrule_usage:
                        - tag_id: 39c8a0b3-fbe8-4801-95bf-e8a0792edf1d
                          usage: 0
                      x: 0
                      'y': 0
                      zones:
                        - id: 494f6eca-6276-4993-bfeb-73cbbbb26f08
                          since: 0
              schema:
                items:
                  oneOf:
                    - $ref: ./components/schemas/stats_client_detail.yml
                    - $ref: ./components/schemas/stats_client_wired.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWirelessClientsStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/clients/{client_mac}':
    get:
      description: Get Site Client Stats Details
      operationId: getSiteWirelessClientStats
      parameters:
        - in: query
          name: wired
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                wired-client:
                  value:
                    _id: 003ee1bec926
                    _ttl: 277
                    ap_id: 00000000-0000-0000-1000-d420b085fdff
                    auth_state: authorizedForCompleteAccess
                    eth_port: eth1
                    last_seen: 1645060912.0751352
                    mac: e45f01319a43
                    rx_bytes: 0
                    rx_pkts: 0
                    site_id: 1916d52a-4a90-11e5-8b45-1258369c38a9
                    tx_bytes: 0
                    tx_pkts: 0
                    uptime: 8723766
                    vlan_id: 70
                wireless-client:
                  value:
                    - _ttl: 0
                      accuracy: 0
                      airespace_ifname: string
                      airwatch:
                        authorized: true
                      ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                      ap_mac: string
                      band: '24'
                      channel: 0
                      dual_band: true
                      family: string
                      guest:
                        authorized: false
                        authorized_expiring_time: 0
                        authorized_time: 0
                        company: string
                        email: string
                        field1: string
                        name: string
                      hostname: string
                      idle_time: 0
                      ip: string
                      is_guest: false
                      key_mgmt: string
                      last_seen: 0
                      mac: string
                      manufacture: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      model: string
                      num_locating_aps: 0
                      os: string
                      power_saving: true
                      proto: a
                      psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                      rssi: 0
                      rssizones:
                        - id: 500f6eca-6276-4993-ffeb-53cbbbb36f08
                          since: 0
                      rx_bps: 0
                      rx_bytes: 0
                      rx_packets: 0
                      rx_rate: 0
                      rx_retries: 0
                      snr: 0
                      ssid: string
                      tx_bps: 0
                      tx_bytes: 0
                      tx_packets: 0
                      tx_rate: 0
                      tx_retries: 0
                      type: string
                      uptime: 0
                      username: string
                      vbeacons:
                        - id: 496f6eca-6276-4993-bfeb-63cbbbb46f08
                          since: 0
                      vlan_id: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                      wxrule_id: 722ef429-6c3a-422c-83d1-2c18f12bd5d4
                      wxrule_usage:
                        - tag_id: 39c8a0b3-fbe8-4801-95bf-e8a0792edf1d
                          usage: 0
                      x: 0
                      'y': 0
                      zones:
                        - id: 494f6eca-6276-4993-bfeb-73cbbbb56f08
                          since: 0
              schema:
                oneOf:
                  - $ref: ./components/schemas/stats_client_detail.yml
                  - $ref: ./components/schemas/stats_client_wired.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWirelessClientStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/client_mac.yml
  '/api/v1/sites/{site_id}/stats/devices':
    get:
      description: Get List of Site Devices Stats
      operationId: listSiteDevicesStats
      parameters:
        - in: query
          name: type
          schema:
            default: ap
            enum:
              - ap
              - switch
              - gateway
              - all
            type: string
        - in: query
          name: status
          schema:
            default: all
            enum:
              - all
              - connected
              - disconnected
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/DevicesArrayStatsSite.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteDevicesStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/devices/{device_id}':
    get:
      description: Get Site Device Stats Details
      operationId: getSiteDeviceStats
      responses:
        '200':
          content:
            application/json:
              examples:
                ap_stats:
                  value:
                    ble_config:
                      beacon_rate: 3
                      beacon_rate_model: custom
                      beam_disabled:
                        - 1
                        - 3
                        - 6
                      power: 10
                      power_mode: custom
                    ble_stat:
                      beacon_rate: 3
                      eddystone_uid_enabled: false
                      eddystone_uid_freq_msec: 200
                      eddystone_uid_instance: 5c5b35000001
                      eddystone_uid_namespace: 2818e3868dec25629ede
                      eddystone_url_enabled: true
                      eddystone_url_freq_msec: 100
                      eddystone_url_url: 'https://www.abc.com'
                      ibeacon_enabled: true
                      ibeacon_major: 13
                      ibeacon_minor: 138
                      ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                      major: 12345
                      minors:
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                      power: 10
                      rx_bytes: 135
                      rx_pkts: 135
                      tx_bytes: 5231513353
                      tx_pkts: 135135135
                      tx_resets: 0
                      uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    cert_expiry: 1534534392
                    ext_ip: 73.92.124.103
                    fwupdate:
                      progress: 10
                      status: inprogress
                      status_id: 5
                      timestamp: 1428949501
                    iot_stat:
                      DI2:
                        value: 0
                    ip: 10.2.9.159
                    ip_config:
                      dns:
                        - 8.8.8.8
                        - 4.4.4.4
                      dns_suffix:
                        - .mist.local
                        - .mist.com
                      gateway: 10.2.1.254
                      ip: 10.2.1.1
                      netmask: 255.255.255.0
                      type: static
                    ip_stat:
                      dns:
                        - 8.8.8.8
                        - 4.4.4.4
                      dns_suffix:
                        - .mist.local
                        - .mist.com
                      gateway: 10.2.1.254
                      gateway6: '2607:f8b0:4005:808::1'
                      ip: 10.2.1.1
                      ip6: '2607:f8b0:4005:808::2004'
                      ips:
                        vlan1: '10.2.1.1/24,2607:f8b0:4005:808::1/32'
                        vlan193: 10.73.1.31/16
                        vlan3157: 10.72.11.14/24
                      netmask: 255.255.255.0
                      netmask6: /32
                    l2tp_stat:
                      7dae216d-7c98-a51b-e068-dd7d477b7216:
                        sessions:
                          - local_sid: 31
                            remote_id: vpn1
                            remote_sid: 13
                            state: established
                        state: established_with_sessions
                        uptime: 135
                        wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                    last_seen: 1470417522
                    last_trouble:
                      code: '03'
                      timestamp: 1428949501
                    led:
                      brightness: 255
                      enabled: true
                    lldp_stat:
                      chassis_id: '63:68:61:73:73:69'
                      lldp_med_supported: false
                      mgmt_addr: 10.1.5.2
                      port_desc: 2/26
                      power_allocated: 15500
                      power_draw: 15000
                      power_request_count: 3
                      power_requested: 25500
                      system_desc: HP J9729A 2920-48G-POE+ Switch
                      system_name: TC2-OWL-Stack-01
                    locating: false
                    mac: 5c5b35000010
                    map_id: 63eda950-c6da-11e4-a628-60f81dd250cc
                    mesh_downlinks:
                      00000000-0000-0000-1000-5c5b356be59f:
                        band: '24'
                        channel: 7
                        idle_time: 3
                        last_seen: 1470417522
                        proto: a
                        rssi: -65
                        rx_bps: 12
                        rx_bytes: 217416
                        rx_packets: 2337
                        rx_rate: 65
                        rx_retries: 5
                        snr: 31
                        tx_bps: 6
                        tx_bytes: 175132
                        tx_packets: 1566
                        tx_rate: 65
                        tx_retries: 500
                    mesh_uplink:
                      band: '24'
                      channel: 7
                      idle_time: 3
                      last_seen: 1470417522
                      proto: a
                      rssi: -65
                      rx_bps: 12
                      rx_bytes: 217416
                      rx_packets: 2337
                      rx_rate: 65
                      rx_retries: 5
                      snr: 31
                      tx_bps: 6
                      tx_bytes: 175132
                      tx_packets: 1566
                      tx_rate: 65
                      tx_retries: 500
                      uplink_ap_id: 00000000-0000-0000-1000-5c5b35000010
                    model: AP200
                    name: conference room
                    num_clients: 10
                    port_stat:
                      eth0:
                        full_duplex: true
                        rx_bytes: 2056
                        rx_errors: 0
                        rx_pkts: 670
                        speed: 1000
                        tx_bytes: 2056
                        tx_pkts: 670
                        up: true
                      eth1:
                        up: false
                      module:
                        up: false
                    power_budget: -12000
                    power_src: PoE 802.3af
                    radio_config:
                      band_24:
                        bandwidth: 20
                        channel: 0
                        dynamic_chaining_enabled: false
                        power: 0
                        rx_chain: 4
                        tx_chain: 4
                      band_5:
                        bandwidth: 40
                        channel: 0
                        dynamic_chaining_enabled: false
                        power: 0
                        rx_chain: 4
                        tx_chain: 1
                      scanning_enabled: true
                    radio_stat:
                      band_24:
                        bandwidth: 20
                        channel: 6
                        mac: 5c5b350004a0
                        num_clients: 6
                        power: 19
                        rx_bytes: 8504737800
                        rx_pkts: 57731964
                        tx_bytes: 211166512114
                        tx_pkts: 812058566
                      band_5:
                        bandwidth: 80
                        channel: 44
                        mac: 5c5b350004b0
                        num_clients: 4
                        power: 15
                        rx_bytes: 10366616
                        rx_pkts: 38603
                        tx_bytes: 50877568
                        tx_pkts: 145496
                    rx_bps: 60003
                    rx_bytes: 8515104416
                    rx_pkts: 57770567
                    serial: FXLH2015170017
                    status: connected
                    tx_bps: 634301
                    tx_bytes: 211217389682
                    tx_pkts: 812204062
                    type: ap
                    uptime: 13500
                    usb_stat:
                      channel: 3
                      connected: true
                      last_activity: 1586873254
                      type: imagotag
                      up: true
                    version: 1.0.0
                    x: 53.5
                    'y': 173.1
                gateway_stats:
                  value:
                    cluster_stat:
                      node0:
                        status: ''
                      node1:
                        stats: ''
                    cpu2_stat: ''
                    cpu_stat:
                      idle: 28
                      interrupt: 8
                      load_avg:
                        - 0.9700000286102295
                        - 1.0499999523162842
                        - 1.0199999809265137
                      system: 41
                      user: 23
                    hostname: sj1
                    ip: 10.2.11.137
                    ip_stat:
                      dns:
                        - 8.8.8.8
                        - 4.4.4.4
                      dns_suffix:
                        - .mist.local
                        - .mist.com
                      gateway: 10.2.1.1
                      gateway6: '2607:f8b0:4005:808::1'
                      ip: 10.2.11.137
                      ip6: '2607:f8b0:4005:808::2004'
                      ips:
                        vlan1: '10.2.1.1/24,2607:f8b0:4005:808::1/32'
                        vlan193: 10.73.1.31/16
                        vlan3157: 10.72.11.14/24
                      netmask: 255.255.192.0
                      netmask6: /32
                    last_seen: 1553203563
                    mac: dc38e1dbf3cd
                    memory_stat:
                      usage: 35
                    model: SRX320
                    module2_stat: ''
                    module_stat:
                      - fans:
                          - name: Fan 0
                            status: absent
                          - airflow: out
                            name: Fan 1
                            status: ok
                        model: EX4300-48P
                        poe:
                          max_power: 250
                          power_draw: 120.3
                        psus:
                          - name: Power Supply 0
                            status: ok
                          - name: Power Supply 1
                            status: failed
                        serial: PX8716230021
                        temperatures:
                          - celsius: 45
                            name: CPU
                            status: ok
                        vc_links:
                          - neighbor_module_idx: 1
                            neighbor_port_id: vcp-255/1/0
                            port_id: vcp-255/1/0
                        vc_role: master
                    name: sj1
                    serial: TC3714190003
                    spu2_stat: ''
                    spu_stat:
                      cpu: 15
                      memory: 32
                      sessions:
                        current: 41
                        max: 65535
                        pending: 12
                        valid: 15
                    status: connected
                    type: gateway
                    uptime: 13500
                    version: 18.4R1.8
                swtich_stats:
                  value:
                    cpu_stat:
                      idle: 28
                      interrupt: 8
                      load_avg:
                        - 0.9700000286102295
                        - 1.0499999523162842
                        - 1.0199999809265137
                      system: 41
                      user: 23
                    hostname: sj-sw1
                    ip: 10.2.11.137
                    ip_stat:
                      dns:
                        - 8.8.8.8
                        - 4.4.4.4
                      dns_suffix:
                        - .mist.local
                        - .mist.com
                      gateway: 10.2.1.1
                      gateway6: '2607:f8b0:4005:808::1'
                      ip: 10.2.11.137
                      ip6: '2607:f8b0:4005:808::2004'
                      ips:
                        vlan1: '10.2.1.1/24,2607:f8b0:4005:808::1/32'
                        vlan193: 10.73.1.31/16
                        vlan3157: 10.72.11.14/24
                      netmask: 255.255.192.0
                      netmask6: /32
                    last_seen: 1553203563
                    mac: dc38e1dbf3cd
                    memory_stat:
                      usage: 35
                    model: EX4600
                    module_stat:
                      - fans:
                          - name: Fan 0
                            status: absent
                          - airflow: out
                            name: Fan 1
                            status: ok
                        model: EX4300-48P
                        poe:
                          max_power: 250
                          power_draw: 120.3
                        psus:
                          - name: Power Supply 0
                            status: ok
                          - name: Power Supply 1
                            status: failed
                        serial: PX8716230021
                        temperatures:
                          - celsius: 45
                            name: CPU
                            status: ok
                        vc_links:
                          - neighbor_module_idx: 1
                            neighbor_port_id: vcp-255/1/0
                            port_id: vcp-255/1/0
                        vc_role: master
                    name: xg50b
                    serial: TC3714190003
                    status: connected
                    type: switch
                    uptime: 13500
                    version: 18.4R1.8
              schema:
                oneOf:
                  - $ref: ./components/schemas/stats_device_ap.yml
                  - $ref: ./components/schemas/stats_device_switch_site.yml
                  - $ref: ./components/schemas/stats_device_gateway.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDeviceStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
  '/api/v1/sites/{site_id}/stats/devices/{device_id}/clients':
    get:
      description: Get wireless client stat by Device
      operationId: getSiteAllClientsStatsByDevice
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - _ttl: 0
                      accuracy: 0
                      airespace_ifname: string
                      airwatch:
                        authorized: true
                      ap_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      ap_mac: string
                      band: '24'
                      channel: 0
                      dual_band: true
                      family: string
                      guest:
                        authorized: true
                        authorized_expiring_time: 0
                        authorized_time: 0
                        company: string
                        email: string
                        field1: string
                        name: string
                      hostname: string
                      id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      idle_time: 0
                      ip: 192.168.1.2
                      is_guest: true
                      key_mgmt: string
                      last_seen: 0
                      mac: string
                      manufacture: string
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      model: string
                      name: string
                      num_locating_aps: 0
                      os: string
                      power_saving: true
                      proto: ac
                      psk_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                      rssi: 0
                      rx_bps: 0
                      rx_bytes: 0
                      rx_packets: 0
                      rx_rate: 0
                      rx_retries: 0
                      snr: 0
                      ssid: string
                      tx_bps: 0
                      tx_bytes: 0
                      tx_packets: 0
                      tx_rate: 0
                      tx_retries: 0
                      type: string
                      uptime: 0
                      username: string
                      vlan_id: 1
                      wlan_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      x: 0
                      'y': 0
              schema:
                items:
                  $ref: ./components/schemas/stats_client.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAllClientsStatsByDevice
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/device_id.yml
  '/api/v1/sites/{site_id}/stats/discovered_assets':
    get:
      description: Get List of Site Discovered BLE Assets that doesn’t match any of the Asset / Assetfilters
      operationId: listSiteDiscoveredAssets
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: ./components/schemas/asset.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteDiscoveredAssets
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/discovered_switch_metrics/search':
    get:
      description: Search Discovered Switch Metrics
      operationId: searchSiteDiscoveredSwitchesMetrics
      parameters:
        - description: 'metric scope, optional'
          in: query
          name: scope
          schema:
            default: site
            enum:
              - site
              - switch
            type: string
        - description: 'metric type, inactive_wired_vlans/switch_ap_affinity/poe_compliance/version_compliance, optional'
          in: query
          name: type
          schema:
            enum:
              - inactive_wired_vlans
              - switch_ap_affinity
              - poe_compliance
              - version_compliance
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1675193686.0191767
                    limit: 1
                    next: /api/v1/sites/f5fcbee5-fbca-45b3-8bf1-1619ede87879/stats/discovered_switch_metrics/search?end=1675193686.0191767&limit=1&search_after=%5B1675193400000%5D&start=1675107286.0191767
                    results:
                      - details: {}
                        org_id: 203d3d02-dbc0-4c1b-9f41-76896a3330f4
                        scope: site
                        score: 100
                        site_id: f5fcbee5-fbca-45b3-8bf1-1619ede87879
                        timestamp: 1675193400
                        type: inactive_wired_vlans
                    start: 1675107286.0191767
                    total: 3
              schema:
                properties:
                  end:
                    type: number
                  limit:
                    type: integer
                  next:
                    type: string
                  results:
                    items:
                      properties:
                        details:
                          type: object
                        org_id:
                          type: string
                        scope:
                          type: string
                        score:
                          type: integer
                        site_id:
                          type: string
                        timestamp:
                          type: integer
                        type:
                          type: string
                      type: object
                    type: array
                  start:
                    type: number
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - end
                  - limit
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDiscoveredSwitchesMetrics
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/discovered_switches/count':
    get:
      description: Count Discovered Switches
      operationId: countSiteDiscoveredSwitches
      parameters:
        - in: query
          name: distinct
          schema:
            default: system_name
            enum:
              - system_name
              - version
              - model
              - mgmt_addr
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    distinct: system_name
                    end: 1604496202.3555834
                    limit: 1000
                    percentage: 100
                    results:
                      - count: 1
                        system_name: test-ex
                      - count: 1
                        system_name: sw-jn-01
                    start: 1604409802.3555677
                    total: 2
              schema:
                properties:
                  distinct:
                    type: string
                  end:
                    type: number
                  limit:
                    type: integer
                  percentage:
                    type: integer
                  results:
                    items:
                      properties:
                        count:
                          type: integer
                        system_name:
                          type: string
                      required:
                        - system_name
                        - count
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                  total:
                    type: integer
                required:
                  - results
                  - start
                  - end
                  - limit
                  - distinct
                  - total
                  - percentage
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteDiscoveredSwitches
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/discovered_switches/metrics':
    get:
      description: 'Discovered switches related metrics, lists related switch system names & details if not compliant'
      operationId: getSiteDiscoveredSwitchesMetrics
      parameters:
        - description: 'configurable # ap per switch threshold, default 12'
          in: query
          name: threshold
          schema:
            type: string
        - description: 'system name for switch level metrics, optional'
          in: query
          name: system_name
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    inactive_wired_vlans:
                      details: {}
                      score: 100
                    poe_compliance:
                      details:
                        total_aps: 63
                        total_power: 981500
                      score: 100
                    switch_ap_affinity:
                      details:
                        system_name:
                          - mist-lab-ex2300c
                          - switch1
                        threshold: 12
                      score: 33.3333
                    version_compliance:
                      details:
                        major_versions:
                          - major_count: 2
                            model: EX2300-C-12P
                            system_names:
                              - switch1
                              - mist-lab-ex2300c
                          - major_count: 1
                            model: EX4300-48P
                            system_names: []
                        total_switch_count: 5
                      score: 75
              schema:
                properties:
                  inactive_wired_vlans:
                    properties:
                      details:
                        type: object
                      score:
                        type: number
                    required:
                      - score
                      - details
                    type: object
                  poe_compliance:
                    properties:
                      details:
                        properties:
                          total_aps:
                            type: integer
                          total_power:
                            type: number
                        required:
                          - total_power
                          - total_aps
                        type: object
                      score:
                        type: number
                    required:
                      - score
                      - details
                    type: object
                  switch_ap_affinity:
                    properties:
                      details:
                        properties:
                          system_name:
                            items:
                              type: string
                            type: array
                          threshold:
                            type: number
                        required:
                          - threshold
                          - system_name
                        type: object
                      score:
                        type: number
                    required:
                      - score
                      - details
                    type: object
                  version_compliance:
                    properties:
                      details:
                        properties:
                          major_versions:
                            items:
                              properties:
                                major_count:
                                  type: number
                                model:
                                  type: string
                                system_names:
                                  items:
                                    type: string
                                  type: array
                              required:
                                - model
                                - major_count
                              type: object
                            minItems: 1
                            type: array
                            uniqueItems: true
                          total_switch_count:
                            type: integer
                        required:
                          - major_versions
                          - total_switch_count
                        type: object
                      score:
                        type: number
                    required:
                      - score
                      - details
                    type: object
                required:
                  - version_compliance
                  - switch_ap_affinity
                  - inactive_wired_vlans
                  - poe_compliance
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDiscoveredSwitchesMetrics
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/discovered_switches/search':
    get:
      description: Search Discovered Switches
      operationId: searchSiteDiscoveredSwitches
      parameters:
        - in: query
          name: adopted
          schema:
            type: boolean
        - in: query
          name: system_name
          schema:
            type: string
        - in: query
          name: hostname
          schema:
            type: string
        - in: query
          name: vendor
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    end: 1604496474.8978634
                    limit: 1000
                    results:
                      - aps:
                          - hostname: ap41nearlab
                            inactive_wired_vlans: []
                            mac: 5c5b352e2001
                            poe_status: true
                            when: '2019-06-13T19:53:16.870+0000'
                        mgmt_addr: 10.1.1.1
                        model: EX2300-C-12P
                        org_id: 6748cfa6-4e12-11e6-9188-0242ac110007
                        site_id: 67970e46-4e12-11e6-9188-0242ac110007
                        system_desc: 'Juniper Networks, Inc. ex2300-c-12p Ethernet Switch, kernel JUNOS 18.2R2.6, Build date: 2018-12-07 13:19:04 UTC Copyright (c) 1996-2018 Juniper Networks, Inc.'
                        system_name: mist-lab-ex2300c
                        timestamp: 1560457177.037
                        vendor: Juniper Networks
                        version: 18.2R2.6
                    start: 1604410074.8978484
                    total: 1
              schema:
                properties:
                  end:
                    type: number
                  limit:
                    type: integer
                  next:
                    type: string
                  results:
                    items:
                      properties:
                        adopted:
                          type: boolean
                        aps:
                          items:
                            properties:
                              hostname:
                                type: string
                              mac:
                                type: string
                              poe_status:
                                type: boolean
                              port:
                                type: string
                              port_id:
                                type: string
                              power_draw:
                                type: number
                              when:
                                type: string
                            type: object
                          type: array
                          uniqueItems: true
                        chassis_id:
                          items:
                            type: string
                          type: array
                        for_site:
                          readOnly: true
                          type: boolean
                        model:
                          type: string
                        org_id:
                          format: uuid
                          type: string
                        site_id:
                          format: uuid
                          type: string
                        system_desc:
                          type: string
                        system_name:
                          type: string
                        timestamp:
                          type: number
                        vendor:
                          type: string
                        version:
                          type: string
                      required:
                        - model
                        - org_id
                        - site_id
                        - system_desc
                        - system_name
                        - timestamp
                        - vendor
                        - version
                      type: object
                    minItems: 1
                    type: array
                    uniqueItems: true
                  start:
                    type: number
                  total:
                    type: integer
                required:
                  - end
                  - limit
                  - results
                  - start
                  - total
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteDiscoveredSwitches
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/filtered_assets':
    get:
      description: Get a list of BLE beacons that matches Asset or AssetFilter
      operationId: getSiteAssetsOfInterest
      parameters:
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/AssetOfInterestArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteAssetsOfInterest
      tags:
        - Sites Assets
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/gateways/metrics':
    get:
      description: Get Site Gateway Metrics
      operationId: getSiteGatewayMetrics
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    config_success: 99.9
                    version_compliance:
                      major_version:
                        SRX320:
                          major_count: 0
                          major_version: 19.4R2-S1.2
                      score: 99.9
                      type: gateway
              schema:
                properties:
                  config_success:
                    description: config success score
                    example: 99.9
                    type: number
                  version_compliance:
                    description: 'version compliance score, major version for gateway, type'
                    properties:
                      major_version:
                        additionalProperties:
                          properties:
                            major_count:
                              type: integer
                            major_version:
                              example: 19.4R2-S1.2
                              type: string
                          type: object
                        type: object
                      score:
                        example: 99.9
                        type: number
                      type:
                        example: gateway
                        type: string
                    type: object
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteGatewayMetrics
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/maps/{map_id}/clients':
    get:
      description: Get Site Clients Stats By Map
      operationId: getSiteWirelessClientsStatsByMap
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - _ttl: 0
                      accuracy: 0
                      airespace_ifname: string
                      airwatch:
                        authorized: true
                      ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                      ap_mac: string
                      band: '24'
                      channel: 0
                      dual_band: true
                      family: string
                      guest:
                        authorized: false
                        authorized_expiring_time: 0
                        authorized_time: 0
                        company: string
                        email: string
                        field1: string
                        name: string
                      hostname: string
                      idle_time: 0
                      ip: 192.168.0.1
                      ip6: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
                      is_guest: false
                      key_mgmt: string
                      last_seen: 0
                      mac: string
                      manufacture: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      model: string
                      num_locating_aps: 0
                      os: string
                      power_saving: true
                      proto: a
                      psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                      rssi: 0
                      rx_bps: 0
                      rx_bytes: 0
                      rx_packets: 0
                      rx_rate: 0
                      rx_retries: 0
                      snr: 0
                      ssid: string
                      tx_bps: 0
                      tx_bytes: 0
                      tx_packets: 0
                      tx_rate: 0
                      tx_retries: 0
                      type: string
                      uptime: 0
                      username: string
                      vlan_id: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                      x: 0
                      'y': 0
              schema:
                items:
                  $ref: ./components/schemas/stats_client.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWirelessClientsStatsByMap
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
  '/api/v1/sites/{site_id}/stats/maps/{map_id}/discovered_assets':
    get:
      description: Get a list of BLE beacons that we discovered (whether they’re defined as assets or not)
      operationId: getSiteDiscoveredAssetByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - device_name: '[TV] UN65JU670D'
                      duration: 120
                      eddystone_uid_instance: 5c5b35000001
                      eddystone_uid_namespace: 2818e3868dec25629ede
                      eddystone_url_url: 'https://www.abc.com'
                      ibeacon_major: 13
                      ibeacon_minor: 138
                      ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                      last_seen: 1428939600
                      mac: 6fa474be7ae5
                      manufacture: Apple
                      mfg_company_id: 935
                      mfg_data: 648520a1020000
                      x: 60
                      'y': 80
              schema:
                items:
                  $ref: ./components/schemas/stats_asset.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteDiscoveredAssetByMap
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
  '/api/v1/sites/{site_id}/stats/maps/{map_id}/sdkclients':
    get:
      description: Get SdkClient Stats By Map
      operationId: getSiteSdkStatsByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - id: de87bf9d-183f-e383-cc68-6ba43947d403
                      last_seen: 1428939600
                      map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                      name: John's iPhone
                      network_connection:
                        mac: c3-b6-e5-af-41-15
                        rssi: -75
                        signal_level: 3
                        type: WiFi
                      uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                      x: 60
                      'y': 80
              schema:
                items:
                  $ref: ./components/schemas/stats_sdkclient.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSdkStatsByMap
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
  '/api/v1/sites/{site_id}/stats/maps/{map_id}/unconnected_clients':
    get:
      description: Get List of Site Unconnected Client Location
      operationId: listSiteUnconnectedClientStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    - ap_mac: 5c5b350e0410
                      last_seen: 1428939600
                      mac: 5684dae9ac8b
                      manufacture: Apple
                      map_id: ea77be98-ab51-4ff8-a863-ac3c8e1b1c3a
                      rssi: -75
                      x: 60
                      'y': 80
              schema:
                items:
                  $ref: ./components/schemas/stats_unconnected_clients.yml
                type: array
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteUnconnectedClientStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/map_id.yml
  '/api/v1/sites/{site_id}/stats/mxedges':
    get:
      description: Get List of Site MxEdges Stats
      operationId: listSiteMxEdgesStats
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/MxedgeStatsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteMxEdgesStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/mxedges/{mxedge_id}':
    get:
      description: Get One Site MxEdge Stats
      operationId: getSiteMxEdgeStats
      parameters:
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/MxedgeStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteMxEdgeStats
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/mxedge_id.yml
  '/api/v1/sites/{site_id}/stats/ports/count':
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countSiteSwOrGwPorts
      parameters:
        - description: 'port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up'
          in: query
          name: distinct
          schema:
            default: mac
            enum:
              - port_id
              - port_mac
              - full_duplex
              - mac
              - neighbor_mac
              - neighbor_port_desc
              - neighbor_system_name
              - poe_disabled
              - poe_mode
              - poe_on
              - speed
              - up
            type: string
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: if `up`==`true` && has Authenticator role
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteSwOrGwPorts
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/ports/search':
    get:
      description: Search Switch / Gateway Ports
      operationId: searchSiteSwOrGwPorts
      parameters:
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: device type
          in: query
          name: type
          schema:
            enum:
              - ap
              - ble
              - switch
              - gateway
              - mxedge
              - nac
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Output errors
          in: query
          name: tx_errors
          schema:
            type: integer
        - description: Input errors
          in: query
          name: rx_errors
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: Limit on number of dynamically learned macs
          in: query
          name: mac_limit
          schema:
            type: integer
        - description: Number of mac addresses in the forwarding table
          in: query
          name: mac_count
          schema:
            type: integer
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - description: indicates if interface is active/inactive
          in: query
          name: active
          schema:
            type: boolean
        - description: Last sampled jitter of the interface
          in: query
          name: jitter
          schema:
            type: number
        - description: Last sampled loss of the interface
          in: query
          name: loss
          schema:
            type: number
        - description: Last sampled latency of the interface
          in: query
          name: latency
          schema:
            type: number
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: 'Optic Slot Partnumber, Check for null/empty'
          in: query
          name: xcvr_part_number
          schema:
            type: string
        - description: if `up`==`true` && has Authenticator role
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - description: 'LTE IMSI value, Check for null/empty'
          in: query
          name: lte_imsi
          schema:
            type: string
        - description: 'LTE ICCID value, Check for null/empty'
          in: query
          name: lte_iccid
          schema:
            type: string
        - description: 'LTE IMEI value, Check for null/empty'
          in: query
          name: lte_imei
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SwitchPortsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteSwOrGwPorts
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/sdkclients/{sdkclient_id}':
    get:
      description: Get Detail Stats of a SdkClient
      operationId: getSiteSdkStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    vbeacons:
                      - id: d379d29d-24b4-96c5-5dd4-6f2a2dc5aaeb
                        since: 1428939300
                    x: 60
                    'y': 80
                    zones:
                      - id: 8ac84899-32db-6327-334c-9b6d58544cfe
                        since: 1428939600
              schema:
                $ref: ./components/schemas/stats_sdkclient_details.yml
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSdkStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/sdkclient_id.yml
  '/api/v1/sites/{site_id}/stats/switch_ports/count':
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countSiteSwitchPorts
      parameters:
        - description: 'port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up'
          in: query
          name: distinct
          schema:
            default: mac
            enum:
              - port_id
              - port_mac
              - full_duplex
              - mac
              - neighbor_mac
              - neighbor_port_desc
              - neighbor_system_name
              - poe_disabled
              - poe_mode
              - poe_on
              - speed
              - up
            type: string
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: if `up`==`true`
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteSwitchPorts
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/switch_ports/search':
    get:
      description: Search Switch / Gateway Ports
      operationId: searchSiteSwitchPorts
      parameters:
        - description: indicates full or half duplex
          in: query
          name: full_duplex
          schema:
            type: boolean
        - description: device identifier
          in: query
          name: mac
          schema:
            type: string
        - description: Chassis identifier of the chassis type listed
          in: query
          name: neighbor_mac
          schema:
            type: string
        - description: Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”
          in: query
          name: neighbor_port_desc
          schema:
            type: string
        - description: Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”
          in: query
          name: neighbor_system_name
          schema:
            type: string
        - description: is the POE configured not be disabled.
          in: query
          name: poe_disabled
          schema:
            type: boolean
        - description: poe mode depending on class E.g. “802.3at”
          in: query
          name: poe_mode
          schema:
            type: string
        - description: is the device attached to POE
          in: query
          name: poe_on
          schema:
            type: boolean
        - description: interface name
          in: query
          name: port_id
          schema:
            type: string
        - description: interface mac address
          in: query
          name: port_mac
          schema:
            type: string
        - description: Amount of power being used by the interface at the time the command is executed. Unit in watts.
          in: query
          name: power_draw
          schema:
            type: number
        - description: Output packets
          in: query
          name: tx_pkts
          schema:
            type: integer
        - description: Input packets
          in: query
          name: rx_pkts
          schema:
            type: integer
        - description: Input bytes
          in: query
          name: rx_bytes
          schema:
            type: integer
        - description: Output rate
          in: query
          name: tx_bps
          schema:
            type: integer
        - description: Input rate
          in: query
          name: rx_bps
          schema:
            type: integer
        - description: Multicast output packets
          in: query
          name: tx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast output packets
          in: query
          name: tx_bcast_pkts
          schema:
            type: integer
        - description: Multicast input packets
          in: query
          name: rx_mcast_pkts
          schema:
            type: integer
        - description: Broadcast input packets
          in: query
          name: rx_bcast_pkts
          schema:
            type: integer
        - description: port speed
          in: query
          name: speed
          schema:
            type: integer
        - description: if `up`==`true`
          in: query
          name: stp_state
          schema:
            enum:
              - forwarding
              - blocking
              - learning
              - listening
              - disabled
            type: string
        - description: if `up`==`true`
          in: query
          name: stp_role
          schema:
            enum:
              - designated
              - backup
              - alternate
              - root
              - root-prevented
            type: string
        - description: if `up`==`true` && has Authenticator role
          in: query
          name: auth_state
          schema:
            enum:
              - init
              - authenticated
              - authenticating
              - held
            type: string
        - description: indicates if interface is up
          in: query
          name: up
          schema:
            type: boolean
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/SwitchPortsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteSwitchPorts
      tags:
        - Sites Devices Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/switches/metrics':
    get:
      description: |
        Get version compliance metrics for managed or monitored switches
      operationId: getSiteSwitchesMetrics
      parameters:
        - in: query
          name: type
          schema:
            enum:
              - active_ports_summary
            type: string
        - in: query
          name: scope
          schema:
            enum:
              - site
              - switch
            type: string
        - description: 'switch mac, used only with metric `type`==`active_ports_summary`'
          in: query
          name: switch_mac
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                site-scoped:
                  value:
                    active_ports_summary:
                      details:
                        active_port_count: 4
                        total_port_count: 4
                      score: 100
                      total_switch_count: 2
                    config_success:
                      details:
                        config_success_count: 2
                      score: 100
                      total_switch_count: 2
                    version_compliance:
                      details:
                        major_versions:
                          - major_count: 1
                            major_version: 21.4R3.5
                            model: EX2300-C-12P
                            system_names: []
                          - major_count: 1
                            major_version: 6.0.4-11
                            model: SSR120
                            system_names: []
                      score: 100
                      total_switch_count: 2
                switch-scoped:
                  value:
                    active_ports_summary:
                      details:
                        active_port_count: 1
                        total_port_count: 2
                      score: 50
                      switch_id: 67970e46-4e12-11e6-9188-0242ac110007_fc334262ef00
                      total_switch_count: 1
              schema:
                properties:
                  active_ports_summary:
                    properties:
                      details:
                        properties:
                          active_port_count:
                            type: integer
                          total_port_count:
                            type: integer
                        type: object
                      score:
                        type: integer
                      total_switch_count:
                        type: integer
                    type: object
                  config_success:
                    properties:
                      details:
                        properties:
                          config_success_count:
                            type: integer
                        type: object
                      score:
                        type: integer
                      total_switch_count:
                        type: integer
                    type: object
                  version_compliance:
                    properties:
                      details:
                        properties:
                          major_versions:
                            items:
                              properties:
                                major_count:
                                  type: integer
                                major_version:
                                  type: string
                                model:
                                  type: string
                                system_names:
                                  items:
                                    properties: {}
                                    type: object
                                  type: array
                              type: object
                            type: array
                        type: object
                      score:
                        type: integer
                      total_switch_count:
                        type: integer
                    type: object
                type: object
          description: OK
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSwitchesMetrics
      tags:
        - Sites Devices - Wired
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/wxrules':
    get:
      description: Get Wxlan Rule usage
      operationId: getSiteWxRulesUsage
      responses:
        '200':
          $ref: ./components/responses/WxruleStatsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWxRulesUsage
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/zones':
    get:
      description: Get List of Site Zones Stats
      operationId: listSiteZonesStats
      parameters:
        - example: 00000000-0000-0000-0000-000000000000
          in: query
          name: map_id
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/ZoneStatsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteZonesStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/stats/{zone_type}/{zone_id}':
    get:
      description: Get Detail Zone Stats
      operationId: getSiteZoneStats
      responses:
        '200':
          $ref: ./components/responses/ZoneStats.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteZoneStats
      tags:
        - Sites Stats
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/zone_type.yml
      - $ref: ./components/parameters/zone_id.yml
  '/api/v1/sites/{site_id}/subscriptions':
    delete:
      description: Unsubscribe to Site Alarms
      operationId: UnsubscribeSiteAlarms
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: UnsubscribeSiteAlarms
      tags:
        - Sites Subscriptions
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Subscribe to Site Alarms
      operationId: SubscribeSiteAlarms
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: SubscribeSiteAlarms
      tags:
        - Sites Subscriptions
  '/api/v1/sites/{site_id}/synthetic_test':
    get:
      description: Get Synthetic Testing Status
      operationId: getSiteSyntheticTestStatus
      responses:
        '200':
          $ref: ./components/responses/SynthetictestStatus.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteSyntheticTestStatus
      tags:
        - Sites Synthetic Tests
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Trigger Synthetic Testing
      operationId: triggerSiteSyntheticTest
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  email: test@mist.com
            schema:
              $ref: ./components/schemas/synthetic_test.yml
      responses:
        '200':
          $ref: ./components/responses/SyntheticTest.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: triggerSiteSyntheticTest
      tags:
        - Sites Synthetic Tests
  '/api/v1/sites/{site_id}/uisettings':
    get:
      description: Site UI settings
      operationId: listSiteUiSettings
      responses:
        '200':
          $ref: ./components/responses/UiSettingsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteUiSettings
      tags:
        - Sites UI Settings
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Site UI settings
      operationId: createSiteUiSettings
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 1508823803
                  defaultScopeId: 67970e46-4e12-11e6-9188-0242ad112847
                  defaultScopeType: site
                  defaultTimeRange:
                    end: 1508828400
                    endDate: 10/23/2017
                    interval: 1d
                    name: This Week
                    shortName: thisWeek
                    start: 1508655600
                    usePreset: true
                  description: Description of the databoard
                  for_site: true
                  id: 3bdcc7e8-c04d-4512-b4fc-093da9057eb0
                  isCustomDataboard: true
                  isScopeLinked: true
                  isTimeRangeLinked: true
                  modified_time: 0
                  name: New Databoard
                  org_id: cc079380-5029-4d4a-9125-858de85731ff
                  purpose: databoard
                  site_id: 67970e46-4e12-11e6-9188-0242ad112847
                  tiles:
                    - chartBand: 2.4 ghz
                      chartColor: '#00B4AD'
                      chartDirection: tx + rx
                      chartRankBy: string
                      chartType: timeSeries
                      colspan: 5
                      column: 1
                      hideEmptyRows: true
                      id: 7a9ab38c-cfc3-483d-b51a-0aec571fadc0
                      metric:
                        apiName: client-dhcp-latency
                      name: New Analysis
                      row: 1
                      rowspan: 2
                      scopeId: e0c767834b4c
                      scopeType: client
                      sortedColumns: null
                      timeRange:
                        end: 1508823743
                        endDate: 10/23/2017
                        interval: 1d
                        name: Past 7 Days
                        shortName: 7d
                        start: 1508223600
                        usePreset: true
                      trendType: line
                      vizType: averageTimeSeriesChart
            schema:
              $ref: ./components/schemas/ui_settings.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/UiSettings.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteUiSettings
      tags:
        - Sites UI Settings
  '/api/v1/sites/{site_id}/uisettings/derived':
    get:
      description: Get both site UI settings(for_site=true) and org UI settings (for_site=false)
      operationId: getSiteUiSettingDerived
      responses:
        '200':
          $ref: ./components/responses/UiSettings.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteUiSettingDerived
      tags:
        - Sites UI Settings
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/uisettings/{uisetting_id}':
    delete:
      description: Site UI settings
      operationId: deleteSiteUiSetting
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteUiSetting
      tags:
        - Sites UI Settings
    get:
      description: Site UI settings
      operationId: getSiteUiSetting
      responses:
        '200':
          $ref: ./components/responses/UiSettingsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteUiSetting
      tags:
        - Sites UI Settings
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/uisetting_id.yml
    post:
      description: Site UI settings
      operationId: updateSiteUiSetting
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 1508823803
                  defaultScopeId: 67970e46-4e12-11e6-9188-0242ad112847
                  defaultScopeType: site
                  defaultTimeRange:
                    end: 1508828400
                    endDate: 10/23/2017
                    interval: 1d
                    name: This Week
                    shortName: thisWeek
                    start: 1508655600
                    usePreset: true
                  description: Description of the databoard
                  for_site: true
                  id: 3bdcc7e8-c04d-4512-b4fc-093da9057eb0
                  isCustomDataboard: true
                  isScopeLinked: true
                  isTimeRangeLinked: true
                  modified_time: 0
                  name: New Databoard
                  org_id: cc079380-5029-4d4a-9125-858de85731ff
                  purpose: databoard
                  site_id: 67970e46-4e12-11e6-9188-0242ad112847
                  tiles:
                    - chartBand: 2.4 ghz
                      chartColor: '#00B4AD'
                      chartDirection: tx + rx
                      chartRankBy: string
                      chartType: timeSeries
                      colspan: 5
                      column: 1
                      hideEmptyRows: true
                      id: 7a9ab38c-cfc3-483d-b51a-0aec571fadc0
                      metric:
                        apiName: client-dhcp-latency
                      name: New Analysis
                      row: 1
                      rowspan: 2
                      scopeId: e0c767834b4c
                      scopeType: client
                      sortedColumns: null
                      timeRange:
                        end: 1508823743
                        endDate: 10/23/2017
                        interval: 1d
                        name: Past 7 Days
                        shortName: 7d
                        start: 1508223600
                        usePreset: true
                      trendType: line
                      vizType: averageTimeSeriesChart
            schema:
              $ref: ./components/schemas/ui_settings.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/UiSettings.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteUiSetting
      tags:
        - Sites UI Settings
  '/api/v1/sites/{site_id}/vbeacons':
    get:
      description: Get List of Site Virtual Beacons
      operationId: listSiteVBeacons
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/VBeaconsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteVBeacons
      tags:
        - Sites vBeacons
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Virtual Beacon
      operationId: createSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  'y': 0
            schema:
              $ref: ./components/schemas/vbeacon.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/VBeacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteVBeacon
      tags:
        - Sites vBeacons
  '/api/v1/sites/{site_id}/vbeacons/{vbeacon_id}':
    delete:
      description: Delete Site Virtual Beacon
      operationId: deleteSiteVBeacon
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteVBeacon
      tags:
        - Sites vBeacons
    get:
      description: Get Site Virtual Beacon Details
      operationId: getSiteVBeacon
      responses:
        '200':
          $ref: ./components/responses/VBeacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteVBeacon
      tags:
        - Sites vBeacons
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/vbeacon_id.yml
    put:
      description: Update Site Virtual Beacon
      operationId: updateSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  'y': 0
            schema:
              $ref: ./components/schemas/vbeacon.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/VBeacon.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteVBeacon
      tags:
        - Sites vBeacons
  '/api/v1/sites/{site_id}/vpns/derived':
    get:
      description: VPN object represents an overlay network where gateways can participate in and optionally expose routes to.
      operationId: listSiteVpnsDerived
      parameters:
        - description: whether resolve the site variables
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
      responses:
        '200':
          $ref: ./components/responses/VpnsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteVpnsDerived
      tags:
        - Sites VPNs
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wan_client/events/count':
    get:
      description: |
        Count by Distinct Attributes of Site WAN Client-Events
      operationId: countSiteWanClientEvents
      parameters:
        - in: query
          name: distinct
          schema:
            default: type
            enum:
              - type
              - hostname
              - ip
              - mfg
              - mac
            type: string
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWanClientEvents
      tags:
        - Sites Clients - Wan
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wan_clients/count':
    get:
      description: Count Site WAN Clients
      operationId: countSiteWanClients
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - hostname
              - ip
              - mfg
              - mac
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWanClients
      tags:
        - Sites Clients - Wan
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wan_clients/events/search':
    get:
      description: Search Site WAN Client Events
      operationId: searchSiteWanClientEvents
      parameters:
        - description: 'Event type, e.g. CLIENT_IP_ASSIGNED, CLIENT_IP_RENEWED, CLIENT_IP_EXPIRED'
          in: query
          name: type
          schema:
            type: string
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: client IP
          in: query
          name: ip
          schema:
            type: string
        - description: Manufacture
          in: query
          name: mfg
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/WanClientEventsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWanClientEvents
      tags:
        - Sites Clients - Wan
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wan_clients/search':
    get:
      description: Search Site WAN Clients
      operationId: searchSiteWanClients
      parameters:
        - description: partial / full MAC address
          in: query
          name: mac
          schema:
            type: string
        - description: partial / full hostname
          in: query
          name: hostname
          schema:
            type: string
        - description: client IP
          in: query
          name: ip
          schema:
            type: string
        - description: Manufacture
          in: query
          name: mfg
          schema:
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/page.yml
      responses:
        '200':
          $ref: ./components/responses/WanClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWanClients
      tags:
        - Sites Clients - Wan
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/webhooks':
    get:
      description: Get List of Site Webhooks
      operationId: listSiteWebhooks
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WebhooksArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWebhooks
      tags:
        - Sites Webhooks
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: |
        Webhook defines a webhook, modeled after [github’s model](https://developer.github.com/webhooks/).

        There is two types of webhooks:
        * webhooks ([examples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace/folder/224925-be01e694-7253-4195-8563-78e2a745e114))
        * raw data webhooks ([examples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace/folder/224925-e2d5d5f8-4bdb-4efc-93e4-90f4b33d0b2b))

        ##### Webhooks
        Webhooks can be configured at the org level (subset of topics only) and at the site level. It is possible to have multiple topics in the same webhook configuration and/or to have multiple webhooks configured at the same time.

        ##### Client Raw Data Webhooks
        Raw data webhooks are a special subset of webhooks that provide insight into raw data packets emitted by a client, identified by their advertising MAC address (assets, discovered ble, connected wifi, unconnected wifi). The data that client raw data webhooks encompasses are reporting AP information, RSSI Data, and any special packets/telemetry packets that the client may emit. Note that client raw webhooks are the raw data coming from the client and do not contain the X,Y location data of the client. In order to get the location data for a client please see our location webhooks. Clients can be identified uniquely across these client raw data topics and location webhook topic using MAC address as the Unique identifier (client identifier).

        ###### Client Raw Data Webhooks Topics
        Topics that correspond to client raw data for different client types. 
        * `asset-raw-rssi` - Raw data from packets emitted by named and filtered assets 
        * `discovered-raw-rssi` - Raw data from packets emitted by passive BLE devices 
        * `wifi-conn-raw` - Raw data from packets emitted by connected devices 
        * `wifi-unconn-raw` - Raw data from packets emitted by unconnected devices (passive)

        ###### Rules for configuring client raw data webhooks
        1. Only one instance of a webhook object containing a client raw data webhook topic is allowed. (a site level entry will override an org level entry for the client raw data webhook topic in question)
        2. Only one client raw data webhook topic is allowed per `http-post` message to webhooks api
      operationId: createSiteWebhook
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  headers: {}
                  name: string
                  secret: string
                  splunk_token: string
                  topics:
                    - location
                  type: http-post
                  url: string
                  verify_cert: true
            schema:
              $ref: ./components/schemas/webhook.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          content:
            application/json:
              examples:
                RawDataWebhook-already-created:
                  value:
                    detail: Webhook already configured for special location topic
                    webhook_id: f1ff49e8-9f77-420a-9854-c7de46d7cf80
                RawDataWebhook-multiple-topics:
                  value:
                    detail: Only one location topic can be configured per URL
              schema:
                properties:
                  detail:
                    type: string
                  webhook_id:
                    type: string
                type: object
          description: Bad request
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWebhook
      tags:
        - Sites Webhooks
  '/api/v1/sites/{site_id}/webhooks/{webhook_id}':
    delete:
      description: Delete Site Webhook
      operationId: deleteSiteWebhook
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWebhook
      tags:
        - Sites Webhooks
    get:
      description: Get Site Webhook Details
      operationId: getSiteWebhook
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWebhook
      tags:
        - Sites Webhooks
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/webhook_id.yml
    put:
      description: Update Site Webhook
      operationId: updateSiteWebhook
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  headers: {}
                  name: string
                  secret: string
                  splunk_token: string
                  topics:
                    - location
                  type: http-post
                  url: string
                  verify_cert: true
            schema:
              $ref: ./components/schemas/webhook.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Webhook.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWebhook
      tags:
        - Sites Webhooks
  '/api/v1/sites/{site_id}/webhooks/{webhook_id}/events/search':
    get:
      description: |-
        Search webhooks deliveries

        To get a list of webhook deliveries in error, use the query parameter `?error=*`
      operationId: searchSiteWebhooksDeliveries
      parameters:
        - in: query
          name: status_code
          schema:
            type: integer
        - in: query
          name: error
          schema:
            type: string
        - description: webhook topic
          in: query
          name: topic
          schema:
            enum:
              - alarms
              - audits
              - device-updowns
              - occupancy-alerts
              - ping
            type: string
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WebhookDeliverySearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWebhooksDeliveries
      tags:
        - Sites Webhooks
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/webhook_id.yml
  '/api/v1/sites/{site_id}/webhooks/{webhook_id}/ping':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/webhook_id.yml
    post:
      description: send a Ping event to the webhook
      operationId: pingSiteWebhook
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: pingSiteWebhook
      tags:
        - Sites Webhooks
  '/api/v1/sites/{site_id}/wired_clients/count':
    get:
      description: Count by Distinct Attributes of Clients
      operationId: countSiteWiredClients
      parameters:
        - in: query
          name: distinct
          schema:
            default: mac
            enum:
              - port_id
              - vlan
              - mac
            type: string
        - description: client mac
          in: query
          name: mac
          schema:
            type: string
        - description: device mac
          in: query
          name: device_mac
          schema:
            type: string
        - description: port id
          in: query
          name: port_id
          schema:
            type: string
        - description: vlan
          in: query
          name: vlan
          schema:
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteWiredClients
      tags:
        - Sites Clients - Wired
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wired_clients/search':
    get:
      description: Search Wired Clients
      operationId: searchSiteWiredClients
      parameters:
        - description: device mac
          in: query
          name: device_mac
          schema:
            type: string
        - description: client mac
          in: query
          name: mac
          schema:
            type: string
        - description: client ip
          in: query
          name: ip
          schema:
            type: string
        - description: port id
          in: query
          name: port_id
          schema:
            type: string
        - description: vlan
          in: query
          name: vlan
          schema:
            type: string
        - description: manufacture
          in: query
          name: manufacture
          schema:
            type: string
        - description: single entry of hostname/mac
          in: query
          name: text
          schema:
            type: string
        - description: nacrule_id
          in: query
          name: nacrule_id
          schema:
            type: string
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/WiredClientsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteWiredClients
      tags:
        - Sites Clients - Wired
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wlans':
    get:
      description: Get List of Site WLANs
      operationId: listSiteWlans
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WlansArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWlans
      tags:
        - Sites Wlans
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site WLAN
      operationId: createSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: 'https://hs1.airwatchportals.com'
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbbb6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                      - dscp: 32
                        dst_subnet: 10.2.0.0/16
                        port_ranges: '80,1024-6553'
                        protocol: udp
                        src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                      - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                      - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                    - '24'
                    - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                      - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                          - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                      - snapchat.com
                    allowed_subnets:
                      - 63.5.3.0/24
                    blocked_subnets:
                      - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                    - disable_event_timestamp_check: false
                      enabled: false
                      ip: 1.2.3.4
                      port: 3799
                      secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                      - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                      - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': 'fast,video'
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                      - mist.com
                    enabled: true
                    nai_realms:
                      - string
                    operators:
                      - google
                      - att
                    rcoi:
                      - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbc6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                    - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                    - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                      - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                      - string
                    facebook_enabled: false
                    forward: false
                    forward_url: 'http://abc.com/promotions'
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                      - mydomain.edu
                      - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                      - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: 'https://url/to/image.png'
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                      - reserved.net
                      - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                    - snapchat.com
                    - ibm.com
                  portal_allowed_subnets:
                    - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                    - msg.snapchat.com
                  portal_image: 'http://example.com'
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                      - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                      - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                      - host: 1.1.1.1
                        port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: '09:00-17:00'
                      mon: '09:00-17:00'
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: 'http://example.com'
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                    - 3
                    - 4
                    - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbbd6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: ./components/schemas/wlan.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wlan.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWlan
      tags:
        - Sites Wlans
  '/api/v1/sites/{site_id}/wlans/derived':
    get:
      description: Get Wlans Derived
      operationId: listSiteWlanDerived
      parameters:
        - description: whether to resolve SITE_VARS
          example: true
          in: query
          name: resolve
          schema:
            default: false
            type: boolean
        - description: filter by WLAN ID
          in: query
          name: wlan_id
          schema:
            type: string
      responses:
        '200':
          $ref: ./components/responses/WlansArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWlanDerived
      tags:
        - Sites Wlans
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wlans/{wlan_id}':
    delete:
      description: Delete Site WLAN
      operationId: deleteSiteWlan
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWlan
      tags:
        - Sites Wlans
    get:
      description: Get Site WLAN
      operationId: getSiteWlan
      responses:
        '200':
          $ref: ./components/responses/Wlan.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWlan
      tags:
        - Sites Wlans
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    put:
      description: Update Site WLAN
      operationId: updateSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: 'https://hs1.airwatchportals.com'
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbbe6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                      - dscp: 32
                        dst_subnet: 10.2.0.0/16
                        port_ranges: '80,1024-6553'
                        protocol: udp
                        src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                      - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                      - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                    - '24'
                    - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                      - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                          - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                      - snapchat.com
                    allowed_subnets:
                      - 63.5.3.0/24
                    blocked_subnets:
                      - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                    - disable_event_timestamp_check: false
                      enabled: false
                      ip: 1.2.3.4
                      port: 3799
                      secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                      - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                      - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': 'fast,video'
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                      - mist.com
                    enabled: true
                    nai_realms:
                      - string
                    operators:
                      - google
                      - att
                    rcoi:
                      - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbf6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                    - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                    - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                      - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                      - string
                    facebook_enabled: false
                    forward: false
                    forward_url: 'http://abc.com/promotions'
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                      - mydomain.edu
                      - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                      - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: 'https://url/to/image.png'
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                      - reserved.net
                      - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                    - snapchat.com
                    - ibm.com
                  portal_allowed_subnets:
                    - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                    - msg.snapchat.com
                  portal_image: 'http://example.com'
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                      - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                      - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                      - host: 1.1.1.1
                        port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: '09:00-17:00'
                      mon: '09:00-17:00'
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: 'http://example.com'
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                    - 3
                    - 4
                    - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                    - 497f6eca-6276-4993-bfeb-53cbbbba0f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: ./components/schemas/wlan.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wlan.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWlan
      tags:
        - Sites Wlans
  '/api/v1/sites/{site_id}/wlans/{wlan_id}/portal_image':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    post:
      description: Wlan Portal Image Upload
      operationId: uploadSiteWlanPortalImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: ./components/schemas/image_upload.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: uploadSiteWlanPortalImage
      tags:
        - Sites Wlans
  '/api/v1/sites/{site_id}/wlans/{wlan_id}/portal_template':
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wlan_id.yml
    put:
      description: |-
        Update a Portal Template

        #### Sponsor Email Template
        Sponsor Email Template supports following template variables:

        | **Name** | **Description** |
        | --- | --- |
        | approve_url | Renders URL to approve the request; optionally &minutes=N query param can be appended to change the Authorization period of the guest, where N is a valid integer denoting number of minutes a guest remains authorized |
        | deny_url | Renders URL to reject the request |
        | guest_email | Renders Email ID of the guest |
        | guest_name | Renders Name of the guest |
        | field1 | Renders value of the Custom Field 1 |
        | field2 | Renders value of the Custom Field 2 |
        | company | Renders value of the Company field |
        | sponsor_link_validity_duration | Renders validity time of the request (i.e. Approve/Deny URL) |
        | auth_expire_minutes | Renders Wlan-level configured Guest Authorization Expiration time period (in minutes), If not configured then default (1 day in minutes) |
      operationId: updateSiteWlanPortalTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  accessCodeAlternateEmail: string
                  alignment: string
                  authButtonAmazon: string
                  authButtonAzure: string
                  authButtonEmail: string
                  authButtonFacebook: string
                  authButtonGoogle: string
                  authButtonMicrosoft: string
                  authButtonPassphrase: string
                  authButtonSms: string
                  authButtonSponsor: string
                  authLabel: string
                  backLink: string
                  color: string
                  colorDark: string
                  colorLight: string
                  company: true
                  companyError: string
                  companyLabel: string
                  email: true
                  emailAccessDomainError: string
                  emailCancel: string
                  emailCodeError: string
                  emailError: string
                  emailFieldLabel: string
                  emailLabel: string
                  emailMessage: string
                  emailSubmit: string
                  emailTitle: string
                  field1: true
                  field1Error: string
                  field1Label: string
                  field1Required: true
                  field2: true
                  field2Error: string
                  field2Label: string
                  field2Required: true
                  field3: true
                  field3Error: string
                  field3Label: string
                  field3Required: true
                  field4: true
                  field4Error: string
                  field4Label: string
                  field4Required: true
                  message: string
                  name: true
                  nameError: string
                  nameLabel: string
                  optout: true
                  optoutLabel: string
                  pageTitle: string
                  passphraseCancel: string
                  passphraseError: string
                  passphraseLabel: string
                  passphraseMessage: string
                  passphraseSubmit: string
                  passphraseTitle: string
                  poweredBy: true
                  requiredFieldLabel: string
                  signInLabel: string
                  smsCarrierDefault: string
                  smsCarrierError: string
                  smsCarrierFieldLabel: string
                  smsCodeCancel: string
                  smsCodeError: string
                  smsCodeFieldLabel: string
                  smsCodeMessage: string
                  smsCodeSubmit: string
                  smsCodeTitle: string
                  smsCountryFieldLabel: string
                  smsCountryFormat: string
                  smsHaveAccessCode: string
                  smsMessageFormat: string
                  smsNumberCancel: string
                  smsNumberError: string
                  smsNumberFieldLabel: string
                  smsNumberFormat: string
                  smsNumberMessage: string
                  smsNumberSubmit: string
                  smsNumberTitle: string
                  smsUsernameFormat: string
                  smsValidityDuration: 0
                  sponsorBackLink: string
                  sponsorCancel: string
                  sponsorEmail: string
                  sponsorEmailError: string
                  sponsorEmailTemplate: string
                  sponsorInfoApproved: string
                  sponsorInfoDenied: string
                  sponsorInfoPending: string
                  sponsorName: string
                  sponsorNameError: string
                  sponsorNotePending: string
                  sponsorStatusApproved: string
                  sponsorStatusDenied: string
                  sponsorStatusPending: string
                  sponsorSubmit: string
                  tos: true
                  tosAcceptLabel: string
                  tosError: string
                  tosLink: string
                  tosText: string
            schema:
              $ref: ./components/schemas/wlan_portal_template.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Portaltemplate.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWlanPortalTemplate
      tags:
        - Sites Wlans
  '/api/v1/sites/{site_id}/wxrules':
    get:
      description: Get List of Site WxLan Rules
      operationId: listSiteWxRules
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxruleArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWxRules
      tags:
        - Sites WxRules
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site WxLan Rule
      operationId: createSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                    - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                    - mist
                    - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                    - fff34466-eec0-3756-6765-381c728a6037
                    - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                    - aaa34466-eec0-3756-6765-381c728a6037
                    - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53ecbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                    - 8bfc2490-d726-3587-038d-cb2e71bd2330
                    - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: ./components/schemas/wxlan_rule.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWxRule
      tags:
        - Sites WxRules
  '/api/v1/sites/{site_id}/wxrules/derived':
    get:
      description: Get Site WxLan Rule Derived
      operationId: getSiteWxRulesDerived
      responses:
        '200':
          $ref: ./components/responses/WxruleArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWxRulesDerived
      tags:
        - Sites WxRules
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wxrules/{wxrules_id}':
    delete:
      description: Delete Site WxLan Rule
      operationId: deleteSiteWxRule
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWxRule
      tags:
        - Sites WxRules
    get:
      description: Get Site WxLan Rule Details
      operationId: getSiteWxRule
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWxRule
      tags:
        - Sites WxRules
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wxrules_id.yml
    put:
      description: Update Site WxLan Rule
      operationId: updateSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                    - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                    - mist
                    - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                    - fff34466-eec0-3756-6765-381c728a6037
                    - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                    - aaa34466-eec0-3756-6765-381c728a6037
                    - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53edbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                    - 8bfc2490-d726-3587-038d-cb2e71bd2330
                    - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: ./components/schemas/wxlan_rule.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxrule.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWxRule
      tags:
        - Sites WxRules
  '/api/v1/sites/{site_id}/wxtags':
    get:
      description: Get List of Site WxTags
      operationId: listSiteWxTags
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxtagArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWxTags
      tags:
        - Sites WxTags
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site WxTag
      operationId: createSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                    - gmail
                    - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file-servers
                  type: match
                  values:
                    - b0c4e7001543
                    - a0c4e7001543
                    - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                    - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file-servers
                  type: match
                  values:
                    - 10.1.2.1
                    - 10.2.3.4/24
                    - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                    - '80'
                    - '8000'
                    - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                    - test_key1
                    - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                    - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                    - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                    - john@abc.com
                    - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                    - port_range: '80'
                      protocol: tcp
                      subnets:
                        - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                    - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: ./components/schemas/wxlan_tag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWxTag
      tags:
        - Sites WxTags
  '/api/v1/sites/{site_id}/wxtags/apps':
    get:
      description: Get Application List
      operationId: getSiteApplicationList
      responses:
        '200':
          $ref: ./components/responses/WxTagsAppsArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteApplicationList
      tags:
        - Sites WxTags
    parameters:
      - $ref: ./components/parameters/site_id.yml
  '/api/v1/sites/{site_id}/wxtags/{wxtag_id}':
    delete:
      description: Delete Site WxTag
      operationId: deleteSiteWxTag
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWxTag
      tags:
        - Sites WxTags
    get:
      description: Get Site WxTag Details
      operationId: getSiteWxTag
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWxTag
      tags:
        - Sites WxTags
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wxtag_id.yml
    put:
      description: Update Site WxTag
      operationId: updateSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  last_ips:
                    - string
                  mac: string
                  match: wlan_id
                  name: string
                  op: in
                  resource_mac: string
                  services:
                    - string
                  specs:
                    - port_range: string
                      protocol: tcp
                      subnet:
                        - string
                  subnet: string
                  type: match
                  values:
                    - string
            schema:
              $ref: ./components/schemas/wxlan_tag.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtag.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWxTag
      tags:
        - Sites WxTags
  '/api/v1/sites/{site_id}/wxtags/{wxtag_id}/clients':
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getSiteCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: ./components/responses/WxTagsMatchingArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteCurrentMatchingClientsOfAWxTag
      tags:
        - Sites WxTags
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wxtag_id.yml
  '/api/v1/sites/{site_id}/wxtunnels':
    get:
      description: Get List of Site WxLan Tunnels
      operationId: listSiteWxTunnels
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/WxtunnelArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteWxTunnels
      tags:
        - Sites WxTunnels
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: Create Site WxLan Tunnel
      operationId: createSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                      - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                    - string
                  router_id: string
                  secret: string
                  sessions:
                    - ap_as_session_id: string
                      comment: string
                      enable_cookie: true
                      ethertype: ethernet
                      local_session_id: 1
                      pseudo_802.1ad_enabled: true
                      remote_id: string
                      remote_session_id: 1
                      use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: ./components/schemas/wxlan_tunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteWxTunnel
      tags:
        - Sites WxTunnels
  '/api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}':
    delete:
      description: Delete Site WxLan Tunnel
      operationId: deleteSiteWxTunnel
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteWxTunnel
      tags:
        - Sites WxTunnels
    get:
      description: Get Site WxLan tunnel Details
      operationId: getSiteWxTunnel
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteWxTunnel
      tags:
        - Sites WxTunnels
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/wxtunnel_id.yml
    put:
      description: Update Site WxLan Tunnel
      operationId: updateSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                      - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                    - string
                  router_id: string
                  secret: string
                  sessions:
                    - ap_as_session_id: string
                      comment: string
                      enable_cookie: true
                      ethertype: ethernet
                      local_session_id: 1
                      pseudo_802.1ad_enabled: true
                      remote_id: string
                      remote_session_id: 1
                      use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: ./components/schemas/wxlan_tunnel.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Wxtunnel.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteWxTunnel
      tags:
        - Sites WxTunnels
  '/api/v1/sites/{site_id}/zones':
    get:
      description: Get List of Site Zones
      operationId: listSiteZones
      parameters:
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
      responses:
        '200':
          $ref: ./components/responses/ZonesArray.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: listSiteZones
      tags:
        - Sites Zones
    parameters:
      - $ref: ./components/parameters/site_id.yml
    post:
      description: 'Create Site Zone '
      operationId: createSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                    - x: 0
                      'y': 0
            schema:
              $ref: ./components/schemas/zone.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Zone.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: createSiteZone
      tags:
        - Sites Zones
  '/api/v1/sites/{site_id}/zones/{zone_id}':
    delete:
      description: Delete Site Zone
      operationId: deleteSiteZone
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: deleteSiteZone
      tags:
        - Sites Zones
    get:
      description: Get Site Zone Details
      operationId: getSiteZone
      responses:
        '200':
          $ref: ./components/responses/Zone.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: getSiteZone
      tags:
        - Sites Zones
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/zone_id.yml
    put:
      description: Update Site Zone
      operationId: updateSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                    - x: 0
                      'y': 0
            schema:
              $ref: ./components/schemas/zone.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/Zone.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: updateSiteZone
      tags:
        - Sites Zones
  '/api/v1/sites/{site_id}/{zone_type}/count':
    get:
      description: Count Site Zone Sessions
      operationId: countSiteZoneSessions
      parameters:
        - example: scope_id
          in: query
          name: distinct
          schema:
            default: scope_id
            enum:
              - user_type
              - user
              - scope_id
              - scope
            type: string
        - description: user type
          in: query
          name: user_type
          schema:
            default: client
            enum:
              - client
              - sdkclient
              - asset
            type: string
        - description: client MAC / Asset MAC / SDK UUID
          in: query
          name: user
          schema:
            type: string
        - description: 'if `scope`==`map`/`zone`/`rssizone`, the scope id'
          in: query
          name: scope_id
          schema:
            type: string
        - description: scope
          in: query
          name: scope
          schema:
            default: site
            enum:
              - site
              - map
              - zone
              - rssizone
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/count.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: countSiteZoneSessions
      tags:
        - Sites Zones
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/zone_type.yml
  '/api/v1/sites/{site_id}/{zone_type}/visits/search':
    get:
      description: Search Zone Sessions
      operationId: searchSiteZoneSessions
      parameters:
        - description: 'user type, client (default) / sdkclient / asset'
          in: query
          name: user_type
          schema:
            default: client
            enum:
              - client
              - sdkclient
              - asset
            type: string
        - description: client MAC / Asset MAC / SDK UUID
          in: query
          name: user
          schema:
            type: string
        - description: 'if `scope`==`map`/`zone`/`rssizone`, the scope id'
          in: query
          name: scope_id
          schema:
            type: string
        - description: scope
          in: query
          name: scope
          schema:
            default: site
            enum:
              - site
              - map
              - zone
              - rssizone
            type: string
        - $ref: ./components/parameters/page.yml
        - $ref: ./components/parameters/limit.yml
        - $ref: ./components/parameters/start.yml
        - $ref: ./components/parameters/end.yml
        - $ref: ./components/parameters/duration.yml
      responses:
        '200':
          $ref: ./components/responses/ZoneSessionsSearch.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: searchSiteZoneSessions
      tags:
        - Sites Zones
    parameters:
      - $ref: ./components/parameters/site_id.yml
      - $ref: ./components/parameters/zone_type.yml
  /api/v1/utils/test_telstra:
    post:
      description: |-
        Allows validation of Telstra sms gateway credentials.

        In case of success, a text message confirming successful setup should be received. In case of error, telstra error message are returned.
      operationId: testSiteWlanTelstraSetup
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  telstra_client_id: '123456'
                  telstra_client_secret: abcdef
                  to: '+911122334455'
            schema:
              $ref: ./components/schemas/test_telstra.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: testSiteWlanTelstraSetup
      tags:
        - Sites Wlans
  /api/v1/utils/test_twilio:
    post:
      description: |-
        Allows validation of twilio setup
        In case of success, a text message confirming successful setup should be received. In case of error, twilio error code and message are returned.
      operationId: testSiteWlanTwilioSetup
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  from: '+185051234567'
                  to: '+19999999999'
                  twilio_auth_token: 2135be04736a1a0a314bce432d61721a
                  twilio_sid: AC5f4366878d193fb4865ab151739999eb
            schema:
              $ref: ./components/schemas/test_twilio.yml
        description: Request Body
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
        '401':
          $ref: ./components/responses/HTTP401.yml
        '403':
          $ref: ./components/responses/HTTP403.yml
        '404':
          $ref: ./components/responses/HTTP404.yml
        '429':
          $ref: ./components/responses/HTTP429.yml
      summary: testSiteWlanTwilioSetup
      tags:
        - Sites Wlans
  /webhook_example/_alarm_:
    parameters: []
    post:
      description: |-
        Webhook sample for `alarm` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: alarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - aps:
                        - string
                      bssids:
                        - string
                      count: 0
                      event_id: a7a26ff2-e851-45b6-9634-d595f45458b7
                      for_site: true
                      id: 489f6eca-6276-4993-bfeb-c3cbbbba1f08
                      last_seen: 0
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      ssids:
                        - string
                      timestamp: 0
                      type: string
                      update: true
                  topic: alarms
            schema:
              $ref: ./components/schemas/webhook_alarms.yml
        description: |-
          **N.B.**: Fields like `aps`, `bssids`, `ssids` are event specific. They are relevant to this event type ( rogue-ap-detected). For a different event type, different fields may be sent. These don’t contain all affected entities and are representative samples of entities (capped at 10). For marvis action related events, we expose `details` to include more event specific details.

          Events specific fields for other alarm event type can be found with API https://api.mist.com/api/v1/const/alarm_defs, under “fields” array of /alarm_defs response object.
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: alarms
      tags:
        - Webhook Samples
  /webhook_example/_asset_raw_:
    parameters: []
    post:
      description: |-
        Webhook sample for `asset_raw` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages

        **will be deprecated after 03/31/2024**
      operationId: assetRaw
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - asset_id: b4695157-0d1d-4da0-8f9e-5c53149389e4
                      beam: 0
                      device_id: 3bafab7b-4400-4bcf-8e6e-09f954699940
                      ibeacon_major: 0
                      ibeacon_minor: 0
                      ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                      mac: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      mfg_company_id: 0
                      mfg_data: string
                      rssi: 0
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      timestamp: 0
                  topic: asset-raw
            schema:
              $ref: ./components/schemas/webhook_asset_raw.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: assetRaw
      tags:
        - Webhook Samples
  /webhook_example/_audit_:
    parameters: []
    post:
      description: |-
        Webhook sample for `audit` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: audits
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - admin_name: admin_name8
                      device_id: 00000380-0000-0000-0000-000000000000
                      id: 0000122a-0000-0000-0000-000000000000
                      message: message0
                      org_id: 00001302-0000-0000-0000-000000000000
                      site_id: 00000290-0000-0000-0000-000000000000
                      src_ip: src_ip6
                      timestamp: 157.68
                  topic: audits
            schema:
              $ref: ./components/schemas/webhook_audits.yml
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: audits
      tags:
        - Webhook Samples
  /webhook_example/_client_info_:
    parameters: []
    post:
      description: |
        Webhook sample for `client_info` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: clientInfo
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - ap: string
                      ap_name: string
                      band: string
                      bssid: string
                      connect: 0
                      connect_float: 0
                      mac: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      rssi: 0
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                      ssid: string
                      timestamp: 0
                      version: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-info
            schema:
              $ref: ./components/schemas/webhook_client_info.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: clientJoin
      tags:
        - Webhook Samples
  /webhook_example/_client_join_:
    parameters: []
    post:
      description: |
        Webhook sample for `client_join` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: clientJoin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - ap: string
                      ap_name: string
                      band: string
                      bssid: string
                      connect: 0
                      connect_float: 0
                      mac: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      rssi: 0
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                      ssid: string
                      timestamp: 0
                      version: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-join
            schema:
              $ref: ./components/schemas/webhook_client_join.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: clientJoin
      tags:
        - Webhook Samples
  /webhook_example/_client_latency_:
    parameters: []
    post:
      description: |-
        Webhook sample for `client-latency` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: client_latency
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - auth: 0.17170219
                      dhcp: 0.017828934
                      dns: 0.024532124
                      org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                      site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                      timestamp: 1696401600
                  topic: client-latency
            schema:
              $ref: ./components/schemas/webhook_client_latency.yml
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: alarms
      tags:
        - Webhook Samples
  /webhook_example/_client_sessions_:
    parameters: []
    post:
      description: |
        Webhook sample for `client_sessions` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: clientSessions
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - ap: string
                      ap_name: string
                      band: string
                      bssid: string
                      client_family: string
                      client_manufacture: string
                      client_model: string
                      client_os: string
                      connect: 0
                      connect_float: 0
                      disconnect: 0
                      disconnect_float: 0
                      duration: 0
                      mac: string
                      next_ap: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      rssi: 0
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                      ssid: string
                      termination_reason: 0
                      timestamp: 0
                      version: 0
                      wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-sessions
            schema:
              $ref: ./components/schemas/webhook_client_sessions.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
        '400':
          $ref: ./components/responses/HTTP400.yml
      summary: clientSessions
      tags:
        - Webhook Samples
  /webhook_example/_device_events_:
    parameters: []
    post:
      description: |
        Webhook sample for `device_events` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: deviceEvents
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - ap: string
                      ap_name: string
                      audit_id: 78c04fa6-cfb4-46a0-9aa5-3681ba4f3897
                      device_name: string
                      device_type: ap
                      ev_type: notice
                      mac: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      reason: string
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                      text: string
                      timestamp: 0
                      type: string
                  topic: device-events
            schema:
              $ref: ./components/schemas/webhook_device_events.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: deviceEvents
      tags:
        - Webhook Samples
  /webhook_example/_device_updowns_:
    parameters: []
    post:
      description: |
        Webhook sample for `device_updowns` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: deviceUpDown
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - ap: string
                      ap_name: string
                      for_site: true
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                      timestamp: 0
                      type: string
                  topic: device-updowns
            schema:
              $ref: ./components/schemas/webhook_device_updowns.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: deviceUpDown
      tags:
        - Webhook Samples
  /webhook_example/_discovered_raw_rssi_:
    parameters: []
    post:
      description: |
        Webhook sample for `discovered-raw-rssi` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: discovered-raw-rssi
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - ap_loc:
                        - 0
                      beam: 0
                      device_id: 3bafab7b-4400-4bcf-8e6e-09f954699940
                      ibeacon_major: 0
                      ibeacon_minor: 0
                      ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                      is_asset: true
                      mac: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      mfg_company_id: string
                      mfg_data: string
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      rssi: 0
                      service_packets:
                        - service_data: string
                          service_uuid: 7138cc00-c611-4dec-a05e-5c4b1cae13c0
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      timestamp: 0
                  topic: string
            schema:
              $ref: ./components/schemas/webhook_discovered_raw_rssi.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: discovered-raw-rssi
      tags:
        - Webhook Samples
  /webhook_example/_location_:
    parameters: []
    post:
      description: |
        Webhook sample for `location` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: location
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - battery_voltage: 0
                      eddystone_uid_instance: string
                      eddystone_uid_namespace: string
                      eddystone_url_url: string
                      ibeacon_major: 0
                      ibeacon_minor: 0
                      ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                      id: 487f6eca-6276-4993-bfeb-e3cbbbba3f08
                      mac: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      mfg_company_id: 0
                      mfg_data: string
                      name: string
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      timestamp: 0
                      type: string
                      x: 0
                      'y': 0
                  topic: location
            schema:
              $ref: ./components/schemas/webhook_location.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: location
      tags:
        - Webhook Samples
  /webhook_example/_nac_accounting_:
    parameters: []
    post:
      description: |
        Webhook sample for `nac-accounting` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: nacAccounting
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - ap: 5c5b355005be
                      auth_type: eap-tls
                      bssid: 5c5b35546bb4
                      client_ip: 172.16.87.4
                      client_type: wireless
                      mac: 6e795836d5f9
                      nas_vendor: juniper-mist
                      org_id: 625aba64-fe72-4b14-8985-cbf31ec3d78a
                      rx_pkts: 9523
                      site_id: ec9d1e85-af24-43f9-8d65-d620580e8631
                      ssid: Test-CMR SSID
                      timestamp: 1547235620.89
                      tx_pkts: 5233
                      type: NAC_ACCOUNTING_STOP
                      username: hi
                  topic: nac-accounting
            schema:
              $ref: ./components/schemas/webhook_nac_accounting.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: nacAccounting
      tags:
        - Webhook Samples
  /webhook_example/_nac_events_:
    parameters: []
    post:
      description: Example Delivery of nac-events
      operationId: nac-events
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - ap: 5c5b35513227
                      auth_type: 802.1X
                      bssid: 5c5b355fafcc
                      dryrun_nacrule_id: 32f27e7d-ff26-4a9b-b3d1-ff9bcb264012
                      dryrun_nacrule_matched: true
                      idp_id: 912ef72e-2239-4996-b81e-469e87a27cd6
                      idp_role:
                        - itsuperusers
                        - vip
                      mac: ac3eb179e535
                      nacrule_id: 32f27e7d-ff26-4a9b-b3d1-ff9bcb264c62
                      nacrule_matched: true
                      nas_vendor: juniper-mist
                      org_id: 27547ac2-d114-4e04-beb1-f3f1e6e81ec6
                      random_mac: true
                      resp_attrs:
                        - Tunnel-Type=VLAN
                        - Tunnel-Medium-Type=IEEE-802
                        - Tunnel-Private-Group-Id=750
                        - User-Name=anonymous
                      site_id: 441a1214-6928-442a-8e92-e1d34b8ec6a6
                      ssid: '##mist_nac'
                      timestamp: 1691512031.358188
                      type: NAC_CLIENT_PERMIT
                      username: user@deaflyz.net
                      vlan: '750'
                  topic: string
            schema:
              $ref: ./components/schemas/webhook_nac_events.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: nac-events
      tags:
        - Webhook Samples
  /webhook_example/_occupancy_alerts_:
    parameters: []
    post:
      description: |
        Webhook sample for `occupancy_alerts` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: occupancyAlerts
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - alert_events:
                        - current_occupancy: 0
                          map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                          occupancy_limit: 0
                          org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                          timestamp: 0
                          type: COMPLIANCE-VIOLATION
                          zone_id: 4495020a-236f-46e0-9453-e3f9cc6476f4
                          zone_name: string
                      for_site: true
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      site_name: string
                  topic: occupancy-alerts
            schema:
              $ref: ./components/schemas/webhook_occupancy_alerts.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: occupancyAlerts
      tags:
        - Webhook Samples
  /webhook_example/_ping_:
    parameters: []
    post:
      description: |
        Webhook sample for `ping` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: ping
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - id: 487f6eca-6276-4993-bfeb-f3cbbbba4f08
                      name: string
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      timestamp: 0
                  topic: ping
            schema:
              $ref: ./components/schemas/webhook_ping.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: ping
      tags:
        - Webhook Samples
  /webhook_example/_sdkclient_scan_data:
    parameters: []
    post:
      description: |
        Webhook sample for `sdkclient_scan_data` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: sdkclientScanData
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - connection_ap: 5c5b352f587e
                      connection_band: '2.4'
                      connection_bssid: 5c5b352b51b4
                      connection_channel: 11
                      connection_rssi: -87
                      last_seen: 1592333828
                      mac: 70ef0071535f
                      scan_data:
                        - ap: 5c5b352f587e
                          band: '2.4'
                          bssid: 5c5b352b51b4
                          channel: 11
                          rssi: -87
                          ssid: mist-wifi
                          timestamp: 1592333828
                        - ap: 5c5b352f587e
                          band: '5'
                          bssid: 5c5b352b51b8
                          channel: 36
                          rssi: -75
                          ssid: mist-wifi
                          timestamp: 1592333828
                      site_id: d761985e-49b1-4506-88e9-e0368a05c301
                  topic: sdkclient-scan-data
            schema:
              $ref: ./components/schemas/webhook_sdkclient-scan-data.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: sdkclientScanData
      tags:
        - Webhook Samples
  /webhook_example/_site_sle_:
    parameters: []
    post:
      description: |-
        Webhook sample for `site-sle` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: site-sle
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                    - org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                      site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                      sle:
                        ap-availability: 0.6
                        successful-connect: 0.7
                        time-to-connect: 0.9
                      timestamp: 1694620800
                  topic: site-sle
            schema:
              $ref: ./components/schemas/webhook_site_sle.yml
        description: ''
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: site-sle
      tags:
        - Webhook Samples
  /webhook_example/_zone_:
    parameters: []
    post:
      description: |
        Webhook sample for `zone` topic

        **Note**: The server host will be your own server FQDN where the Mist Cloud is sending the webhook messages
      operationId: zone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                    - asset_id: b4695157-0d1d-4da0-8f9e-5c53149389e4
                      id: 485f6eca-6276-4993-bfeb-54cbbbba5f08
                      mac: string
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      name: string
                      site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                      timestamp: 0
                      trigger: enter
                      type: string
                      zone_id: 4495020a-236f-46e0-9453-e3f9cc6476f4
                  topic: zone
            schema:
              $ref: ./components/schemas/webhook_zone.yml
      responses:
        '200':
          $ref: ./components/responses/OK.yml
      summary: zone
      tags:
        - Webhook Samples
components:
  securitySchemes:
    apiToken:
      description: |-
        Like many other API providers, it’s also possible to generate API Tokens to be used (in HTTP Header) for authentication. An API token ties to a Admin with equal or less privileges.

        **Format**:
          API Token value format is `Token {apitoken}`

        **Notes**:
        * an API token generated for a specific admin has the same privilege as the user
        * an API token will be automatically removed if not used for > 90 days
        * SSO admins cannot generate these API tokens. Refer Org level API tokens which can have privileges of a specific Org/Site for more information.
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: 'While our current UI uses Session / Cookie-based authentication, it’s also possible to do Basic Auth.'
      scheme: basic
      type: http
x-tagGroups:
  - name: Login
    tags:
      - Login
      - Login With OAuth2
  - name: Self
    tags:
      - Self Account
      - Self OAuth2
      - Self MFA
      - Self API Token
      - Recover Password
      - Self Alarms
      - Self Audit Logs
  - name: Sites
    tags:
      - Sites
      - Sites Alarms
      - Sites AP Templates
      - Sites Applications
      - Sites Anomaly
      - Sites Asset Filters
      - Sites Assets
      - Sites Beacons
      - Sites Calls
      - Sites Clients - NAC
      - Sites Clients - Wan
      - Sites Clients - Wired
      - Sites Clients - Wireless
      - Sites Devices
      - Sites Devices - Wireless
      - Sites Devices - Wired
      - Sites Devices - Wired Virtual Chassis
      - Sites Devices - WAN
      - Sites Devices - WAN HA
      - Sites Devices Others
      - Sites Devices Upgrades
      - Sites Devices Utilities
      - Sites Devices Stats
      - Sites Events
      - Sites EVPN Topologies
      - Sites Guests
      - Sites Insights
      - Sites JSE
      - Sites Licenses
      - Sites Location
      - Sites Maps
      - Sites Maps Auto-orientation
      - Sites Maps Auto-placement
      - Sites MxEdges
      - Sites MxTunnels
      - Sites Network Templates
      - Sites Networks
      - Sites Pcaps
      - Sites Psks
      - Sites Rfdiags
      - Sites Rogues
      - Sites RF Templates
      - Sites RRM
      - Sites Rssizones
      - Sites Services
      - Sites Service Policies
      - Sites Setting
      - Sites Site Templates
      - Sites Skyatp
      - Sites SLEs
      - Sites Stats
      - Sites Subscriptions
      - Sites Synthetic Tests
      - Sites UI Settings
      - Sites vBeacons
      - Sites VPNs
      - Sites Webhooks
      - Sites Wlans
      - Sites WxRules
      - Sites WxTags
      - Sites WxTunnels
      - Sites Zones
  - name: Orgs
    tags:
      - Orgs
      - Orgs 128T
      - Orgs Admins
      - Orgs Alarms
      - Orgs Alarm Templates
      - Orgs AP Templates
      - Orgs API Tokens
      - Orgs Assets
      - Orgs Asset Filters
      - Orgs Calls
      - Orgs Cert
      - Orgs Clients - NAC
      - Orgs Clients - Wan
      - Orgs Clients - Wired
      - Orgs Clients - Wireless
      - Orgs CRL
      - Orgs Devices
      - Orgs Devices Others
      - Orgs Devices Stats
      - Orgs Devices Upgrades
      - Orgs Devices Zscaler
      - Orgs Device Profiles
      - Orgs EVPN Topologies
      - Orgs Gateway Templates
      - Orgs Guests
      - Orgs IDP Profiles
      - Orgs Inventory
      - Orgs JSE
      - Orgs JSI
      - Orgs Licenses
      - Orgs Linked Applications
      - Orgs Logs
      - Orgs Maps
      - Orgs Marvis
      - Orgs MxClusters
      - Orgs MxEdges
      - Orgs MxTunnels
      - Orgs NAC
      - Orgs NAC CRL
      - Orgs NAC Rules
      - Orgs NAC Tags
      - Orgs Network Templates
      - Orgs Networks
      - Orgs Premium Analytics
      - Orgs Psks
      - Orgs Psk Portals
      - Orgs RF Templates
      - Orgs SDK Clients
      - Orgs SDK Templates
      - Orgs SecPolicies
      - Orgs Services
      - Orgs Service Policies
      - Orgs Setting
      - Orgs Sitegroups
      - Orgs Sites
      - Orgs Site Templates
      - Orgs SLEs
      - Orgs SSO Roles
      - Orgs SSO
      - Orgs Stats
      - Orgs Subscriptions
      - Orgs Templates
      - Orgs Tickets
      - Orgs Tunnels Stats
      - Orgs Vars
      - Orgs VPNs
      - Orgs Webhooks
      - Orgs Wlans
      - Orgs WxRules
      - Orgs WxTags
      - Orgs WxTunnels
  - name: MSPs
    tags:
      - Msps
      - Msps Admins
      - Msps Inventory
      - Msps Logo
      - Msps Invites
      - Msps Logs
      - Msps Licenses
      - Msps Marvis
      - Msps Org Groups
      - Msps Orgs
      - Msps SLEs
      - Msps SSO Roles
      - Msps SSO
      - Msps Stats
      - Msps Tickets
  - name: Installer
    tags:
      - Installer
  - name: Webhook Samples
    tags:
      - Webhook Samples
  - name: Constants
    tags:
      - Constants
  - name: Others
    tags:
      - Admin
      - Mobile
