openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2401.1.2**

    >

    > Date: **Feb 1, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2311.1.4
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: https://www.mist.com/wp-content/uploads/logo.png
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist Europe 01
  url: https://api.eu.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Login
- description: A Mist account can be linked to OAuth2 providers:\n1. First, login
    with your Mist account\n2. Obtain the Authorization URL for Linking 1. in JSON
    response, more usable for developers. Simply don\'t specify the forward parameter
    when obtaining the authorization URL 2. or as GET parameter, for UI where the
    user flow can be continued. Specify the landing page/url of your choice 3. Obtain
    the authorizaiton code by clicking / going through Authorization URL Link Mist
    Account against OAuth2 Provider by using the authorization code
  name: Login With OAuth2
- description: "In a typical enterprise, a separate group of people, Installers, are\
    \ responsible for install new devices. May it be a new installation (e.g. new\
    \ stores), a replacement installation (e.g. replacing Cisco APs with Mist APs),\
    \ or addition (e.g. adding new APs for better coverage). Instead of granting them\
    \ Admin/Write privilege, it's more desirable to grant them minimum privileges\
    \ to do the initial provisioning so they cannot read sensible information (e.g.\
    \ PSK of a WLAN), or change configs of running APs.\nAt a high level, Installer\
    \ APs try to achieve the following:\n1. identifying a device by MAC (that\u2019\
    s what they see)\n2. they can only touch configurations of the devices they\u2019\
    re installing\n3. allow the following configurations: * name * site assignment\
    \ * device  profile assignment * map and location (x/y) assignment * claim (if\
    \ not already in the inventory) * replace existing device with the device being\
    \ installed\n\n* Grace Period *\nGrace period provides a dynamic way to limit\
    \ what devices / sites   installer can work on. Generally installers work on recent\
    \ deployments -  bringing up new sites, add newly claimed devices to new / existing\
    \ sites. They  make mistakes, too, and may need to further tweak some of the parameters.\
    \   Default grace period is 7 days and can be set from 1 day to 365 days."
  name: Installer
- name: Admin
- name: Mobile
- description: MSP (Managed Service Provider) contains multiple Organizations.
  name: Msps
- name: Msps Admins
- name: Msps Inventory
- name: Msps Invites
- name: Msps Logo
- name: Msps Logs
- name: Msps Licenses
- name: Msps Marvis
- name: Msps Org Groups
- name: Msps Orgs
- name: Msps SLEs
- name: Msps SSO Roles
- name: Msps SSO
- name: Msps Stats
- name: Msps Tickets
- description: An organization usually represents a customer - which has inventories,
    licenses. An Organization can contain multiple sites. A site usually represents
    a deployment at the same location (a campus, an office).
  name: Orgs
- name: Orgs 128T
- name: Orgs Admins
- description: Alarms are triggered based on certain events. Alarms could be configured
    using an Alarm Template.
  name: Orgs Alarms
- description: An Alarm Template is a set of Alarm Rules that could be applied to
    one or more sites (while each site can only pick one Alarm Template), or to the
    whole org.
  name: Orgs Alarm Templates
- name: Orgs AP Templates
- name: Orgs API Tokens
- name: Orgs Assets
- name: Orgs Asset Filters
- name: Orgs Calls
- name: Orgs Cert
- name: Orgs Clients - NAC
- name: Orgs Clients - Wan
- name: Orgs Clients - Wired
- name: Orgs Clients - Wireless
- name: Orgs CRL
- description: 'While Templates / RF Templates / Network Templates / Gateway Templates
    provides powerful ways to control how a Device\''s configuration is derived for
    a Site. There are cases where you\''d like another level of control at the Org
    Level.

    A Device Profile contains a subset of Device\''s configurations you\''d like a
    device to have. It will be merged at runtime when we\''re provisioning an AP.'
  name: Orgs Device Profiles
- name: Orgs Devices
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Orgs EVPN Topologies
- description: API Call for 3rd party devices
  name: Orgs Devices Others
- name: Orgs Devices Stats
- name: Orgs Devices Upgrades
- description: "In Zscaler UI \n 1. add Partner Integration at https://admin.zscalerbeta.net/#administration/partner-integration\
    \ \n 2. Add Partner Administrator Role at https://admin.zscalerbeta.net/#administration/role-management\
    \ - Name: Mist - Access: Full \n 3. add Partner Admin at https://admin.zscalerbeta.net/#administration/admin-management\
    \ with - Login ID: john - email: john@abc.com \n 4. Find the cloud name for ZIA\
    \ https://help.zscaler.com/zia/what-my-cloud-name-zia\n"
  name: Orgs Devices Zscaler
- description: Gateway Template is applied to a site for gateway(s) in a site.
  name: Orgs Gateway Templates
- name: Orgs Guests
- name: Orgs IDP Profiles
- name: Orgs Inventory
- name: Orgs JSE
- description: "Juniper Support Insight is a free service provided to all Mist customers.\
    \ You can adopt your devices via a few lines CLI comands. Allowing you to \n*\
    \ get some basic information about the adopted devices \n* web shell into device\
    \ (write privilege required) \n* upgrade (write privilege required)"
  name: Orgs JSI
- name: Orgs Licenses
- name: Orgs Linked Applications
- name: Orgs Logs
- name: Orgs Marvis
- name: Orgs Maps
- name: Orgs MxClusters
- name: Orgs MxEdges
- name: Orgs MxTunnels
- name: Orgs NAC
- description: 'nactags are the building blocks to compose nacrules.

    They can either appear in the "matching" / "not_matching" sections of a nacrule,
    in which case they play the role of classifiers, or they could appear in the "apply_tags"
    section of the of a nacrule, in which case they influence the result.

    When the "type" field of nactag is "match", it can be used as the classfier of
    a nacrule. "match" field specifies the attribute name and "values" field specifies
    the list of attribute values to match on. When multiple values are specified,
    its treated as an OR condition between those values.

    When the "type" field of nactag is NOT "match", it can be used as the result of
    a nacrule. "type" field identifies the action to take and the corresponding field
    would provide any associated parameters to that action.'
  name: Orgs NAC Tags
- name: Orgs NAC CRL
- name: Orgs NAC Rules
- description: 'Network template is intended to be applied to a Site. It works like
    a blueprint of the network of the site.

    All Site Settings can go into Network Templates. See Site:Site Setting for schema

    Moreover, this can further be overwriten by individual Site Setting'
  name: Orgs Network Templates
- name: Orgs Networks
- name: Orgs Premium Analytics
- name: Orgs Psks
- description: "PSK Self-Service Portals are for \n  1. **WIFI users** who want to\
    \ connect to a WLAN with personal PSK, they\u2019re told to connect to a URL where\
    \ they can login (likely through company\u2019s SSO) and get the WIFI Name / Passphrase\
    \ - required input fields name, email so we can generate PSK \n  2. **PSK Admins**\
    \ (they don\u2019t have access to normal Network Admin Portal)\nWhen a PSK portal\
    \ is created, an unique URL will be generated (e.g. https://psk.mist.com/xxxxxx)"
  name: Orgs Psk Portals
- name: Orgs RF Templates
- name: Orgs SDK Clients
- name: Orgs SDK Templates
- description: "Security Policy is designed to audit / catch discripancies between\
    \ \u201Cwhat\u2019s intended to be running\u201D versus \u201Cwhat\u2019s actually\
    \ running\u201D in a network. Many big organizations have separated Security and\
    \ IT team (for good reasons). Each site can be assigned a security policy. Whenever\
    \ an AP is provisioned, the configuration will be checked against the security\
    \ policy. Any violations will be flagged in [Device Config History](/#operation/searchSiteDeviceConfigHistory)\
    \ where you can search for the when and where the violation occurs."
  name: Orgs SecPolicies
- name: Orgs Services
- name: Orgs Service Policies
- name: Orgs Setting
- name: Orgs Sitegroups
- name: Orgs Sites
- description: Site template is intended to be applied to a Site. The items in site
    setting which should be shared for all device types.
  name: Orgs Site Templates
- name: Orgs SLEs
- name: Orgs SSO Roles
- name: Orgs SSO
- name: Orgs Stats
- name: Orgs Subscriptions
- name: Orgs Templates
- name: Orgs Tickets
- name: Orgs Tunnels Stats
- name: Orgs Vars
- name: Orgs VPNs
- name: Orgs Webhooks
- name: Orgs Wlans
- name: Orgs WxRules
- name: Orgs WxTags
- name: Orgs WxTunnels
- description: A site represents a project, a deployment. For MSP, it can be as small
    as a coffee shop or a five-star 600-room hotel. A site contains a set of Maps,
    Wlans, Policies, Zones.
  name: Sites
- name: Sites Alarms
- name: Sites AP Templates
- description: Applications contains a list of applications users are interested in
    monitoring / routing / policying
  name: Sites Applications
- name: Sites Anomaly
- name: Sites Asset Filters
- name: Sites Assets
- name: Sites Beacons
- name: Sites Calls
- name: Sites Clients - NAC
- name: Sites Clients - Wan
- name: Sites Clients - Wired
- name: Sites Clients - Wireless
- description: 'Mist provides many ways (device-type specific template, site template,
    device profile, per-device) to configure devices for different kind of scenarios.

    The precedence goes from most specific to least specific

    Device > Device Profile > RFTemplate (for AP only) > DeviceType-specific Template
    > Site Template > Site Setting'
  name: Sites Devices
- name: Sites Devices - Wireless
- description: API Call for 3rd party devices
  name: Sites Devices Others
- name: Sites Devices - Wired
- name: Sites Devices - Wired Virtual Chassis
- name: Sites Devices - WAN
- name: Sites Devices - WAN HA
- name: Sites Devices Stats
- name: Sites Devices Upgrades
- name: Sites Devices Utilities
- name: Sites Events
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Sites EVPN Topologies
- name: Sites Guests
- name: Sites Insights
- name: Sites JSE
- name: Sites Licenses
- name: Sites Location
- name: Sites Maps
- name: Sites Maps Auto-orientation
- name: Sites Maps Auto-placement
- name: Sites MxEdges
- name: Sites MxTunnels
- name: Sites Network Templates
- name: Sites Networks
- name: Sites Pcaps
- name: Sites Psks
- name: Sites RF Templates
- name: Sites Rfdiags
- name: Sites Rogues
- name: Sites RRM
- name: Sites Rssizones
- name: Sites Services
- name: Sites Service Policies
- name: Sites Setting
- name: Sites Site Templates
- name: Sites Skyatp
- name: Sites SLEs
- name: Sites Stats
- name: Sites Subscriptions
- name: Sites Synthetic Tests
- name: Sites UI Settings
- name: Sites vBeacons
- name: Sites VPNs
- name: Sites Webhooks
- name: Sites Wlans
- name: Sites WxRules
- name: Sites WxTags
- name: Sites WxTunnels
- name: Sites Zones
- name: Constants
- name: Self Account
- description: "Like many other API providers, it\u2019s also possible to generate\
    \ API Tokens to be used (in HTTP Header) for authentication. An API token ties\
    \ to a Admin with equal or less privileges.\n\nNotes:\n* an API token generated\
    \ for a specific admin has the same privilege as the user\n* an API token will\
    \ be automatically removed if not used for > 90 days\n* SSO admins cannot generate\
    \ these API tokens. Refer Org level API tokens (/api/v1/docs/Org#api-token) which\
    \ can have privileges of a specific Org/Site for more information."
  name: Self API Token
- name: Self OAuth2
- name: Recover Password
- name: Self MFA
- name: Self Alarms
- name: Self Audit Logs
- name: Webhook Samples
paths:
  /api/v1/mobile/verify/{secret}:
    parameters:
    - $ref: '#/components/parameters/secret'
    post:
      description: Verify secret
      operationId: activateSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/model_object_device_id'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    name: Macy's
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    secret: device-specific-secret
              schema:
                properties:
                  name:
                    type: string
                  org_id:
                    format: uuid
                    type: string
                  secret:
                    type: string
                required:
                - name
                - org_id
                - secret
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: activateSdkInvite
      tags:
      - Mobile
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/assetfilters:
    get:
      description: "Get List of Org BLE asset filters. \nEach asset filter in the\
        \ list operates independently. For a filter object to match an asset, all\
        \ of the filter properties must match (logical \u2018AND\u2019 of each filter\
        \ property). For example, the \u201CVisitor Tags\u201D filter below will match\
        \ an asset when both the \u201Cibeacon\\_uuid\u201D and \u201Cibeacon_major\u201D\
        \ properties match the asset. All non-matching assets are ignored."
      operationId: listOrgAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetFilters
      tags:
      - Orgs Asset Filters
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Create Asset Filter\n\nCreates a single BLE asset filter for the\
        \ given site. Any subset of filter properties can be included in the filter.\
        \ A matching asset must meet the conditions of all given filter properties\
        \ (logical \u2018AND\u2019)."
      operationId: createOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  created_time: 0
                  disasbled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  for_site: true
                  ibeacon_major: 0
                  ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                  id: 430f6eca-6276-4993-bfeb-53cb5bba6f08
                  mfg_company_id: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
            schema:
              $ref: '#/components/schemas/asset_filter'
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAssetFilters
      tags:
      - Orgs Asset Filters
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAssetFilter
      tags:
      - Orgs Asset Filters
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Org Asset Filter Details
      operationId: getOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAssetFilter
      tags:
      - Orgs Asset Filters
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  disabled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab2
                  mfg_company_id: 0
                  name: string
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAssetFilters
      tags:
      - Orgs Asset Filters
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/assets:
    get:
      description: Get List of Org Assets
      operationId: listOrgAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssets
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Asset
      operationId: createOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAsset
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Impert Org Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n#### CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ``` "
      operationId: importOrgAssets
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - mac: a31eb04e1c38
                  name: Expensive Instrument
                - mac: a31eb04e1c37
                  name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - name
                - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgAssets
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/assets/{asset_id}:
    delete:
      description: Delete Org Asset
      operationId: deleteOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAsset
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Org Asset Details
      operationId: getOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAsset
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Org Asset
      operationId: updateOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAsset
      tags:
      - Orgs Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/maps/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Import data from files is a multipart POST which has a file, an
        optional json, and an optional csv, to create floorplan, assign matching inventory
        to specific site, place ap if name or mac matches


        ### CSV File Format

        ```csv

        Vendor AP name,Mist AP Mac

        US Office AP-2 - 5c:5b:35:00:00:02,5c5b35000002

        ``` '
      operationId: importOrgMaps
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: false
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    vendor_name: ekahau
            schema:
              $ref: '#/components/schemas/import_org_map'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgMaps
      tags:
      - Orgs Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdkclients/{sdkclient_id}:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkclient_id'
    put:
      description: Update SDK Client
      operationId: updateSdkClient
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: John Smith
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkClient
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdkinvites:
    get:
      description: Get List of Org SDK Invites
      operationId: listSdkInvites
      responses:
        '200':
          $ref: '#/components/responses/SdkinvitesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkInvites
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Invite
      operationId: createSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  name: string
                  quota: 0
                  quota_limited: true
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkInvite
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}:
    delete:
      description: Revoke SDK Invite
      operationId: revokeSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: revokeSdkInvite
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
    get:
      description: Get SDK Invite Details
      operationId: getSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInvite
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    put:
      description: Update SDK Invite
      operationId: updateSdkInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkInvite
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/email:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by Email
      operationId: sendSdkInviteEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@abc.com
            schema:
              $ref: '#/components/schemas/model_object_email'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteEmail
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/qrcode:
    get:
      description: Revoke SDK Invite
      operationId: getSdkInviteQrCode
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInviteQrCode
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/sms:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by SMS
      operationId: sendSdkInviteSms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  number: '14081234567'
            schema:
              properties:
                number:
                  type: string
              required:
              - number
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteSms
      tags:
      - Orgs SDK Clients
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdktemplates:
    get:
      description: Get List of Org SDK Templates
      operationId: listSdkTemplates
      responses:
        '200':
          $ref: '#/components/responses/SdktemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkTemplates
      tags:
      - Orgs SDK Templates
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Template
      operationId: createSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkTemplate
      tags:
      - Orgs SDK Templates
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}:
    delete:
      description: Delete SDK Template
      operationId: deleteSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSdkTemplate
      tags:
      - Orgs SDK Templates
      - cat:LOCATION:CONFIGURE
    get:
      description: Get SDK Template Details
      operationId: getSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkTemplate
      tags:
      - Orgs SDK Templates
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdktemplate_id'
    put:
      description: Update SDK Template
      operationId: updateSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkTemplate
      tags:
      - Orgs SDK Templates
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/sites/{site_name}/maps/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/site_name'
    post:
      description: 'Import data from files is a multipart POST which has a file, an
        optional json, and an optional csv, to create floorplan, assign matching inventory
        to specific site, place ap if name or mac matches


        #### Request


        ```

        "json": a JSON string describing your upload

        "file": a binary file

        ```'
      operationId: importOrgMapToSite
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: true
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    vendor_name: ekahau
            schema:
              $ref: '#/components/schemas/import_site_map'
        description: 'a JSON string, site id required, vendor option: ekahau, ibwave,
          etc., import_all_floorplans: optional, default: false, import_height: optional,
          default: true, import_orientation: optional, default: true

          "file": a binary file, option: .esx

          "csv": a csv file for ap name mapping, optional'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgMapToSite
      tags:
      - Orgs Sites
      - cat:LOCATION:CONFIGURE
  /api/v1/orgs/{org_id}/stats/assets:
    get:
      description: Get List of Org Assets Stats
      operationId: listOrgAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetsStats
      tags:
      - Orgs Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/count:
    get:
      description: Count Org Assets
      operationId: countOrgAssetsByDistanceField
      parameters:
      - in: query
        name: distinct
        schema:
          enum:
          - site_id
          - mac
          - map_id
          - ibeacon_uuid
          - ibeacon_major
          - ibeacon_minor
          type: string
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgAssetsByDistanceField
      tags:
      - Orgs Assets
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/search:
    get:
      description: Search for Org Assets
      operationId: searchOrgAssets
      parameters:
      - in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: string
      - in: query
        name: ibeacon_minor
        schema:
          type: string
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: integer
      - in: query
        name: rssi
        schema:
          type: integer
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgAssets
      tags:
      - Orgs Assets
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/sites/{site_id}/assetfilters:
    get:
      description: Get List of Site Asset Filters
      operationId: listSiteAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetFilters
      tags:
      - Sites Asset Filters
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset Filter
      operationId: createSiteAssetFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAssetFilters
      tags:
      - Sites Asset Filters
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAssetFilter
      tags:
      - Sites Asset Filters
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Asset Filter Details
      operationId: getSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetFilter
      tags:
      - Sites Asset Filters
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateSiteAssetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAssetFilter
      tags:
      - Sites Asset Filters
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/assets:
    get:
      description: Get List of Site Assets
      operationId: listSiteAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssets
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset
      operationId: createSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAsset
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Impert Site Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n## CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ``` "
      operationId: importSiteAssets
      parameters:
      - description: API will replace the assets with same mac if provided `upsert`==`True`,
          otherwise will report in errors in response.
        in: query
        name: upsert
        schema:
          default: 'False'
          enum:
          - 'True'
          - 'False'
          type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - mac: a31eb04e1c38
                  name: Expensive Instrument
                - mac: a31eb04e1c37
                  name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - name
                - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteAssets
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/assets/{asset_id}:
    delete:
      description: Delete Site Asset
      operationId: deleteSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAsset
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Asset Details
      operationId: getSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAsset
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Site Asset
      operationId: updateSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAsset
      tags:
      - Sites Assets
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/beacons:
    get:
      description: Get List of Site Beacons
      operationId: listSiteBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/BeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeacons
      tags:
      - Sites Beacons
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Beacon
      operationId: createSiteBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteBeacon
      tags:
      - Sites Beacons
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/beacons/{beacon_id}:
    delete:
      description: Delete Site Beacon
      operationId: deleteSiteBeacons
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteBeacons
      tags:
      - Sites Beacons
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Beacon Details
      operationId: getSiteBeacon
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeacon
      tags:
      - Sites Beacons
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/beacon_id'
    put:
      description: Update Site Beacon
      operationId: updateSiteBeacons
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteBeacons
      tags:
      - Sites Beacons
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/location/coverage:
    get:
      description: Get Beam Coverage Overview
      operationId: getSiteBeamCoverageOverview
      parameters:
      - description: map_id (filter by map_id)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      - in: query
        name: type
        schema:
          default: sdkclient
          enum:
          - sdkclient
          - client
          - asset
          type: string
      - description: where the start time will be calculated (with end time is now)
        in: query
        name: duration
        schema:
          default: 1h
          enum:
          - 1d
          - 5h
          - 1h
          - 30m
          type: string
      - $ref: '#/components/parameters/resolution'
      - description: client_type (as filter. optional)
        in: query
        name: client_type
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    beams_means:
                    - - 1
                      - 3
                      - 3.2
                    - - 6
                      - 10
                      - 6.5
                    end: 1428954000
                    gridsize: 1
                    result_def:
                    - x
                    - y
                    - beams_mean
                    - beacons_mean
                    - max_rssi
                    - avg_rssi
                    results:
                    - - 1
                      - 3
                      - 3.2
                      - 18.5
                      - -68
                      - -70
                    - - 6
                      - 10
                      - 6.5
                      - 30
                      - 1
                      - -72.5
                      - -75
                    start: 1428939600
              schema:
                properties:
                  beams_means:
                    description: list of [x, y, mean]s, x/y are in meters (UI would
                      need to use map.ppm to calulate the pixel location from top-left).
                    items:
                      items:
                        type: number
                      type: array
                    type: array
                  end:
                    type: integer
                  gridsize:
                    description: the size of grid, in meter
                    type: number
                  result_def:
                    description: list of names annotating the fields in results
                    items:
                      type: string
                    type: array
                  results:
                    description: list of results, see result_def.
                    items:
                      items:
                        type: number
                      type: array
                    type: array
                  start:
                    type: integer
                required:
                - start
                - end
                - beams_means
                - gridsize
                - result_def
                - results
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeamCoverageOverview
      tags:
      - Sites Location
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/current:
    get:
      description: 'Get Machine Learning Current Stat

        For each VBLE AP, it has ML model parameters (e.g. Path-loss-estimate, Intercept)
        as well as completion indicators (Level and PercentageComplete). For the completeness,
        ML takes N sample to finish its first level and use N*0.25 samples to complete
        each successive level. When a device is moved, the completeness will be reset
        as it has to re-learn.'
      operationId: getSiteMachineLearningCurrentStat
      parameters:
      - description: map_id (as filter, optional)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMachineLearningCurrentStat
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/defaults:
    get:
      description: Get Default PLF for Models
      operationId: getSiteDefaultPlfForModels
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDefaultPlfForModels
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/device/{device_id}:
    delete:
      description: Clear ML Overwrite for Device
      operationId: clearSiteMlOverwriteForDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForDevice
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: Overwrite ML For Device
      operationId: overwriteSiteMlForDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/model_ml'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForDevice
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/location/ml/map/{map_id}:
    delete:
      description: Clear ML Overwrite for Map
      operationId: clearSiteMlOverwriteForMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForMap
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    put:
      description: Overwrite ML For Map
      operationId: overwriteSiteMlForMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/model_ml'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForMap
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/location/ml/reset/map/{map_id}:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: Reset ML Stats by Map
      operationId: resetSiteMlStatsByMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: resetSiteMlStatsByMap
      tags:
      - Sites Location
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps:
    get:
      description: Get List of Site Maps
      operationId: listSiteMaps
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MapsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMaps
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Map
      operationId: createSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                  - coordinate: string
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  width: 0
                  width_m: 0
            schema:
              $ref: '#/components/schemas/map'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteMap
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Import data from files is a multipart POST which has an file,
        an optional json, and an optional csv, to create floorplan, assign matching
        inventory to specific site, place ap if name or mac matches.


        # Note

        This endpoint (at the site level), the AP must be already assigned to the
        site to be placed on the floorplan. If you want to place APs from the Org
        inventory, it is required to use the endpoint at the Org level [importOrgMaps](#operation/importOrgMaps)


        # CSV File Format

        ```csv

        Vendor AP name,Mist AP Mac

        US Office AP-2,5c:5b:35:00:00:02

        US Office AP-3,5c5b35000002

        ``` '
      operationId: importSiteMaps
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  auto_deviceprofile_assignment: true
                  csv: string
                  file: string
                  json:
                    import_all_floorplans: false
                    import_height: true
                    import_orientation: true
                    vendor_name: ekahau
            schema:
              $ref: '#/components/schemas/import_site_map'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteMaps
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}:
    delete:
      description: Delete Site Map
      operationId: deleteSiteMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMap
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Map Details
      operationId: getSiteMap
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMap
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    put:
      description: Update Site Map
      operationId: updateSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                  - coordinate: string
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  width: 0
                  width_m: 0
            schema:
              $ref: '#/components/schemas/map'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteMap
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/auto_orient:
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoOrientation
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteApAutoOrientation
      tags:
      - Sites Maps Auto-orientation
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/map_id'
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'This API is called to trigger a map for auto orientation. For
        auto orient feature to work, BLE data needs to be collected from the APs on
        the map. This precess is not disruptive unlike FTM collection. Repeated POST
        to this endpoint while a map is still running will be rejected.


        List of devices to provide suggestions for is an optional parameter that can
        be given to this API. This will provide auto orient suggestions only for the
        devices specified. If no list of devices is provided, all APs asociated with
        that map are considered by default'
      operationId: startSiteApAutoOrientation
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_collection:
                  default: false
                  description: "If `force_collection`==`false`, the API attempts to\
                    \ start auto orientation with existing BLE data. \nIf `force_collection`==`true`,\
                    \ the API attempts to start BLE orchestration."
                  type: boolean
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                enqueued:
                  value:
                    state: Not Started
                    time_queued: 1675414259
                not-started:
                  value:
                    state: Not Started
                    time_queued: -1
                oriented:
                  value:
                    state: Oriented
                    time_queued: 1675414259
              schema:
                properties:
                  state:
                    description: The state of auto orient for a given map derived
                      from an Enum
                    enum:
                    - Not Started
                    - Enqueued
                    - Oriented
                    type: string
                  time_queued:
                    description: Time when auto orient process was last queued for
                      this map
                    type: number
                type: object
          description: Map queued for auto orientation
        '400':
          content:
            application/json:
              examples:
                Example:
                  value:
                    detail: Map has less than 3 APs associated with it to perform
                      auto orient
                Example-2:
                  value:
                    detail: Auto AP orient is already in progress for this Map
                Example-3:
                  value:
                    detail: Auto orient data does not exist or has gone stale
              schema:
                properties:
                  detail:
                    type: string
                type: object
          description: Bad Request
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteApAutoOrientation
      tags:
      - Sites Maps Auto-orientation
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/auto_placement:
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoplacement
      responses:
        '200':
          description: Autoplacement Process has stopped for this map
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteApAutoplacement
      tags:
      - Sites Maps Auto-placement
      - cat:LOCATION:CONFIGURE
    get:
      description: 'This API is called to view the current status of auto placement
        for a given map.



        #### Status Descriptions


        | Status | Description |

        | --- | --- |

        | `pending` | Autoplacement has not been requested for this map |

        | `inprogress` | Autoplacement is currently processing |

        | `done` | The autoplacement process has completed |

        | `data_needed` | Additional position data is required for autoplacement.
        Users should verify the requested anchor APs have a position on the map |

        | `invalid_model` | Autoplacement is not supported on the model of the APs
        on the map |

        | `invalid_version` | Autoplacement is not supported with the APs current
        firmware version |

        | `error` | There was an error in the autoplacement process |'
      operationId: getSiteApAutoPlacement
      responses:
        '200':
          content:
            application/json:
              examples:
                done:
                  value:
                    end_time: 1678900362
                    start_time: 1678900062
                    status: done
                error:
                  value:
                    end_time: 1678900362
                    start_time: 1678900062
                    status: error
                in-Progress:
                  value:
                    est_time_left: 300
                    start_time: 1678900062
                    status: inprogress
                pending:
                  value:
                    status: pending
              schema:
                properties:
                  end_time:
                    description: time when autoplacement completed or was manually
                      stopped
                    type: number
                  est_time_left:
                    description: (Only when inprogress) estimate of the time to completion
                    type: number
                  start_time:
                    description: time when autoplacement process was last queued for
                      this map
                    type: number
                  status:
                    description: the status of autoplacement for a given map
                    enum:
                    - pending
                    - inprogress
                    - done
                    - error
                    type: string
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteApAutoplacement
      tags:
      - Sites Maps Auto-placement
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: 'This API is called to trigger a map for auto placement. For auto
        placement feature to work, RTT-FTM data need to be collected from the APs
        on the map. This scan is disruptive and therefore the user must be notified
        of service disrution during the functioning of auto placement Repeated POST
        to this endpoint while a map is still running will be rejected.


        List of devices to provide suggestions for is an optional parameter that can
        be given to this API. This will provide autoplacement suggestions only for
        the devices specified. If no list of devices is provided, all APs asociated
        with that map are considered by default'
      operationId: runSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force_collection:
                  default: false
                  description: "* If `force_collection`==`false`: the API Iattempts\
                    \ to start localization with existing data. \n* If `force_collection`==`true`:\
                    \ maintenance the API attempts to start orchestration."
                  type: boolean
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          description: Autoplacement Process has begun for this map
        '400':
          description: "* Map has less than 3 APs associated with it to perform auto\
            \ placement \n* Auto AP Placement is already in progress for this Map\n\
            * Autoplacement data does not exist or has gone stale"
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: runSiteApAutoplacement
      tags:
      - Sites Maps Auto-placement
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/clear_auto_orient:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to destroy the autoorientations of a map or subset
        of APs on a map.
      operationId: clearSiteApAutoOrient
      requestBody:
        content:
          application/json:
            schema:
              properties:
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteApAutoOrient
      tags:
      - Sites Maps Auto-orientation
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/clear_autoplacement:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to destroy the cached autoplacement locations
        of a map or subset of APs on a map.
      operationId: clearSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              properties:
                macs:
                  description: list of device macs
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteApAutoplacement
      tags:
      - Sites Maps Auto-placement
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/image:
    delete:
      description: Delete Site Map Image
      operationId: deleteSiteMapImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMapImage
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: Add image map is a multipart POST which has an file (Image) and
        an optional json parameter
      operationId: addSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/image_upload'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addSiteMapImage
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/replace:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: 'Replace Map Image



        This works like an PUT where the image will be replaced. If transform is provided,
        all the locations of the objects on the map (AP, Zone, Vbeacon, Beacon) will
        be transformed as well (relative to the new Map)'
      operationId: replaceSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            examples:
              Example:
                value:
                  file: string
                  json:
                    transform:
                      rotate: 0
                      scale: 0
                      x: 0
                      y: 0
            schema:
              properties:
                file:
                  format: binary
                  minLength: 1
                  type: string
                json:
                  properties:
                    transform:
                      description: If `transform` is provided, all the locations of
                        the objects on the map (AP, Zone, Vbeacon, Beacon) will be
                        transformed as well (relative to the new Map)
                      properties:
                        rotate:
                          type: number
                        scale:
                          type: number
                        x:
                          type: number
                        y:
                          type: number
                      type: object
                  type: object
              required:
              - file
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: replaceSiteMapImage
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/set_map:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: "This API can be used to assign a list of AP Macs associated with\
        \ site_id to the specified map_id. Note that map_id must be associated with\
        \ corresponding site_id. This API obeys the following rules \n1. if AP is\
        \ unassigned to any Map, it gets associated with map_id \n2. Any moved APs\
        \ are returned in the response \n3. If the AP is considered a locked AP, no\
        \ action will be taken"
      operationId: bulkAssignSiteApsToMap
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  macs:
                  - 5c5b35000001
                  - 5c5b35584a6f
            schema:
              properties:
                macs:
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    locked:
                    - 5c5b35584a6f
                    moved:
                    - 5c5b35000001
              schema:
                properties:
                  locked:
                    items:
                      example: 5c5b35584a6f
                      type: string
                    type: array
                  moved:
                    items:
                      example: 5c5b35000001
                      type: string
                    type: array
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: bulkAssignSiteApsToMap
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/use_auto_ap_values:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to accept or reject the cached autoplacement and
        auto orientation values of a map or subset of APs on a map. A rejected AP
        will retain its current X,Y and orientation until accpeted.
      operationId: confirmSiteApLocalizationData
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  accept: false
                  device_macs:
                  - string
                  for: placement
            schema:
              properties:
                accept:
                  default: false
                  description: If accept is true, accepts placement for devices in
                    list otherwise. If false, reject for devices in list.
                  type: boolean
                for:
                  default: placement
                  description: 'The selector to choose auto placement or auto orientation. '
                  enum:
                  - placement
                  - orientation
                  type: string
                macs:
                  description: A list of macs to accept/reject. If a list is not provided
                    the API will accept/reject for the full map.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          description: Success
        '400':
          description: 'Invalid localization service expected: placement or orientation'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: confirmSiteApLocalizationData
      tags:
      - Sites Maps Auto-placement
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/maps/{map_id}/wayfinding/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This imports the vendor map meta data into the Map JSON. This is
        required by the SDK and App in order to access/render the vendor Map properly.
      operationId: importSiteWayfindings
      requestBody:
        content:
          application/json:
            examples:
              Jimbstream:
                value:
                  client_id: 199d6770-0f6f-407a-9bd5-fc33c7840194
                  client_secret: /9Nog3yDzcYj0bY91XJZQLCt+m9DXaIVhx+Ghk3ddd
                  customer_id: 123
                  endpoint_url: https://api.jibestream.com
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mmpp: 223
                  ppm: 4
                  vendor_name: jibestream
                  venue_id: 123
              Micello:
                value:
                  account_key: adasdf
                  default_level_id: 5
                  map_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  vendor_name: micello
            schema:
              oneOf:
              - properties:
                  client_id:
                    description: the client id
                    format: uuid
                    type: string
                  client_secret:
                    description: the client secret
                    type: string
                  customer_id:
                    description: the jibestream customer record id
                    format: uuid
                    type: integer
                  endpoint_url:
                    description: the map contents endpoint host
                    type: string
                  map_id:
                    description: the jibestream map id
                    format: uuid
                    type: string
                  mmpp:
                    description: millimeter per pixel
                    type: integer
                  ppm:
                    description: pixel per meter, same as the map JSON value.
                    type: number
                  vendor_name:
                    default: jibestream
                    description: "the vendor \u2018jibestream\u2019"
                    enum:
                    - jibestream
                    type: string
                  venue_id:
                    description: the venue or organization id
                    format: uuid
                    type: integer
                required:
                - vendor_name
                - venue_id
                - map_id
                - ppm
                - client_id
                - client_secret
                - customer_id
                - endpoint_url
                - mmpp
              - properties:
                  account_key:
                    description: the account key that has access to the map
                    type: string
                  default_level_id:
                    description: micello floor/level id
                    type: integer
                  map_id:
                    description: micello map id
                    format: uuid
                    type: string
                  vendor_name:
                    default: micello
                    description: "the vendor \u2018micello\u2019"
                    enum:
                    - micello
                    type: string
                required:
                - vendor_name
                - account_key
                - map_id
                - default_level_id
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteWayfindings
      tags:
      - Sites Maps
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/rssizones:
    get:
      description: Get List of Site RSSI Zone (RSSI-based)
      operationId: listSiteRssiZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - created_time: 0
                    devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                items:
                  $ref: '#/components/schemas/rssizone'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRssiZones
      tags:
      - Sites Rssizones
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create RSSI Zone
      operationId: createSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssizone'
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 0
                    devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                $ref: '#/components/schemas/rssizone'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteRssiZone
      tags:
      - Sites Rssizones
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/rssizones/{rssizone_id}:
    delete:
      description: Delete Site RSSI Zone
      operationId: deleteSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteRssiZone
      tags:
      - Sites Rssizones
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site RSSI Zone details
      operationId: getSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/RssizonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRssiZone
      tags:
      - Sites Rssizones
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rssizone_id'
    put:
      description: Update Site RSSI Zone
      operationId: updateSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssizone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rssizone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteRssiZone
      tags:
      - Sites Rssizones
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/stats/assets:
    get:
      description: Get List of Site Assets Stats
      operationId: listSiteAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetsStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/asset_id:
    get:
      description: Get Site Asset Details
      operationId: getSiteAssetStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/count:
    get:
      description: Count Asset by distinct field
      operationId: countSiteAssets
      parameters:
      - in: query
        name: distinct
        schema:
          default: map_id
          enum:
          - mac
          - map_id
          - ibeacon_uuid
          - ibeacon_major
          - ibeacon_minor
          - eddystone_uid_namespace
          - eddystone_uid_instance
          - eddystone_url
          - by
          - name
          - device_name
          type: string
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteAssets
      tags:
      - Sites Assets
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/search:
    get:
      description: Assets Search
      operationId: searchSiteAssets
      parameters:
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: integer
      - in: query
        name: ibeacon_minor
        schema:
          type: integer
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: by
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: string
      - in: query
        name: rssi
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteAssets
      tags:
      - Sites Assets
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/beacons:
    get:
      description: Get List of Site Beacons Stats
      operationId: listSiteBeaconsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/stats_beacon'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeaconsStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_assets:
    get:
      description: "Get List of Site Discovered BLE Assets that doesn\u2019t match\
        \ any of the Asset / Assetfilters"
      operationId: listSiteDiscoveredAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/asset'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDiscoveredAssets
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/filtered_assets:
    get:
      description: Get a list of BLE beacons that matches Asset or AssetFilter
      operationId: getSiteAssetsOfInterest
      parameters:
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetOfInterestArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetsOfInterest
      tags:
      - Sites Assets
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/clients:
    get:
      description: Get Site Clients Stats By Map
      operationId: getSiteWirelessClientsStatsByMap
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - _ttl: 0
                    accuracy: 0
                    airespace_ifname: string
                    airwatch:
                      authorized: true
                    ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                    ap_mac: string
                    band: '24'
                    channel: 0
                    dual_band: true
                    family: string
                    guest:
                      authorized: false
                      authorized_expiring_time: 0
                      authorized_time: 0
                      company: string
                      email: string
                      field1: string
                      name: string
                    hostname: string
                    idle_time: 0
                    ip: 192.168.0.1
                    ip6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                    is_guest: false
                    key_mgmt: string
                    last_seen: 0
                    mac: string
                    manufacture: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    model: string
                    num_locating_aps: 0
                    os: string
                    power_saving: true
                    proto: a
                    psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                    rssi: 0
                    rx_bps: 0
                    rx_bytes: 0
                    rx_packets: 0
                    rx_rate: 0
                    rx_retries: 0
                    snr: 0
                    ssid: string
                    tx_bps: 0
                    tx_bytes: 0
                    tx_packets: 0
                    tx_rate: 0
                    tx_retries: 0
                    type: string
                    uptime: 0
                    username: string
                    vlan_id: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                    x: 0
                    y: 0
              schema:
                items:
                  $ref: '#/components/schemas/stats_client'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWirelessClientsStatsByMap
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/discovered_assets:
    get:
      description: "Get a list of BLE beacons that we discovered (whether they\u2019\
        re defined as assets or not)"
      operationId: getSiteDiscoveredAssetByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - device_name: '[TV] UN65JU670D'
                    duration: 120
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_url: https://www.abc.com
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    last_seen: 1428939600
                    mac: 6fa474be7ae5
                    manufacture: Apple
                    mfg_company_id: 935
                    mfg_data: 648520a1020000
                    x: 60
                    y: 80
              schema:
                items:
                  $ref: '#/components/schemas/stats_asset'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDiscoveredAssetByMap
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/sdkclients:
    get:
      description: Get SdkClient Stats By Map
      operationId: getSiteSdkStatsByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    x: 60
                    y: 80
              schema:
                items:
                  $ref: '#/components/schemas/stats_sdkclient'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStatsByMap
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/unconnected_clients:
    get:
      description: Get List of Site Unconnected Client Location
      operationId: listSiteUnconnectedClientStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - ap_mac: 5c5b350e0410
                    last_seen: 1428939600
                    mac: 5684dae9ac8b
                    manufacture: Apple
                    map_id: ea77be98-ab51-4ff8-a863-ac3c8e1b1c3a
                    rssi: -75
                    x: 60
                    y: 80
              schema:
                items:
                  $ref: '#/components/schemas/stats_unconnected_clients'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteUnconnectedClientStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/sdkclients/{sdkclient_id}:
    get:
      description: Get Detail Stats of a SdkClient
      operationId: getSiteSdkStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    vbeacons:
                    - id: d379d29d-24b4-96c5-5dd4-6f2a2dc5aaeb
                      since: 1428939300
                    x: 60
                    y: 80
                    zones:
                    - id: 8ac84899-32db-6327-334c-9b6d58544cfe
                      since: 1428939600
              schema:
                $ref: '#/components/schemas/stats_sdkclient_details'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/sdkclient_id'
  /api/v1/sites/{site_id}/stats/zones:
    get:
      description: Get List of Site Zones Stats
      operationId: listSiteZonesStats
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ZoneStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZonesStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/{zone_type}/{zone_id}:
    get:
      description: Get Detail Zone Stats
      operationId: getSiteZoneStats
      responses:
        '200':
          $ref: '#/components/responses/ZoneStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZoneStats
      tags:
      - Sites Stats
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
    - $ref: '#/components/parameters/zone_id'
  /api/v1/sites/{site_id}/vbeacons:
    get:
      description: Get List of Site Virtual Beacons
      operationId: listSiteVBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/VBeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteVBeacons
      tags:
      - Sites vBeacons
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Virtual Beacon
      operationId: createSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteVBeacon
      tags:
      - Sites vBeacons
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/vbeacons/{vbeacon_id}:
    delete:
      description: Delete Site Virtual Beacon
      operationId: deleteSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteVBeacon
      tags:
      - Sites vBeacons
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Virtual Beacon Details
      operationId: getSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteVBeacon
      tags:
      - Sites vBeacons
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/vbeacon_id'
    put:
      description: Update Site Virtual Beacon
      operationId: updateSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteVBeacon
      tags:
      - Sites vBeacons
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/zones:
    get:
      description: Get List of Site Zones
      operationId: listSiteZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ZonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZones
      tags:
      - Sites Zones
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Create Site Zone '
      operationId: createSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteZone
      tags:
      - Sites Zones
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/zones/{zone_id}:
    delete:
      description: Delete Site Zone
      operationId: deleteSiteZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteZone
      tags:
      - Sites Zones
      - cat:LOCATION:CONFIGURE
    get:
      description: Get Site Zone Details
      operationId: getSiteZone
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZone
      tags:
      - Sites Zones
      - cat:LOCATION:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_id'
    put:
      description: Update Site Zone
      operationId: updateSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteZone
      tags:
      - Sites Zones
      - cat:LOCATION:CONFIGURE
  /api/v1/sites/{site_id}/{zone_type}/count:
    get:
      description: Count Site Zone Sessions
      operationId: countSiteZoneSessions
      parameters:
      - example: scope_id
        in: query
        name: distinct
        schema:
          default: scope_id
          enum:
          - user_type
          - user
          - scope_id
          - scope
          type: string
      - description: user type
        in: query
        name: user_type
        schema:
          default: client
          enum:
          - client
          - sdkclient
          - asset
          type: string
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteZoneSessions
      tags:
      - Sites Zones
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
  /api/v1/sites/{site_id}/{zone_type}/visits/search:
    get:
      description: Search Zone Sessions
      operationId: searchSiteZoneSessions
      parameters:
      - description: user type, client (default) / sdkclient / asset
        in: query
        name: user_type
        schema:
          default: client
          enum:
          - client
          - sdkclient
          - asset
          type: string
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ZoneSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteZoneSessions
      tags:
      - Sites Zones
      - cat:LOCATION:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
components:
  parameters:
    admin_id:
      $ref: ./components/parameters/admin_id.yml
    alarm_id:
      $ref: ./components/parameters/alarm_id.yml
    alarmtemplate_id:
      $ref: ./components/parameters/alarmtemplate_id.yml
    apitoken_id:
      $ref: ./components/parameters/apitoken_id.yml
    aptemplate_id:
      $ref: ./components/parameters/aptemplate_id.yml
    asset_id:
      $ref: ./components/parameters/asset_id.yml
    assetfilter_id:
      $ref: ./components/parameters/assetfilter_id.yml
    beacon_id:
      $ref: ./components/parameters/beacon_id.yml
    client_mac:
      $ref: ./components/parameters/client_mac.yml
    country_code:
      $ref: ./components/parameters/country_code.yml
    device_id:
      $ref: ./components/parameters/device_id.yml
    device_mac:
      $ref: ./components/parameters/device_mac.yml
    duration:
      $ref: ./components/parameters/duration.yml
    end:
      $ref: ./components/parameters/end.yml
    evpn_topology_id:
      $ref: ./components/parameters/evpn_topology_id.yml
    gatewaytemplate_id:
      $ref: ./components/parameters/gatewaytemplate_id.yml
    guest_mac:
      $ref: ./components/parameters/guest_mac.yml
    idpprofile_id:
      $ref: ./components/parameters/idpprofile_id.yml
    image_name:
      $ref: ./components/parameters/image_name.yml
    interval:
      $ref: ./components/parameters/interval.yml
    invite_id:
      $ref: ./components/parameters/invite_id.yml
    ip:
      $ref: ./components/parameters/ip.yml
    limit:
      $ref: ./components/parameters/limit.yml
    map_id:
      $ref: ./components/parameters/map_id.yml
    metric:
      $ref: ./components/parameters/metric.yml
    msp_id:
      $ref: ./components/parameters/msp_id.yml
    mxcluster_id:
      $ref: ./components/parameters/mxcluster_id.yml
    mxedge_id:
      $ref: ./components/parameters/mxedge_id.yml
    mxtunnel_id:
      $ref: ./components/parameters/mxtunnel_id.yml
    nacrule_id:
      $ref: ./components/parameters/nacrule_id.yml
    nactag_id:
      $ref: ./components/parameters/nactag_id.yml
    name:
      $ref: ./components/parameters/name.yml
    network_id:
      $ref: ./components/parameters/network_id.yml
    org_id:
      $ref: ./components/parameters/org_id.yml
    orggroup_id:
      $ref: ./components/parameters/orggroup_id.yml
    page:
      $ref: ./components/parameters/page.yml
    psk_id:
      $ref: ./components/parameters/psk_id.yml
    psk_id_query:
      $ref: ./components/parameters/psk_id_query.yml
    pskportal_id:
      $ref: ./components/parameters/pskportal_id.yml
    q:
      $ref: ./components/parameters/q.yml
    resolution:
      $ref: ./components/parameters/resolution.yml
    rfdiag_id:
      $ref: ./components/parameters/rfdiag_id.yml
    rftemplate_id:
      $ref: ./components/parameters/rftemplate_id.yml
    rogue_bssid:
      $ref: ./components/parameters/rogue_bssid.yml
    rogue_type:
      $ref: ./components/parameters/rogue_type.yml
    rssizone_id:
      $ref: ./components/parameters/rssizone_id.yml
    sdkclient_id:
      $ref: ./components/parameters/sdkclient_id.yml
    sdkinvite_id:
      $ref: ./components/parameters/sdkinvite_id.yml
    sdktemplate_id:
      $ref: ./components/parameters/sdktemplate_id.yml
    secpolicy_id:
      $ref: ./components/parameters/secpolicy_id.yml
    secret:
      $ref: ./components/parameters/secret.yml
    service_id:
      $ref: ./components/parameters/service_id.yml
    servicepolicy_id:
      $ref: ./components/parameters/servicepolicy_id.yml
    site_id:
      $ref: ./components/parameters/site_id.yml
    site_name:
      $ref: ./components/parameters/site_name.yml
    sitegroup_id:
      $ref: ./components/parameters/sitegroup_id.yml
    sitetemplate_id:
      $ref: ./components/parameters/sitetemplate_id.yml
    sso_id:
      $ref: ./components/parameters/sso_id.yml
    ssorole_id:
      $ref: ./components/parameters/ssorole_id.yml
    start:
      $ref: ./components/parameters/start.yml
    template_id:
      $ref: ./components/parameters/template_id.yml
    ticket_id:
      $ref: ./components/parameters/ticket_id.yml
    token:
      $ref: ./components/parameters/token.yml
    uisetting_id:
      $ref: ./components/parameters/uisetting_id.yml
    upgrade_id:
      $ref: ./components/parameters/upgrade_id.yml
    vbeacon_id:
      $ref: ./components/parameters/vbeacon_id.yml
    vpn_id:
      $ref: ./components/parameters/vpn_id.yml
    webhook_id:
      $ref: ./components/parameters/webhook_id.yml
    wlan_id:
      $ref: ./components/parameters/wlan_id.yml
    wxrules_id:
      $ref: ./components/parameters/wxrules_id.yml
    wxtag_id:
      $ref: ./components/parameters/wxtag_id.yml
    wxtunnel_id:
      $ref: ./components/parameters/wxtunnel_id.yml
    zone_id:
      $ref: ./components/parameters/zone_id.yml
    zone_type:
      $ref: ./components/parameters/zone_type.yml
  responses:
    Admin:
      $ref: ./components/responses/Admin.yml
    AdminsArray:
      $ref: ./components/responses/AdminsArray.yml
    AlarmsSearch:
      $ref: ./components/responses/AlarmsSearch.yml
    Alarmtemplate:
      $ref: ./components/responses/Alarmtemplate.yml
    AlarmtemplatesArray:
      $ref: ./components/responses/AlarmtemplatesArray.yml
    AnomalyMetrics:
      $ref: ./components/responses/AnomalyMetrics.yml
    ApitokenOrg:
      $ref: ./components/responses/ApitokenOrg.yml
    ApitokenUser:
      $ref: ./components/responses/ApitokenUser.yml
    ApitokensOrgArray:
      $ref: ./components/responses/ApitokensOrgArray.yml
    ApitokensUserArray:
      $ref: ./components/responses/ApitokensUserArray.yml
    Aptemplate:
      $ref: ./components/responses/Aptemplate.yml
    AptemplatesArray:
      $ref: ./components/responses/AptemplatesArray.yml
    Asset:
      $ref: ./components/responses/Asset.yml
    AssetOfInterestArray:
      $ref: ./components/responses/AssetOfInterestArray.yml
    AssetStats:
      $ref: ./components/responses/AssetStats.yml
    Assetfilter:
      $ref: ./components/responses/Assetfilter.yml
    AssetfiltersArray:
      $ref: ./components/responses/AssetfiltersArray.yml
    AssetsArray:
      $ref: ./components/responses/AssetsArray.yml
    AssetsArrayStats:
      $ref: ./components/responses/AssetsArrayStats.yml
    AssetsArrayStatsSearch:
      $ref: ./components/responses/AssetsArrayStatsSearch.yml
    Beacon:
      $ref: ./components/responses/Beacon.yml
    BeaconsArray:
      $ref: ./components/responses/BeaconsArray.yml
    BgpStatsArraySearch:
      $ref: ./components/responses/BgpStatsArraySearch.yml
    CallEventsArraySearch:
      $ref: ./components/responses/CallEventsArraySearch.yml
    CallStatsArray:
      $ref: ./components/responses/CallStatsArray.yml
    CallTroubleshoot:
      $ref: ./components/responses/CallTroubleshoot.yml
    Certificate:
      $ref: ./components/responses/Certificate.yml
    ClientEventsSearch:
      $ref: ./components/responses/ClientEventsSearch.yml
    ClientNacSearch:
      $ref: ./components/responses/ClientNacSearch.yml
    ClientSessionsSearch:
      $ref: ./components/responses/ClientSessionsSearch.yml
    ClientsSearch:
      $ref: ./components/responses/ClientsSearch.yml
    ConstAlarmDefs:
      $ref: ./components/responses/ConstAlarmDefs.yml
    ConstApChannels:
      $ref: ./components/responses/ConstApChannels.yml
    ConstApLedArray:
      $ref: ./components/responses/ConstApLedArray.yml
    ConstApplications:
      $ref: ./components/responses/ConstApplications.yml
    ConstClientEventsArray:
      $ref: ./components/responses/ConstClientEventsArray.yml
    ConstCrountriesArray:
      $ref: ./components/responses/ConstCrountriesArray.yml
    ConstDeviceEventsArray:
      $ref: ./components/responses/ConstDeviceEventsArray.yml
    ConstDeviceModels:
      $ref: ./components/responses/ConstDeviceModels.yml
    ConstInsightMetrics:
      $ref: ./components/responses/ConstInsightMetrics.yml
    ConstLanaguagesArray:
      $ref: ./components/responses/ConstLanaguagesArray.yml
    ConstLicenceTypesArray:
      $ref: ./components/responses/ConstLicenceTypesArray.yml
    ConstNacEventsArray:
      $ref: ./components/responses/ConstNacEventsArray.yml
    ConstTrafficTypesArray:
      $ref: ./components/responses/ConstTrafficTypesArray.yml
    DeviceConfigCmd:
      $ref: ./components/responses/DeviceConfigCmd.yml
    DeviceEventsSearch:
      $ref: ./components/responses/DeviceEventsSearch.yml
    DeviceIot:
      $ref: ./components/responses/DeviceIot.yml
    DeviceOther:
      $ref: ./components/responses/DeviceOther.yml
    DeviceOtherArray:
      $ref: ./components/responses/DeviceOtherArray.yml
    DeviceOtherStats:
      $ref: ./components/responses/DeviceOtherStats.yml
    DeviceRadioChannels:
      $ref: ./components/responses/DeviceRadioChannels.yml
    EventsFastroam:
      $ref: ./components/responses/EventsFastroam.yml
    EventsNacClientSearch:
      $ref: ./components/responses/EventsNacClientSearch.yml
    EventsOtherDevicesSearch:
      $ref: ./components/responses/EventsOtherDevicesSearch.yml
    EventsSearch:
      $ref: ./components/responses/EventsSearch.yml
    EvpnTopology:
      $ref: ./components/responses/EvpnTopology.yml
    File:
      $ref: ./components/responses/File.yml
    Gatewaytemplate:
      $ref: ./components/responses/Gatewaytemplate.yml
    GatewaytemplatesArray:
      $ref: ./components/responses/GatewaytemplatesArray.yml
    Guest:
      $ref: ./components/responses/Guest.yml
    GuestsArray:
      $ref: ./components/responses/GuestsArray.yml
    GuestsSearch:
      $ref: ./components/responses/GuestsSearch.yml
    HTTP400:
      $ref: ./components/responses/HTTP400.yml
    HTTP401:
      $ref: ./components/responses/HTTP401.yml
    HTTP403:
      $ref: ./components/responses/HTTP403.yml
    HTTP404:
      $ref: ./components/responses/HTTP404.yml
    HTTP429:
      $ref: ./components/responses/HTTP429.yml
    IdpProfile:
      $ref: ./components/responses/IdpProfile.yml
    IdpProfileArray:
      $ref: ./components/responses/IdpProfileArray.yml
    InsightMetric:
      $ref: ./components/responses/InsightMetric.yml
    InsightRogue:
      $ref: ./components/responses/InsightRogue.yml
    InsightRogueClients:
      $ref: ./components/responses/InsightRogueClients.yml
    InstallerAlarmtemplatesArray:
      $ref: ./components/responses/InstallerAlarmtemplatesArray.yml
    InstallerDevicesArray:
      $ref: ./components/responses/InstallerDevicesArray.yml
    InstallerSecpoliciesArray:
      $ref: ./components/responses/InstallerSecpoliciesArray.yml
    InstallerSitegroupsArray:
      $ref: ./components/responses/InstallerSitegroupsArray.yml
    InstallerSitesArray:
      $ref: ./components/responses/InstallerSitesArray.yml
    JseInfo:
      $ref: ./components/responses/JseInfo.yml
    Licence:
      $ref: ./components/responses/Licence.yml
    LicenceUsage:
      $ref: ./components/responses/LicenceUsage.yml
    LogsSearch:
      $ref: ./components/responses/LogsSearch.yml
    MacsArray:
      $ref: ./components/responses/MacsArray.yml
    Map:
      $ref: ./components/responses/Map.yml
    MapImport:
      $ref: ./components/responses/MapImport.yml
    MapsArray:
      $ref: ./components/responses/MapsArray.yml
    Ml:
      $ref: ./components/responses/Ml.yml
    Msp:
      $ref: ./components/responses/Msp.yml
    MxEdgeEventsSearch:
      $ref: ./components/responses/MxEdgeEventsSearch.yml
    MxEdgeSearch:
      $ref: ./components/responses/MxEdgeSearch.yml
    MxEdgeUpgrade:
      $ref: ./components/responses/MxEdgeUpgrade.yml
    MxEdgeUpgradesArray:
      $ref: ./components/responses/MxEdgeUpgradesArray.yml
    Mxcluster:
      $ref: ./components/responses/Mxcluster.yml
    MxclustersArray:
      $ref: ./components/responses/MxclustersArray.yml
    Mxedge:
      $ref: ./components/responses/Mxedge.yml
    MxedgeStats:
      $ref: ./components/responses/MxedgeStats.yml
    MxedgeStatsArray:
      $ref: ./components/responses/MxedgeStatsArray.yml
    MxedgeUpdateInfo:
      $ref: ./components/responses/MxedgeUpdateInfo.yml
    MxedgesArray:
      $ref: ./components/responses/MxedgesArray.yml
    MxedgesArrayStats:
      $ref: ./components/responses/MxedgesArrayStats.yml
    Mxtunnel:
      $ref: ./components/responses/Mxtunnel.yml
    MxtunnelsArray:
      $ref: ./components/responses/MxtunnelsArray.yml
    NacRule:
      $ref: ./components/responses/NacRule.yml
    NacRulesArray:
      $ref: ./components/responses/NacRulesArray.yml
    NacTag:
      $ref: ./components/responses/NacTag.yml
    NacTagsArray:
      $ref: ./components/responses/NacTagsArray.yml
    Network:
      $ref: ./components/responses/Network.yml
    NetworksArray:
      $ref: ./components/responses/NetworksArray.yml
    OK:
      $ref: ./components/responses/OK.yml
    OauthAppLink:
      $ref: ./components/responses/OauthAppLink.yml
    Org:
      $ref: ./components/responses/Org.yml
    OrgInventory:
      $ref: ./components/responses/OrgInventory.yml
    OrgInventoryAdd:
      $ref: ./components/responses/OrgInventoryAdd.yml
    OrgInventoryChanges:
      $ref: ./components/responses/OrgInventoryChanges.yml
    OrgSetting:
      $ref: ./components/responses/OrgSetting.yml
    OrgSiteSle:
      $ref: ./components/responses/OrgSiteSle.yml
    OrgStats:
      $ref: ./components/responses/OrgStats.yml
    Orggroup:
      $ref: ./components/responses/Orggroup.yml
    OrggroupsArray:
      $ref: ./components/responses/OrggroupsArray.yml
    OrggroupsSearch:
      $ref: ./components/responses/OrggroupsSearch.yml
    OrgsArray:
      $ref: ./components/responses/OrgsArray.yml
    OrgsArrayStats:
      $ref: ./components/responses/OrgsArrayStats.yml
    OrgsSearch:
      $ref: ./components/responses/OrgsSearch.yml
    PortStatsSearch:
      $ref: ./components/responses/PortStatsSearch.yml
    Psk:
      $ref: ./components/responses/Psk.yml
    PskPortal:
      $ref: ./components/responses/PskPortal.yml
    PskPortalsArray:
      $ref: ./components/responses/PskPortalsArray.yml
    PsksArray:
      $ref: ./components/responses/PsksArray.yml
    Recaptcha:
      $ref: ./components/responses/Recaptcha.yml
    Rfdiag:
      $ref: ./components/responses/Rfdiag.yml
    RfdiagsArray:
      $ref: ./components/responses/RfdiagsArray.yml
    Rftemplate:
      $ref: ./components/responses/Rftemplate.yml
    RftemplatesArray:
      $ref: ./components/responses/RftemplatesArray.yml
    RogueEventsSearch:
      $ref: ./components/responses/RogueEventsSearch.yml
    Rrm:
      $ref: ./components/responses/Rrm.yml
    RrmConsideration:
      $ref: ./components/responses/RrmConsideration.yml
    RrmEvents:
      $ref: ./components/responses/RrmEvents.yml
    Rssizone:
      $ref: ./components/responses/Rssizone.yml
    RssizonesArray:
      $ref: ./components/responses/RssizonesArray.yml
    Sdkinvite:
      $ref: ./components/responses/Sdkinvite.yml
    SdkinvitesArray:
      $ref: ./components/responses/SdkinvitesArray.yml
    Sdktemplate:
      $ref: ./components/responses/Sdktemplate.yml
    SdktemplatesArray:
      $ref: ./components/responses/SdktemplatesArray.yml
    SecpoliciesArray:
      $ref: ./components/responses/SecpoliciesArray.yml
    Secpolicy:
      $ref: ./components/responses/Secpolicy.yml
    Service:
      $ref: ./components/responses/Service.yml
    ServicePathEventsSearch:
      $ref: ./components/responses/ServicePathEventsSearch.yml
    ServicePoliciesArray:
      $ref: ./components/responses/ServicePoliciesArray.yml
    ServicePolicy:
      $ref: ./components/responses/ServicePolicy.yml
    ServicesArray:
      $ref: ./components/responses/ServicesArray.yml
    Session:
      $ref: ./components/responses/Session.yml
    Site:
      $ref: ./components/responses/Site.yml
    SiteSettings:
      $ref: ./components/responses/SiteSettings.yml
    SiteTemplate:
      $ref: ./components/responses/SiteTemplate.yml
    SiteTemplatesArray:
      $ref: ./components/responses/SiteTemplatesArray.yml
    Sitegroup:
      $ref: ./components/responses/Sitegroup.yml
    SitegroupsArray:
      $ref: ./components/responses/SitegroupsArray.yml
    SitesArray:
      $ref: ./components/responses/SitesArray.yml
    SitesSearch:
      $ref: ./components/responses/SitesSearch.yml
    SleClassifierSummary:
      $ref: ./components/responses/SleClassifierSummary.yml
    SleHistogram:
      $ref: ./components/responses/SleHistogram.yml
    SleImpactSummary:
      $ref: ./components/responses/SleImpactSummary.yml
    SleImpactedApplications:
      $ref: ./components/responses/SleImpactedApplications.yml
    SleImpactedAps:
      $ref: ./components/responses/SleImpactedAps.yml
    SleImpactedChassis:
      $ref: ./components/responses/SleImpactedChassis.yml
    SleImpactedClients:
      $ref: ./components/responses/SleImpactedClients.yml
    SleImpactedGateways:
      $ref: ./components/responses/SleImpactedGateways.yml
    SleImpactedInterfaces:
      $ref: ./components/responses/SleImpactedInterfaces.yml
    SleImpactedSwitches:
      $ref: ./components/responses/SleImpactedSwitches.yml
    SleImpactedUsers:
      $ref: ./components/responses/SleImpactedUsers.yml
    SleSummary:
      $ref: ./components/responses/SleSummary.yml
    SleThreshold:
      $ref: ./components/responses/SleThreshold.yml
    Sso:
      $ref: ./components/responses/Sso.yml
    SsoLatestFailures:
      $ref: ./components/responses/SsoLatestFailures.yml
    SsoSamlMetadata:
      $ref: ./components/responses/SsoSamlMetadata.yml
    Ssorole:
      $ref: ./components/responses/Ssorole.yml
    SsorolesArray:
      $ref: ./components/responses/SsorolesArray.yml
    SsosArray:
      $ref: ./components/responses/SsosArray.yml
    SsrUpgrade:
      $ref: ./components/responses/SsrUpgrade.yml
    SsrUpgradesArray:
      $ref: ./components/responses/SsrUpgradesArray.yml
    SwitchPortsSearch:
      $ref: ./components/responses/SwitchPortsSearch.yml
    SyntheticTest:
      $ref: ./components/responses/SyntheticTest.yml
    SynthetictestStatus:
      $ref: ./components/responses/SynthetictestStatus.yml
    Template:
      $ref: ./components/responses/Template.yml
    TemplatesArray:
      $ref: ./components/responses/TemplatesArray.yml
    Ticket:
      $ref: ./components/responses/Ticket.yml
    TicketsArray:
      $ref: ./components/responses/TicketsArray.yml
    Troubleshoot:
      $ref: ./components/responses/Troubleshoot.yml
    TunnelsSearch:
      $ref: ./components/responses/TunnelsSearch.yml
    TwoFactorSecret:
      $ref: ./components/responses/TwoFactorSecret.yml
    UiSettings:
      $ref: ./components/responses/UiSettings.yml
    UiSettingsArray:
      $ref: ./components/responses/UiSettingsArray.yml
    VBeacon:
      $ref: ./components/responses/VBeacon.yml
    VBeaconsArray:
      $ref: ./components/responses/VBeaconsArray.yml
    Vc:
      $ref: ./components/responses/Vc.yml
    Vpn:
      $ref: ./components/responses/Vpn.yml
    VpnsArray:
      $ref: ./components/responses/VpnsArray.yml
    WanClientEventsSearch:
      $ref: ./components/responses/WanClientEventsSearch.yml
    WanClientsSearch:
      $ref: ./components/responses/WanClientsSearch.yml
    Webhook:
      $ref: ./components/responses/Webhook.yml
    WebhookDeliverySearch:
      $ref: ./components/responses/WebhookDeliverySearch.yml
    WebhooksArray:
      $ref: ./components/responses/WebhooksArray.yml
    WiredClientsSearch:
      $ref: ./components/responses/WiredClientsSearch.yml
    WirelessClientSessionsSearch:
      $ref: ./components/responses/WirelessClientSessionsSearch.yml
    Wlan:
      $ref: ./components/responses/Wlan.yml
    WlansArray:
      $ref: ./components/responses/WlansArray.yml
    WxTagsMatchingArray:
      $ref: ./components/responses/WxTagsMatchingArray.yml
    Wxrule:
      $ref: ./components/responses/Wxrule.yml
    WxruleArray:
      $ref: ./components/responses/WxruleArray.yml
    WxruleStatsArray:
      $ref: ./components/responses/WxruleStatsArray.yml
    Wxtag:
      $ref: ./components/responses/Wxtag.yml
    WxtagArray:
      $ref: ./components/responses/WxtagArray.yml
    WxtagClients:
      $ref: ./components/responses/WxtagClients.yml
    Wxtunnel:
      $ref: ./components/responses/Wxtunnel.yml
    WxtunnelArray:
      $ref: ./components/responses/WxtunnelArray.yml
    Zone:
      $ref: ./components/responses/Zone.yml
    ZoneSessionsSearch:
      $ref: ./components/responses/ZoneSessionsSearch.yml
    ZoneStats:
      $ref: ./components/responses/ZoneStats.yml
    ZoneStatsArray:
      $ref: ./components/responses/ZoneStatsArray.yml
    ZonesArray:
      $ref: ./components/responses/ZonesArray.yml
    ZscalerAccount:
      $ref: ./components/responses/ZscalerAccount.yml
    assignSuccess:
      $ref: ./components/responses/assignSuccess.yml
    claimLicense:
      $ref: ./components/responses/claimLicense.yml
    count:
      $ref: ./components/responses/count.yml
    countMarvisActions:
      $ref: ./components/responses/countMarvisActions.yml
    getLicenceUsage:
      $ref: ./components/responses/getLicenceUsage.yml
  schemas:
    account_jamf_write:
      $ref: ./components/schemas/account_jamf_write.yml
    account_juniper_read:
      $ref: ./components/schemas/account_juniper_read.yml
    account_juniper_write:
      $ref: ./components/schemas/account_juniper_write.yml
    account_oauth_write:
      $ref: ./components/schemas/account_oauth_write.yml
    account_vmware_write:
      $ref: ./components/schemas/account_vmware_write.yml
    account_zscaler_write:
      $ref: ./components/schemas/account_zscaler_write.yml
    admin:
      $ref: ./components/schemas/admin.yml
    alarmtemplate:
      $ref: ./components/schemas/alarmtemplate.yml
    aptemplate:
      $ref: ./components/schemas/aptemplate.yml
    asset:
      $ref: ./components/schemas/asset.yml
    asset_filter:
      $ref: ./components/schemas/asset_filter.yml
    beacon:
      $ref: ./components/schemas/beacon.yml
    claimcodes:
      $ref: ./components/schemas/claimcodes.yml
    create_ha_cluster:
      $ref: ./components/schemas/create_ha_cluster.yml
    delete_ha_cluster:
      $ref: ./components/schemas/delete_ha_cluster.yml
    device_switch_vc:
      $ref: ./components/schemas/device_switch_vc.yml
    device_switch_vc_update:
      $ref: ./components/schemas/device_switch_vc_update.yml
    events_skyatp:
      $ref: ./components/schemas/events_skyatp.yml
    gatewaytemplate:
      $ref: ./components/schemas/gatewaytemplate.yml
    guest:
      $ref: ./components/schemas/guest.yml
    idpprofile:
      $ref: ./components/schemas/idpprofile.yml
    image_upload:
      $ref: ./components/schemas/image_upload.yml
    import_org_map:
      $ref: ./components/schemas/import_org_map.yml
    import_site_map:
      $ref: ./components/schemas/import_site_map.yml
    installer_provision_device:
      $ref: ./components/schemas/installer_provision_device.yml
    installer_site:
      $ref: ./components/schemas/installer_site.yml
    junos_evpn_topology:
      $ref: ./components/schemas/junos_evpn_topology.yml
    junos_port_config:
      $ref: ./components/schemas/junos_port_config.yml
    login:
      $ref: ./components/schemas/login.yml
    map:
      $ref: ./components/schemas/map.yml
    model_ml:
      $ref: ./components/schemas/model_ml.yml
    model_object_device_id:
      $ref: ./components/schemas/model_object_device_id.yml
    model_object_email:
      $ref: ./components/schemas/model_object_email.yml
    model_object_macs_array_string:
      $ref: ./components/schemas/model_object_macs_array_string.yml
    msp:
      $ref: ./components/schemas/msp.yml
    mxcluster:
      $ref: ./components/schemas/mxcluster.yml
    mxedge:
      $ref: ./components/schemas/mxedge.yml
    mxtunnel:
      $ref: ./components/schemas/mxtunnel.yml
    nac_rule:
      $ref: ./components/schemas/nac_rule.yml
    nac_tag:
      $ref: ./components/schemas/nac_tag.yml
    network:
      $ref: ./components/schemas/network.yml
    new_admin:
      $ref: ./components/schemas/new_admin.yml
    note:
      $ref: ./components/schemas/note.yml
    org:
      $ref: ./components/schemas/org.yml
    org_apitoken:
      $ref: ./components/schemas/org_apitoken.yml
    org_setting:
      $ref: ./components/schemas/org_setting.yml
    orggroup:
      $ref: ./components/schemas/orggroup.yml
    psk:
      $ref: ./components/schemas/psk.yml
    psk_portal:
      $ref: ./components/schemas/psk_portal.yml
    recover:
      $ref: ./components/schemas/recover.yml
    req_clear_bgp:
      $ref: ./components/schemas/req_clear_bgp.yml
    req_replace_device:
      $ref: ./components/schemas/req_replace_device.yml
    rfdiag:
      $ref: ./components/schemas/rfdiag.yml
    rftemplate:
      $ref: ./components/schemas/rftemplate.yml
    rssizone:
      $ref: ./components/schemas/rssizone.yml
    sdkinvite:
      $ref: ./components/schemas/sdkinvite.yml
    sdktemplate:
      $ref: ./components/schemas/sdktemplate.yml
    secpolicy:
      $ref: ./components/schemas/secpolicy.yml
    service:
      $ref: ./components/schemas/service.yml
    service_policy:
      $ref: ./components/schemas/service_policy.yml
    site:
      $ref: ./components/schemas/site.yml
    site_setting:
      $ref: ./components/schemas/site_setting.yml
    sitegroup:
      $ref: ./components/schemas/sitegroup.yml
    sitetemplate:
      $ref: ./components/schemas/sitetemplate.yml
    sle_threshold:
      $ref: ./components/schemas/sle_threshold.yml
    sso:
      $ref: ./components/schemas/sso.yml
    ssorole:
      $ref: ./components/schemas/ssorole.yml
    stats_asset:
      $ref: ./components/schemas/stats_asset.yml
    stats_beacon:
      $ref: ./components/schemas/stats_beacon.yml
    stats_client:
      $ref: ./components/schemas/stats_client.yml
    stats_client_detail:
      $ref: ./components/schemas/stats_client_detail.yml
    stats_client_wired:
      $ref: ./components/schemas/stats_client_wired.yml
    stats_sdkclient:
      $ref: ./components/schemas/stats_sdkclient.yml
    stats_sdkclient_details:
      $ref: ./components/schemas/stats_sdkclient_details.yml
    stats_site:
      $ref: ./components/schemas/stats_site.yml
    stats_unconnected_clients:
      $ref: ./components/schemas/stats_unconnected_clients.yml
    synthetic_test:
      $ref: ./components/schemas/synthetic_test.yml
    synthetic_test_device:
      $ref: ./components/schemas/synthetic_test_device.yml
    template:
      $ref: ./components/schemas/template.yml
    test_telstra:
      $ref: ./components/schemas/test_telstra.yml
    test_twilio:
      $ref: ./components/schemas/test_twilio.yml
    ticket:
      $ref: ./components/schemas/ticket.yml
    two_factor:
      $ref: ./components/schemas/two_factor.yml
    ui_settings:
      $ref: ./components/schemas/ui_settings.yml
    user_apitoken:
      $ref: ./components/schemas/user_apitoken.yml
    vbeacon:
      $ref: ./components/schemas/vbeacon.yml
    vpn:
      $ref: ./components/schemas/vpn.yml
    webhook:
      $ref: ./components/schemas/webhook.yml
    wlan:
      $ref: ./components/schemas/wlan.yml
    wxlan_rule:
      $ref: ./components/schemas/wxlan_rule.yml
    wxlan_tag:
      $ref: ./components/schemas/wxlan_tag.yml
    wxlan_tunnel:
      $ref: ./components/schemas/wxlan_tunnel.yml
    zone:
      $ref: ./components/schemas/zone.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
