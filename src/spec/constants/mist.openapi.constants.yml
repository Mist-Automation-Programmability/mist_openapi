openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2401.1.6**

    >

    > Date: **February 15, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2401.1.5
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: https://www.mist.com/wp-content/uploads/logo.png
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist Europe 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist Europe 01
  url: https://api.eu.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Constants Definitions
- name: Constants Events
- name: Constants Misc
- name: Constants Models
paths:
  /api/v1/const/alarm_defs:
    get:
      description: Get List of brief definitions of all the supported alarm types.  The
        example field contains an example payload as you would recieve in the alarm
        webhook output.
      operationId: listAlarmDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstAlarmDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listAlarmDefinitions
      tags:
      - op:CONSTANTS:Definitions
      - Constants Definitions
  /api/v1/const/ap_channels:
    get:
      description: Get List of List of Available channels per country code
      operationId: listApChannels
      parameters:
      - $ref: '#/components/parameters/country_code'
      responses:
        '200':
          $ref: '#/components/responses/ConstApChannels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApChannels
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/ap_led_status:
    get:
      description: Get List of AP LED definition
      operationId: listApLedDefinition
      responses:
        '200':
          $ref: '#/components/responses/ConstApLedDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApLedDefinition
      tags:
      - op:CONSTANTS:Definitions
      - Constants Definitions
  /api/v1/const/applications:
    get:
      description: Get List of a list of applications that Juniper-Mist APs recognize
      operationId: listApplications
      responses:
        '200':
          $ref: '#/components/responses/ConstApplications'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApplications
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/client_events:
    get:
      description: Get List of List of available Client Events
      operationId: listClientEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstClientEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listClientEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/countries:
    get:
      description: Get List of List of available Country Codes
      operationId: listCountryCodes
      responses:
        '200':
          $ref: '#/components/responses/ConstCrountries'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listCountryCodes
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/default_gateway_config:
    get:
      description: Generate Default Gateway Config
      operationId: getGatawayDefaultConfig
      parameters:
      - description: model the default gateway config is intended (as the default
          LAN/WAN port can differ)
        in: query
        name: model
        required: true
        schema:
          type: string
      - description: whether the config is intended for HA
        in: query
        name: ha
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ConstDefaultGatewayConfig'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getGatawayDefaultConfig
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/device_events:
    get:
      description: Get list of available Device Events
      operationId: listDeviceEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstDeviceEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listDeviceEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/device_models:
    get:
      description: Get list of AP device models for the Mist Site
      operationId: listDeviceModels
      responses:
        '200':
          $ref: '#/components/responses/ConstDeviceModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listDeviceModels
      tags:
      - op:CONSTANTS:Models
      - Constants Models
  /api/v1/const/gateway_applications:
    get:
      description: Get the full list of applications that we recognize
      operationId: listGatewayApplications
      responses:
        '200':
          $ref: '#/components/responses/ConstGatewayApplications'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listGatewayApplications
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/insight_metrics:
    get:
      description: List Insight Metrics
      operationId: listInsightMetrics
      responses:
        '200':
          $ref: '#/components/responses/ConstInsightMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listInsightMetrics
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/languages:
    get:
      description: Get List of Languages
      operationId: listSiteLanguages
      responses:
        '200':
          $ref: '#/components/responses/ConstLanaguages'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteLanguages
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/license_types:
    get:
      description: Get License Types
      operationId: getLicenseTypes
      responses:
        '200':
          $ref: '#/components/responses/ConstLicenceTypes'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getLicenseTypes
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
  /api/v1/const/mxedge_events:
    get:
      description: Get List of available MX Edge Events
      operationId: listMxEdgeEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstMxEdgeEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMxEdgeEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/mxedge_models:
    get:
      description: Get List of available Mx Edge models
      operationId: listMxEdgeModels
      responses:
        '200':
          $ref: '#/components/responses/ConstMxEdgeModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMxEdgeModels
      tags:
      - op:CONSTANTS:Models
      - Constants Models
  /api/v1/const/nac_events:
    get:
      description: Get List of List of available NAC Client Events
      operationId: listNacEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstNacEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listNacEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/otherdevice_events:
    get:
      description: Supported Events Type
      operationId: listOtherDeviceEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstOtherDeviceEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOtherDeviceEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/otherdevice_models:
    get:
      description: Supported OtherDevice Models
      operationId: listSupportedOtherDeviceModels
      responses:
        '200':
          $ref: '#/components/responses/ConstOtherDeviceModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSupportedOtherDeviceModels
      tags:
      - op:CONSTANTS:Models
      - Constants Models
  /api/v1/const/system_events:
    get:
      description: Get List of List of available System Events
      operationId: listSystemEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstSystemEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSystemEventsDefinitions
      tags:
      - op:CONSTANTS:Events
      - Constants Events
  /api/v1/const/traffic_types:
    get:
      description: Get List of identified traffic
      operationId: listTrafficTypes
      responses:
        '200':
          $ref: '#/components/responses/ConstTrafficTypes'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listTrafficTypes
      tags:
      - op:CONSTANTS:Misc
      - Constants Misc
components:
  parameters:
    country_code:
      $ref: ../components/parameters/country_code.yml
  responses:
    ConstAlarmDefinitions:
      $ref: ../components/responses/ConstAlarmDefinitions.yml
    ConstApChannels:
      $ref: ../components/responses/ConstApChannels.yml
    ConstApLedDefinitions:
      $ref: ../components/responses/ConstApLedDefinitions.yml
    ConstApplications:
      $ref: ../components/responses/ConstApplications.yml
    ConstClientEvents:
      $ref: ../components/responses/ConstClientEvents.yml
    ConstCrountries:
      $ref: ../components/responses/ConstCrountries.yml
    ConstDefaultGatewayConfig:
      $ref: ../components/responses/ConstDefaultGatewayConfig.yml
    ConstDeviceEvents:
      $ref: ../components/responses/ConstDeviceEvents.yml
    ConstDeviceModels:
      $ref: ../components/responses/ConstDeviceModels.yml
    ConstGatewayApplications:
      $ref: ../components/responses/ConstGatewayApplications.yml
    ConstInsightMetrics:
      $ref: ../components/responses/ConstInsightMetrics.yml
    ConstLanaguages:
      $ref: ../components/responses/ConstLanaguages.yml
    ConstLicenceTypes:
      $ref: ../components/responses/ConstLicenceTypes.yml
    ConstMxEdgeEvents:
      $ref: ../components/responses/ConstMxEdgeEvents.yml
    ConstMxEdgeModels:
      $ref: ../components/responses/ConstMxEdgeModels.yml
    ConstNacEvents:
      $ref: ../components/responses/ConstNacEvents.yml
    ConstOtherDeviceEvents:
      $ref: ../components/responses/ConstOtherDeviceEvents.yml
    ConstOtherDeviceModels:
      $ref: ../components/responses/ConstOtherDeviceModels.yml
    ConstSystemEvents:
      $ref: ../components/responses/ConstSystemEvents.yml
    ConstTrafficTypes:
      $ref: ../components/responses/ConstTrafficTypes.yml
    HTTP400:
      $ref: ../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../components/responses/HTTP429.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
