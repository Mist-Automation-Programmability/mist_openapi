openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2401.1.2**

    >

    > Date: **Feb 1, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2311.1.4
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: https://www.mist.com/wp-content/uploads/logo.png
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist Europe 01
  url: https://api.eu.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Login
- description: A Mist account can be linked to OAuth2 providers:\n1. First, login
    with your Mist account\n2. Obtain the Authorization URL for Linking 1. in JSON
    response, more usable for developers. Simply don\'t specify the forward parameter
    when obtaining the authorization URL 2. or as GET parameter, for UI where the
    user flow can be continued. Specify the landing page/url of your choice 3. Obtain
    the authorizaiton code by clicking / going through Authorization URL Link Mist
    Account against OAuth2 Provider by using the authorization code
  name: Login With OAuth2
- description: "In a typical enterprise, a separate group of people, Installers, are\
    \ responsible for install new devices. May it be a new installation (e.g. new\
    \ stores), a replacement installation (e.g. replacing Cisco APs with Mist APs),\
    \ or addition (e.g. adding new APs for better coverage). Instead of granting them\
    \ Admin/Write privilege, it's more desirable to grant them minimum privileges\
    \ to do the initial provisioning so they cannot read sensible information (e.g.\
    \ PSK of a WLAN), or change configs of running APs.\nAt a high level, Installer\
    \ APs try to achieve the following:\n1. identifying a device by MAC (that\u2019\
    s what they see)\n2. they can only touch configurations of the devices they\u2019\
    re installing\n3. allow the following configurations: * name * site assignment\
    \ * device  profile assignment * map and location (x/y) assignment * claim (if\
    \ not already in the inventory) * replace existing device with the device being\
    \ installed\n\n* Grace Period *\nGrace period provides a dynamic way to limit\
    \ what devices / sites   installer can work on. Generally installers work on recent\
    \ deployments -  bringing up new sites, add newly claimed devices to new / existing\
    \ sites. They  make mistakes, too, and may need to further tweak some of the parameters.\
    \   Default grace period is 7 days and can be set from 1 day to 365 days."
  name: Installer
- name: Admin
- name: Mobile
- description: MSP (Managed Service Provider) contains multiple Organizations.
  name: Msps
- name: Msps Admins
- name: Msps Inventory
- name: Msps Invites
- name: Msps Logo
- name: Msps Logs
- name: Msps Licenses
- name: Msps Marvis
- name: Msps Org Groups
- name: Msps Orgs
- name: Msps SLEs
- name: Msps SSO Roles
- name: Msps SSO
- name: Msps Stats
- name: Msps Tickets
- description: An organization usually represents a customer - which has inventories,
    licenses. An Organization can contain multiple sites. A site usually represents
    a deployment at the same location (a campus, an office).
  name: Orgs
- name: Orgs 128T
- name: Orgs Admins
- description: Alarms are triggered based on certain events. Alarms could be configured
    using an Alarm Template.
  name: Orgs Alarms
- description: An Alarm Template is a set of Alarm Rules that could be applied to
    one or more sites (while each site can only pick one Alarm Template), or to the
    whole org.
  name: Orgs Alarm Templates
- name: Orgs AP Templates
- name: Orgs API Tokens
- name: Orgs Assets
- name: Orgs Asset Filters
- name: Orgs Calls
- name: Orgs Cert
- name: Orgs Clients - NAC
- name: Orgs Clients - Wan
- name: Orgs Clients - Wired
- name: Orgs Clients - Wireless
- name: Orgs CRL
- description: 'While Templates / RF Templates / Network Templates / Gateway Templates
    provides powerful ways to control how a Device\''s configuration is derived for
    a Site. There are cases where you\''d like another level of control at the Org
    Level.

    A Device Profile contains a subset of Device\''s configurations you\''d like a
    device to have. It will be merged at runtime when we\''re provisioning an AP.'
  name: Orgs Device Profiles
- name: Orgs Devices
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Orgs EVPN Topologies
- description: API Call for 3rd party devices
  name: Orgs Devices Others
- name: Orgs Devices Stats
- name: Orgs Devices Upgrades
- description: "In Zscaler UI \n 1. add Partner Integration at https://admin.zscalerbeta.net/#administration/partner-integration\
    \ \n 2. Add Partner Administrator Role at https://admin.zscalerbeta.net/#administration/role-management\
    \ - Name: Mist - Access: Full \n 3. add Partner Admin at https://admin.zscalerbeta.net/#administration/admin-management\
    \ with - Login ID: john - email: john@abc.com \n 4. Find the cloud name for ZIA\
    \ https://help.zscaler.com/zia/what-my-cloud-name-zia\n"
  name: Orgs Devices Zscaler
- description: Gateway Template is applied to a site for gateway(s) in a site.
  name: Orgs Gateway Templates
- name: Orgs Guests
- name: Orgs IDP Profiles
- name: Orgs Inventory
- name: Orgs JSE
- description: "Juniper Support Insight is a free service provided to all Mist customers.\
    \ You can adopt your devices via a few lines CLI comands. Allowing you to \n*\
    \ get some basic information about the adopted devices \n* web shell into device\
    \ (write privilege required) \n* upgrade (write privilege required)"
  name: Orgs JSI
- name: Orgs Licenses
- name: Orgs Linked Applications
- name: Orgs Logs
- name: Orgs Marvis
- name: Orgs Maps
- name: Orgs MxClusters
- name: Orgs MxEdges
- name: Orgs MxTunnels
- name: Orgs NAC
- description: 'nactags are the building blocks to compose nacrules.

    They can either appear in the "matching" / "not_matching" sections of a nacrule,
    in which case they play the role of classifiers, or they could appear in the "apply_tags"
    section of the of a nacrule, in which case they influence the result.

    When the "type" field of nactag is "match", it can be used as the classfier of
    a nacrule. "match" field specifies the attribute name and "values" field specifies
    the list of attribute values to match on. When multiple values are specified,
    its treated as an OR condition between those values.

    When the "type" field of nactag is NOT "match", it can be used as the result of
    a nacrule. "type" field identifies the action to take and the corresponding field
    would provide any associated parameters to that action.'
  name: Orgs NAC Tags
- name: Orgs NAC CRL
- name: Orgs NAC Rules
- description: 'Network template is intended to be applied to a Site. It works like
    a blueprint of the network of the site.

    All Site Settings can go into Network Templates. See Site:Site Setting for schema

    Moreover, this can further be overwriten by individual Site Setting'
  name: Orgs Network Templates
- name: Orgs Networks
- name: Orgs Premium Analytics
- name: Orgs Psks
- description: "PSK Self-Service Portals are for \n  1. **WIFI users** who want to\
    \ connect to a WLAN with personal PSK, they\u2019re told to connect to a URL where\
    \ they can login (likely through company\u2019s SSO) and get the WIFI Name / Passphrase\
    \ - required input fields name, email so we can generate PSK \n  2. **PSK Admins**\
    \ (they don\u2019t have access to normal Network Admin Portal)\nWhen a PSK portal\
    \ is created, an unique URL will be generated (e.g. https://psk.mist.com/xxxxxx)"
  name: Orgs Psk Portals
- name: Orgs RF Templates
- name: Orgs SDK Clients
- name: Orgs SDK Templates
- description: "Security Policy is designed to audit / catch discripancies between\
    \ \u201Cwhat\u2019s intended to be running\u201D versus \u201Cwhat\u2019s actually\
    \ running\u201D in a network. Many big organizations have separated Security and\
    \ IT team (for good reasons). Each site can be assigned a security policy. Whenever\
    \ an AP is provisioned, the configuration will be checked against the security\
    \ policy. Any violations will be flagged in [Device Config History](/#operation/searchSiteDeviceConfigHistory)\
    \ where you can search for the when and where the violation occurs."
  name: Orgs SecPolicies
- name: Orgs Services
- name: Orgs Service Policies
- name: Orgs Setting
- name: Orgs Sitegroups
- name: Orgs Sites
- description: Site template is intended to be applied to a Site. The items in site
    setting which should be shared for all device types.
  name: Orgs Site Templates
- name: Orgs SLEs
- name: Orgs SSO Roles
- name: Orgs SSO
- name: Orgs Stats
- name: Orgs Subscriptions
- name: Orgs Templates
- name: Orgs Tickets
- name: Orgs Tunnels Stats
- name: Orgs Vars
- name: Orgs VPNs
- name: Orgs Webhooks
- name: Orgs Wlans
- name: Orgs WxRules
- name: Orgs WxTags
- name: Orgs WxTunnels
- description: A site represents a project, a deployment. For MSP, it can be as small
    as a coffee shop or a five-star 600-room hotel. A site contains a set of Maps,
    Wlans, Policies, Zones.
  name: Sites
- name: Sites Alarms
- name: Sites AP Templates
- description: Applications contains a list of applications users are interested in
    monitoring / routing / policying
  name: Sites Applications
- name: Sites Anomaly
- name: Sites Asset Filters
- name: Sites Assets
- name: Sites Beacons
- name: Sites Calls
- name: Sites Clients - NAC
- name: Sites Clients - Wan
- name: Sites Clients - Wired
- name: Sites Clients - Wireless
- description: 'Mist provides many ways (device-type specific template, site template,
    device profile, per-device) to configure devices for different kind of scenarios.

    The precedence goes from most specific to least specific

    Device > Device Profile > RFTemplate (for AP only) > DeviceType-specific Template
    > Site Template > Site Setting'
  name: Sites Devices
- name: Sites Devices - Wireless
- description: API Call for 3rd party devices
  name: Sites Devices Others
- name: Sites Devices - Wired
- name: Sites Devices - Wired Virtual Chassis
- name: Sites Devices - WAN
- name: Sites Devices - WAN HA
- name: Sites Devices Stats
- name: Sites Devices Upgrades
- name: Sites Devices Utilities
- name: Sites Events
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Sites EVPN Topologies
- name: Sites Guests
- name: Sites Insights
- name: Sites JSE
- name: Sites Licenses
- name: Sites Location
- name: Sites Maps
- name: Sites Maps Auto-orientation
- name: Sites Maps Auto-placement
- name: Sites MxEdges
- name: Sites MxTunnels
- name: Sites Network Templates
- name: Sites Networks
- name: Sites Pcaps
- name: Sites Psks
- name: Sites RF Templates
- name: Sites Rfdiags
- name: Sites Rogues
- name: Sites RRM
- name: Sites Rssizones
- name: Sites Services
- name: Sites Service Policies
- name: Sites Setting
- name: Sites Site Templates
- name: Sites Skyatp
- name: Sites SLEs
- name: Sites Stats
- name: Sites Subscriptions
- name: Sites Synthetic Tests
- name: Sites UI Settings
- name: Sites vBeacons
- name: Sites VPNs
- name: Sites Webhooks
- name: Sites Wlans
- name: Sites WxRules
- name: Sites WxTags
- name: Sites WxTunnels
- name: Sites Zones
- name: Constants
- name: Self Account
- description: "Like many other API providers, it\u2019s also possible to generate\
    \ API Tokens to be used (in HTTP Header) for authentication. An API token ties\
    \ to a Admin with equal or less privileges.\n\nNotes:\n* an API token generated\
    \ for a specific admin has the same privilege as the user\n* an API token will\
    \ be automatically removed if not used for > 90 days\n* SSO admins cannot generate\
    \ these API tokens. Refer Org level API tokens (/api/v1/docs/Org#api-token) which\
    \ can have privileges of a specific Org/Site for more information."
  name: Self API Token
- name: Self OAuth2
- name: Recover Password
- name: Self MFA
- name: Self Alarms
- name: Self Audit Logs
- name: Webhook Samples
paths:
  /api/v1/orgs/{org_id}/aptemplates:
    get:
      description: Get List of Org AP Templates
      operationId: listOrgAptemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AptemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAptemplates
      tags:
      - Orgs AP Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org AP Template
      operationId: createOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                    - match_model: string
                      name: string
                      port_config:
                        property1:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                        property2:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                  created_time: 0
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53d7bbba6f08
                  modified_time: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: '#/components/schemas/aptemplate'
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAptemplate
      tags:
      - Orgs AP Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}:
    delete:
      description: Delete existing AP Template
      operationId: deleteOrgAptemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAptemplate
      tags:
      - Orgs AP Templates
      - cat:WLAN:CONFIGURE
    get:
      description: Get AP Template
      operationId: getOrgAptemplate
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAptemplate
      tags:
      - Orgs AP Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/aptemplate_id'
    put:
      description: Update AP Template
      operationId: updateOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                    - match_model: string
                      name: string
                      port_config:
                        property1:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                        property2:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                  created_time: 0
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53d8bbba6f08
                  modified_time: 0
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: '#/components/schemas/aptemplate'
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAptemplate
      tags:
      - Orgs AP Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/clients/count:
    get:
      description: Count Org Wireless Clients
      operationId: countOrgWirelessClients
      parameters:
      - in: query
        name: distinct
        schema:
          default: device
          enum:
          - mac
          - hostname
          - device
          - os
          - model
          - ap
          - vlan
          - ssid
          - ip
          type: string
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWirelessClients
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/events/search:
    get:
      description: Get Org Clients Events
      operationId: searchOrgWirelessClientEvents
      parameters:
      - description: event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE
        in: query
        name: type
        schema:
          type: string
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 802.11 standard
        in: query
        name: proto
        schema:
          enum:
          - b
          - g
          - n
          - ac
          - ax
          - a
          type: string
      - description: 24 / 5
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClientEvents
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/search:
    get:
      description: Search Org Wireless Clients
      operationId: searchOrgWirelessClients
      parameters:
      - description: Site ID
        in: query
        name: site_id
        schema:
          type: string
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: partial / full MAC address, hostname, username, psk_name or ip
        in: query
        name: text
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClients
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/sessions/count:
    get:
      description: Count Org Wireless Clients Sessions
      operationId: countOrgWirelessClientsSessions
      parameters:
      - in: query
        name: distinct
        required: true
        schema:
          default: device
          enum:
          - ssid
          - ap
          - ip
          - vlan
          - hostname
          - os
          - model
          - device
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 5 / 24
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWirelessClientsSessions
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/sessions/search:
    get:
      description: Search Org Wireless Clients Sessions
      operationId: searchOrgWirelessClientSessions
      parameters:
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 5 / 24
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: Username
        in: query
        name: client_username
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/WirelessClientSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClientSessions
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/{client_mac}/coa:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthOrgDot1xWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: reauthOrgDot1xWirelessClient
      tags:
      - Orgs Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/devices/radio_macs:
    get:
      description: 'For some scenarios like E911 or security systems, the BSSIDs are
        required to identify which AP the client is connecting to. Then the location
        of the AP can be used as the approximate location of the client.


        Each radio MAC can have 16 BSSIDs (enumerate the last octet from 0-F)'
      operationId: listOrgApsMacs
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - mac: 5c5b35000001
                    radio_macs:
                    - 5c5b35000040
                    - 5c5b35000050
                    - 5c5b35000060
                  - mac: 5c5b45000001
                    radio_macs:
                    - 5c5b45000040
                    - 5c5b45000050
                    - 5c5b45000060
              schema:
                items:
                  properties:
                    mac:
                      minLength: 1
                      type: string
                    radio_macs:
                      items:
                        properties: {}
                      type: array
                  required:
                  - mac
                  - radio_macs
                  type: object
                minItems: 1
                type: array
                uniqueItems: true
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgApsMacs
      tags:
      - Orgs Devices
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests:
    get:
      description: Get List of Org Guest Authorizations
      operationId: listOrgGuestAuthorizations
      responses:
        '200':
          $ref: '#/components/responses/GuestsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgGuestAuthorizations
      tags:
      - Orgs Guests
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/count:
    get:
      description: Count Org Authorized Guest
      operationId: countOrgGuestAuthorizations
      parameters:
      - example: auth_method
        in: query
        name: distinct
        schema:
          default: auth_method
          enum:
          - auth_method
          - ssid
          - company
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgGuestAuthorizations
      tags:
      - Orgs Guests
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/search:
    get:
      description: Search Authorized Guest
      operationId: searchOrgGuestAuthorization
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: wlan_id
        schema:
          type: string
      - in: query
        name: auth_method
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/GuestsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgGuestAuthorization
      tags:
      - Orgs Guests
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/{guest_mac}:
    delete:
      description: Delete Guest Authorization
      operationId: deleteOrgGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgGuestAuthorization
      tags:
      - Orgs Guests
      - cat:WLAN:CONFIGURE
    get:
      description: Get Guest Authorization
      operationId: getOrgGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgGuestAuthorization
      tags:
      - Orgs Guests
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/guest_mac'
    put:
      description: Update Guest Authorization
      operationId: updateOrgGuestAuthorization
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  authorized: true
                  authorized_expiring_time: 0
                  authorized_time: 0
                  company: string
                  email: user@example.com
                  field1: string
                  field2: string
                  field3: string
                  field4: string
                  mac: string
                  minutes: 0
                  name: string
            schema:
              $ref: '#/components/schemas/guest'
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgGuestAuthorization
      tags:
      - Orgs Guests
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxclusters:
    get:
      description: Get List of Org MxEdge Clusters
      operationId: listOrgMxEdgeClusters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxclustersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgeClusters
      tags:
      - Orgs MxClusters
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxCluster
      operationId: createOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                    - host: string
                      port: 0
                  tunterm_ap_subnets:
                  - string
                  tunterm_hosts:
                  - string
            schema:
              $ref: '#/components/schemas/mxcluster'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}:
    delete:
      description: Delete Org MXEdge Cluster
      operationId: deleteOrgMxEdgeCluster
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org MxEdge Cluster Details
      operationId: getOrgMxEdgeCluster
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxcluster_id'
    put:
      description: Update Org MxEdge Cluster
      operationId: updateOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                    - host: string
                      port: 0
                  tunterm_ap_subnets:
                  - string
                  tunterm_hosts:
                  - string
            schema:
              $ref: '#/components/schemas/mxcluster'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges:
    get:
      description: Get List of Org MxEdges
      operationId: listOrgMxEdges
      parameters:
      - description: filter for site level mist edges
        in: query
        name: for_sites
        schema:
          default: any
          enum:
          - any
          - 'true'
          - 'false'
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdges
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxEdge
      operationId: createOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  model: ME-100
                  mxcluster_id: 572586b7-f97b-a22b-526c-8b97a3f609c4
                  mxedge_mgmt: {}
                  name: Guest
                  ntp_servers: []
                  oob_ip_config: {}
                  services:
                  - tunterm
                  tunterm_ip_config:
                    gateway: 10.2.1.254
                    ip: 10.2.1.1
                    netmask: 255.255.255.0
                  tunterm_port_config:
                    downstream_ports:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                  tunterm_switch_config:
                    '0':
                      port_vlan_id: 1
                      vlan_ids:
                      - 5
                      - 2
                      - 3
                    enabled: true
                  versions:
                    mxagent: 2.4.194
                    tunterm: 0.1.928-1
            schema:
              $ref: '#/components/schemas/mxedge'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/assign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Assign Org MxEdge to Site
      operationId: assignOrgMxEdgeToSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              properties:
                mxedge_ids:
                  items:
                    type: string
                  type: array
                site_id:
                  type: string
              required:
              - site_id
              - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/assignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: assignOrgMxEdgeToSite
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/count:
    get:
      description: Count Org Mist Edges
      operationId: countOrgMxEdges
      parameters:
      - in: query
        name: distinct
        schema:
          default: model
          enum:
          - model
          - mxcluster_id
          - distro
          - tunterm_version
          - site_id
          type: string
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge site id
        in: query
        name: site_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: model name
        in: query
        name: model
        schema:
          type: string
      - description: debian code name(buster, bullseye)
        in: query
        name: distro
        schema:
          type: string
      - description: tunterm version
        in: query
        name: tunterm_version
        schema:
          type: string
      - description: sort options, -prefix represents DESC order, default is -last_seen
        in: query
        name: sort
        schema:
          type: string
      - description: whether to return device stats, default is false
        in: query
        name: stats
        schema:
          type: boolean
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countOrgMxEdges
      tags:
      - Orgs MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/events/count:
    get:
      description: Count Org Mist Edge Events
      operationId: countOrgSiteMxEdgeEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: mxedge_id
          enum:
          - mxedge_id
          - type
          - mxcluster_id
          - package
          type: string
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: mist edge event type [Supported Events](/#operation/listGatewayApplications)
        in: query
        name: type
        schema:
          type: string
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countOrgSiteMxEdgeEvents
      tags:
      - Orgs MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/events/search:
    get:
      description: Search Org Mist Edge Events
      operationId: searchOrgMistEdgeEvents
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: mist edge event type [Supported Events](/#operation/listGatewayApplications)
        in: query
        name: type
        schema:
          type: string
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeEventsSearch'
      summary: searchOrgMistEdgeEvents
      tags:
      - Orgs MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/search:
    get:
      description: Search Org Mist Edges
      operationId: searchOrgMxEdges
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge site id
        in: query
        name: site_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: model name
        in: query
        name: model
        schema:
          type: string
      - description: debian code name(buster, bullseye)
        in: query
        name: distro
        schema:
          type: string
      - description: tunterm version
        in: query
        name: tunterm_version
        schema:
          type: string
      - description: sort options, -prefix represents DESC order, default is -last_seen
        in: query
        name: sort
        schema:
          type: string
      - description: whether to return device stats, default is false
        in: query
        name: stats
        schema:
          type: boolean
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeSearch'
      summary: searchOrgMxEdges
      tags:
      - Orgs MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/unassign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Unassign Org MxEdge from Site
      operationId: unassignOrgMxEdgeFromSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
            schema:
              properties:
                mxedge_ids:
                  items:
                    type: string
                  type: array
              required:
              - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/assignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unassignOrgMxEdgeFromSite
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/upgrade:
    get:
      description: Get List of Org Mist Edge Upgrades
      operationId: listOrgMxEdgeUpgrades
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeUpgradesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgeUpgrades
      tags:
      - Orgs Devices Upgrades
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Upgrade Mist Edges
      operationId: upgradeOrgMxEdges
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  versions:
                    mxagent: current
                    tunterm: default
            schema:
              properties:
                allow_downgrades:
                  description: whether downgrade is allowed when running version is
                    higher than expected version for each service
                  properties:
                    mxagent:
                      default: false
                      type: boolean
                    mxdas:
                      default: false
                      type: boolean
                    mxocproxy:
                      default: false
                      type: boolean
                    radsecproxy:
                      default: false
                      type: boolean
                    tunterm:
                      default: false
                      type: boolean
                  type: object
                channel:
                  default: stable
                  description: upgrade channel to follow, stable (default) / beta
                    / alpha
                  enum:
                  - stable
                  - beta
                  - alpha
                  type: string
                distro:
                  description: distro upgrade, optional, to specific codename (e.g.
                    bullseye) with highest qualified versions
                  type: string
                mxedge_ids:
                  description: list of mxedge IDs to upgrade. If not specified, it
                    means all the org mxedges.
                  items:
                    format: uuid
                    type: string
                  type: array
                strategy:
                  default: big_bang
                  description: '* `big_bang`: upgrade all at once

                    * `serial`: one at a time

                    '
                  enum:
                  - big_bang
                  - serial
                  type: string
                versions:
                  description: version to upgrade for each service, optional (ignored
                    if distro upgrade)
                  properties:
                    mxagent:
                      type: string
                    mxdas:
                      type: string
                    mxocproxy:
                      type: string
                    radsecproxy:
                      type: string
                    tunterm:
                      type: string
                  required:
                  - mxagent
                  - tunterm
                  type: object
              required:
              - mxedge_ids
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgMxEdges
      tags:
      - Orgs Devices Upgrades
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/upgrade/{upgrade_id}:
    get:
      description: Get Mist Edge Upgrade
      operationId: getOrgMxEdgeUpgrade
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeUpgrade
      tags:
      - Orgs Devices Upgrades
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/upgrade_id'
  /api/v1/orgs/{org_id}/mxedges/version:
    get:
      description: Get Mist Edge Upgrade Information
      operationId: getOrgMxEdgeUpgradeInfo
      parameters:
      - description: upgrade channel to follow, stable (default) / beta / alpha
        in: query
        name: channel
        schema:
          default: stable
          enum:
          - stable
          - beta
          - alpha
          type: string
      responses:
        '200':
          $ref: '#/components/responses/MxedgeUpdateInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeUpgradeInfo
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}:
    delete:
      description: Delete Org MxEdge
      operationId: deleteOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org MxEdge details
      operationId: getOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    put:
      description: Update Org MxEdge
      operationId: updateOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  magic: string
                  model: string
                  mxcluster_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  ntp_servers:
                  - string
                  services:
                  - tunterm
                  tunterm_ip_config:
                    dns:
                    - string
                    dns_suffix:
                    - string
                    gateway: string
                    ip: string
                    netmask: string
                  tunterm_port_config:
                    downstream_ports:
                    - string
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                    - string
            schema:
              $ref: '#/components/schemas/mxedge'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}//image{image_number}:
    delete:
      description: Remove MxEdge Image
      operationId: deleteOrgMxEdgeImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdgeImage
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    - in: path
      name: image_number
      required: true
      schema:
        maximum: 3
        minimum: 1
        type: number
    post:
      description: Attach up to 3 images to a mxedge
      operationId: addOrgMxEdgeImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_upload'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addOrgMxEdgeImage
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/restart:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: In the case where a Mist Edge is replaced, you would need to unregister
        it. Which disconnects the currently the connected Mist Edge and allow another
        to register.
      operationId: restartOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: restartOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/support:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadOrgMxEdgeSupportFiles
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadOrgMxEdgeSupportFiles
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/unregister:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: In the case where a Mist Edge is replaced, you would need to unregister
        it. Which disconnects the currently the connected Mist Edge and allow another
        to register.
      operationId: unregisterOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unregisterOrgMxEdge
      tags:
      - Orgs MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/upgrade:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Upgrade MxEdge
      operationId: upgradeOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  mxedge_ids:
                  - string
                  versions:
                    mxagent: current
                    tunterm: current
            schema:
              properties:
                channel:
                  default: stable
                  description: upgrade channel to follow, stable (default) / beta
                    / alpha
                  enum:
                  - stable
                  - beta
                  - alpha
                  type: string
                mxedge_ids:
                  description: list of mxedge IDs to upgrade
                  items:
                    type: string
                  type: array
                versions:
                  description: version to upgrade for each service, optional, current
                    (assumed) / latest / default / specific version (e.g. 2.5.100)
                  properties:
                    mxagent:
                      default: current
                      type: string
                    tunterm:
                      default: current
                      type: string
                  type: object
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgMxEdge
      tags:
      - Orgs Devices Upgrades
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxtunnels:
    get:
      description: Get List of Org MxTunnels
      operationId: listOrgMxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxtunnelsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxTunnels
      tags:
      - Orgs MxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxTunnel
      operationId: createOrgMxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  cluster_ids:
                  - string
                  created_time: 0
                  for_site: true
                  hello_interval: 60
                  hello_retries: 7
                  id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  ipsec:
                    dns_servers:
                    - string
                    enabled: true
                    extra_routes:
                    - dest: string
                      next_hop: 192.168.0.1
                    split_tunnel: true
                    use_mxedge: true
                  modified_time: 0
                  org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  vlan_ids:
                  - 0
            schema:
              $ref: '#/components/schemas/mxtunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxTunnel
      tags:
      - Orgs MxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}:
    delete:
      description: Delete Org MxTunnel
      operationId: deleteOrgMxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxTunnel
      tags:
      - Orgs MxTunnels
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org MxTunnel Details
      operationId: getOrgMxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxTunnel
      tags:
      - Orgs MxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxtunnel_id'
    put:
      description: Update Org MxTunnel
      operationId: updateOrgMxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxtunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxTunnel
      tags:
      - Orgs MxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/pskportals:
    get:
      description: Get List of Org Psk Portals
      operationId: listOrgPskPortals
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PskPortalsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPskPortals
      tags:
      - Orgs Psk Portals
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Psk Portal
      operationId: createOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  created_time: 0
                  expire: 0
                  id: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: string
                  required_fields:
                  - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: '#/components/schemas/psk_portal'
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgPskPortal
      tags:
      - Orgs Psk Portals
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/pskportals/{pskportal_id}:
    delete:
      description: Delete Org Psk Portal
      operationId: deleteOrgPskPortal
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskPortal
      tags:
      - Orgs Psk Portals
      - cat:WLAN:CONFIGURE
    get:
      description: get Org Psk Portal Details
      operationId: getOrgPskPortal
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgPskPortal
      tags:
      - Orgs Psk Portals
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/pskportal_id'
    put:
      description: update Org Psk Portal
      operationId: updateOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  created_time: 0
                  expire: 0
                  id: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: string
                  required_fields:
                  - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: '#/components/schemas/psk_portal'
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgPskPortal
      tags:
      - Orgs Psk Portals
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/psks:
    get:
      description: Get List of Org Psks
      operationId: listOrgPsks
      parameters:
      - example: psk_name
        in: query
        name: name
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPsks
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org PSK
      operationId: createOrgPsk
      parameters:
      - description: if a key exists with the same `name`, replace it with the new
          one
        in: query
        name: upsert
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgPsk
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
    put:
      description: Update multi PSKs
      operationId: updateOrgMultiPsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - created_time: 0
                  expire_time: 1614990263
                  id: 426f6eca-6286-4993-bfeb-53cbbbba6f07
                  mac: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  passphrase: stringst
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  ssid: string
                  usage: multi
                  vlan_id: 0
            schema:
              items:
                $ref: '#/components/schemas/psk'
              type: array
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMultiPsks
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/psks/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Import PSK from CSV file or JSON\n\n##\_CSV File Format\n```\n\
        PSK Import CSV File Format:\nname,ssid,passphrase,usage,vlan_id,mac,max_usage,role,expire_time,notify_expiry,expiry_notification_time,notify_on_create_or_edit,email\n\
        Common,warehouse,foryoureyesonly,single,35,a31425f31278,0,student,1618594236\n\
        Justin,reception,visible,multi,1002,200,teacher,1618594236\nCommon2,ssid,1245678-xx,single,35,a31425f31278,0,student,1618594236,true,7,true,admin@test.com\n\
        ```"
      operationId: importOrgPsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - created_time: 0
                  expire_time: 1614990263
                  id: 425f6eca-6376-4993-bfeb-53cbbbba6f06
                  mac: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  passphrase: stringst
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  ssid: string
                  usage: multi
                  vlan_id: 0
            schema:
              items:
                $ref: '#/components/schemas/psk'
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgPsks
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/psks/{psk_id}:
    delete:
      description: Delete Org PSK
      operationId: deleteOrgPsk
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPsk
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org PSK Details
      operationId: getOrgPsk
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgPsk
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/psk_id'
    put:
      description: 'Update Org PSK '
      operationId: updateOrgPsk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgPsk
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/psks/{psk_id}/delete_old_passphrase:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/psk_id'
    post:
      description: "Delete `old_passphrase` from PSK. \nIf successful, response is\
        \ same as GET, returns the PSK with `old_passphrase` removed."
      operationId: deleteOrgPskOldPassphrase
      requestBody:
        content:
          application/json:
            schema:
              properties: {}
              type: object
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskOldPassphrase
      tags:
      - Orgs Psks
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/rftemplates:
    get:
      description: Get List of Org RF Template
      operationId: listOrgRfTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/RftemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgRfTemplates
      tags:
      - Orgs RF Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org RF Template
      operationId: createOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rftemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgRfTemplate
      tags:
      - Orgs RF Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}:
    delete:
      description: Delete Org RF Template
      operationId: deleteOrgRfTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgRfTemplate
      tags:
      - Orgs RF Templates
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org RF Template Details
      operationId: getOrgRfTemplate
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgRfTemplate
      tags:
      - Orgs RF Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/rftemplate_id'
    put:
      description: 'Update Org RF Template '
      operationId: updateOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rftemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgRfTemplate
      tags:
      - Orgs RF Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/stats/mxedges:
    get:
      description: Get List of Org MxEdge Stats
      operationId: listOrgMxEdgesStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - description: filter for site level mist edges
        in: query
        name: for_site
        schema:
          default: 'false'
          enum:
          - 'true'
          - 'false'
          - any
          type: string
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgesStats
      tags:
      - Orgs Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/mxedges/{mxedge_id}:
    get:
      description: Get Org MxEdge Details Stats
      operationId: getOrgMxEdgeStats
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeStats
      tags:
      - Orgs Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
  /api/v1/orgs/{org_id}/stats/tunnels/count:
    get:
      description: Count Mist Tunnels Stats
      operationId: countOrgTunnelsStats
      parameters:
      - description: "- If `type`==`wxtunnel`: wxtunnel_id / ap / remote_ip / remote_port\
          \ / state / mxedge_id / mxcluster_id / site_id / peer_mxedge_id; default\
          \ is wxtunnel_id \n- If `type`==`wan`: mac / site_id / node / peer_ip /\
          \ peer_host/ ip / tunnel_name / protocol / auth_algo / encrypt_algo / ike_version\
          \ / last_event / up"
        in: query
        name: distinct
        schema:
          enum:
          - auth_algo
          type: string
      - in: query
        name: type
        schema:
          default: wxtunnel
          enum:
          - wxtunnel
          - wan
          type: string
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgTunnelsStats
      tags:
      - Orgs Tunnels Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/tunnels/search:
    get:
      description: Search Org Tunnels Stats
      operationId: searchOrgTunnelsStats
      parameters:
      - description: if `type`==`wxtunnel`
        in: query
        name: mxcluster_id
        schema:
          type: string
      - in: query
        name: site_id
        schema:
          type: string
      - description: if `type`==`wxtunnel`
        in: query
        name: wxtunnel_id
        schema:
          type: string
      - description: if `type`==`wxtunnel`
        in: query
        name: ap
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: mac
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: node
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: peer_ip
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: peer_host
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: ip
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: tunnel_name
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: protocol
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: auth_algo
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: encrypt_algo
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: ike_version
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: up
        schema:
          type: string
      - in: query
        name: type
        schema:
          default: wxtunnel
          enum:
          - wxtunnel
          - wan
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/TunnelsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgTunnelsStats
      tags:
      - Orgs Tunnels Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/templates:
    get:
      description: Get List of Org WLAN Templates
      operationId: listOrgTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/TemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgTemplates
      tags:
      - Orgs Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Template
      operationId: createOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgTemplate
      tags:
      - Orgs Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/templates/{template_id}:
    delete:
      description: Delete Org Template
      operationId: deleteOrgTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgTemplate
      tags:
      - Orgs Templates
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org Template Details
      operationId: getOrgTemplate
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgTemplate
      tags:
      - Orgs Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/template_id'
    put:
      description: Update Org Template
      operationId: updateOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgTemplate
      tags:
      - Orgs Templates
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wlans:
    get:
      description: Get List of Org Wlans
      operationId: listOrgWlans
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWlans
      tags:
      - Orgs Wlans
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Wlan
      operationId: createOrgWlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWlan
      tags:
      - Orgs Wlans
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wlans/{wlan_id}:
    delete:
      description: Delete Org WLAN
      operationId: deleteOrgWlan
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWlan
      tags:
      - Orgs Wlans
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org Wlan Detail
      operationId: getOrgWLAN
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWLAN
      tags:
      - Orgs Wlans
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: Update Org Wlan
      operationId: updateOrgWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53e5bbba6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53e6bbba6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                  - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                  - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                    - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                    - string
                    facebook_enabled: false
                    forward: false
                    forward_url: http://abc.com/promotions
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                    - mydomain.edu
                    - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                    - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: https://url/to/image.png
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                    - reserved.net
                    - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                  - snapchat.com
                  - ibm.com
                  portal_allowed_subnets:
                  - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                  - msg.snapchat.com
                  portal_image: http://example.com
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: http://example.com
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53e7bbba6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWlan
      tags:
      - Orgs Wlans
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxrules:
    get:
      description: Get List of Org WxRules
      operationId: listOrgWxRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxRules
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org WxRule
      operationId: createOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53e8bbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxRule
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxrules/derived:
    get:
      description: Get Derived Org WxRule
      operationId: getOrgWxRulesDerived
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxRulesDerived
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wxrules/{wxrules_id}:
    delete:
      description: Delete Org WxRule
      operationId: deleteOrgWxRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxRule
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org WxRule Details
      operationId: getOrgWxRule
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxRule
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxrules_id'
    put:
      description: Update Org WxRule
      operationId: updateOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53e9bbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxRule
      tags:
      - Orgs WxRules
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxtags:
    get:
      description: Get List of Org WxLAN Tags
      operationId: listOrgWxTags
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtagArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxTags
      tags:
      - Orgs WxTags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create WxLAN Tag
      operationId: createOrgWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                  - gmail
                  - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file-servers
                  type: match
                  values:
                  - b0c4e7001543
                  - a0c4e7001543
                  - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                  - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file-servers
                  type: match
                  values:
                  - 10.1.2.1
                  - 10.2.3.4/24
                  - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                  - '80'
                  - '8000'
                  - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                  - test_key1
                  - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                  - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                  - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                  - john@abc.com
                  - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                  - port_range: '80'
                    protocol: tcp
                    subnets:
                    - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                  - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxTag
      tags:
      - Orgs WxTags
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxtags/{wxtag_id}:
    delete:
      description: Delete WxLAN Tag
      operationId: deleteOrgWxTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxTag
      tags:
      - Orgs WxTags
      - cat:WLAN:CONFIGURE
    get:
      description: Get WxLAN Tag Details
      operationId: getOrgWxTag
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxTag
      tags:
      - Orgs WxTags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtag_id'
    put:
      description: Update WxLAN Tag
      operationId: updateOrgWxTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxTag
      tags:
      - Orgs WxTags
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxtags/{wxtag_id}/clients:
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getOrgCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: '#/components/responses/WxtagClients'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgCurrentMatchingClientsOfAWxTag
      tags:
      - Orgs WxTags
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtag_id'
  /api/v1/orgs/{org_id}/wxtunnels:
    get:
      description: Get List of Org WxLAN Tunnels
      operationId: listOrgWxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtunnelArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxTunnels
      tags:
      - Orgs WxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org WxAN Tunnel
      operationId: createOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxTunnel
      tags:
      - Orgs WxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}:
    delete:
      description: Delete Org WxLAN Tunnel
      operationId: deleteOrgWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxTunnel
      tags:
      - Orgs WxTunnels
      - cat:WLAN:CONFIGURE
    get:
      description: Get Org WxLAN Tunnel Details
      operationId: getOrgWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxTunnel
      tags:
      - Orgs WxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtunnel_id'
    put:
      description: Update Org WxLAN Tunnel
      operationId: updateOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxTunnel
      tags:
      - Orgs WxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/aptemplates/derived:
    get:
      description: Get derived AP Templates for Site
      operationId: getSiteApTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
      summary: getSiteApTemplateDerived
      tags:
      - Sites AP Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/count:
    get:
      description: Count by Distinct Attributes of Clients
      operationId: countSiteWirelessClients
      parameters:
      - example: hostname
        in: query
        name: distinct
        required: true
        schema:
          default: device
          enum:
          - ssid
          - ap
          - ip
          - vlan
          - hostname
          - os
          - model
          - device
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - in: query
        name: vlan
        schema:
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: os
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: device
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClients
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/disconnect:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: To unauthorize multiple clients
      operationId: disconnectSiteMultipleClients
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - 683b679ac024
            schema:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: disconnectSiteMultipleClients
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/clients/events/count:
    get:
      description: Count by Distinct Attributes of Client-Events
      operationId: countSiteWirelessClientEvents
      parameters:
      - description: type / proto / band / channel / wlan_id / ssid
        example: type
        in: query
        name: distinct
        schema:
          enum:
          - type
          - proto
          - band
          - channel
          - wlan_id
          - ssid
          type: string
      - description: event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE
        in: query
        name: type
        schema:
          type: string
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 802.11 standard
        in: query
        name: proto
        schema:
          enum:
          - b
          - g
          - n
          - ac
          - ax
          - a
          type: string
      - description: 24 / 5
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClientEvents
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/events/search:
    get:
      description: Get Site Clients Events
      operationId: searchSiteWirelessClientEvents
      parameters:
      - description: event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE
        in: query
        name: type
        schema:
          type: string
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 802.11 standard
        in: query
        name: proto
        schema:
          enum:
          - b
          - g
          - n
          - ac
          - ax
          - a
          type: string
      - description: 24 / 5
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClientEvents
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/search:
    get:
      description: "Search Wireless Clients\n\n**NOTE**: fuzzy logic can be used with\
        \ \u2018*\u2019, supported filters: mac, hostname, device, os, model. E.g.\
        \ /clients/search?device=Mac*&hostname=jerry"
      operationId: searchSiteWirelessClients
      parameters:
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - description: partial / full MAC address, hostname, username, psk_name or ip
        in: query
        name: text
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClients
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/sessions/count:
    get:
      description: Count by Distinct Attributes of Client Sessions
      operationId: countSiteWirelessClientSessions
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - ssid
          - wlan_id
          - ap
          - mac
          - client_family
          - client_manufacture
          - client_model
          - client_os
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 24 /5
        in: query
        name: band
        schema:
          type: string
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClientSessions
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/sessions/search:
    get:
      description: Search Client Sessions
      operationId: searchSiteWirelessClientSessions
      parameters:
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: 5 / 24
        in: query
        name: band
        schema:
          enum:
          - '24'
          - '5'
          type: string
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: Username
        in: query
        name: client_username
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClientSessions
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/unauthorize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "This unauthorize clients (if they are guest) and disconnect them.\
        \ From the guest\u2019s perspective, they will see the splash page again and\
        \ go through the flow (e.g. Terms of Use) again."
      operationId: unauthorizeSiteMultipleClients
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - 683b679ac024
            schema:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: true
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unauthorizeSiteMultipleClients
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/clients/{client_mac}/coa:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthSiteDot1xWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: reauthSiteDot1xWirelessClient
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/clients/{client_mac}/disconnect:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: "This disconnect a client (and it\u2019s likely to connect back)"
      operationId: disconnectSiteWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: disconnectSiteWirelessClient
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/clients/{client_mac}/events:
    get:
      description: Get the list of events for a specific client
      operationId: getSiteEventsForClient
      parameters:
      - description: e.g. MARVIS_EVENT_CLIENT_DHCP_STUCK
        in: query
        name: type
        schema:
          enum:
          - b
          - g
          - n
          type: string
      - description: a / b / g / n / ac / ax
        in: query
        name: proto
        schema:
          enum:
          - a
          - b
          - g
          - n
          - ac
          - ax
          type: string
      - description: 24 / 5
        in: query
        name: band
        schema:
          type: string
      - in: query
        name: channel
        schema:
          type: string
      - in: query
        name: wlan_id
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteEventsForClient
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/clients/{client_mac}/unauthorize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: "This unauthorize a client (if it\u2019s a guest) and disconnect\
        \ it. From the guest\u2019s perspective, s/he will see the splash page again\
        \ and go through the flow (e.g. Terms of Use) again."
      operationId: unauthorizeSiteWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unauthorizeSiteWirelessClient
      tags:
      - Sites Clients - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/ap_channels:
    get:
      description: Get a list of allowed channels (per channel width)
      operationId: getSiteDeviceRadioChannels
      parameters:
      - description: country code for the site (for AP config generation), in [two-character](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        example: US
        in: query
        name: country_code
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DeviceRadioChannels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceRadioChannels
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/reset_radio_config:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Reset all APs in the Site to use RRM
      operationId: resetSiteAllApsToUseRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                  - '24'
                  - '5'
                  - '6'
                  force: false
            schema:
              properties:
                bands:
                  description: list of bands
                  items:
                    type: string
                  type: array
                force:
                  default: false
                  description: whether to reset those with radio disabled. default
                    is false (i.e. if user intentionally disables a radio, honor it)
                  type: boolean
              required:
              - bands
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: resetSiteAllApsToUseRrm
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/send_ble_beacon:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Send arbitrary BLE Beacon for a period of time


        Note that only the devices that are connected will be restarted.'
      operationId: sendSiteDevicesArbitratryBleBeacon
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  beacon_frame: 68b329da9893e34099c7d8ad5cb9c940
                  beacon_freq: 100
                  duration: 10
                  macs:
                  - 5c5b35584a6f
                  - 5c5b350ea3b3
                  map_ids:
                  - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
            schema:
              properties:
                beacon_frame:
                  example: 68b329da9893e34099c7d8ad5cb9c940
                  type: string
                beacon_freq:
                  example: 100
                  type: integer
                duration:
                  example: 10
                  maximum: 60
                  minimum: 1
                  type: integer
                macs:
                  example:
                  - 5c5b35584a6f
                  - 5c5b350ea3b3
                  items:
                    type: string
                  type: array
                map_ids:
                  example:
                  - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                  items:
                    type: string
                  type: array
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: sendSiteDevicesArbitratryBleBeacon
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/{device_id}/check_radius_server:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Ping test from the AP to confirm \u2018reachability\u2019 of the\
        \ Radius server. Utilize Juniper EX switch(to which an AP is connected to)\
        \ radius test capabilities to get details on the Radius Server \u2018availability\u2019\
        ."
      operationId: startSiteSwitchRadiusSyntheticTest
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  password: string
                  profile: dot1x
                  user: string
            schema:
              properties:
                password:
                  description: Specify the password associated with the username
                  type: string
                profile:
                  default: dot1x
                  description: Specify the access profile associated with the subscriber
                  type: string
                user:
                  description: Specify the subscriber username to test
                  type: string
              required:
              - user
              - password
              type: object
      responses:
        '200':
          $ref: '#/components/responses/Session'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: triggerSiteSwitchRadiusSyntheticTest
      tags:
      - Sites Synthetic Tests
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/{device_id}/iot:
    get:
      description: Returns the current state of each enabled IoT pin configured as
        an output.
      operationId: getSiteDeviceIotPort
      responses:
        '200':
          $ref: '#/components/responses/DeviceIot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceIotPort
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: "**Note**: For each IoT pin referenced:\n * The pin must be enabled\
        \ using the Device `iot_config` API\n * The pin must support the output direction"
      operationId: setSiteDeviceIotPort
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: integer
              description: Property key is the IoT port name (e.g A0)
              example:
                A1: 1
                DO: 0
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/DeviceIot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setSiteDeviceIotPort
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/{device_id}/locate:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Locate a Device by blinking it\u2019s LED, it\u2019s a persisted\
        \ state that has to be stopped by calling Stop Locating API"
      operationId: startSiteLocateDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteLocateDevice
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/devices/{device_id}/unlocate:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Stop Locate a Device
      operationId: stopSiteLocateDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopSiteLocateDevice
      tags:
      - Sites Devices - Wireless
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/events/fast_roam:
    get:
      description: Get Roaming Events data
      operationId: getSiteRoamingEvents
      parameters:
      - description: event type
        in: query
        name: type
        schema:
          enum:
          - success
          - fail
          - none
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsFastroam'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRoamingEvents
      tags:
      - Sites Events
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests:
    get:
      description: Get List of Site Guest Authorizations
      operationId: listSiteAllGuestAuthorizations
      parameters:
      - description: UUID of single or multiple (Comma separated) WLAN under Site
          `site_id` (to filter by WLAN)
        in: query
        name: wlan_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/GuestsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAllGuestAuthorizations
      tags:
      - Sites Guests
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/count:
    get:
      description: Count Authorized Guest
      operationId: countSiteGuestAuthorizations
      parameters:
      - example: auth_method
        in: query
        name: distinct
        schema:
          default: auth_method
          enum:
          - auth_method
          - ssid
          - company
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteGuestAuthorizations
      tags:
      - Sites Guests
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/search:
    get:
      description: Search Authorized Guest
      operationId: searchSiteGuestAuthorization
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: wlan_id
        schema:
          type: string
      - in: query
        name: auth_method
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/GuestsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteGuestAuthorization
      tags:
      - Sites Guests
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/{guest_mac}:
    delete:
      description: Delete Guest Authorization
      operationId: deleteSiteGuestAuthorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteGuestAuthorization
      tags:
      - Sites Guests
      - cat:WLAN:CONFIGURE
    get:
      description: Get Guest Authorization
      operationId: getSiteGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteGuestAuthorization
      tags:
      - Sites Guests
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/guest_mac'
    put:
      description: 'Update Guest Authorization  '
      operationId: updateSiteGuestAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guest'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteGuestAuthorization
      tags:
      - Sites Guests
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/insights/client/{client_mac}/{metric}:
    get:
      description: 'Get Client Insight Metrics

        See metrics possibilities at /api/v1/const/insight_metrics'
      operationId: getSiteInsightMetricsForClient
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightMetric'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteInsightMetricsForClient
      tags:
      - Sites Insights
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    - $ref: '#/components/parameters/metric'
  /api/v1/sites/{site_id}/insights/rogues:
    get:
      description: Get List of Site Rogue/Neighbor APs
      operationId: listSiteRogueAPs
      parameters:
      - $ref: '#/components/parameters/rogue_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightRogue'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRogueAPs
      tags:
      - Sites Rogues
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/insights/rogues/clients:
    get:
      description: Get List of Site Rogue Clients
      operationId: listSiteRogueClients
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightRogueClients'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRogueClients
      tags:
      - Sites Rogues
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/mxedges:
    get:
      description: Get List of Site Mist Edges
      operationId: listSiteMxEdges
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMxEdges
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Mist Edge
      operationId: createSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxedge'
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteMxEdge
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/mxedges/events/count:
    get:
      description: Count Mist Edge Events
      operationId: countSiteMxEdgeEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: mxedge_id
          enum:
          - mxedge_id
          - type
          - mxcluster_id
          - package
          type: string
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: mist edge event type [Supported Events](/#operation/listGatewayApplications)
        in: query
        name: type
        schema:
          type: string
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countSiteMxEdgeEvents
      tags:
      - Sites MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/mxedges/events/search:
    get:
      description: Search Site Mist Edge Events
      operationId: searcSitehMistEdgeEvents
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: mist edge event type [Supported Events](/#operation/listGatewayApplications)
        in: query
        name: type
        schema:
          type: string
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeEventsSearch'
      summary: searcSitehMistEdgeEvents
      tags:
      - Sites MxEdges
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/mxedges/{mxedge_id}:
    delete:
      description: Delete Site Mist Edge
      operationId: deleteSiteMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMxEdge
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
    get:
      description: get Site Mist Edge
      operationId: getSiteMxEdge
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMxEdge
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
    put:
      description: Update Site Mist Edge settings
      operationId: updateSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxedge'
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteMxEdge
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/mxedges/{mxedge_id}/support:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadSiteMxEdgeSupportFiles
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 1574114372
                    for_site: true
                    id: b025de9b-7bb6-43bd-8a71-bf3cu840c9ad
                    magic: S2ZD-srTcoOp9GGttZpq1ISQEq4iPY3EhWpAKB9pb9JdWjeP12bjIbFYsDy5jP3a
                    model: ME-100
                    modified_time: 1574117211
                    mxagent_registered: false
                    mxcluster_id: c88aa7a2-ac27-7d87-b633-1ac3a7837929
                    name: staging_edge
                    org_id: 5a5ed2f4-632f-41f3-b8ed-d3afa4b27f96
                    services:
                    - tunterm
                    site_id: c88aa7a2-ac27-7d87-b633-1ac3a7837928
                    status: disconnected
                    tunterm_ip_config:
                      gateway: ''
                      ip: ''
                      netmask: ''
                    tunterm_port_config:
                      downstream_ports:
                      - '0'
                      separate_upstream_downstream: false
                      upstream_ports:
                      - '0'
                    tunterm_registered: false
              schema:
                properties:
                  created_time:
                    type: integer
                  for_site:
                    type: boolean
                  id:
                    type: string
                  magic:
                    type: string
                  model:
                    type: string
                  modified_time:
                    type: integer
                  mxagent_registered:
                    type: boolean
                  mxcluster_id:
                    format: uuid
                    type: string
                  name:
                    type: string
                  org_id:
                    type: string
                  services:
                    items:
                      type: string
                    type: array
                  site_id:
                    type: string
                  status:
                    type: string
                  tunterm_ip_config:
                    properties:
                      gateway:
                        type: string
                      ip:
                        type: string
                      netmask:
                        type: string
                    type: object
                  tunterm_port_config:
                    properties:
                      downstream_ports:
                        items:
                          type: string
                        type: array
                      separate_upstream_downstream:
                        type: boolean
                      upstream_ports:
                        items:
                          type: string
                        type: array
                    type: object
                  tunterm_registered:
                    type: boolean
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadSiteMxEdgeSupportFiles
      tags:
      - Sites MxEdges
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/mxtunnels/{mxtunnel_id}/preempt_aps:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxtunnel_id'
    post:
      description: "To preempt AP\u2019s which are not connected to preferred peer\
        \ to the preferred peer"
      operationId: preemptSitesMxTunnel
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  preempted_aps:
                    items:
                      type: string
                    type: array
                required:
                - preempted_aps
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: preemptSitesMxTunnel
      tags:
      - Sites MxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/psks:
    get:
      description: Get List of Site PSKs
      operationId: listSitePsks
      parameters:
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSitePsks
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site PSK
      operationId: createSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSitePsk
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
    put:
      description: Update multi PSKs
      operationId: updateSitePsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - id: 2f64a022-9422-4fa3-92aa-ff6559a9f7f9
                  name: common123
                  passphrase: foryoureyesonly2
                  ssid: warehouse
                - id: 110c59ae-d7b2-40f9-9bf2-82367370e55a
                  name: common12
                  passphrase: foryoureyesonly1
                  role: teacher
                  ssid: warehouse
                  usage: single
            schema:
              items:
                $ref: '#/components/schemas/psk'
              type: array
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSitePsks
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/psks/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Import PSK from CSV file or JSON


        ## CSV File Format

        ```csv

        PSK Import CSV File Format:

        name,ssid,passphrase,usage,vlan_id,mac

        Common,warehouse,foryoureyesonly,single,35,a31425f31278

        Justin,reception,visible,multi,1002

        ```'
      operationId: importSitePsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - created_time: 0
                  expire_time: 1614990263
                  id: 419f6eca-6276-4993-cfeb-53cbbbba6f00
                  mac: string
                  max_usage: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  passphrase: stringst
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  ssid: string
                  usage: multi
                  vlan_id: 0
            schema:
              items:
                $ref: '#/components/schemas/psk'
              type: array
          multipart/form-data:
            schema:
              properties:
                file:
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSitePsks
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/psks/{psk_id}:
    delete:
      description: Delete Site PSK
      operationId: deleteSitePsk
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSitePsk
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
    get:
      description: Get Site PSK Details
      operationId: getSitePsk
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSitePsk
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/psk_id'
    put:
      description: Update Site PSK
      operationId: updateSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSitePsk
      tags:
      - Sites Psks
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/rfdiags:
    get:
      description: List RF Glass Recording
      operationId: getSiteSiteRfdiagRecording
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RfdiagsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Start RF Glass Recording
      operationId: startSiteRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rfdiag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}:
    delete:
      description: Delete Recording
      operationId: deleteSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
    get:
      description: Get RF Diage Recording Details
      operationId: getSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
    put:
      description: Update Recording
      operationId: updateSiteRfdiagRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rfdiag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/download:
    get:
      description: 'Download Recording

        Download raw_events blob'
      operationId: downloadSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: downloadSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/stop:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
    post:
      description: If the recording session is active for the given rfdiag_id, it
        will finish the recording. duration and end_time will be updated to reflect
        the correct values.
      operationId: stopSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopSiteRfdiagRecording
      tags:
      - Sites Rfdiags
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/rftemplates/derived:
    get:
      description: Get derived RF Templates for Site
      operationId: getSiteRfTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
      summary: getSiteRfTemplateDerived
      tags:
      - Sites RF Templates
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/events/count:
    get:
      description: Count Rogue Events
      operationId: countSiteRogueEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: bssid
          enum:
          - bssid
          - ssid
          - ap
          - type
          type: string
      - $ref: '#/components/parameters/rogue_type'
      - description: ssid of the network detected as threat
        in: query
        name: ssid
        schema:
          type: string
      - description: bssid of the network detected as threat
        in: query
        name: bssid
        schema:
          type: string
      - description: mac of the device that had strongest signal strength for ssid/bssid
          pair
        in: query
        name: ap_mac
        schema:
          type: string
      - description: channel over which ap_mac heard ssid/bssid pair
        in: query
        name: channel
        schema:
          type: string
      - description: whether the reporting AP see a wireless client (on LAN) connecting
          to it
        in: query
        name: seen_on_lan
        schema:
          type: boolean
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteRogueEvents
      tags:
      - Sites Rogues
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/events/search:
    get:
      description: Search Rogue Events
      operationId: searchSiteRogueEvents
      parameters:
      - $ref: '#/components/parameters/rogue_type'
      - description: ssid of the network detected as threat
        in: query
        name: ssid
        schema:
          type: string
      - description: bssid of the network detected as threat
        in: query
        name: bssid
        schema:
          type: string
      - description: mac of the device that had strongest signal strength for ssid/bssid
          pair
        in: query
        name: ap_mac
        schema:
          type: string
      - description: channel over which ap_mac heard ssid/bssid pair
        in: query
        name: channel
        schema:
          type: integer
      - description: whether the reporting AP see a wireless client (on LAN) connecting
          to it
        in: query
        name: seen_on_lan
        schema:
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RogueEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteRogueEvents
      tags:
      - Sites Rogues
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/{rogue_bssid}:
    get:
      description: Get Rogue AP Details
      operationId: getSiteRogueAP
      parameters: []
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    manufacture: Intel Corporate
                    seen_as_client: true
              schema:
                properties:
                  manufacture:
                    type: string
                  seen_as_client:
                    type: boolean
                required:
                - seen_as_client
                - manufacture
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRogueAP
      tags:
      - Sites Rogues
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rogue_bssid'
  /api/v1/sites/{site_id}/rogues/{rogue_bssid}/deauth_clients:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rogue_bssid'
    post:
      description: Send Deauth frame to clients connected to a Rogue AP
      operationId: deauthSiteWirelessClientsConnectedToARogue
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deauthSiteWirelessClientsConnectedToARogue
      tags:
      - Sites Rogues
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/rrm/current:
    get:
      description: Get Current Channel Planning
      operationId: getSiteCurrentChannelPlanning
      responses:
        '200':
          $ref: '#/components/responses/Rrm'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentChannelPlanning
      tags:
      - Sites RRM
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rrm/current/devices/{device_id}/band/{band}:
    get:
      description: Get Current RRM Considerations for an AP on a Specific Band
      operationId: getSiteSpecificRrmConsiderations
      responses:
        '200':
          $ref: '#/components/responses/RrmConsideration'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSpecificRrmConsiderations
      tags:
      - Sites RRM
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    - description: radio band
      in: path
      name: band
      required: true
      schema:
        enum:
        - '24'
        - '5'
        - '6'
        type: string
  /api/v1/sites/{site_id}/rrm/events:
    get:
      description: Get Site RRM Events
      operationId: getSiteRrmEvents
      parameters:
      - in: query
        name: band
        required: true
        schema:
          enum:
          - '24'
          - '5'
          - '6'
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RrmEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRrmEvents
      tags:
      - Sites RRM
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rrm/optimize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Optimize Site RRM
      operationId: optimizeSiteRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                  - '24'
                  - '5'
                  - '6'
            schema:
              properties:
                bands:
                  description: list of bands
                  items:
                    type: string
                  type: array
                macs:
                  description: targeting AP (neighbor APs may get changed, too), default
                    is empty for ALL APs
                  items:
                    example: 5c5b35000001
                    type: string
                  type: array
                txpower_only:
                  default: false
                  description: only changng TX Power (will not disconnect clients)
                  type: boolean
              required:
              - bands
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: optimizeSiteRrm
      tags:
      - Sites RRM
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/stats/clients:
    get:
      description: Get List of Site All Clients Stats Details
      operationId: listSiteWirelessClientsStats
      parameters:
      - in: query
        name: wired
        schema:
          default: false
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              examples:
                wired-client:
                  value:
                  - _id: 003ee1bec926
                    _ttl: 277
                    ap_id: 00000000-0000-0000-1000-d420b085fdff
                    auth_state: authorizedForCompleteAccess
                    eth_port: eth1
                    last_seen: 1645060912.0751352
                    mac: e45f01319a43
                    rx_bytes: 0
                    rx_pkts: 0
                    site_id: 1916d52a-4a90-11e5-8b45-1258369c38a9
                    tx_bytes: 0
                    tx_pkts: 0
                    uptime: 8723766
                    vlan_id: 70
                wireless-client:
                  value:
                  - _ttl: 0
                    accuracy: 0
                    airespace_ifname: string
                    airwatch:
                      authorized: true
                    ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                    ap_mac: string
                    band: '24'
                    channel: 0
                    dual_band: true
                    family: string
                    guest:
                      authorized: false
                      authorized_expiring_time: 0
                      authorized_time: 0
                      company: string
                      email: string
                      field1: string
                      name: string
                    hostname: string
                    idle_time: 0
                    ip: string
                    is_guest: false
                    key_mgmt: string
                    last_seen: 0
                    mac: string
                    manufacture: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    model: string
                    num_locating_aps: 0
                    os: string
                    power_saving: true
                    proto: a
                    psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                    rssi: 0
                    rssizones:
                    - id: 500f6eca-6276-4993-ffeb-53cbbbb06f08
                      since: 0
                    rx_bps: 0
                    rx_bytes: 0
                    rx_packets: 0
                    rx_rate: 0
                    rx_retries: 0
                    snr: 0
                    ssid: string
                    tx_bps: 0
                    tx_bytes: 0
                    tx_packets: 0
                    tx_rate: 0
                    tx_retries: 0
                    type: string
                    uptime: 0
                    username: string
                    vbeacons:
                    - id: 496f6eca-6276-4993-bfeb-63cbbbb16f08
                      since: 0
                    vlan_id: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                    wxrule_id: 722ef429-6c3a-422c-83d1-2c18f12bd5d4
                    wxrule_usage:
                    - tag_id: 39c8a0b3-fbe8-4801-95bf-e8a0792edf1d
                      usage: 0
                    x: 0
                    y: 0
                    zones:
                    - id: 494f6eca-6276-4993-bfeb-73cbbbb26f08
                      since: 0
              schema:
                items:
                  oneOf:
                  - $ref: '#/components/schemas/stats_client_detail'
                  - $ref: '#/components/schemas/stats_client_wired'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWirelessClientsStats
      tags:
      - Sites Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/clients/{client_mac}:
    get:
      description: Get Site Client Stats Details
      operationId: getSiteWirelessClientStats
      parameters:
      - in: query
        name: wired
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              examples:
                wired-client:
                  value:
                    _id: 003ee1bec926
                    _ttl: 277
                    ap_id: 00000000-0000-0000-1000-d420b085fdff
                    auth_state: authorizedForCompleteAccess
                    eth_port: eth1
                    last_seen: 1645060912.0751352
                    mac: e45f01319a43
                    rx_bytes: 0
                    rx_pkts: 0
                    site_id: 1916d52a-4a90-11e5-8b45-1258369c38a9
                    tx_bytes: 0
                    tx_pkts: 0
                    uptime: 8723766
                    vlan_id: 70
                wireless-client:
                  value:
                  - _ttl: 0
                    accuracy: 0
                    airespace_ifname: string
                    airwatch:
                      authorized: true
                    ap_id: 325b588d-147b-4fa4-bb40-83383f83c77e
                    ap_mac: string
                    band: '24'
                    channel: 0
                    dual_band: true
                    family: string
                    guest:
                      authorized: false
                      authorized_expiring_time: 0
                      authorized_time: 0
                      company: string
                      email: string
                      field1: string
                      name: string
                    hostname: string
                    idle_time: 0
                    ip: string
                    is_guest: false
                    key_mgmt: string
                    last_seen: 0
                    mac: string
                    manufacture: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    model: string
                    num_locating_aps: 0
                    os: string
                    power_saving: true
                    proto: a
                    psk_id: 4cb94c10-4e99-46b0-8261-4c71d0b2cb9d
                    rssi: 0
                    rssizones:
                    - id: 500f6eca-6276-4993-ffeb-53cbbbb36f08
                      since: 0
                    rx_bps: 0
                    rx_bytes: 0
                    rx_packets: 0
                    rx_rate: 0
                    rx_retries: 0
                    snr: 0
                    ssid: string
                    tx_bps: 0
                    tx_bytes: 0
                    tx_packets: 0
                    tx_rate: 0
                    tx_retries: 0
                    type: string
                    uptime: 0
                    username: string
                    vbeacons:
                    - id: 496f6eca-6276-4993-bfeb-63cbbbb46f08
                      since: 0
                    vlan_id: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                    wxrule_id: 722ef429-6c3a-422c-83d1-2c18f12bd5d4
                    wxrule_usage:
                    - tag_id: 39c8a0b3-fbe8-4801-95bf-e8a0792edf1d
                      usage: 0
                    x: 0
                    y: 0
                    zones:
                    - id: 494f6eca-6276-4993-bfeb-73cbbbb56f08
                      since: 0
              schema:
                oneOf:
                - $ref: '#/components/schemas/stats_client_detail'
                - $ref: '#/components/schemas/stats_client_wired'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWirelessClientStats
      tags:
      - Sites Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/stats/devices/{device_id}/clients:
    get:
      description: Get wireless client stat by Device
      operationId: getSiteAllClientsStatsByDevice
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - _ttl: 0
                    accuracy: 0
                    airespace_ifname: string
                    airwatch:
                      authorized: true
                    ap_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    ap_mac: string
                    band: '24'
                    channel: 0
                    dual_band: true
                    family: string
                    guest:
                      authorized: true
                      authorized_expiring_time: 0
                      authorized_time: 0
                      company: string
                      email: string
                      field1: string
                      name: string
                    hostname: string
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    idle_time: 0
                    ip: 192.168.1.2
                    is_guest: true
                    key_mgmt: string
                    last_seen: 0
                    mac: string
                    manufacture: string
                    map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    model: string
                    name: string
                    num_locating_aps: 0
                    os: string
                    power_saving: true
                    proto: ac
                    psk_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                    rssi: 0
                    rx_bps: 0
                    rx_bytes: 0
                    rx_packets: 0
                    rx_rate: 0
                    rx_retries: 0
                    snr: 0
                    ssid: string
                    tx_bps: 0
                    tx_bytes: 0
                    tx_packets: 0
                    tx_rate: 0
                    tx_retries: 0
                    type: string
                    uptime: 0
                    username: string
                    vlan_id: 1
                    wlan_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    x: 0
                    y: 0
              schema:
                items:
                  $ref: '#/components/schemas/stats_client'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAllClientsStatsByDevice
      tags:
      - Sites Devices Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
  /api/v1/sites/{site_id}/stats/mxedges:
    get:
      description: Get List of Site MxEdges Stats
      operationId: listSiteMxEdgesStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMxEdgesStats
      tags:
      - Sites Devices Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/mxedges/{mxedge_id}:
    get:
      description: Get One Site MxEdge Stats
      operationId: getSiteMxEdgeStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMxEdgeStats
      tags:
      - Sites Devices Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
  /api/v1/sites/{site_id}/stats/wxrules:
    get:
      description: Get Wxlan Rule usage
      operationId: getSiteWxRulesUsage
      responses:
        '200':
          $ref: '#/components/responses/WxruleStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRulesUsage
      tags:
      - Sites Stats
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wlans:
    get:
      description: Get List of Site WLANs
      operationId: listSiteWlans
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWlans
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WLAN
      operationId: createSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbb6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbc6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                  - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                  - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                    - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                    - string
                    facebook_enabled: false
                    forward: false
                    forward_url: http://abc.com/promotions
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                    - mydomain.edu
                    - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                    - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: https://url/to/image.png
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                    - reserved.net
                    - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                  - snapchat.com
                  - ibm.com
                  portal_allowed_subnets:
                  - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                  - msg.snapchat.com
                  portal_image: http://example.com
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: http://example.com
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbd6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWlan
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wlans/derived:
    get:
      description: Get Wlans Derived
      operationId: listSiteWlanDerived
      parameters:
      - description: whether to resolve SITE_VARS
        example: true
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      - description: filter by WLAN ID
        in: query
        name: wlan_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWlanDerived
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wlans/{wlan_id}:
    delete:
      description: Delete Site WLAN
      operationId: deleteSiteWlan
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWlan
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
    get:
      description: Get Site WLAN
      operationId: getSiteWlan
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWlan
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: Update Site WLAN
      operationId: updateSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbe6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbf6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                  - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                  - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                    - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                    - string
                    facebook_enabled: false
                    forward: false
                    forward_url: http://abc.com/promotions
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                    - mydomain.edu
                    - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                    - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: https://url/to/image.png
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                    - reserved.net
                    - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                  - snapchat.com
                  - ibm.com
                  portal_allowed_subnets:
                  - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                  - msg.snapchat.com
                  portal_image: http://example.com
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: http://example.com
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba0f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWlan
      tags:
      - Sites Wlans
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxrules:
    get:
      description: Get List of Site WxLan Rules
      operationId: listSiteWxRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxRules
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxLan Rule
      operationId: createSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53ecbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxRule
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxrules/derived:
    get:
      description: Get Site WxLan Rule Derived
      operationId: getSiteWxRulesDerived
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRulesDerived
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wxrules/{wxrules_id}:
    delete:
      description: Delete Site WxLan Rule
      operationId: deleteSiteWxRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxRule
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
    get:
      description: Get Site WxLan Rule Details
      operationId: getSiteWxRule
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRule
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxrules_id'
    put:
      description: Update Site WxLan Rule
      operationId: updateSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53edbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxRule
      tags:
      - Sites WxRules
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxtags:
    get:
      description: Get List of Site WxTags
      operationId: listSiteWxTags
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtagArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxTags
      tags:
      - Sites WxTags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxTag
      operationId: createSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                  - gmail
                  - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file-servers
                  type: match
                  values:
                  - b0c4e7001543
                  - a0c4e7001543
                  - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                  - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file-servers
                  type: match
                  values:
                  - 10.1.2.1
                  - 10.2.3.4/24
                  - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                  - '80'
                  - '8000'
                  - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                  - test_key1
                  - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                  - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                  - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                  - john@abc.com
                  - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                  - port_range: '80'
                    protocol: tcp
                    subnets:
                    - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                  - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxTag
      tags:
      - Sites WxTags
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxtags/{wxtag_id}:
    delete:
      description: Delete Site WxTag
      operationId: deleteSiteWxTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxTag
      tags:
      - Sites WxTags
      - cat:WLAN:CONFIGURE
    get:
      description: Get Site WxTag Details
      operationId: getSiteWxTag
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxTag
      tags:
      - Sites WxTags
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtag_id'
    put:
      description: Update Site WxTag
      operationId: updateSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  last_ips:
                  - string
                  mac: string
                  match: wlan_id
                  name: string
                  op: in
                  resource_mac: string
                  services:
                  - string
                  specs:
                  - port_range: string
                    protocol: tcp
                    subnet:
                    - string
                  subnet: string
                  type: match
                  values:
                  - string
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxTag
      tags:
      - Sites WxTags
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxtags/{wxtag_id}/clients:
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getSiteCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: '#/components/responses/WxTagsMatchingArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentMatchingClientsOfAWxTag
      tags:
      - Sites WxTags
      - cat:WLAN:MONITOR
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtag_id'
  /api/v1/sites/{site_id}/wxtunnels:
    get:
      description: Get List of Site WxLan Tunnels
      operationId: listSiteWxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtunnelArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxTunnels
      tags:
      - Sites WxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxLan Tunnel
      operationId: createSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                    - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                  - string
                  router_id: string
                  secret: string
                  sessions:
                  - ap_as_session_id: string
                    comment: string
                    enable_cookie: true
                    ethertype: ethernet
                    local_session_id: 1
                    pseudo_802.1ad_enabled: true
                    remote_id: string
                    remote_session_id: 1
                    use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxTunnel
      tags:
      - Sites WxTunnels
      - cat:WLAN:CONFIGURE
  /api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}:
    delete:
      description: Delete Site WxLan Tunnel
      operationId: deleteSiteWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxTunnel
      tags:
      - Sites WxTunnels
      - cat:WLAN:CONFIGURE
    get:
      description: Get Site WxLan tunnel Details
      operationId: getSiteWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxTunnel
      tags:
      - Sites WxTunnels
      - cat:WLAN:CONFIGURE
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtunnel_id'
    put:
      description: Update Site WxLan Tunnel
      operationId: updateSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                    - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                  - string
                  router_id: string
                  secret: string
                  sessions:
                  - ap_as_session_id: string
                    comment: string
                    enable_cookie: true
                    ethertype: ethernet
                    local_session_id: 1
                    pseudo_802.1ad_enabled: true
                    remote_id: string
                    remote_session_id: 1
                    use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxTunnel
      tags:
      - Sites WxTunnels
      - cat:WLAN:CONFIGURE
components:
  parameters:
    admin_id:
      $ref: ./components/parameters/admin_id.yml
    alarm_id:
      $ref: ./components/parameters/alarm_id.yml
    alarmtemplate_id:
      $ref: ./components/parameters/alarmtemplate_id.yml
    apitoken_id:
      $ref: ./components/parameters/apitoken_id.yml
    aptemplate_id:
      $ref: ./components/parameters/aptemplate_id.yml
    client_mac:
      $ref: ./components/parameters/client_mac.yml
    country_code:
      $ref: ./components/parameters/country_code.yml
    device_id:
      $ref: ./components/parameters/device_id.yml
    device_mac:
      $ref: ./components/parameters/device_mac.yml
    duration:
      $ref: ./components/parameters/duration.yml
    end:
      $ref: ./components/parameters/end.yml
    guest_mac:
      $ref: ./components/parameters/guest_mac.yml
    image_name:
      $ref: ./components/parameters/image_name.yml
    interval:
      $ref: ./components/parameters/interval.yml
    invite_id:
      $ref: ./components/parameters/invite_id.yml
    ip:
      $ref: ./components/parameters/ip.yml
    limit:
      $ref: ./components/parameters/limit.yml
    metric:
      $ref: ./components/parameters/metric.yml
    msp_id:
      $ref: ./components/parameters/msp_id.yml
    mxcluster_id:
      $ref: ./components/parameters/mxcluster_id.yml
    mxedge_id:
      $ref: ./components/parameters/mxedge_id.yml
    mxtunnel_id:
      $ref: ./components/parameters/mxtunnel_id.yml
    name:
      $ref: ./components/parameters/name.yml
    org_id:
      $ref: ./components/parameters/org_id.yml
    orggroup_id:
      $ref: ./components/parameters/orggroup_id.yml
    page:
      $ref: ./components/parameters/page.yml
    psk_id:
      $ref: ./components/parameters/psk_id.yml
    psk_id_query:
      $ref: ./components/parameters/psk_id_query.yml
    pskportal_id:
      $ref: ./components/parameters/pskportal_id.yml
    q:
      $ref: ./components/parameters/q.yml
    rfdiag_id:
      $ref: ./components/parameters/rfdiag_id.yml
    rftemplate_id:
      $ref: ./components/parameters/rftemplate_id.yml
    rogue_bssid:
      $ref: ./components/parameters/rogue_bssid.yml
    rogue_type:
      $ref: ./components/parameters/rogue_type.yml
    secpolicy_id:
      $ref: ./components/parameters/secpolicy_id.yml
    site_id:
      $ref: ./components/parameters/site_id.yml
    site_name:
      $ref: ./components/parameters/site_name.yml
    sitegroup_id:
      $ref: ./components/parameters/sitegroup_id.yml
    sitetemplate_id:
      $ref: ./components/parameters/sitetemplate_id.yml
    sso_id:
      $ref: ./components/parameters/sso_id.yml
    ssorole_id:
      $ref: ./components/parameters/ssorole_id.yml
    start:
      $ref: ./components/parameters/start.yml
    template_id:
      $ref: ./components/parameters/template_id.yml
    ticket_id:
      $ref: ./components/parameters/ticket_id.yml
    token:
      $ref: ./components/parameters/token.yml
    uisetting_id:
      $ref: ./components/parameters/uisetting_id.yml
    upgrade_id:
      $ref: ./components/parameters/upgrade_id.yml
    webhook_id:
      $ref: ./components/parameters/webhook_id.yml
    wlan_id:
      $ref: ./components/parameters/wlan_id.yml
    wxrules_id:
      $ref: ./components/parameters/wxrules_id.yml
    wxtag_id:
      $ref: ./components/parameters/wxtag_id.yml
    wxtunnel_id:
      $ref: ./components/parameters/wxtunnel_id.yml
  responses:
    Admin:
      $ref: ./components/responses/Admin.yml
    AdminsArray:
      $ref: ./components/responses/AdminsArray.yml
    AlarmsSearch:
      $ref: ./components/responses/AlarmsSearch.yml
    Alarmtemplate:
      $ref: ./components/responses/Alarmtemplate.yml
    AlarmtemplatesArray:
      $ref: ./components/responses/AlarmtemplatesArray.yml
    AnomalyMetrics:
      $ref: ./components/responses/AnomalyMetrics.yml
    ApitokenOrg:
      $ref: ./components/responses/ApitokenOrg.yml
    ApitokenUser:
      $ref: ./components/responses/ApitokenUser.yml
    ApitokensOrgArray:
      $ref: ./components/responses/ApitokensOrgArray.yml
    ApitokensUserArray:
      $ref: ./components/responses/ApitokensUserArray.yml
    Aptemplate:
      $ref: ./components/responses/Aptemplate.yml
    AptemplatesArray:
      $ref: ./components/responses/AptemplatesArray.yml
    CallEventsArraySearch:
      $ref: ./components/responses/CallEventsArraySearch.yml
    CallStatsArray:
      $ref: ./components/responses/CallStatsArray.yml
    CallTroubleshoot:
      $ref: ./components/responses/CallTroubleshoot.yml
    Certificate:
      $ref: ./components/responses/Certificate.yml
    ClientEventsSearch:
      $ref: ./components/responses/ClientEventsSearch.yml
    ClientSessionsSearch:
      $ref: ./components/responses/ClientSessionsSearch.yml
    ClientsSearch:
      $ref: ./components/responses/ClientsSearch.yml
    ConstAlarmDefs:
      $ref: ./components/responses/ConstAlarmDefs.yml
    ConstApChannels:
      $ref: ./components/responses/ConstApChannels.yml
    ConstApLedArray:
      $ref: ./components/responses/ConstApLedArray.yml
    ConstApplications:
      $ref: ./components/responses/ConstApplications.yml
    ConstClientEventsArray:
      $ref: ./components/responses/ConstClientEventsArray.yml
    ConstCrountriesArray:
      $ref: ./components/responses/ConstCrountriesArray.yml
    ConstDeviceEventsArray:
      $ref: ./components/responses/ConstDeviceEventsArray.yml
    ConstDeviceModels:
      $ref: ./components/responses/ConstDeviceModels.yml
    ConstInsightMetrics:
      $ref: ./components/responses/ConstInsightMetrics.yml
    ConstLanaguagesArray:
      $ref: ./components/responses/ConstLanaguagesArray.yml
    ConstLicenceTypesArray:
      $ref: ./components/responses/ConstLicenceTypesArray.yml
    ConstNacEventsArray:
      $ref: ./components/responses/ConstNacEventsArray.yml
    ConstTrafficTypesArray:
      $ref: ./components/responses/ConstTrafficTypesArray.yml
    DeviceEventsSearch:
      $ref: ./components/responses/DeviceEventsSearch.yml
    DeviceIot:
      $ref: ./components/responses/DeviceIot.yml
    DeviceRadioChannels:
      $ref: ./components/responses/DeviceRadioChannels.yml
    EventsFastroam:
      $ref: ./components/responses/EventsFastroam.yml
    EventsSearch:
      $ref: ./components/responses/EventsSearch.yml
    File:
      $ref: ./components/responses/File.yml
    Guest:
      $ref: ./components/responses/Guest.yml
    GuestsArray:
      $ref: ./components/responses/GuestsArray.yml
    GuestsSearch:
      $ref: ./components/responses/GuestsSearch.yml
    HTTP400:
      $ref: ./components/responses/HTTP400.yml
    HTTP401:
      $ref: ./components/responses/HTTP401.yml
    HTTP403:
      $ref: ./components/responses/HTTP403.yml
    HTTP404:
      $ref: ./components/responses/HTTP404.yml
    HTTP429:
      $ref: ./components/responses/HTTP429.yml
    InsightMetric:
      $ref: ./components/responses/InsightMetric.yml
    InsightRogue:
      $ref: ./components/responses/InsightRogue.yml
    InsightRogueClients:
      $ref: ./components/responses/InsightRogueClients.yml
    InstallerAlarmtemplatesArray:
      $ref: ./components/responses/InstallerAlarmtemplatesArray.yml
    InstallerDevicesArray:
      $ref: ./components/responses/InstallerDevicesArray.yml
    InstallerSecpoliciesArray:
      $ref: ./components/responses/InstallerSecpoliciesArray.yml
    InstallerSitegroupsArray:
      $ref: ./components/responses/InstallerSitegroupsArray.yml
    InstallerSitesArray:
      $ref: ./components/responses/InstallerSitesArray.yml
    JseInfo:
      $ref: ./components/responses/JseInfo.yml
    Licence:
      $ref: ./components/responses/Licence.yml
    LicenceUsage:
      $ref: ./components/responses/LicenceUsage.yml
    LogsSearch:
      $ref: ./components/responses/LogsSearch.yml
    MacsArray:
      $ref: ./components/responses/MacsArray.yml
    Msp:
      $ref: ./components/responses/Msp.yml
    MxEdgeEventsSearch:
      $ref: ./components/responses/MxEdgeEventsSearch.yml
    MxEdgeSearch:
      $ref: ./components/responses/MxEdgeSearch.yml
    MxEdgeUpgrade:
      $ref: ./components/responses/MxEdgeUpgrade.yml
    MxEdgeUpgradesArray:
      $ref: ./components/responses/MxEdgeUpgradesArray.yml
    Mxcluster:
      $ref: ./components/responses/Mxcluster.yml
    MxclustersArray:
      $ref: ./components/responses/MxclustersArray.yml
    Mxedge:
      $ref: ./components/responses/Mxedge.yml
    MxedgeStats:
      $ref: ./components/responses/MxedgeStats.yml
    MxedgeStatsArray:
      $ref: ./components/responses/MxedgeStatsArray.yml
    MxedgeUpdateInfo:
      $ref: ./components/responses/MxedgeUpdateInfo.yml
    MxedgesArray:
      $ref: ./components/responses/MxedgesArray.yml
    MxedgesArrayStats:
      $ref: ./components/responses/MxedgesArrayStats.yml
    Mxtunnel:
      $ref: ./components/responses/Mxtunnel.yml
    MxtunnelsArray:
      $ref: ./components/responses/MxtunnelsArray.yml
    OK:
      $ref: ./components/responses/OK.yml
    OauthAppLink:
      $ref: ./components/responses/OauthAppLink.yml
    Org:
      $ref: ./components/responses/Org.yml
    OrgInventory:
      $ref: ./components/responses/OrgInventory.yml
    OrgInventoryAdd:
      $ref: ./components/responses/OrgInventoryAdd.yml
    OrgInventoryChanges:
      $ref: ./components/responses/OrgInventoryChanges.yml
    OrgSetting:
      $ref: ./components/responses/OrgSetting.yml
    OrgSiteSle:
      $ref: ./components/responses/OrgSiteSle.yml
    OrgStats:
      $ref: ./components/responses/OrgStats.yml
    Orggroup:
      $ref: ./components/responses/Orggroup.yml
    OrggroupsArray:
      $ref: ./components/responses/OrggroupsArray.yml
    OrggroupsSearch:
      $ref: ./components/responses/OrggroupsSearch.yml
    OrgsArray:
      $ref: ./components/responses/OrgsArray.yml
    OrgsArrayStats:
      $ref: ./components/responses/OrgsArrayStats.yml
    OrgsSearch:
      $ref: ./components/responses/OrgsSearch.yml
    Psk:
      $ref: ./components/responses/Psk.yml
    PskPortal:
      $ref: ./components/responses/PskPortal.yml
    PskPortalsArray:
      $ref: ./components/responses/PskPortalsArray.yml
    PsksArray:
      $ref: ./components/responses/PsksArray.yml
    Recaptcha:
      $ref: ./components/responses/Recaptcha.yml
    Rfdiag:
      $ref: ./components/responses/Rfdiag.yml
    RfdiagsArray:
      $ref: ./components/responses/RfdiagsArray.yml
    Rftemplate:
      $ref: ./components/responses/Rftemplate.yml
    RftemplatesArray:
      $ref: ./components/responses/RftemplatesArray.yml
    RogueEventsSearch:
      $ref: ./components/responses/RogueEventsSearch.yml
    Rrm:
      $ref: ./components/responses/Rrm.yml
    RrmConsideration:
      $ref: ./components/responses/RrmConsideration.yml
    RrmEvents:
      $ref: ./components/responses/RrmEvents.yml
    SecpoliciesArray:
      $ref: ./components/responses/SecpoliciesArray.yml
    Secpolicy:
      $ref: ./components/responses/Secpolicy.yml
    Session:
      $ref: ./components/responses/Session.yml
    Site:
      $ref: ./components/responses/Site.yml
    SiteSettings:
      $ref: ./components/responses/SiteSettings.yml
    SiteTemplate:
      $ref: ./components/responses/SiteTemplate.yml
    SiteTemplatesArray:
      $ref: ./components/responses/SiteTemplatesArray.yml
    Sitegroup:
      $ref: ./components/responses/Sitegroup.yml
    SitegroupsArray:
      $ref: ./components/responses/SitegroupsArray.yml
    SitesArray:
      $ref: ./components/responses/SitesArray.yml
    SitesSearch:
      $ref: ./components/responses/SitesSearch.yml
    SleClassifierSummary:
      $ref: ./components/responses/SleClassifierSummary.yml
    SleHistogram:
      $ref: ./components/responses/SleHistogram.yml
    SleImpactSummary:
      $ref: ./components/responses/SleImpactSummary.yml
    SleImpactedApplications:
      $ref: ./components/responses/SleImpactedApplications.yml
    SleImpactedAps:
      $ref: ./components/responses/SleImpactedAps.yml
    SleImpactedChassis:
      $ref: ./components/responses/SleImpactedChassis.yml
    SleImpactedClients:
      $ref: ./components/responses/SleImpactedClients.yml
    SleImpactedGateways:
      $ref: ./components/responses/SleImpactedGateways.yml
    SleImpactedInterfaces:
      $ref: ./components/responses/SleImpactedInterfaces.yml
    SleImpactedSwitches:
      $ref: ./components/responses/SleImpactedSwitches.yml
    SleImpactedUsers:
      $ref: ./components/responses/SleImpactedUsers.yml
    SleSummary:
      $ref: ./components/responses/SleSummary.yml
    SleThreshold:
      $ref: ./components/responses/SleThreshold.yml
    Sso:
      $ref: ./components/responses/Sso.yml
    SsoLatestFailures:
      $ref: ./components/responses/SsoLatestFailures.yml
    SsoSamlMetadata:
      $ref: ./components/responses/SsoSamlMetadata.yml
    Ssorole:
      $ref: ./components/responses/Ssorole.yml
    SsorolesArray:
      $ref: ./components/responses/SsorolesArray.yml
    SsosArray:
      $ref: ./components/responses/SsosArray.yml
    SyntheticTest:
      $ref: ./components/responses/SyntheticTest.yml
    SynthetictestStatus:
      $ref: ./components/responses/SynthetictestStatus.yml
    Template:
      $ref: ./components/responses/Template.yml
    TemplatesArray:
      $ref: ./components/responses/TemplatesArray.yml
    Ticket:
      $ref: ./components/responses/Ticket.yml
    TicketsArray:
      $ref: ./components/responses/TicketsArray.yml
    Troubleshoot:
      $ref: ./components/responses/Troubleshoot.yml
    TunnelsSearch:
      $ref: ./components/responses/TunnelsSearch.yml
    TwoFactorSecret:
      $ref: ./components/responses/TwoFactorSecret.yml
    UiSettings:
      $ref: ./components/responses/UiSettings.yml
    UiSettingsArray:
      $ref: ./components/responses/UiSettingsArray.yml
    Webhook:
      $ref: ./components/responses/Webhook.yml
    WebhookDeliverySearch:
      $ref: ./components/responses/WebhookDeliverySearch.yml
    WebhooksArray:
      $ref: ./components/responses/WebhooksArray.yml
    WirelessClientSessionsSearch:
      $ref: ./components/responses/WirelessClientSessionsSearch.yml
    Wlan:
      $ref: ./components/responses/Wlan.yml
    WlansArray:
      $ref: ./components/responses/WlansArray.yml
    WxTagsMatchingArray:
      $ref: ./components/responses/WxTagsMatchingArray.yml
    Wxrule:
      $ref: ./components/responses/Wxrule.yml
    WxruleArray:
      $ref: ./components/responses/WxruleArray.yml
    WxruleStatsArray:
      $ref: ./components/responses/WxruleStatsArray.yml
    Wxtag:
      $ref: ./components/responses/Wxtag.yml
    WxtagArray:
      $ref: ./components/responses/WxtagArray.yml
    WxtagClients:
      $ref: ./components/responses/WxtagClients.yml
    Wxtunnel:
      $ref: ./components/responses/Wxtunnel.yml
    WxtunnelArray:
      $ref: ./components/responses/WxtunnelArray.yml
    ZscalerAccount:
      $ref: ./components/responses/ZscalerAccount.yml
    assignSuccess:
      $ref: ./components/responses/assignSuccess.yml
    claimLicense:
      $ref: ./components/responses/claimLicense.yml
    count:
      $ref: ./components/responses/count.yml
    countMarvisActions:
      $ref: ./components/responses/countMarvisActions.yml
    getLicenceUsage:
      $ref: ./components/responses/getLicenceUsage.yml
  schemas:
    account_jamf_write:
      $ref: ./components/schemas/account_jamf_write.yml
    account_juniper_read:
      $ref: ./components/schemas/account_juniper_read.yml
    account_juniper_write:
      $ref: ./components/schemas/account_juniper_write.yml
    account_oauth_write:
      $ref: ./components/schemas/account_oauth_write.yml
    account_vmware_write:
      $ref: ./components/schemas/account_vmware_write.yml
    account_zscaler_write:
      $ref: ./components/schemas/account_zscaler_write.yml
    admin:
      $ref: ./components/schemas/admin.yml
    alarmtemplate:
      $ref: ./components/schemas/alarmtemplate.yml
    aptemplate:
      $ref: ./components/schemas/aptemplate.yml
    claimcodes:
      $ref: ./components/schemas/claimcodes.yml
    create_ha_cluster:
      $ref: ./components/schemas/create_ha_cluster.yml
    delete_ha_cluster:
      $ref: ./components/schemas/delete_ha_cluster.yml
    guest:
      $ref: ./components/schemas/guest.yml
    image_upload:
      $ref: ./components/schemas/image_upload.yml
    installer_provision_device:
      $ref: ./components/schemas/installer_provision_device.yml
    installer_site:
      $ref: ./components/schemas/installer_site.yml
    login:
      $ref: ./components/schemas/login.yml
    model_object_email:
      $ref: ./components/schemas/model_object_email.yml
    model_object_macs_array_string:
      $ref: ./components/schemas/model_object_macs_array_string.yml
    msp:
      $ref: ./components/schemas/msp.yml
    mxcluster:
      $ref: ./components/schemas/mxcluster.yml
    mxedge:
      $ref: ./components/schemas/mxedge.yml
    mxtunnel:
      $ref: ./components/schemas/mxtunnel.yml
    new_admin:
      $ref: ./components/schemas/new_admin.yml
    note:
      $ref: ./components/schemas/note.yml
    org:
      $ref: ./components/schemas/org.yml
    org_apitoken:
      $ref: ./components/schemas/org_apitoken.yml
    org_setting:
      $ref: ./components/schemas/org_setting.yml
    orggroup:
      $ref: ./components/schemas/orggroup.yml
    psk:
      $ref: ./components/schemas/psk.yml
    psk_portal:
      $ref: ./components/schemas/psk_portal.yml
    recover:
      $ref: ./components/schemas/recover.yml
    req_replace_device:
      $ref: ./components/schemas/req_replace_device.yml
    rfdiag:
      $ref: ./components/schemas/rfdiag.yml
    rftemplate:
      $ref: ./components/schemas/rftemplate.yml
    secpolicy:
      $ref: ./components/schemas/secpolicy.yml
    site:
      $ref: ./components/schemas/site.yml
    site_setting:
      $ref: ./components/schemas/site_setting.yml
    sitegroup:
      $ref: ./components/schemas/sitegroup.yml
    sitetemplate:
      $ref: ./components/schemas/sitetemplate.yml
    sle_threshold:
      $ref: ./components/schemas/sle_threshold.yml
    sso:
      $ref: ./components/schemas/sso.yml
    ssorole:
      $ref: ./components/schemas/ssorole.yml
    stats_client:
      $ref: ./components/schemas/stats_client.yml
    stats_client_detail:
      $ref: ./components/schemas/stats_client_detail.yml
    stats_client_wired:
      $ref: ./components/schemas/stats_client_wired.yml
    stats_site:
      $ref: ./components/schemas/stats_site.yml
    synthetic_test:
      $ref: ./components/schemas/synthetic_test.yml
    synthetic_test_device:
      $ref: ./components/schemas/synthetic_test_device.yml
    template:
      $ref: ./components/schemas/template.yml
    test_telstra:
      $ref: ./components/schemas/test_telstra.yml
    test_twilio:
      $ref: ./components/schemas/test_twilio.yml
    ticket:
      $ref: ./components/schemas/ticket.yml
    two_factor:
      $ref: ./components/schemas/two_factor.yml
    ui_settings:
      $ref: ./components/schemas/ui_settings.yml
    user_apitoken:
      $ref: ./components/schemas/user_apitoken.yml
    webhook:
      $ref: ./components/schemas/webhook.yml
    wlan:
      $ref: ./components/schemas/wlan.yml
    wxlan_rule:
      $ref: ./components/schemas/wxlan_rule.yml
    wxlan_tag:
      $ref: ./components/schemas/wxlan_tag.yml
    wxlan_tunnel:
      $ref: ./components/schemas/wxlan_tunnel.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
