openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2401.1.6**

    >

    > Date: **February 15, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2401.1.5
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: https://www.mist.com/wp-content/uploads/logo.png
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist Europe 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist Europe 01
  url: https://api.eu.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Mobile
- name: Orgs Asset Filters
- name: Orgs Assets
- name: Orgs SDK Clients
- name: Orgs SDK Templates
- name: Orgs Stats
- name: Sites Asset Filters
- name: Sites Assets
- name: Sites Beacons
- name: Sites Location
- name: Sites Maps
- name: Sites Rssizones
- name: Sites Stats
- name: Sites Zones
- name: Sites vBeacons
- name: Utilities Location
paths:
  /api/v1/mobile/verify/{secret}:
    parameters:
    - $ref: '#/components/parameters/secret'
    post:
      description: Verify secret
      operationId: activateSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/device_id'
      responses:
        '200':
          $ref: '#/components/responses/MobileVerifySecret'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: activateSdkInvite
      tags:
      - op:LOCATION:CONFIGURE:Mobile
      - Mobile
  /api/v1/orgs/{org_id}/assetfilters:
    get:
      description: "Get List of Org BLE asset filters. \nEach asset filter in the\
        \ list operates independently. For a filter object to match an asset, all\
        \ of the filter properties must match (logical \u2018AND\u2019 of each filter\
        \ property). For example, the \u201CVisitor Tags\u201D filter below will match\
        \ an asset when both the \u201Cibeacon\\_uuid\u201D and \u201Cibeacon_major\u201D\
        \ properties match the asset. All non-matching assets are ignored."
      operationId: listOrgAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetFilters
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Asset Filters
      - Orgs Asset Filters
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Create Asset Filter\n\nCreates a single BLE asset filter for the\
        \ given site. Any subset of filter properties can be included in the filter.\
        \ A matching asset must meet the conditions of all given filter properties\
        \ (logical \u2018AND\u2019)."
      operationId: createOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  created_time: 0
                  disasbled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  for_site: true
                  ibeacon_major: 0
                  ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                  id: 430f6eca-6276-4993-bfeb-53cb5bba6f08
                  mfg_company_id: 0
                  modified_time: 0
                  name: string
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
            schema:
              $ref: '#/components/schemas/asset_filter'
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAssetFilters
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Asset Filters
      - Orgs Asset Filters
  /api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAssetFilter
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Asset Filters
      - Orgs Asset Filters
    get:
      description: Get Org Asset Filter Details
      operationId: getOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAssetFilter
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Asset Filters
      - Orgs Asset Filters
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  disabled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab2
                  mfg_company_id: 0
                  name: string
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAssetFilters
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Asset Filters
      - Orgs Asset Filters
  /api/v1/orgs/{org_id}/assets:
    get:
      description: Get List of Org Assets
      operationId: listOrgAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssets
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Asset
      operationId: createOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAsset
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
  /api/v1/orgs/{org_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Impert Org Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n#### CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ``` "
      operationId: importOrgAssets
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - mac: a31eb04e1c38
                  name: Expensive Instrument
                - mac: a31eb04e1c37
                  name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - name
                - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgAssets
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
  /api/v1/orgs/{org_id}/assets/{asset_id}:
    delete:
      description: Delete Org Asset
      operationId: deleteOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAsset
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
    get:
      description: Get Org Asset Details
      operationId: getOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAsset
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Org Asset
      operationId: updateOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAsset
      tags:
      - op:LOCATION:CONFIGURE:Orgs:Assets
      - Orgs Assets
  /api/v1/orgs/{org_id}/sdkclients/{sdkclient_id}:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkclient_id'
    put:
      description: Update SDK Client
      operationId: updateSdkClient
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: John Smith
            schema:
              $ref: '#/components/schemas/name'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkClient
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
  /api/v1/orgs/{org_id}/sdkinvites:
    get:
      description: Get List of Org SDK Invites
      operationId: listSdkInvites
      responses:
        '200':
          $ref: '#/components/responses/SdkinvitesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkInvites
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Invite
      operationId: createSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  name: string
                  quota: 0
                  quota_limited: true
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkInvite
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}:
    delete:
      description: Revoke SDK Invite
      operationId: revokeSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: revokeSdkInvite
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
    get:
      description: Get SDK Invite Details
      operationId: getSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInvite
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    put:
      description: Update SDK Invite
      operationId: updateSdkInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkInvite
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/email:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by Email
      operationId: sendSdkInviteEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@abc.com
            schema:
              $ref: '#/components/schemas/email'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteEmail
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/qrcode:
    get:
      description: Revoke SDK Invite
      operationId: getSdkInviteQrCode
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInviteQrCode
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/sms:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by SMS
      operationId: sendSdkInviteSms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  number: '14081234567'
            schema:
              $ref: '#/components/schemas/sdk_invite_sms'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteSms
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Clients
      - Orgs SDK Clients
  /api/v1/orgs/{org_id}/sdktemplates:
    get:
      description: Get List of Org SDK Templates
      operationId: listSdkTemplates
      responses:
        '200':
          $ref: '#/components/responses/SdktemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkTemplates
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Templates
      - Orgs SDK Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Template
      operationId: createSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkTemplate
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Templates
      - Orgs SDK Templates
  /api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}:
    delete:
      description: Delete SDK Template
      operationId: deleteSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSdkTemplate
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Templates
      - Orgs SDK Templates
    get:
      description: Get SDK Template Details
      operationId: getSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkTemplate
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Templates
      - Orgs SDK Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdktemplate_id'
    put:
      description: Update SDK Template
      operationId: updateSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkTemplate
      tags:
      - op:LOCATION:CONFIGURE:Orgs:SDK Templates
      - Orgs SDK Templates
  /api/v1/orgs/{org_id}/stats/assets:
    get:
      description: Get List of Org Assets Stats
      operationId: listOrgAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetsStats
      tags:
      - op:LOCATION:MONITOR:Orgs:Stats
      - Orgs Stats
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/count:
    get:
      description: Count Org Assets
      operationId: countOrgAssetsByDistanceField
      parameters:
      - in: query
        name: distinct
        schema:
          enum:
          - site_id
          - mac
          - map_id
          - ibeacon_uuid
          - ibeacon_major
          - ibeacon_minor
          title: Org Asset count distinct
          type: string
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgAssetsByDistanceField
      tags:
      - op:LOCATION:MONITOR:Orgs:Assets
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/search:
    get:
      description: Search for Org Assets
      operationId: searchOrgAssets
      parameters:
      - in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: string
      - in: query
        name: ibeacon_minor
        schema:
          type: string
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: integer
      - in: query
        name: rssi
        schema:
          type: integer
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgAssets
      tags:
      - op:LOCATION:MONITOR:Orgs:Assets
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/sites/{site_id}/assetfilters:
    get:
      description: Get List of Site Asset Filters
      operationId: listSiteAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetFilters
      tags:
      - op:LOCATION:CONFIGURE:Sites:Asset Filters
      - Sites Asset Filters
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset Filter
      operationId: createSiteAssetFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAssetFilters
      tags:
      - op:LOCATION:CONFIGURE:Sites:Asset Filters
      - Sites Asset Filters
  /api/v1/sites/{site_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAssetFilter
      tags:
      - op:LOCATION:CONFIGURE:Sites:Asset Filters
      - Sites Asset Filters
    get:
      description: Get Site Asset Filter Details
      operationId: getSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetFilter
      tags:
      - op:LOCATION:CONFIGURE:Sites:Asset Filters
      - Sites Asset Filters
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateSiteAssetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAssetFilter
      tags:
      - op:LOCATION:CONFIGURE:Sites:Asset Filters
      - Sites Asset Filters
  /api/v1/sites/{site_id}/assets:
    get:
      description: Get List of Site Assets
      operationId: listSiteAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssets
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset
      operationId: createSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAsset
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
  /api/v1/sites/{site_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Impert Site Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n## CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ``` "
      operationId: importSiteAssets
      parameters:
      - description: API will replace the assets with same mac if provided `upsert`==`True`,
          otherwise will report in errors in response.
        in: query
        name: upsert
        schema:
          default: 'False'
          enum:
          - 'True'
          - 'False'
          type: string
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - mac: a31eb04e1c38
                  name: Expensive Instrument
                - mac: a31eb04e1c37
                  name: Cheap Instrument
            schema:
              items:
                properties:
                  mac:
                    minLength: 1
                    type: string
                  name:
                    minLength: 1
                    type: string
                required:
                - name
                - mac
                type: object
              minItems: 1
              type: array
              uniqueItems: true
          multipart/form-data:
            schema:
              properties:
                file:
                  description: CSV file
                  format: binary
                  type: string
              type: object
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteAssets
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
  /api/v1/sites/{site_id}/assets/{asset_id}:
    delete:
      description: Delete Site Asset
      operationId: deleteSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAsset
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
    get:
      description: Get Site Asset Details
      operationId: getSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAsset
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Site Asset
      operationId: updateSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAsset
      tags:
      - op:LOCATION:CONFIGURE:Sites:Assets
      - Sites Assets
  /api/v1/sites/{site_id}/beacons:
    get:
      description: Get List of Site Beacons
      operationId: listSiteBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/BeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeacons
      tags:
      - op:LOCATION:CONFIGURE:Sites:Beacons
      - Sites Beacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Beacon
      operationId: createSiteBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:Beacons
      - Sites Beacons
  /api/v1/sites/{site_id}/beacons/{beacon_id}:
    delete:
      description: Delete Site Beacon
      operationId: deleteSiteBeacons
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteBeacons
      tags:
      - op:LOCATION:CONFIGURE:Sites:Beacons
      - Sites Beacons
    get:
      description: Get Site Beacon Details
      operationId: getSiteBeacon
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:Beacons
      - Sites Beacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/beacon_id'
    put:
      description: Update Site Beacon
      operationId: updateSiteBeacons
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteBeacons
      tags:
      - op:LOCATION:CONFIGURE:Sites:Beacons
      - Sites Beacons
  /api/v1/sites/{site_id}/devices/send_ble_beacon:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Send arbitrary BLE Beacon for a period of time


        Note that only the devices that are connected will be restarted.'
      operationId: sendSiteDevicesArbitratryBleBeacon
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  beacon_frame: 68b329da9893e34099c7d8ad5cb9c940
                  beacon_freq: 100
                  duration: 10
                  macs:
                  - 5c5b35584a6f
                  - 5c5b350ea3b3
                  map_ids:
                  - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
            schema:
              $ref: '#/components/schemas/utils_send_ble_beacon'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSiteDevicesArbitratryBleBeacon
      tags:
      - op:LOCATION:UTILITIES:Location
      - Utilities Location
  /api/v1/sites/{site_id}/location/coverage:
    get:
      description: Get Beam Coverage Overview
      operationId: getSiteBeamCoverageOverview
      parameters:
      - description: map_id (filter by map_id)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client_type (as filter. optional)
        in: query
        name: client_type
        schema:
          title: coverage_client_type
          type: string
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/resolution'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      responses:
        '200':
          $ref: '#/components/responses/LocationCoverage'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeamCoverageOverview
      tags:
      - op:LOCATION:MONITOR:Sites:Location
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/current:
    get:
      description: 'Get Machine Learning Current Stat

        For each VBLE AP, it has ML model parameters (e.g. Path-loss-estimate, Intercept)
        as well as completion indicators (Level and PercentageComplete). For the completeness,
        ML takes N sample to finish its first level and use N*0.25 samples to complete
        each successive level. When a device is moved, the completeness will be reset
        as it has to re-learn.'
      operationId: getSiteMachineLearningCurrentStat
      parameters:
      - description: map_id (as filter, optional)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMachineLearningCurrentStat
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/defaults:
    get:
      description: Get Default PLF for Models
      operationId: getSiteDefaultPlfForModels
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDefaultPlfForModels
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/device/{device_id}:
    delete:
      description: Clear ML Overwrite for Device
      operationId: clearSiteMlOverwriteForDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForDevice
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: Overwrite ML For Device
      operationId: overwriteSiteMlForDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/ml_overwrite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForDevice
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
  /api/v1/sites/{site_id}/location/ml/map/{map_id}:
    delete:
      description: Clear ML Overwrite for Map
      operationId: clearSiteMlOverwriteForMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForMap
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    put:
      description: Overwrite ML For Map
      operationId: overwriteSiteMlForMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/ml_overwrite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForMap
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
  /api/v1/sites/{site_id}/location/ml/reset/map/{map_id}:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: Reset ML Stats by Map
      operationId: resetSiteMlStatsByMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: resetSiteMlStatsByMap
      tags:
      - op:LOCATION:CONFIGURE:Sites:Location
      - Sites Location
  /api/v1/sites/{site_id}/maps/{map_id}/wayfinding/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This imports the vendor map meta data into the Map JSON. This is
        required by the SDK and App in order to access/render the vendor Map properly.
      operationId: importSiteWayfindings
      requestBody:
        content:
          application/json:
            examples:
              Jimbstream:
                value:
                  client_id: 199d6770-0f6f-407a-9bd5-fc33c7840194
                  client_secret: /9Nog3yDzcYj0bY91XJZQLCt+m9DXaIVhx+Ghk3ddd
                  customer_id: 123
                  endpoint_url: https://api.jibestream.com
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mmpp: 223
                  ppm: 4
                  vendor_name: jibestream
                  venue_id: 123
              Micello:
                value:
                  account_key: adasdf
                  default_level_id: 5
                  map_id: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  vendor_name: micello
            schema:
              oneOf:
              - $ref: '#/components/schemas/map_jibestream'
              - $ref: '#/components/schemas/map_micello'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteWayfindings
      tags:
      - op:LOCATION:CONFIGURE:Sites:Maps
      - Sites Maps
  /api/v1/sites/{site_id}/rssizones:
    get:
      description: Get List of Site RSSI Zone (RSSI-based)
      operationId: listSiteRssiZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - created_time: 0
                    devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                items:
                  $ref: '#/components/schemas/rssizone'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRssiZones
      tags:
      - op:LOCATION:CONFIGURE:Sites:Rssizones
      - Sites Rssizones
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create RSSI Zone
      operationId: createSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssizone'
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 0
                    devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                $ref: '#/components/schemas/rssizone'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteRssiZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Rssizones
      - Sites Rssizones
  /api/v1/sites/{site_id}/rssizones/{rssizone_id}:
    delete:
      description: Delete Site RSSI Zone
      operationId: deleteSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteRssiZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Rssizones
      - Sites Rssizones
    get:
      description: Get Site RSSI Zone details
      operationId: getSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/RssizonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRssiZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Rssizones
      - Sites Rssizones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rssizone_id'
    put:
      description: Update Site RSSI Zone
      operationId: updateSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssizone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rssizone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteRssiZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Rssizones
      - Sites Rssizones
  /api/v1/sites/{site_id}/stats/assets:
    get:
      description: Get List of Site Assets Stats
      operationId: listSiteAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetsStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/asset_id:
    get:
      description: Get Site Asset Details
      operationId: getSiteAssetStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/count:
    get:
      description: Count Asset by distinct field
      operationId: countSiteAssets
      parameters:
      - in: query
        name: distinct
        schema:
          default: map_id
          enum:
          - mac
          - map_id
          - ibeacon_uuid
          - ibeacon_major
          - ibeacon_minor
          - eddystone_uid_namespace
          - eddystone_uid_instance
          - eddystone_url
          - by
          - name
          - device_name
          title: Site Assets count distinct
          type: string
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteAssets
      tags:
      - op:LOCATION:MONITOR:Sites:Assets
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/search:
    get:
      description: Assets Search
      operationId: searchSiteAssets
      parameters:
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: integer
      - in: query
        name: ibeacon_minor
        schema:
          type: integer
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: by
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: string
      - in: query
        name: rssi
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteAssets
      tags:
      - op:LOCATION:MONITOR:Sites:Assets
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/beacons:
    get:
      description: Get List of Site Beacons Stats
      operationId: listSiteBeaconsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stats_beacon'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeaconsStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_assets:
    get:
      description: "Get List of Site Discovered BLE Assets that doesn\u2019t match\
        \ any of the Asset / Assetfilters"
      operationId: listSiteDiscoveredAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/asset'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDiscoveredAssets
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/filtered_assets:
    get:
      description: Get a list of BLE beacons that matches Asset or AssetFilter
      operationId: getSiteAssetsOfInterest
      parameters:
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetOfInterestArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetsOfInterest
      tags:
      - op:LOCATION:MONITOR:Sites:Assets
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/discovered_assets:
    get:
      description: "Get a list of BLE beacons that we discovered (whether they\u2019\
        re defined as assets or not)"
      operationId: getSiteDiscoveredAssetByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - device_name: '[TV] UN65JU670D'
                    duration: 120
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_url: https://www.abc.com
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    last_seen: 1428939600
                    mac: 6fa474be7ae5
                    manufacture: Apple
                    mfg_company_id: 935
                    mfg_data: 648520a1020000
                    x: 60
                    y: 80
              schema:
                items:
                  $ref: '#/components/schemas/stats_asset'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDiscoveredAssetByMap
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/sdkclients:
    get:
      description: Get SdkClient Stats By Map
      operationId: getSiteSdkStatsByMap
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    x: 60
                    y: 80
              schema:
                items:
                  $ref: '#/components/schemas/stats_sdkclient'
                type: array
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStatsByMap
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/sdkclients/{sdkclient_id}:
    get:
      description: Get Detail Stats of a SdkClient
      operationId: getSiteSdkStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    vbeacons:
                    - id: d379d29d-24b4-96c5-5dd4-6f2a2dc5aaeb
                      since: 1428939300
                    x: 60
                    y: 80
                    zones:
                    - id: 8ac84899-32db-6327-334c-9b6d58544cfe
                      since: 1428939600
              schema:
                $ref: '#/components/schemas/stats_sdkclient_details'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/sdkclient_id'
  /api/v1/sites/{site_id}/stats/zones:
    get:
      description: Get List of Site Zones Stats
      operationId: listSiteZonesStats
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ZoneStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZonesStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/{zone_type}/{zone_id}:
    get:
      description: Get Detail Zone Stats
      operationId: getSiteZoneStats
      responses:
        '200':
          $ref: '#/components/responses/ZoneStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZoneStats
      tags:
      - op:LOCATION:MONITOR:Sites:Stats
      - Sites Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
    - $ref: '#/components/parameters/zone_id'
  /api/v1/sites/{site_id}/vbeacons:
    get:
      description: Get List of Site Virtual Beacons
      operationId: listSiteVBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/VBeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteVBeacons
      tags:
      - op:LOCATION:CONFIGURE:Sites:vBeacons
      - Sites vBeacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Virtual Beacon
      operationId: createSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteVBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:vBeacons
      - Sites vBeacons
  /api/v1/sites/{site_id}/vbeacons/{vbeacon_id}:
    delete:
      description: Delete Site Virtual Beacon
      operationId: deleteSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteVBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:vBeacons
      - Sites vBeacons
    get:
      description: Get Site Virtual Beacon Details
      operationId: getSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteVBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:vBeacons
      - Sites vBeacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/vbeacon_id'
    put:
      description: Update Site Virtual Beacon
      operationId: updateSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteVBeacon
      tags:
      - op:LOCATION:CONFIGURE:Sites:vBeacons
      - Sites vBeacons
  /api/v1/sites/{site_id}/zones:
    get:
      description: Get List of Site Zones
      operationId: listSiteZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ZonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZones
      tags:
      - op:LOCATION:CONFIGURE:Sites:Zones
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Zone
      operationId: createSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Zones
      - Sites Zones
  /api/v1/sites/{site_id}/zones/{zone_id}:
    delete:
      description: Delete Site Zone
      operationId: deleteSiteZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Zones
      - Sites Zones
    get:
      description: Get Site Zone Details
      operationId: getSiteZone
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Zones
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_id'
    put:
      description: Update Site Zone
      operationId: updateSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteZone
      tags:
      - op:LOCATION:CONFIGURE:Sites:Zones
      - Sites Zones
  /api/v1/sites/{site_id}/{zone_type}/count:
    get:
      description: Count Site Zone Sessions
      operationId: countSiteZoneSessions
      parameters:
      - example: scope_id
        in: query
        name: distinct
        schema:
          default: scope_id
          enum:
          - user_type
          - user
          - scope_id
          - scope
          title: Site Zone count distinct
          type: string
      - description: user type
        in: query
        name: user_type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          title: Zone Scope
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteZoneSessions
      tags:
      - op:LOCATION:MONITOR:Sites:Zones
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
  /api/v1/sites/{site_id}/{zone_type}/visits/search:
    get:
      description: Search Zone Sessions
      operationId: searchSiteZoneSessions
      parameters:
      - description: user type, client (default) / sdkclient / asset
        in: query
        name: user_type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          title: Visits Scope
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ZoneSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteZoneSessions
      tags:
      - op:LOCATION:MONITOR:Sites:Zones
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
components:
  parameters:
    asset_id:
      $ref: ../components/parameters/asset_id.yml
    assetfilter_id:
      $ref: ../components/parameters/assetfilter_id.yml
    beacon_id:
      $ref: ../components/parameters/beacon_id.yml
    device_id:
      $ref: ../components/parameters/device_id.yml
    duration:
      $ref: ../components/parameters/duration.yml
    end:
      $ref: ../components/parameters/end.yml
    limit:
      $ref: ../components/parameters/limit.yml
    map_id:
      $ref: ../components/parameters/map_id.yml
    org_id:
      $ref: ../components/parameters/org_id.yml
    page:
      $ref: ../components/parameters/page.yml
    resolution:
      $ref: ../components/parameters/resolution.yml
    rssizone_id:
      $ref: ../components/parameters/rssizone_id.yml
    sdkclient_id:
      $ref: ../components/parameters/sdkclient_id.yml
    sdkinvite_id:
      $ref: ../components/parameters/sdkinvite_id.yml
    sdktemplate_id:
      $ref: ../components/parameters/sdktemplate_id.yml
    secret:
      $ref: ../components/parameters/secret.yml
    site_id:
      $ref: ../components/parameters/site_id.yml
    start:
      $ref: ../components/parameters/start.yml
    vbeacon_id:
      $ref: ../components/parameters/vbeacon_id.yml
    zone_id:
      $ref: ../components/parameters/zone_id.yml
    zone_type:
      $ref: ../components/parameters/zone_type.yml
  responses:
    Asset:
      $ref: ../components/responses/Asset.yml
    AssetOfInterestArray:
      $ref: ../components/responses/AssetOfInterestArray.yml
    AssetStats:
      $ref: ../components/responses/AssetStats.yml
    Assetfilter:
      $ref: ../components/responses/Assetfilter.yml
    AssetfiltersArray:
      $ref: ../components/responses/AssetfiltersArray.yml
    AssetsArray:
      $ref: ../components/responses/AssetsArray.yml
    AssetsArrayStats:
      $ref: ../components/responses/AssetsArrayStats.yml
    AssetsArrayStatsSearch:
      $ref: ../components/responses/AssetsArrayStatsSearch.yml
    Beacon:
      $ref: ../components/responses/Beacon.yml
    BeaconsArray:
      $ref: ../components/responses/BeaconsArray.yml
    File:
      $ref: ../components/responses/File.yml
    HTTP400:
      $ref: ../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../components/responses/HTTP429.yml
    LocationCoverage:
      $ref: ../components/responses/LocationCoverage.yml
    Ml:
      $ref: ../components/responses/Ml.yml
    MobileVerifySecret:
      $ref: ../components/responses/MobileVerifySecret.yml
    OK:
      $ref: ../components/responses/OK.yml
    Rssizone:
      $ref: ../components/responses/Rssizone.yml
    RssizonesArray:
      $ref: ../components/responses/RssizonesArray.yml
    Sdkinvite:
      $ref: ../components/responses/Sdkinvite.yml
    SdkinvitesArray:
      $ref: ../components/responses/SdkinvitesArray.yml
    Sdktemplate:
      $ref: ../components/responses/Sdktemplate.yml
    SdktemplatesArray:
      $ref: ../components/responses/SdktemplatesArray.yml
    VBeacon:
      $ref: ../components/responses/VBeacon.yml
    VBeaconsArray:
      $ref: ../components/responses/VBeaconsArray.yml
    Zone:
      $ref: ../components/responses/Zone.yml
    ZoneSessionsSearch:
      $ref: ../components/responses/ZoneSessionsSearch.yml
    ZoneStats:
      $ref: ../components/responses/ZoneStats.yml
    ZoneStatsArray:
      $ref: ../components/responses/ZoneStatsArray.yml
    ZonesArray:
      $ref: ../components/responses/ZonesArray.yml
    count:
      $ref: ../components/responses/count.yml
  schemas:
    asset:
      $ref: ../components/schemas/asset.yml
    asset_filter:
      $ref: ../components/schemas/asset_filter.yml
    beacon:
      $ref: ../components/schemas/beacon.yml
    device_id:
      $ref: ../components/schemas/device_id.yml
    email:
      $ref: ../components/schemas/email.yml
    map_jibestream:
      $ref: ../components/schemas/map_jibestream.yml
    map_micello:
      $ref: ../components/schemas/map_micello.yml
    ml_overwrite:
      $ref: ../components/schemas/ml_overwrite.yml
    name:
      $ref: ../components/schemas/name.yml
    rf_client_type:
      $ref: ../components/schemas/rf_client_type.yml
    rssizone:
      $ref: ../components/schemas/rssizone.yml
    sdk_invite_sms:
      $ref: ../components/schemas/sdk_invite_sms.yml
    sdkinvite:
      $ref: ../components/schemas/sdkinvite.yml
    sdktemplate:
      $ref: ../components/schemas/sdktemplate.yml
    stats_asset:
      $ref: ../components/schemas/stats_asset.yml
    stats_beacon:
      $ref: ../components/schemas/stats_beacon.yml
    stats_sdkclient:
      $ref: ../components/schemas/stats_sdkclient.yml
    stats_sdkclient_details:
      $ref: ../components/schemas/stats_sdkclient_details.yml
    utils_send_ble_beacon:
      $ref: ../components/schemas/utils_send_ble_beacon.yml
    vbeacon:
      $ref: ../components/schemas/vbeacon.yml
    zone:
      $ref: ../components/schemas/zone.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
