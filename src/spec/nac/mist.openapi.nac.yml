openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2401.1.5**

    >

    > Date: **February 15, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2401.1.5
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
  x-logo:
    altText: Juniper-MistAI
    backgroundColor: '#FFFFFF'
    url: https://www.mist.com/wp-content/uploads/logo.png
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist Europe 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist Europe 01
  url: https://api.eu.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Orgs Clients - NAC
- name: Orgs NAC CRL
- name: Orgs NAC IDP
- name: Orgs NAC Rules
- description: 'nactags are the building blocks to compose nacrules.

    They can either appear in the "matching" / "not_matching" sections of a nacrule,
    in which case they play the role of classifiers, or they could appear in the "apply_tags"
    section of the of a nacrule, in which case they influence the result.

    When the "type" field of nactag is "match", it can be used as the classfier of
    a nacrule. "match" field specifies the attribute name and "values" field specifies
    the list of attribute values to match on. When multiple values are specified,
    its treated as an OR condition between those values.

    When the "type" field of nactag is NOT "match", it can be used as the result of
    a nacrule. "type" field identifies the action to take and the corresponding field
    would provide any associated parameters to that action.'
  name: Orgs NAC Tags
- name: Sites Clients - NAC
paths:
  /api/v1/orgs/{org_id}/mist_nac/test_idp:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "IDP Credential Validation. The output will be available through\
        \ websocket. As there can be multiple command issued against the same device\
        \ at the same time and the output all goes through the same websocket stream,\
        \ `session` is introduced for demux.\n\n#### Subscribe to Device Command outputs\n\
        `WS /api-ws/v1/stream`\n\n``` json\n{\n    \"subscribe\": \"orgs/:org_id/mist_nac/test_idp\"\
        \n}\n\n ```\n\n### Response (no idp can be found)\n\n``` json\n{\n    \"event\"\
        : \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\",\n    \"\
        status\": \n    \"data\": {\n        \"status\": \"failure\",\n        \"\
        error\": \"No matching IDP found\"\n    }\n}\n\n ```\n\n### Response OK\n\n\
        ``` json\n{\n    \"event\": \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\"\
        ,\n    \"status\": \n    \"data\": {\n        \"status\": \"success\",\n \
        \       \"idp_id\": \"915793c0-1355-4e98-b1c0-23df2227b357\",\n        \"\
        idp_type\": \"ldap\",\n        // more attributes will be added later\n  \
        \  }\n}\n\n ```\n\n### Response Invalid Credentials\n\n``` json\n{\n    \"\
        event\": \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\",\n\
        \    \"status\": \n    \"data\": {\n        \"status\": \"failure\",\n   \
        \     \"error\": \"Invalid Credentials\",\n        \"idp_id\": \"915793c0-1355-4e98-b1c0-23df2227b357\"\
        ,\n        \"idp_type\": \"ldap\",\n    }\n}\n\n ```"
      operationId: validateOrgIdpCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: xxxxxx
                  username: suriyas@juniper.net
            schema:
              $ref: '#/components/schemas/username_password'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
      summary: validateOrgIdpCredential
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC IDP
      - Orgs NAC IDP
  /api/v1/orgs/{org_id}/nac_clients/count:
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countOrgNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - last_nacrule_id
          - auth_type
          - last_vlan_id
          - last_nas_vendor
          - last_username
          - last_ap
          - mac
          - last_ssid
          - last_status
          - mdm_compliance_status
          - mdm_provider
          title: Org Nac Clients count distinct
          type: string
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: site id if assigned, null if not assigned
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countOrgNacClients
      tags:
      - op:NAC:MONITOR:Orgs:Clients - NAC
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/events/count:
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countOrgNacClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          enum:
          - type
          - nacrule_id
          - dryrun_nacrule_id
          - auth_type
          - vlan
          - nas_vendor
          - username
          - ap
          - mac
          - ssid
          title: Org Nac Client events count distinct
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countOrgNacClientEvents
      tags:
      - op:NAC:MONITOR:Orgs:Clients - NAC
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/events/search:
    get:
      description: Search NAC Client Events
      operationId: searchOrgNacClientEvents
      parameters:
      - description: event type, e.g. NAC_CLIENT_PERMIT
        in: query
        name: type
        schema:
          type: string
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          format: uuid
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: NAC Policy Dry Run Rule ID, if present and matched
        in: query
        name: dryrun_nacrule_id
        schema:
          type: string
      - description: True - if dryrun rule present and matched with priority, False
          - if not matched or not present
        in: query
        name: dryrun_nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201C802.1X\u201D, \u201CMAB\u201D\
          , \u201CDeviceAuth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: vlan
        schema:
          type: integer
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSID
        in: query
        name: bssid
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          format: uuid
          type: string
      - description: IDP returned roles/groups for the user
        in: query
        name: idp_role
        schema:
          type: string
      - description: Radius attributes returned by NAC to NAS Devive
        in: query
        name: resp_attrs
        schema:
          items:
            type: string
          type: array
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: AP random macMAC
        in: query
        name: random_mac
        schema:
          type: boolean
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/EventsNacClientSearch'
      summary: searchOrgNacClientEvents
      tags:
      - op:NAC:MONITOR:Orgs:Clients - NAC
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/search:
    get:
      description: Search Org NAC Clients
      operationId: searchOrgNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: site id if assigned, null if not assigned
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/ClientNacSearch'
      summary: searchOrgNacClients
      tags:
      - op:NAC:MONITOR:Orgs:Clients - NAC
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nacrules:
    get:
      description: Get List of Org NAC Rules
      operationId: listOrgNacRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NacRulesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacRules
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Rules
      - Orgs NAC Rules
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: create Org NAC Rule
      operationId: createOrgNacRule
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5"
                  matching:
                    auth_type: eap-tls
                    nactags:
                    - 041d5d36-716c-4cfb-4988-3857c6aa14a2
                    - a809a97f-d599-f812-eb8c-c3f84aabf6ba
                    port_types:
                    - wired
                    site_ids:
                    - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                    - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                    sitegroup_ids:
                    - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                    - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                  name: name1
                  not_matching: {}
                  order: 1
            schema:
              $ref: '#/components/schemas/nac_rule'
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNacRule
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Rules
      - Orgs NAC Rules
  /api/v1/orgs/{org_id}/nacrules/{nacrule_id}:
    delete:
      description: Delete Org NAC Rule
      operationId: deleteOrgNacRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacRule
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Rules
      - Orgs NAC Rules
    get:
      description: Get Org NAC Rule
      operationId: getOrgNacRule
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacRule
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Rules
      - Orgs NAC Rules
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacrule_id'
    put:
      description: Update Org NAC Rule
      operationId: updateOrgNacRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_rule'
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNacRule
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Rules
      - Orgs NAC Rules
  /api/v1/orgs/{org_id}/nactags:
    get:
      description: Get List of Org NAC Tags
      operationId: listOrgNacTags
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NacTagsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacTags
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Tags
      - Orgs NAC Tags
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org NAC Tag
      operationId: createOrgNacTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_tag'
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNacTag
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Tags
      - Orgs NAC Tags
  /api/v1/orgs/{org_id}/nactags/{nactag_id}:
    delete:
      description: Delete Org NAC Tag
      operationId: deleteOrgNacTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacTag
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Tags
      - Orgs NAC Tags
    get:
      description: Get Org NAC Tag
      operationId: getOrgNacTag
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacTag
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Tags
      - Orgs NAC Tags
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nactag_id'
    put:
      description: Update Org NAC Tag
      operationId: updateOrgNacTag
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/nac_tag'
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNacTag
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC Tags
      - Orgs NAC Tags
  /api/v1/orgs/{org_id}/setting/mist_nac_crls:
    get:
      description: Returns all uploaded CRL file IDs with names for the orgI
      operationId: getOrgNacCrl
      responses:
        '200':
          $ref: '#/components/responses/NacCrlFilesArray'
      summary: getOrgNacCrl
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC CRL
      - Orgs NAC CRL
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Import NAC Org CRL file is a multipart POST which has a .crl file
        to allow user to manually upload a Certificate Revocation List file. We support
        one file upload per Issuer. Re-uploads for the same issuer will overwrite
        the existing file.
      operationId: importOrgNacCrl
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: a binary .crl file
                  format: binary
                  type: string
                json:
                  description: json string with name for .crl file (optional)
                  type: string
              type: object
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/NacCrlFile'
      summary: importOrgNacCrl
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC CRL
      - Orgs NAC CRL
  /api/v1/orgs/{org_id}/setting/mist_nac_crls/{naccrl_id}:
    delete:
      description: Delete NAC Org CRL file is a DELETE request to delete CRL file
        identified by its ID (ID assigned on file upload/creation)
      operationId: deleteOrgNacCrl
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: deleteOrgNacCrl
      tags:
      - op:NAC:CONFIGURE:Orgs:NAC CRL
      - Orgs NAC CRL
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/naccrl_id'
  /api/v1/sites/{site_id}/nac_clients/count:
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countSiteNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - last_nacrule_id
          - auth_type
          - last_vlan_id
          - last_nas_vendor
          - last_username
          - last_ap
          - mac
          - last_ssid
          - last_status
          - mdm_compliance_status
          - mdm_provider
          title: Site Nac Clients count distinct
          type: string
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countSiteNacClients
      tags:
      - op:NAC:MONITOR:Sites:Clients - NAC
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/events/count:
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countSiteNacClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          enum:
          - type
          - nacrule_id
          - dryrun_nacrule_id
          - auth_type
          - vlan
          - nas_vendor
          - username
          - ap
          - mac
          - ssid
          title: Site Nac Client Events count distinct
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/count'
      summary: countSiteNacClientEvents
      tags:
      - op:NAC:MONITOR:Sites:Clients - NAC
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/events/search:
    get:
      description: Search NAC Client Events
      operationId: searcSitegNacClientEvents
      parameters:
      - description: event type, e.g. NAC_CLIENT_PERMIT
        in: query
        name: type
        schema:
          type: string
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          format: uuid
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: NAC Policy Dry Run Rule ID, if present and matched
        in: query
        name: dryrun_nacrule_id
        schema:
          type: string
      - description: True - if dryrun rule present and matched with priority, False
          - if not matched or not present
        in: query
        name: dryrun_nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g.  \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: vlan
        schema:
          type: integer
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSID
        in: query
        name: bssid
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          format: uuid
          type: string
      - description: IDP returned roles/groups for the user
        in: query
        name: idp_role
        schema:
          type: string
      - description: Radius attributes returned by NAC to NAS Devive
        in: query
        name: resp_attrs
        schema:
          items:
            type: string
          type: array
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: AP random macMAC
        in: query
        name: random_mac
        schema:
          type: boolean
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/EventsNacClientSearch'
      summary: searcSitegNacClientEvents
      tags:
      - op:NAC:MONITOR:Sites:Clients - NAC
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/search:
    get:
      description: Search Site NAC Clients
      operationId: searchSiteNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/ClientNacSearch'
      summary: searchSiteNacClients
      tags:
      - op:NAC:MONITOR:Sites:Clients - NAC
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
components:
  parameters:
    duration:
      $ref: ../components/parameters/duration.yml
    end:
      $ref: ../components/parameters/end.yml
    limit:
      $ref: ../components/parameters/limit.yml
    naccrl_id:
      $ref: ../components/parameters/naccrl_id.yml
    nacrule_id:
      $ref: ../components/parameters/nacrule_id.yml
    nactag_id:
      $ref: ../components/parameters/nactag_id.yml
    org_id:
      $ref: ../components/parameters/org_id.yml
    page:
      $ref: ../components/parameters/page.yml
    site_id:
      $ref: ../components/parameters/site_id.yml
    start:
      $ref: ../components/parameters/start.yml
  responses:
    ClientNacSearch:
      $ref: ../components/responses/ClientNacSearch.yml
    EventsNacClientSearch:
      $ref: ../components/responses/EventsNacClientSearch.yml
    HTTP400:
      $ref: ../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../components/responses/HTTP429.yml
    NacCrlFile:
      $ref: ../components/responses/NacCrlFile.yml
    NacCrlFilesArray:
      $ref: ../components/responses/NacCrlFilesArray.yml
    NacRule:
      $ref: ../components/responses/NacRule.yml
    NacRulesArray:
      $ref: ../components/responses/NacRulesArray.yml
    NacTag:
      $ref: ../components/responses/NacTag.yml
    NacTagsArray:
      $ref: ../components/responses/NacTagsArray.yml
    OK:
      $ref: ../components/responses/OK.yml
    WebsocketSession:
      $ref: ../components/responses/WebsocketSession.yml
    count:
      $ref: ../components/responses/count.yml
  schemas:
    nac_rule:
      $ref: ../components/schemas/nac_rule.yml
    nac_tag:
      $ref: ../components/schemas/nac_tag.yml
    username_password:
      $ref: ../components/schemas/username_password.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
