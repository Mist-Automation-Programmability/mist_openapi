openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2406.1.15**

    >

    > Date: **July 4, 2024**


    ---


    ### Additional Documentation

    * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html)

    * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html)

    * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)


    ---


    ### Helpful Resources

    * [API Sandbox and Exercises](https://api-class.mist.com/)

    * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace)

    * [API Demo Apps](https://apps.mist-lab.fr/)

    * [Juniper Blog](https://blogs.juniper.net/)


    ---

    '
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2406.1.15
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
    enableLogging: true
    generateExceptions: false
    generateInterfaces: true
    generateModels: true
    nullify404: true
    shortCopyrightNotice: "Copyright \xA9 2024 Juniper Networks, Inc.  All rights\
      \ reserved"
    useControllerPrefix: false
    useEnumPostfix: true
    useMethodPrefix: false
    useModelPostfix: false
    userAgent: SDK 2024.2.1
    userConfigurableRetries: true
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist EMEA 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist EMEA 02
      servers:
      - name: API Host
        url: https://api.gc3.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist EMEA 01
  url: https://api.eu.mist.com
- description: Mist EMEA 02
  url: https://api.gc3.mist.com
- description: Mist EMEA 03
  url: https://api.ac6.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- description: An organization usually represents a customer - which has inventories,
    licenses. An Organization can contain multiple sites. A site usually represents
    a deployment at the same location (a campus, an office).
  name: Orgs
- name: Orgs AP Templates
- description: API tokens can be generated for a specific Org/Site with the required
    privileges
  name: Orgs API Tokens
- name: Orgs Admins
- description: An Alarm Template is a set of Alarm Rules that could be applied to
    one or more sites (while each site can only pick one Alarm Template), or to the
    whole org.
  name: Orgs Alarm Templates
- description: Alarms are triggered based on certain events. Alarms could be configured
    using an Alarm Template.
  name: Orgs Alarms
- name: Orgs Asset Filters
- name: Orgs Assets
- name: Orgs CRL
- name: Orgs Cert
- description: SDK Invites can be generated for (and belongs to) an Org. They can
    be generated by an Admin of an Org and can be revoked at anytime.
  name: Orgs Clients - Marvis
- name: Orgs Clients - NAC
- name: Orgs Clients - SDK
- name: Orgs Clients - Wan
- name: Orgs Clients - Wired
- name: Orgs Clients - Wireless
- name: Orgs Cradlepoint
- description: 'While Templates / RF Templates / Network Templates / Gateway Templates
    provides powerful ways to control how a Device\''s configuration is derived for
    a Site. There are cases where you\''d like another level of control at the Org
    Level.

    A Device Profile contains a subset of Device\''s configurations you\''d like a
    device to have. It will be merged at runtime when we\''re provisioning an AP.'
  name: Orgs Device Profiles
- name: Orgs Devices
- description: API Call for 3rd party devices
  name: Orgs Devices - Others
- name: Orgs Devices - SSR
- name: Orgs Devices - WAN Cluster
- name: Orgs Devices Stats
- description: 'In Zscaler UI:

    1. add Partner Integration at https://admin.zscalerbeta.net/#administration/partner-integration

    2. Add Partner Administrator Role at https://admin.zscalerbeta.net/#administration/role-management
    - Name: Mist - Access: Full

    3. add Partner Admin at https://admin.zscalerbeta.net/#administration/admin-management  with
    - Login ID: john - email: john@abc.com

    4. Find the cloud name for ZIA https://help.zscaler.com/zia/what-my-cloud-name-zia'
  name: Orgs Devices Zscaler
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Orgs EVPN Topologies
- description: 'Gateway Template is applied to a site for gateway(s) in a site.


    When Templates are not used, Site Setting holds settings for multiple device types
    and they can differ to set device_type specific configs, use this whatever is
    defined under `gateway` will overwrite/shadow the one at root-level'
  name: Orgs Gateway Templates
- name: Orgs Guests
- name: Orgs IDP Profiles
- name: Orgs Inventory
- name: Orgs JSE
- description: "Juniper Support Insight is a free service provided to all Mist customers.\n\
    You can adopt your devices via a few lines CLI comands. Allowing you to \n* get\
    \ some basic information about the adopted devices \n* web shell into device (write\
    \ privilege required) \\n* upgrade (write privilege required)"
  name: Orgs JSI
- name: Orgs Licenses
- name: Orgs Linked Applications
- description: Audit logs records all administrative activities in an Org
  name: Orgs Logs
- name: Orgs Maps
- name: Orgs Marvis
- name: Orgs MxClusters
- name: Orgs MxEdges
- name: Orgs MxTunnels
- name: Orgs NAC CRL
- name: Orgs NAC IDP
- description: "PSK Portal is used to onboard Wireless Clients with PSK (by QR Code\
    \ or URL) NAC\n Portals are for onboard Wireless and Wired client with 802.1X\n\
    \nAfter a NAC portal is created, a URL is generated and can be given to the users\n\
    \ (e.g. hosted on a web page \\u201CGet Access to Campus Wireless\\u201D) The\
    \ user\n will use SSO to signin and download a Mist APP (via an App-Installation\
    \ URL)\n that will get installed and used to provision certificates."
  name: Orgs NAC Portals
- name: Orgs NAC Rules
- description: "nactags are the building blocks to compose nacrules.\nThey can either\
    \ appear in the \u201Cmatching\u201D / \u201Cnot_matching\u201D sections of a\
    \ nacrule, in which case they play the role of classifiers, or they could appear\
    \ in the \u201Capply_tags\u201D section of the of a nacrule, in which case they\
    \ influence the result.\nWhen the \u201Ctype\u201D field of nactag is \u201Cmatch\u201D\
    , it can be used as the classfier of a nacrule.\n- \u201Cmatch\u201D field specifies\
    \ the attribute name and \u201Cvalues\u201D field specifies the list of attribute\
    \ values to match on.\n- When multiple values are specified, its treated as an\
    \ OR condition between those values. This behavior can be changed by setting \u201C\
    match_all\u201D field to \u201Ctrue\u201D, in which case it is treated as an AND\
    \ condition between those values.\n- By default exact match is performed.\n\n\
    This behavior can be changed as follows:\n- Adding `-` at the beginning will perform\
    \ suffix match (ex: -staff will match foo-staff and bar-staff)\n- Adding `-` at\
    \ the end will perform prefix match (ex: foo- will match foo-staff and foo-interns)\n\
    - Adding `!` at both ends will perform substring match (ex: printer will match\
    \ hp-printer-bldg1, brother-printer-lab)\n- Adding `!` at the beginning will perform\
    \ negation of the match (ex: !ssid-guest will match any string that is not ssid-guest)\n\
    - Note: when negation should be used along with suffix/substring operation, !\
    \ should always precede \\* (ex: !guest will match any string that is not ending\
    \ with guest)\n\nWhen the \u201Ctype\u201D field of nactag is NOT \u201Cmatch\u201D\
    , it can be used as the result of a nacrule. \u201Ctype\u201D field identifies\
    \ the action to take and the corresponding field would provide any associated\
    \ parameters to that action. When the \u201Ctype\u201D field of nactag is NOT\
    \ \u201Cmatch\u201D and is any of the result type also supported by usermac table(`vlan`),\
    \ \u201Callow_usermac_override\u201D field can be set to true to allow the override\
    \ by usermac result"
  name: Orgs NAC Tags
- description: 'Network template is intended to be applied to a Site. It works like
    a blueprint of the network of the site.


    All Site Settings can go into Network Templates. See Site:Site Setting for schema


    Moreover, this can further be overwriten by individual Site Setting


    WantAssertionsSignedhen Templates are not used, Site Setting holds settings for
    multiple device types and they can differ to set device_type specific configs,
    use this whatever is defined under `switch` will overwrite/shadow the one at root-level'
  name: Orgs Network Templates
- name: Orgs Networks
- name: Orgs Premium Analytics
- description: 'PSK Self-Service Portals are for

    1. **WIFI users** who want to connect to a WLAN with personal PSK, they''re told
    to connect to a URL where they can login (likely through company\u2019s SSO) and
    get the WIFI Name / Passphrase - required input fields name, email so we can generate
    PSK

    2. **PSK Admins** (they don''t have access to normal Network Admin Portal)


    When a PSK portal is created, an unique URL will be generated (e.g. https://psk.mist.com/xxxxxx)'
  name: Orgs Psk Portals
- name: Orgs Psks
- name: Orgs RF Templates
- description: SDK Invites can be generated for (and belongs to) an Org. They can
    be generated by an Admin of an Org and can be revoked at anytime.
  name: Orgs SDK Invites
- name: Orgs SDK Templates
- name: Orgs SLEs
- name: Orgs SSO
- name: Orgs SSO Roles
- description: "Security Policy is designed to audit / catch discripancies between\n\
    \"what's intended to be running\" versus \"what's actually running\" in a network.\
    \ \n\nMany big organizations have separated Security and IT team (for good reasons).\
    \ Each site can be assigned a security policy.\n Whenever an AP is provisioned,\
    \ the configuration will be checked against the security policy.\n Any violations\
    \ will be flagged in [Device Config History]($e/Sites%20Devices/searchSiteDeviceConfigHistory)\
    \ where you can search for the when and where the violation occurs."
  name: Orgs SecPolicies
- name: Orgs Service Policies
- name: Orgs Services
- name: Orgs Setting
- description: Site template is intended to be applied to a Site. The items in site
    setting which should be shared for all device types.
  name: Orgs Site Templates
- description: Site groups are a group of sites under the same Org. It's many-to-many
    mapping to sites
  name: Orgs Sitegroups
- name: Orgs Sites
- name: Orgs Subscriptions
- name: Orgs Tickets
- name: Orgs Tunnels
- name: Orgs User MACs
- name: Orgs VPNs
- name: Orgs Vars
- name: Orgs WLAN Templates
- name: Orgs Webhooks
- name: Orgs Wlans
- name: Orgs WxRules
- name: Orgs WxTags
- name: Orgs WxTunnels
- name: Utilities PCAPs
- name: Utilities Upgrade
- name: Utilities Wi-Fi
paths:
  /api/v1/orgs:
    post:
      description: "Org admin can invite people to manage the org. Furthermore, he\
        \ can dictate the level of security those accounts are. The check is enforced\
        \ when the invited admin tries to \u201Caccept\u201D the invitation and every\
        \ time the admin tries to login"
      operationId: createOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  allow_mist: true
                  msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  orggroup_ids:
                  - 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  session_expiry: 0
            schema:
              $ref: '#/components/schemas/org'
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrg
      tags:
      - Orgs
  /api/v1/orgs/{org_id}:
    delete:
      description: Delete Org
      operationId: deleteOrg
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrg
      tags:
      - Orgs
    get:
      description: Get Organization information
      operationId: getOrg
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrg
      tags:
      - Orgs
    parameters:
    - $ref: '#/components/parameters/org_id'
    put:
      description: Update Org
      operationId: updateOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: 1984805d-2be2-4aec-a8d4-3ddf67fab0df
                  allow_mist: true
                  name: string
                  orggroup_ids: []
                  session_expiry: 1440
            schema:
              $ref: '#/components/schemas/org'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrg
      tags:
      - Orgs
  /api/v1/orgs/{org_id}/128routers/register_cmd:
    get:
      description: 128T devices can be managed/adopted by Mist.
      operationId: getOrg128TRegistrationCommands
      responses:
        '200':
          $ref: '#/components/responses/Router128TRegisterCmd'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrg128TRegistrationCommands
      tags:
      - Orgs Devices - SSR
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/admins:
    get:
      description: Get List of people who can manage the Site/Org under the Org
      operationId: listOrgAdmins
      responses:
        '200':
          $ref: '#/components/responses/AdminsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAdmins
      tags:
      - Orgs Admins
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/admins/{admin_id}:
    delete:
      description: This removes all privileges this admin has against the org
      operationId: revokeOrgAdmin
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: revokeOrgAdmin
      tags:
      - Orgs Admins
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/admin_id'
    put:
      description: Invite Org Admin
      operationId: updateOrgAdmin
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  email: jsnow@abc.com
                  expire_time: 0
                  first_name: John
                  hours: 24
                  last_name: Sno
                  phone: string
                  phone2: string
                  privileges:
                  - msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                    name: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    org_name: string
                    orggroup_ids:
                    - 497f6eca-6276-4993-bfeb-53d5bbba6f08
                    role: admin
                    scope: org
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    sitegroup_ids:
                    - 497f6eca-6276-4993-bfeb-53d6bbba6f08
                    views: switch_admin
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAdmin
      tags:
      - Orgs Admins
  /api/v1/orgs/{org_id}/alarms/ack:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Ack multiple Org Alarms
      operationId: ackOrgMultipleAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                  - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                  - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              $ref: '#/components/schemas/alarms'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: ackOrgMultipleAlarms
      tags:
      - Orgs Alarms
  /api/v1/orgs/{org_id}/alarms/ack_all:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Ack all Org Alarms


        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or
        equal to 1000.'
      operationId: ackOrgAllAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: string
            schema:
              $ref: '#/components/schemas/note_string'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: ackOrgAllAlarms
      tags:
      - Orgs Alarms
  /api/v1/orgs/{org_id}/alarms/count:
    get:
      description: Count Org Alarms
      operationId: countOrgAlarms
      parameters:
      - in: query
        name: distinct
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgAlarms
      tags:
      - Orgs Alarms
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/alarms/search:
    get:
      description: Search Org Alarms
      operationId: searchOrgAlarms
      parameters:
      - description: site ID
        in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - description: alarm type
        in: query
        name: type
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AlarmsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgAlarms
      tags:
      - Orgs Alarms
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/alarms/unack:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Unack multiple Org Alarms
      operationId: unackOrgMultipleAlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarm_ids:
                  - ccb8c94d-ca56-4075-932f-1f2ab444ff2c
                  - 98ff4a3d-ec9b-4138-a42e-54fc3335179d
                  note: maintenance window
            schema:
              $ref: '#/components/schemas/alarms'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unackOrgMultipleAlarms
      tags:
      - Orgs Alarms
  /api/v1/orgs/{org_id}/alarms/unack_all:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Unack all Org Alarms


        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or
        equal to 1000.'
      operationId: unackOrgAllArlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: '#/components/schemas/note_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unackOrgAllArlarms
      tags:
      - Orgs Alarms
  /api/v1/orgs/{org_id}/alarms/{alarm_id}/ack:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/alarm_id'
    post:
      description: Ack Org Alarm
      operationId: ackOrgAlarm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: '#/components/schemas/note_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: ackOrgAlarm
      tags:
      - Orgs Alarms
  /api/v1/orgs/{org_id}/alarmtemplates:
    get:
      description: Get List of Org Alarm Templates
      operationId: listOrgAlarmTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AlarmtemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAlarmTemplates
      tags:
      - Orgs Alarm Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Available rules can be found in Orgs>Consts>getAlarmDefs


        The delivery dict is only required if different from the template delivery
        settings.'
      operationId: createOrgAlarmTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alarm_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Alarmtemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAlarmTemplate
      tags:
      - Orgs Alarm Templates
  /api/v1/orgs/{org_id}/alarmtemplates/suppress:
    delete:
      description: Un-Suppress Suppressed Alarms
      operationId: unsuppressOrgSuppressedAlarms
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unsuppressOrgSuppressedAlarms
      tags:
      - Orgs Alarm Templates
    get:
      description: Get List of Org Alarms Currently Suppressed
      operationId: listOrgSuppressedAlarms
      parameters:
      - in: query
        name: scope
        schema:
          $ref: '#/components/schemas/suppressed_alarm_scope'
      responses:
        '200':
          $ref: '#/components/responses/OrgSuppressedAlarms'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSuppressedAlarms
      tags:
      - Orgs Alarm Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: In certain situations, for example, scheduled maintenance, you
        may want to suspend alarms to be triggered against Sites for a period of time.
      operationId: suppressOrgAlarm
      requestBody:
        content:
          application/json:
            examples:
              org_suppression:
                value:
                  duration: 3600
                  scheduled_time: 1678232980
                  scope: org
              site_suppression:
                value:
                  applies:
                    org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                    site_ids:
                    - 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    sitegroup_ids:
                    - 581328b6-e382-f54e-c9dc-999983183a34
                    - f57096b9-0c2f-4df6-c77b-ae6ae87a3d43
                  duration: 3600
                  scheduled_time: 1678232980
                  scope: site
            schema:
              $ref: '#/components/schemas/suppressed_alarm'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: suppressOrgAlarm
      tags:
      - Orgs Alarm Templates
  /api/v1/orgs/{org_id}/alarmtemplates/{alarmtemplate_id}:
    delete:
      description: Delete Org Alarm Template
      operationId: deleteOrgAlarmTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAlarmTemplate
      tags:
      - Orgs Alarm Templates
    get:
      description: Get Org Alarm Template Details
      operationId: getOrgAlarmTemplate
      responses:
        '200':
          $ref: '#/components/responses/Alarmtemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAlarmTemplate
      tags:
      - Orgs Alarm Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/alarmtemplate_id'
    put:
      description: Update Org Alarm Template
      operationId: updateOrgAlarmTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  delivery:
                    additional_emails:
                    - string
                    enabled: true
                    to_org_admins: true
                    to_site_admins: true
                  name: string
                  rules:
                    adhoc_network:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    air_magnet_scan:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    ap_offline:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    bad_cable:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    beacon_flood:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    bssid_spoofing:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    device_down:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    device_restarted:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    dhcp_failure:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    disassociation_flood:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    dot1x_failure:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_dictionary_attack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_failure_injection:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_handshake_flood:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eap_spoofed_success:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    eapol_logoff_attack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    essid_jack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    excessive_client:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    excessive_eapol_start:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gateway_down:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gw_bad_cable:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    gw_negotiation_mismatch:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    honeypot_ssid:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    krack_attack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    missing_vlan:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    monkey_jack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    negotiation_mismatch:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    non_compliant:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    out_of_sequence:
                      enabled: true
                    psk_failure:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    repeated_auth_failures:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    rogue_ap:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    rogue_client:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    secpolicy_violation:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    ssid_injection:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    switch_down:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    tkip_icv_attack:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    vendor_ie_missing:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    watched_station:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
                    zero_ssid_association:
                      delivery:
                        additional_emails:
                        - string
                        enabled: true
                        to_org_admins: true
                        to_site_admins: true
                      enabled: true
            schema:
              $ref: '#/components/schemas/alarm_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Alarmtemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAlarmTemplate
      tags:
      - Orgs Alarm Templates
  /api/v1/orgs/{org_id}/apitokens:
    get:
      description: Get List of Org API Tokens
      operationId: listOrgApiTokens
      responses:
        '200':
          $ref: '#/components/responses/ApitokensOrgArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgApiTokens
      tags:
      - Orgs API Tokens
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Create Org API Token

        Note that the token key is only available during creation time.'
      operationId: createOrgApiToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org_apitoken'
      responses:
        '200':
          $ref: '#/components/responses/ApitokenOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgApiToken
      tags:
      - Orgs API Tokens
  /api/v1/orgs/{org_id}/apitokens/{apitoken_id}:
    delete:
      description: Delete Org API Token
      operationId: deleteOrgApiToken
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgApiToken
      tags:
      - Orgs API Tokens
    get:
      description: Get Org API Token
      operationId: getOrgApiToken
      responses:
        '200':
          $ref: '#/components/responses/ApitokenOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgApiToken
      tags:
      - Orgs API Tokens
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/apitoken_id'
    put:
      description: Update Org API Token
      operationId: updateOrgApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: org_token_xyz
                  privileges:
                  - org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    role: admin
                    scope: org
            schema:
              $ref: '#/components/schemas/org_apitoken'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/ApitokenOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgApiToken
      tags:
      - Orgs API Tokens
  /api/v1/orgs/{org_id}/aptemplates:
    get:
      description: Get List of Org AP Templates
      operationId: listOrgAptemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AptemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAptemplates
      tags:
      - Orgs AP Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org AP Template
      operationId: createOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                    - match_model: string
                      name: string
                      port_config:
                        property1:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                        property2:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: '#/components/schemas/ap_template'
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAptemplate
      tags:
      - Orgs AP Templates
  /api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}:
    delete:
      description: Delete existing AP Template
      operationId: deleteOrgAptemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAptemplate
      tags:
      - Orgs AP Templates
    get:
      description: Get AP Template
      operationId: getOrgAptemplate
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAptemplate
      tags:
      - Orgs AP Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/aptemplate_id'
    put:
      description: Update AP Template
      operationId: updateOrgAptemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  ap_matching:
                    enabled: true
                    rules:
                    - match_model: string
                      name: string
                      port_config:
                        property1:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                        property2:
                          additional_vlan_ids:
                          - 55
                          - 66
                          authentication_protocol: pap
                          disabled: true
                          dynamic_vlan:
                            default_vlan_id: 999
                            enabled: true
                            type: string
                            vlans:
                              1-10: null
                              user: null
                          enable_mac_auth: false
                          forwarding: all
                          mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                          mxtunnel_name: string
                          port_auth: none
                          port_vlan_id: 1
                          radius_config:
                            acct_interim_interval: 0
                            acct_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1813
                              secret: testing123
                            auth_servers:
                            - host: 1.2.3.4
                              keywrap_enabled: true
                              keywrap_format: hex
                              keywrap_kek: '1122334455'
                              keywrap_mack: '1122334455'
                              port: 1812
                              secret: testing123
                            auth_servers_retries: 3
                            auth_servers_timeout: 5
                            coa_enabled: false
                            coa_port: 3799
                            network: string
                            source_ip: string
                          radsec:
                            enabled: true
                            idle_timeout: 60
                            mxcluster_ids:
                            - 572586b7-f97b-a22b-526c-8b97a3f609c4
                            proxy_hosts:
                            - mxedge1.local
                            server_name: radsec.abc.com
                            servers:
                            - host: 1.1.1.1
                              port: 1812
                            use_mxedge: true
                            use_site_mxedge: false
                          vlan_id: 9
                          vland_ids:
                          - 1
                          - 10
                          - 50
                          wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                          wxtunnel_remote_id: wifiguest
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: true
                    enable_arp_spoof: true
                    enable_shared_radio_scanning: false
                    enabled: true
                    locate_connected: false
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: true
                    mesh_enabled: true
                    proxy_arp: false
            schema:
              $ref: '#/components/schemas/ap_template'
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAptemplate
      tags:
      - Orgs AP Templates
  /api/v1/orgs/{org_id}/assetfilters:
    get:
      description: "Get List of Org BLE asset filters. \nEach asset filter in the\
        \ list operates independently. For a filter object to match an asset, all\
        \ of the filter properties must match (logical \u2018AND\u2019 of each filter\
        \ property). For example, the \u201CVisitor Tags\u201D filter below will match\
        \ an asset when both the \u201Cibeacon\\_uuid\u201D and \u201Cibeacon_major\u201D\
        \ properties match the asset. All non-matching assets are ignored."
      operationId: listOrgAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetFilters
      tags:
      - Orgs Asset Filters
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Create Asset Filter\n\nCreates a single BLE asset filter for the\
        \ given site. Any subset of filter properties can be included in the filter.\
        \ A matching asset must meet the conditions of all given filter properties\
        \ (logical \u2018AND\u2019)."
      operationId: createOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  disasbled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                  mfg_company_id: 0
                  name: string
            schema:
              $ref: '#/components/schemas/asset_filter'
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAssetFilters
      tags:
      - Orgs Asset Filters
  /api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAssetFilter
      tags:
      - Orgs Asset Filters
    get:
      description: Get Org Asset Filter Details
      operationId: getOrgAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAssetFilter
      tags:
      - Orgs Asset Filters
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateOrgAssetFilters
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  disabled: true
                  eddystone_uid_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab2
                  mfg_company_id: 0
                  name: string
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAssetFilters
      tags:
      - Orgs Asset Filters
  /api/v1/orgs/{org_id}/assets:
    get:
      description: Get List of Org Assets
      operationId: listOrgAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssets
      tags:
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Asset
      operationId: createOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgAsset
      tags:
      - Orgs Assets
  /api/v1/orgs/{org_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Impert Org Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n#### CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ```"
      operationId: importOrgAssets
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - mac: a31eb04e1c38
                  name: Expensive Instrument
                - mac: a31eb04e1c37
                  name: Cheap Instrument
            schema:
              $ref: '#/components/schemas/assets_import_json'
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/assets_import_file'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgAssets
      tags:
      - Orgs Assets
  /api/v1/orgs/{org_id}/assets/{asset_id}:
    delete:
      description: Delete Org Asset
      operationId: deleteOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgAsset
      tags:
      - Orgs Assets
    get:
      description: Get Org Asset Details
      operationId: getOrgAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgAsset
      tags:
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Org Asset
      operationId: updateOrgAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAsset
      tags:
      - Orgs Assets
  /api/v1/orgs/{org_id}/cert:
    get:
      description: Get Org Certificates
      operationId: getOrgCertificates
      responses:
        '200':
          $ref: '#/components/responses/Certificate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgCertificates
      tags:
      - Orgs Cert
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/cert/regenerate:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Clear Org Certificates
      operationId: clearOrgCertificates
      responses:
        '200':
          $ref: '#/components/responses/Certificate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearOrgCertificates
      tags:
      - Orgs Cert
  /api/v1/orgs/{org_id}/claim:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Claim Org licenses / activation codes
      operationId: claimOrgLicense
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: ZHT3K-H36DT-MG85D-M61AC
                  type: all
            schema:
              $ref: '#/components/schemas/claim_activation'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/ClaimLicense'
        '400':
          description: invalid key (or already used)
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: claimOrgLicense
      tags:
      - Orgs Licenses
  /api/v1/orgs/{org_id}/clients/count:
    get:
      description: Count Org Wireless Clients
      operationId: countOrgWirelessClients
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_clients_count_distinct'
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWirelessClients
      tags:
      - Orgs Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/events/search:
    get:
      description: Get Org Clients Events
      operationId: searchOrgWirelessClientEvents
      parameters:
      - $ref: '#/components/parameters/client_event_type'
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_proto'
      - $ref: '#/components/parameters/dot11_band'
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClientEvents
      tags:
      - Orgs Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/search:
    get:
      description: Search Org Wireless Clients
      operationId: searchOrgWirelessClients
      parameters:
      - description: Site ID
        in: query
        name: site_id
        schema:
          type: string
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: partial / full MAC address, hostname, username, psk_name or ip
        in: query
        name: text
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClients
      tags:
      - Orgs Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/sessions/count:
    get:
      description: Count Org Wireless Clients Sessions
      operationId: countOrgWirelessClientsSessions
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_client_sessions_count_distinct'
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_band'
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWirelessClientsSessions
      tags:
      - Orgs Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/sessions/search:
    get:
      description: Search Org Wireless Clients Sessions
      operationId: searchOrgWirelessClientSessions
      parameters:
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_band'
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: Username
        in: query
        name: client_username
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/WirelessClientSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWirelessClientSessions
      tags:
      - Orgs Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/clients/{client_mac}/coa:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthOrgDot1xWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: reauthOrgDot1xWirelessClient
      tags:
      - Utilities Wi-Fi
  /api/v1/orgs/{org_id}/clone:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create an Org by cloning from another one. Org Settings, Templates,
        Wxlan Tags, Wxlan Tunnels, Wxlan Rules, Org Wlans will be copied. Sites and
        Site Groups will not be copied, and therefore, the copied template will not
        be applied to any site/sitegroups.
      operationId: cloneOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: New Org
            schema:
              $ref: '#/components/schemas/name_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: cloneOrg
      tags:
      - Orgs
  /api/v1/orgs/{org_id}/crl:
    get:
      description: Get Org CRL File
      operationId: getOrgCrlFile
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgCrlFile
      tags:
      - Orgs CRL
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/crl/truncate:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: By default, all certs used by recently unclaimed devices within
        9 month will be included in CRL. If the list grows too big, you can truncate
        it
      operationId: truncateOrgCrlFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/days_number'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: truncateOrgCrlFile
      tags:
      - Orgs Cert
  /api/v1/orgs/{org_id}/deviceprofiles:
    get:
      description: Get List of Org Device Profiles
      operationId: listOrgDeviceProfiles
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/DeviceprofilesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgDeviceProfiles
      tags:
      - Orgs Device Profiles
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Device Profile
      operationId: createOrgDeviceProfiles
      requestBody:
        content:
          application/json:
            examples:
              deviceprofile_ap:
                value:
                  aeroscout:
                    enabled: false
                    host: aero.pvt.net
                    locate_connected: true
                  ble_config:
                    beacon_enabled: false
                    beacon_rate: 3
                    beacon_rate_mode: custom
                    beam_disabled:
                    - 1
                    - 3
                    - 6
                    custom_ble_packet_enabled: false
                    custom_ble_packet_frame: 0x........
                    custom_ble_packet_freq_msec: 300
                    eddystone_uid_adv_power: -65
                    eddystone_uid_beams: 2-4,7
                    eddystone_uid_enabled: false
                    eddystone_uid_freq_msec: 200
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_adv_power: -65
                    eddystone_url_beams: 2-4,7
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 1000
                    eddystone_url_url: https://www.abc.com
                    ibeacon_adv_power: -65
                    ibeacon_beams: 2-4,7
                    ibeacon_enabled: false
                    ibeacon_freq_msec: 0
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    power: 10
                    power_mode: custom
                  disable_eth1: false
                  disable_eth2: false
                  disable_eth3: false
                  disable_module: false
                  height: 0
                  iot_config:
                    A1:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A2:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A3:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    A4:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                    DI1:
                      enabled: false
                      name: string
                      pullup: internal
                    DI2:
                      enabled: false
                      name: string
                      pullup: internal
                    DO:
                      enabled: false
                      name: motion
                      output: true
                      pullup: internal
                      value: 0
                  ip_config:
                    dns:
                    - 8.8.8.8
                    - 4.4.4.4
                    dns_suffix:
                    - .mist.local
                    - .mist.com
                    gateway: 10.2.1.254
                    gateway6: 2607:f8b0:4005:808::1
                    ip: 10.2.1.1
                    ip6: 2607:f8b0:4005:808::2004
                    mtu: 0
                    netmask: 255.255.255.0
                    netmask6: /32
                    type: static
                    type6: static
                    vlan_id: 1
                  led:
                    brightness: 255
                    enabled: true
                  mesh:
                    enabled: false
                    group: 1
                    role: base
                  name: string
                  notes: string
                  ntp_servers:
                  - string
                  orientation: 0
                  orientation_overwrite: true
                  poe_passthrough: false
                  port_config:
                    property1:
                      additional_vlan_ids:
                      - 55
                      - 66
                      authentication_protocol: pap
                      disabled: true
                      dynamic_vlan:
                        default_vlan_id: 999
                        enabled: true
                        type: string
                        vlans:
                          1-10: null
                          user: null
                      enable_mac_auth: false
                      forwarding: all
                      mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                      mxtunnel_name: string
                      port_auth: none
                      port_vlan_id: 1
                      radius_config:
                        acct_interim_interval: 0
                        acct_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1813
                          secret: testing123
                        auth_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1812
                          secret: testing123
                        auth_servers_retries: 3
                        auth_servers_timeout: 5
                        coa_enabled: false
                        coa_port: 3799
                        network: string
                        source_ip: string
                      radsec:
                        enabled: true
                        idle_timeout: 60
                        mxcluster_ids:
                        - 572586b7-f97b-a22b-526c-8b97a3f609c4
                        proxy_hosts:
                        - mxedge1.local
                        server_name: radsec.abc.com
                        servers:
                        - host: 1.1.1.1
                          port: 1812
                        use_mxedge: true
                        use_site_mxedge: false
                      vlan_id: 9
                      vland_ids:
                      - 1
                      - 10
                      - 50
                      wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                      wxtunnel_remote_id: wifiguest
                    property2:
                      additional_vlan_ids:
                      - 55
                      - 66
                      authentication_protocol: pap
                      disabled: true
                      dynamic_vlan:
                        default_vlan_id: 999
                        enabled: true
                        type: string
                        vlans:
                          1-10: null
                          user: null
                      enable_mac_auth: false
                      forwarding: all
                      mx_tunnel_id: 08cd7499-5841-51c8-e663-fb16b6f3b45e
                      mxtunnel_name: string
                      port_auth: none
                      port_vlan_id: 1
                      radius_config:
                        acct_interim_interval: 0
                        acct_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1813
                          secret: testing123
                        auth_servers:
                        - host: 1.2.3.4
                          keywrap_enabled: true
                          keywrap_format: hex
                          keywrap_kek: '1122334455'
                          keywrap_mack: '1122334455'
                          port: 1812
                          secret: testing123
                        auth_servers_retries: 3
                        auth_servers_timeout: 5
                        coa_enabled: false
                        coa_port: 3799
                        network: string
                        source_ip: string
                      radsec:
                        enabled: true
                        idle_timeout: 60
                        mxcluster_ids:
                        - 572586b7-f97b-a22b-526c-8b97a3f609c4
                        proxy_hosts:
                        - mxedge1.local
                        server_name: radsec.abc.com
                        servers:
                        - host: 1.1.1.1
                          port: 1812
                        use_mxedge: true
                        use_site_mxedge: false
                      vlan_id: 9
                      vland_ids:
                      - 1
                      - 10
                      - 50
                      wxtunnel_id: 7dae216d-7c98-a51b-e068-dd7d477b7216
                      wxtunnel_remote_id: wifiguest
                  pwr_config:
                    base: 0
                  radio_config:
                    allow_rrm_disable: false
                    ant_gain_24: 4
                    ant_gain_5: 5
                    ant_gain_6: 5
                    antenna_mode: default
                    band_24:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_24_usage: '5'
                    band_5:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_6:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    indoor_use: false
                    scanning_enabled: true
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  switch_config:
                    enabled: false
                    eth0:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                    eth1:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                    eth2:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                    eth3:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                    module:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                    wds:
                      additional_vlan_ids:
                      - 0
                      enable_vlan: true
                      port_vlan_id: 0
                      vlan_ids:
                      - 0
                  type: ap
                  usb_config:
                    cacert: string
                    channel: 3
                    enabled: true
                    host: 1.1.1.1
                    port: 0
                    type: imagotag
                    verify_cert: true
                    vlan_id: 1
                  vars: {}
                  x: 0
                  y: 0
              deviceprofile_hub:
                value:
                  dhcpd_config:
                    Corp-Mgmt:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.172.9
                      ip_end: 10.3.172.99
                      ip_start: 10.3.172.50
                      type: local
                    Corp-lan:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.171.9
                      ip_end: 10.3.171.99
                      ip_start: 10.3.171.50
                      type: local
                  dnsOverride: true
                  dns_servers:
                  - 10.3.20.201
                  - 10.3.51.222
                  - 1.1.1.1
                  dns_suffix:
                  - example.com
                  extra_routes:
                    10.101.0.0/16:
                      via: 10.3.100.10
                  ip_configs:
                    Corp-Core:
                      ip: 10.3.100.9
                      netmask: /24
                      type: static
                    Corp-Mgmt:
                      ip: 10.3.172.9
                      netmask: /24
                      type: static
                    Corp-lan:
                      ip: 10.3.171.9
                      netmask: /24
                      type: static
                  name: ITParis
                  ntpOverride: true
                  ntp_servers:
                  - 10.3.51.222
                  path_preferences:
                    core:
                      paths:
                      - networks:
                        - Corp-Core
                        type: local
                      strategy: ordered
                    lab:
                      paths:
                      - networks:
                        - Corp-lan
                        type: local
                      strategy: ordered
                    mgmt:
                      paths:
                      - networks:
                        - Corp-Mgmt
                        type: local
                      strategy: ordered
                    untrust:
                      paths:
                      - name: wan
                        type: wan
                      strategy: ordered
                  port_config:
                    ge-0/0/0:
                      aggregated: false
                      ip_config:
                        gateway: 192.168.1.1
                        ip: 192.168.1.9
                        netmask: /24
                        type: static
                      name: wan
                      redundant: false
                      traffic_shaping:
                        enabled: false
                      usage: wan
                      wan_type: broadband
                    ge-0/0/6-7:
                      ae_disable_lacp: false
                      ae_idx: '0'
                      ae_lacp_force_up: true
                      aggregated: true
                      networks:
                      - Corp-lan
                      - Corp-Mgmt
                      - Corp-Core
                      usage: lan
                  service_policies:
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-Internal
                    path_preference: core
                    services:
                    - internal_dns
                    - drive
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-internet
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-core
                    path_preference: core
                    services:
                    - internal_dns
                    - internal_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-mxe-tt-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-untrust0
                    path_preference: untrust
                    services:
                    - mxedge-updates
                    - radsec
                    - icmp
                    - internet_dns
                    - internet_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mxe-data-0-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-mgt
                    path_preference: mgmt
                    services:
                    - mgmt
                    tenants:
                    - domain.Corp-Core
                    - lan.Corp-Core
                    - servers.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-edge-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - lan.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-iot
                    path_preference: iot
                    services:
                    - iot
                    tenants:
                    - lan.Corp-Core
                    - servers-hassio.Corp-Core
                    - servers-kubes.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: tanker-to-cctv
                    path_preference: iot
                    services:
                    - rtsp
                    tenants:
                    - servers-tanker.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: core-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - lan.Corp-Core
                    - domain.Corp-Core
                    - servers.Corp-Core
                  - action: deny
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: iot-upgrade-cctv
                    path_preference: untrust
                    services:
                    - motioneye
                    - nodejs
                    - raspbian
                    tenants:
                    - printer
                  type: gateway
            schema:
              $ref: '#/components/schemas/deviceprofile'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Deviceprofile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgDeviceProfiles
      tags:
      - Orgs Device Profiles
  /api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}:
    delete:
      description: Delete Org Device Profile
      operationId: deleteOrgDeviceProfile
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgDeviceProfile
      tags:
      - Orgs Device Profiles
    get:
      description: Get Org device Profile Details
      operationId: getOrgDeviceProfile
      responses:
        '200':
          $ref: '#/components/responses/Deviceprofile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgDeviceProfile
      tags:
      - Orgs Device Profiles
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/deviceprofile_id'
    put:
      description: Update Org Device Profile
      operationId: updateOrgDeviceProfile
      requestBody:
        content:
          application/json:
            examples:
              deviceprofile_ap:
                value:
                  aeroscout:
                    enabled: true
                    host: string
                  ble_config:
                    beacon_enabled: true
                    beacon_rate: 0
                    beacon_rate_mode: default
                    beam_disabled:
                    - 0
                    eddystone_uid_adv_power: -100
                    eddystone_uid_beams: string
                    eddystone_uid_enabled: true
                    eddystone_uid_freq_msec: 0
                    eddystone_uid_instance: string
                    eddystone_uid_namespace: string
                    eddystone_url_adv_power: 0
                    eddystone_url_beams: string
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 0
                    eddystone_url_url: string
                    ibeacon_adv_power: -100
                    ibeacon_beams: string
                    ibeacon_enabled: true
                    ibeacon_freq_msec: 0
                    ibeacon_major: 0
                    ibeacon_minor: 0
                    ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    power: 1
                    power_mode: string
                  disable_eth1: true
                  disable_module: true
                  ip_config:
                    dns:
                    - string
                    dns_suffix:
                    - string
                    gateway: 192.168.0.1
                    gateway6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                    ip: 192.168.0.1
                    ip6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                    mtu: 0
                    netmask: 192.168.0.1
                    netmask6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
                    type: static
                    type6: static
                    vlan_id: 1
                  mesh:
                    enabled: true
                    group: 0
                    role: base
                  name: string
                  poe_passthrough: true
                  radio_config:
                    ant_gain_24: 0
                    ant_gain_5: 0
                    band_24:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    band_24_usage: '24'
                    band_5:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: auto
                      usage: '24'
                    scanning_enabled: true
                  site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  switch_config:
                    enabled: true
                    eth0:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                    eth1:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                    eth2:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                    eth3:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                    module:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                    wds:
                      port_vlan_id: 1
                      vlan_ids:
                      - 0
                  usb_config:
                    cacert: string
                    channel: 0
                    enabled: true
                    host: string
                    port: 0
                    type: imagotag
                    verify_cert: true
              deviceprofile_hub:
                value:
                  dhcpd_config:
                    Corp-Mgmt:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.172.9
                      ip_end: 10.3.172.99
                      ip_start: 10.3.172.50
                      type: local
                    Corp-lan:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.171.9
                      ip_end: 10.3.171.99
                      ip_start: 10.3.171.50
                      type: local
                  dnsOverride: true
                  dns_servers:
                  - 10.3.20.201
                  - 10.3.51.222
                  - 1.1.1.1
                  dns_suffix:
                  - example.com
                  extra_routes:
                    10.101.0.0/16:
                      via: 10.3.100.10
                  ip_configs:
                    Corp-Core:
                      ip: 10.3.100.9
                      netmask: /24
                      type: static
                    Corp-Mgmt:
                      ip: 10.3.172.9
                      netmask: /24
                      type: static
                    Corp-lan:
                      ip: 10.3.171.9
                      netmask: /24
                      type: static
                  name: ITParis
                  ntpOverride: true
                  ntp_servers:
                  - 10.3.51.222
                  path_preferences:
                    core:
                      paths:
                      - networks:
                        - Corp-Core
                        type: local
                      strategy: ordered
                    lab:
                      paths:
                      - networks:
                        - Corp-lan
                        type: local
                      strategy: ordered
                    mgmt:
                      paths:
                      - networks:
                        - Corp-Mgmt
                        type: local
                      strategy: ordered
                    untrust:
                      paths:
                      - name: wan
                        type: wan
                      strategy: ordered
                  port_config:
                    ge-0/0/0:
                      aggregated: false
                      ip_config:
                        gateway: 192.168.1.1
                        ip: 192.168.1.9
                        netmask: /24
                        type: static
                      name: wan
                      redundant: false
                      traffic_shaping:
                        enabled: false
                      usage: wan
                      wan_type: broadband
                    ge-0/0/6-7:
                      ae_disable_lacp: false
                      ae_idx: '0'
                      ae_lacp_force_up: true
                      aggregated: true
                      networks:
                      - Corp-lan
                      - Corp-Mgmt
                      - Corp-Core
                      usage: lan
                  service_policies:
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-Internal
                    path_preference: core
                    services:
                    - internal_dns
                    - drive
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-internet
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-core
                    path_preference: core
                    services:
                    - internal_dns
                    - internal_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-mxe-tt-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-untrust
                    path_preference: untrust
                    services:
                    - mxedge-updates
                    - radsec
                    - icmp
                    - internet_dns
                    - internet_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mxe-data-0-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-mgt
                    path_preference: mgmt
                    services:
                    - mgmt
                    tenants:
                    - domain.Corp-Core
                    - lan.Corp-Core
                    - servers.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-edge-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - lan.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-iot
                    path_preference: iot
                    services:
                    - iot
                    tenants:
                    - lan.Corp-Core
                    - servers-hassio.Corp-Core
                    - servers-kubes.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: tanker-to-cctv
                    path_preference: iot
                    services:
                    - rtsp
                    tenants:
                    - servers-tanker.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: core-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - lan.Corp-Core
                    - domain.Corp-Core
                    - servers.Corp-Core
                  - action: deny
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: iot-upgrade-cctv
                    path_preference: untrust
                    services:
                    - motioneye
                    - nodejs
                    - raspbian
                    tenants:
                    - printer
                  type: gateway
            schema:
              $ref: '#/components/schemas/deviceprofile'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Deviceprofile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgDeviceProfiles
      tags:
      - Orgs Device Profiles
  /api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/assign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/deviceprofile_id'
    post:
      description: Assign Org Device Profile to Devices
      operationId: assignOrgDeviceProfile
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                  - 5c5b350e0001
                  - 5c5b350e0003
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/AssignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: assignOrgDeviceProfile
      tags:
      - Orgs Device Profiles
  /api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/unassign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/deviceprofile_id'
    post:
      description: Unassign Org Device Profile from Devices
      operationId: unassignOrgDeviceProfiles
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                  - 5c5b350e0001
                  - 5c5b350e0003
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/AssignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unassignOrgDeviceProfiles
      tags:
      - Orgs Device Profiles
  /api/v1/orgs/{org_id}/devices:
    get:
      description: Get List of Org Devices
      operationId: listOrgDevices
      responses:
        '200':
          $ref: '#/components/responses/OrgDevices'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgDevices
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/count:
    get:
      description: Count Org Devices
      operationId: countOrgDevices
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_devices_count_distinct'
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: AP mac
        in: query
        name: mac
        schema:
          type: string
      - description: version
        in: query
        name: version
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - description: MxTunnel status, up / down
        in: query
        name: mxtunnel_status
        schema:
          $ref: '#/components/schemas/count_org_devices_mxtunnel_status'
      - description: Mist Edge id, if AP is connecting to a Mist Edge
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: LLDP system name
        in: query
        name: lldp_system_name
        schema:
          type: string
      - description: LLDP system description
        in: query
        name: lldp_system_desc
        schema:
          type: string
      - description: LLDP port id
        in: query
        name: lldp_port_id
        schema:
          type: string
      - description: LLDP management ip address
        in: query
        name: lldp_mgmt_addr
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgDevices
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/events/count:
    get:
      description: Count Org Devices Events
      operationId: countOrgDeviceEvents
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_devices_events_count_distinct'
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: AP mac
        in: query
        name: ap
        schema:
          type: string
      - description: AP Firmware
        in: query
        name: apfw
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: event message
        in: query
        name: text
        schema:
          type: string
      - description: event time
        in: query
        name: timestamp
        schema:
          type: string
      - $ref: '#/components/parameters/device_event_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgDeviceEvents
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/events/search:
    get:
      description: Search Org Devices Events
      operationId: searchOrgDeviceEvents
      parameters:
      - description: device mac
        in: query
        name: mac
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - in: query
        name: device_type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: event message
        in: query
        name: text
        schema:
          type: string
      - description: event time
        in: query
        name: timestamp
        schema:
          type: string
      - $ref: '#/components/parameters/device_event_type'
      - description: Return last/recent event for passed in field
        example: port_id
        in: query
        name: last_by
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DeviceEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgDeviceEvents
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/last_config/count:
    get:
      description: Counts the number of entries in device config history for distinct
        field with given filters
      operationId: countOrgDeviceLastConfigs
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_devices_last_configs_count_distinct'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgDeviceLastConfigs
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/last_config/search:
    get:
      description: Search Device Last Configs
      operationId: searchOrgDeviceLastConfigs
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: Device MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: Devices Name
        in: query
        name: name
        schema:
          type: string
      - description: Device Version
        in: query
        name: version
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ConfigsHistorySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgDeviceLastConfigs
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/radio_macs:
    get:
      description: 'For some scenarios like E911 or security systems, the BSSIDs are
        required to identify which AP the client is connecting to. Then the location
        of the AP can be used as the approximate location of the client.


        Each radio MAC can have 16 BSSIDs (enumerate the last octet from 0-F)'
      operationId: listOrgApsMacs
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/RadioMacs'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgApsMacs
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/search:
    get:
      description: Search Org Devices
      operationId: searchOrgDevices
      parameters:
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: AP mac
        in: query
        name: mac
        schema:
          type: string
      - description: version
        in: query
        name: version
        schema:
          type: string
      - description: power_constrained
        in: query
        name: power_constrained
        schema:
          type: boolean
      - $ref: '#/components/parameters/ip'
      - description: MxTunnel status, up / down
        in: query
        name: mxtunnel_status
        schema:
          $ref: '#/components/schemas/search_org_devices_mxtunnel_status'
      - description: Mist Edge id, if AP is connecting to a Mist Edge
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: LLDP system name
        in: query
        name: lldp_system_name
        schema:
          type: string
      - description: LLDP system description
        in: query
        name: lldp_system_desc
        schema:
          type: string
      - description: LLDP port id
        in: query
        name: lldp_port_id
        schema:
          type: string
      - description: LLDP management ip address
        in: query
        name: lldp_mgmt_addr
        schema:
          type: string
      - description: Bandwith of band_24
        in: query
        name: band_24_bandwith
        schema:
          type: integer
      - description: Bandwith of band_5
        in: query
        name: band_5_bandwith
        schema:
          type: integer
      - description: Bandwith of band_6
        in: query
        name: band_6_bandwith
        schema:
          type: integer
      - description: Channel of band_24
        in: query
        name: band_24_channel
        schema:
          type: integer
      - description: Channel of band_5
        in: query
        name: band_5_channel
        schema:
          type: integer
      - description: Channel of band_6
        in: query
        name: band_6_channel
        schema:
          type: integer
      - description: Port speed of eth0
        in: query
        name: eth0_port_speed
        schema:
          type: integer
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DevicesSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgDevices
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/devices/upgrade:
    get:
      description: Get List of Org multiple devces upgrades
      operationId: listOrgDeviceUpgrades
      responses:
        '200':
          $ref: '#/components/responses/OrgDeviceUpgradeList'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgDeviceUpgrades
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Upgrade Multiple Sites (Only supported for Access Points ugprades)
      operationId: upgradeOrgDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upgrade_org_devices'
      responses:
        '200':
          $ref: '#/components/responses/UpgradeOrgDevices'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgDevices
      tags:
      - Utilities Upgrade
  /api/v1/orgs/{org_id}/devices/upgrade/{upgrade_id}:
    get:
      description: Get Multiple Devices Upgrade
      operationId: getOrgDeviceUpgrade
      responses:
        '200':
          $ref: '#/components/responses/OrgDeviceUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgDeviceUpgrade
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/upgrade_id'
  /api/v1/orgs/{org_id}/events/search:
    get:
      description: 'Search Org events



        Supported Event Types:

        - CRADLEPOINT_SYNC_FAILED

        - ORG_CA_CERT_ADDED

        - ORG_CA_CERT_REGENERATED'
      operationId: searchOrgEvents
      parameters:
      - description: event type
        in: query
        name: type
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/OrgEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgEvents
      tags:
      - Orgs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/evpn_topologies:
    get:
      description: Get List of the existing Org EVPN topologies
      operationId: listOrgEvpnTopologies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopologiesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgEvpnTopologies
      tags:
      - Orgs EVPN Topologies
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "While all the `evpn_id` / `downlink_ips` can be specifidd by hand,\
        \ the easiest way is to call the `build_vpn_topology` API, allowing you to\
        \ examine the diff, and update it yourself. You can also simply call it with\
        \ `overwrite=true` which will apply the updates for you.\n\n**Notes:**\n1.\
        \ You can use `core` / `distribution` / `access` to create a CLOS topology\n\
        2. You can also use `core` / `distribution` to form a 2-tier EVPN topology\
        \ where ESI-Lag is configured distribution to connect to access switches\n\
        3. In a small/medium campus, `collapsed-core` can be used where core switches\
        \ are the inter-connected to do EVPN\n4. The API uses a few pre-defined parameters\
        \ and best-practices to generate the configs. It can be customized by using\
        \ `evpn_options` in Site Setting / Network Template. (e.g. a different subnet\
        \ for the underlay)\n\n#### Collapsed Core\nIn a small-medium campus, EVPN\
        \ can also be enabled only at the core switches (up to 4) by assigning all\
        \ participating switches with `collapsed-core role`. When there are more than\
        \ 2 switches, a ring-like topology will be formed.\n\n#### ESI-Lag\nIf the\
        \ access switchess does not have EVPN support, you can take advantage of EVPN\
        \ by setting up ESI-Lag on distribution switches\n\n#### Leaf / Access / Collapsed-Core\n\
        For leaf nodes in a EVPN topology, you\u2019d have to configure the IPs for\
        \ networks that would participate in EVPN. Optionally, VRFs to isolate traffic\
        \ from one tenant verus another"
      operationId: createOrgEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: CC
                  pod_names:
                    '1': default
                    '2': default
                  switches:
                  - mac: 5c5b35000003
                    role: collapsed-core
                  - mac: 5c5b35000004
                    role: collapsed-core
            schema:
              $ref: '#/components/schemas/evpn_topology'
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgEvpnTopology
      tags:
      - Orgs EVPN Topologies
  /api/v1/orgs/{org_id}/evpn_topologies/{evpn_topology_id}:
    delete:
      description: Delete the Org EVPN Topology
      operationId: deleteOrgEvpnTopology
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgEvpnTopology
      tags:
      - Orgs EVPN Topologies
    get:
      description: Get One EVPN Topology Detail
      operationId: getOrgEvpnTolopogy
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgEvpnTolopogy
      tags:
      - Orgs EVPN Topologies
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/evpn_topology_id'
    put:
      description: Update the EVPN Topolgy
      operationId: updateOrgEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  overwrite: false
                  switches:
                  - mac: 5c5b35000003
                    role: collapsed-core
                  - mac: 5c5b35000004
                    role: none
            schema:
              $ref: '#/components/schemas/evpn_topology'
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgEvpnTopology
      tags:
      - Orgs EVPN Topologies
  /api/v1/orgs/{org_id}/gatewaytemplates:
    get:
      description: Get List of Org Gateway Templates
      operationId: listOrgGatewayTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GatewaytemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgGatewayTemplates
      tags:
      - Orgs Gateway Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Gateway Template
      operationId: createOrgGatewayTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  dhcpd_config:
                    Corp-Mgmt:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.172.9
                      ip_end: 10.3.172.99
                      ip_start: 10.3.172.50
                      type: local
                    Corp-lan:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.171.9
                      ip_end: 10.3.171.99
                      ip_start: 10.3.171.50
                      type: local
                  dnsOverride: true
                  dns_servers:
                  - 10.3.20.201
                  - 10.3.51.222
                  - 1.1.1.1
                  dns_suffix:
                  - example.com
                  extra_routes:
                    10.101.0.0/16:
                      via: 10.3.100.10
                  ip_configs:
                    Corp-Core:
                      ip: 10.3.100.9
                      netmask: /24
                      type: static
                    Corp-Mgmt:
                      ip: 10.3.172.9
                      netmask: /24
                      type: static
                    Corp-lan:
                      ip: 10.3.171.9
                      netmask: /24
                      type: static
                  name: ITParis
                  ntpOverride: true
                  ntp_servers:
                  - 10.3.51.222
                  path_preferences:
                    core:
                      paths:
                      - networks:
                        - Corp-Core
                        type: local
                      strategy: ordered
                    lab:
                      paths:
                      - networks:
                        - Corp-lan
                        type: local
                      strategy: ordered
                    mgmt:
                      paths:
                      - networks:
                        - Corp-Mgmt
                        type: local
                      strategy: ordered
                    untrust:
                      paths:
                      - name: wan
                        type: wan
                      strategy: ordered
                  port_config:
                    ge-0/0/0:
                      aggregated: false
                      ip_config:
                        gateway: 192.168.1.1
                        ip: 192.168.1.9
                        netmask: /24
                        type: static
                      name: wan
                      redundant: false
                      traffic_shaping:
                        enabled: false
                      usage: wan
                      wan_type: broadband
                    ge-0/0/6-7:
                      ae_disable_lacp: false
                      ae_idx: '0'
                      ae_lacp_force_up: true
                      aggregated: true
                      networks:
                      - Corp-lan
                      - Corp-Mgmt
                      - Corp-Core
                      usage: lan
                  service_policies:
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-Internal
                    path_preference: core
                    services:
                    - internal_dns
                    - drive
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-internet
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-core
                    path_preference: core
                    services:
                    - internal_dns
                    - internal_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-mxe-tt-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-untrust
                    path_preference: untrust
                    services:
                    - mxedge-updates
                    - radsec
                    - icmp
                    - internet_dns
                    - internet_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mxe-data-0-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-mgt
                    path_preference: mgmt
                    services:
                    - mgmt
                    tenants:
                    - domain.Corp-Core
                    - lan.Corp-Core
                    - servers.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-edge-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - lan.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-iot
                    path_preference: iot
                    services:
                    - iot
                    tenants:
                    - lan.Corp-Core
                    - servers-hassio.Corp-Core
                    - servers-kubes.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: tanker-to-cctv
                    path_preference: iot
                    services:
                    - rtsp
                    tenants:
                    - servers-tanker.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: core-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - lan.Corp-Core
                    - domain.Corp-Core
                    - servers.Corp-Core
                  - action: deny
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: iot-upgrade-cctv
                    path_preference: untrust
                    services:
                    - motioneye
                    - nodejs
                    - raspbian
                    tenants:
                    - printer
                  type: standalone
            schema:
              $ref: '#/components/schemas/gateway_template'
        description: Gateway Template
      responses:
        '200':
          $ref: '#/components/responses/Gatewaytemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgGatewayTemplate
      tags:
      - Orgs Gateway Templates
  /api/v1/orgs/{org_id}/gatewaytemplates/{gatewaytemplate_id}:
    delete:
      description: Delete Organization Gateway Template
      operationId: deleteOrgGatewayTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgGatewayTemplate
      tags:
      - Orgs Gateway Templates
    get:
      description: Get Organization Gateway Template details
      operationId: getOrgGatewayTemplate
      responses:
        '200':
          $ref: '#/components/responses/Gatewaytemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgGatewayTemplate
      tags:
      - Orgs Gateway Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/gatewaytemplate_id'
    put:
      description: Update Organization Gateway Template
      operationId: updateOrgGatewayTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  dhcpd_config:
                    Corp-Mgmt:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.172.9
                      ip_end: 10.3.172.99
                      ip_start: 10.3.172.50
                      type: local
                    Corp-lan:
                      dns_servers:
                      - 8.8.8.8
                      dns_suffix:
                      - stag.one
                      gateway: 10.3.171.9
                      ip_end: 10.3.171.99
                      ip_start: 10.3.171.50
                      type: local
                  dnsOverride: true
                  dns_servers:
                  - 10.3.20.201
                  - 10.3.51.222
                  - 1.1.1.1
                  dns_suffix:
                  - example.com
                  extra_routes:
                    10.101.0.0/16:
                      via: 10.3.100.10
                  ip_configs:
                    Corp-Core:
                      ip: 10.3.100.9
                      netmask: /24
                      type: static
                    Corp-Mgmt:
                      ip: 10.3.172.9
                      netmask: /24
                      type: static
                    Corp-lan:
                      ip: 10.3.171.9
                      netmask: /24
                      type: static
                  name: ITParis
                  ntpOverride: true
                  ntp_servers:
                  - 10.3.51.222
                  path_preferences:
                    core:
                      paths:
                      - networks:
                        - Corp-Core
                        type: local
                      strategy: ordered
                    lab:
                      paths:
                      - networks:
                        - Corp-lan
                        type: local
                      strategy: ordered
                    mgmt:
                      paths:
                      - networks:
                        - Corp-Mgmt
                        type: local
                      strategy: ordered
                    untrust:
                      paths:
                      - name: wan
                        type: wan
                      strategy: ordered
                  port_config:
                    ge-0/0/0:
                      aggregated: false
                      ip_config:
                        gateway: 192.168.1.1
                        ip: 192.168.1.9
                        netmask: /24
                        type: static
                      name: wan
                      redundant: false
                      traffic_shaping:
                        enabled: false
                      usage: wan
                      wan_type: broadband
                    ge-0/0/6-7:
                      ae_disable_lacp: false
                      ae_idx: '0'
                      ae_lacp_force_up: true
                      aggregated: true
                      networks:
                      - Corp-lan
                      - Corp-Mgmt
                      - Corp-Core
                      usage: lan
                  service_policies:
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-Internal
                    path_preference: core
                    services:
                    - internal_dns
                    - drive
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      enabled: false
                    name: ITParis-internet
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-core
                    path_preference: core
                    services:
                    - internal_dns
                    - internal_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-mxe-tt-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mgmt-to-untrust
                    path_preference: untrust
                    services:
                    - mxedge-updates
                    - radsec
                    - icmp
                    - internet_dns
                    - internet_ntp
                    tenants:
                    - Corp-Mgmt
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: mxe-data-0-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - ITParis
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-mgt
                    path_preference: mgmt
                    services:
                    - mgmt
                    tenants:
                    - domain.Corp-Core
                    - lan.Corp-Core
                    - servers.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-edge-in
                    path_preference: mxe-in
                    services:
                    - internal_any
                    tenants:
                    - lan.Corp-Core
                    - Corp-Core
                  - action: allow
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: core-to-iot
                    path_preference: iot
                    services:
                    - iot
                    tenants:
                    - lan.Corp-Core
                    - servers-hassio.Corp-Core
                    - servers-kubes.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: tanker-to-cctv
                    path_preference: iot
                    services:
                    - rtsp
                    tenants:
                    - servers-tanker.Corp-Core
                  - action: allow
                    idp:
                      enabled: false
                    name: core-to-untrust
                    path_preference: untrust
                    services:
                    - internet_any
                    tenants:
                    - lan.Corp-Core
                    - domain.Corp-Core
                    - servers.Corp-Core
                  - action: deny
                    idp:
                      alert_only: true
                      enabled: true
                      profile: standard
                    name: iot-upgrade-cctv
                    path_preference: untrust
                    services:
                    - motioneye
                    - nodejs
                    - raspbian
                    tenants:
                    - printer
                  type: standalone
            schema:
              $ref: '#/components/schemas/gateway_template'
        description: Gateway Template
      responses:
        '200':
          $ref: '#/components/responses/Gatewaytemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgGatewayTemplate
      tags:
      - Orgs Gateway Templates
  /api/v1/orgs/{org_id}/guests:
    get:
      description: Get List of Org Guest Authorizations
      operationId: listOrgGuestAuthorizations
      responses:
        '200':
          $ref: '#/components/responses/GuestsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgGuestAuthorizations
      tags:
      - Orgs Guests
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/count:
    get:
      description: Count Org Authorized Guest
      operationId: countOrgGuestAuthorizations
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_guests_count_distinct'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgGuestAuthorizations
      tags:
      - Orgs Guests
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/search:
    get:
      description: Search Authorized Guest
      operationId: searchOrgGuestAuthorization
      parameters:
      - description: WLAN ID
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: wlan_id
        schema:
          type: string
      - description: Authentication Methdo
        in: query
        name: auth_method
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/GuestsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgGuestAuthorization
      tags:
      - Orgs Guests
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/guests/{guest_mac}:
    delete:
      description: Delete Guest Authorization
      operationId: deleteOrgGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgGuestAuthorization
      tags:
      - Orgs Guests
    get:
      description: Get Guest Authorization
      operationId: getOrgGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgGuestAuthorization
      tags:
      - Orgs Guests
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/guest_mac'
    put:
      description: Update Guest Authorization
      operationId: updateOrgGuestAuthorization
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  authorized: true
                  authorized_expiring_time: 0
                  authorized_time: 0
                  company: string
                  email: user@example.com
                  field1: string
                  field2: string
                  field3: string
                  field4: string
                  mac: string
                  minutes: 0
                  name: string
            schema:
              $ref: '#/components/schemas/guest'
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgGuestAuthorization
      tags:
      - Orgs Guests
  /api/v1/orgs/{org_id}/idpprofiles:
    get:
      description: get the list of Org IDP Profiles
      operationId: listOrgIdpProfiles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/IdpProfileArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgIdpProfiles
      tags:
      - Orgs IDP Profiles
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org IDP Profile
      operationId: createOrgIdpProfile
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  base_profile: strict
                  name: relaxed
                  overwrites:
                  - action: alert
                    matching:
                      attack_name:
                      - HTTP:INVALID:HDR-FIELD
                      dst_subnet:
                      - 63.1.2.0/24
                      severity:
                      - major
            schema:
              $ref: '#/components/schemas/idp_profile'
      responses:
        '200':
          $ref: '#/components/responses/IdpProfile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgIdpProfile
      tags:
      - Orgs IDP Profiles
  /api/v1/orgs/{org_id}/idpprofiles/{idpprofile_id}:
    delete:
      description: Delete Org IDP Profile
      operationId: deleteOrgIdpProfile
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgIdpProfile
      tags:
      - Orgs IDP Profiles
    get:
      description: Get Org IDP Profile
      operationId: getOrgIdpProfile
      responses:
        '200':
          $ref: '#/components/responses/IdpProfile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgIdpProfile
      tags:
      - Orgs IDP Profiles
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/idpprofile_id'
    put:
      description: Update Org IDP Profile
      operationId: updateOrgIdpProfile
      requestBody:
        content:
          application/json:
            examples:
              idpprofile:
                value:
                  base_profile: strict
                  name: relaxed
                  overwrites:
                  - action: alert
                    matching:
                      attack_name:
                      - HTTP:INVALID:HDR-FIELD
                      dst_subnet:
                      - 63.1.2.0/24
                      severity:
                      - major
            schema:
              $ref: '#/components/schemas/idp_profile'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgIdpProfile
      tags:
      - Orgs IDP Profiles
  /api/v1/orgs/{org_id}/insights/sites_sle:
    get:
      description: Get Org Sites SLE
      operationId: getOrgSitesSle
      parameters:
      - in: query
        name: sle
        schema:
          $ref: '#/components/schemas/org_site_sle_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/OrgSiteSle'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSitesSle
      tags:
      - Orgs SLEs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/insights/{metric}:
    get:
      description: Get Org SLEs (all/worst sites, Mx Edges, ...)
      operationId: getOrgSle
      parameters:
      - description: see [listInsightMetrics]($e/Constants%20Misc/listInsightMetrics)
          for more details
        in: query
        name: sle
        schema:
          type: string
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      responses:
        '200':
          $ref: '#/components/responses/InsightMetricOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSle
      tags:
      - Orgs SLEs
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/metric'
  /api/v1/orgs/{org_id}/inventory:
    get:
      description: "Get Org Inventory\n\n### VC (Virtual-Chassis) Management\nIdeally\
        \ VC should be managed as a single device - where - one managed entity where\
        \ config / monitoring is anchored against (with a stable identify MAC) - all\
        \ members appears in the inventory\n\nIn our implementation, we strive to\
        \ achieve that without manual user configurations by \n1. during claim or\
        \ adoption a VC, we require FPC0 to exist and will use its MAC as identify\
        \ for the entire chassis\n2. other VC members will be automatically populated\
        \ when they\u2019re all present\n\nThe perceivable result is \n1. from `/sites/:site_id/stats/devices/:fpc0_mac`\
        \ API, you\u2019d see the VC where module_stat contains the VC members \n\
        2. from `/orgs/:org_id/inventory?vc=true` API, you\u2019d see all VC members\
        \ with vc_mac pointing to the FPC0"
      operationId: getOrgInventory
      parameters:
      - description: device serial
        in: query
        name: serial
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: site id if assigned, null if not assigned
        in: query
        name: site_id
        schema:
          type: string
      - description: Virtual Chassis MAC Address
        in: query
        name: vc_mac
        schema:
          type: string
      - description: To display Virtual Chassis members
        in: query
        name: vc
        schema:
          default: false
          type: boolean
      - description: to display Unassigned devices
        in: query
        name: unassigned
        schema:
          default: true
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/OrgInventory'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgInventory
      tags:
      - Orgs Inventory
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Add Device to Org Inventory with the device claim codes
      operationId: addOrgInventory
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - 6JG8E-PTFV2-A9Z2N
                - DVH4V-SNMSZ-PDXBR
            schema:
              $ref: '#/components/schemas/claim_codes'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OrgInventoryAdd'
        '400':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - 6JG8E-PTFV2-A9Z2N
                  - DVH4V-SNMSZ-PDXBR
              schema:
                $ref: '#/components/schemas/strings'
          description: if none of the entries are valid
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addOrgInventory
      tags:
      - Orgs Inventory
    put:
      description: Update Org Inventory
      operationId: updateOrgInventoryAssignment
      requestBody:
        content:
          application/json:
            examples:
              assign:
                value:
                  disable_auto_config: false
                  macs:
                  - 5c5b350e0001
                  managed: false
                  no_reassign: false
                  op: assign
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
              delete:
                value:
                  macs:
                  - 5c5b350e0001
                  op: delete
                  serials:
                  - FXLH2015150025
                  - FXLH2015150026
            schema:
              $ref: '#/components/schemas/inventory_update'
      responses:
        '200':
          $ref: '#/components/responses/OrgInventoryChanges'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgInventoryAssignment
      tags:
      - Orgs Inventory
  /api/v1/orgs/{org_id}/inventory/create_ha_cluster:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create HA Cluster from unassigned Gateways
      operationId: createOrgGatewayHaCluster
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  disable_auto_config: true
                  managed: true
                  nodes:
                  - mac: aff827549235
                  - mac: 8396cd006c8c
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: '#/components/schemas/ha_cluster_config'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgGatewayHaCluster
      tags:
      - Orgs Devices - WAN Cluster
  /api/v1/orgs/{org_id}/inventory/delete_ha_cluster:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Delete HA Cluster


        After HA cluster deleted, both of the nodes will be unassigned.'
      operationId: deleteOrgGatewayHaCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ha_cluster_delete'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgGatewayHaCluster
      tags:
      - Orgs Devices - WAN Cluster
  /api/v1/orgs/{org_id}/inventory/reevaluate_auto_assignment:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Reevaluate Auto Assignment
      operationId: reevaluateOrgAutoAssignment
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: reevaluateOrgAutoAssignment
      tags:
      - Orgs Inventory
  /api/v1/orgs/{org_id}/inventory/replace:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "It\u2019s a common request we get from the customers. When a AP\
        \ HW has problem and need a replacement, they would want to copy the existing\
        \ attributes (Device Config) of this old AP to the new one. It can be done\
        \ by providing the MAC of a device that\u2019s currently in the inventory\
        \ but not assigned. The Device replaced will become unassigned.\n\nThis API\
        \ also supports replacement of Mist Edges. This API copies device agnostic\
        \ attributes from old Mist edge to new one.\nMist manufactured Mist Edges\
        \ will be reset to factory settings but will still be in Inventory.Brownfield\
        \ or VM\u2019s will be\ndeleted from Inventory\n\n**Note:** For Gateway devices\
        \ only like-for-like replacements (can only replace a SRX320 with a SRX320\
        \ and not some otehr model) are allowed."
      operationId: replaceOrgDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  discard: []
                  inventory_mac: 5c5b35000301
                  mac: 5c5b35000101
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: '#/components/schemas/replace_device'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OrgInventoryChanges'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: replaceOrgDevices
      tags:
      - Orgs Inventory
  /api/v1/orgs/{org_id}/invites:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: If the request is successful, an email will also be sent to the
        user with a link to ```https://manage.mist.com/verify/invite?token=:token&expire=1459632743&org=OrgName```
      operationId: inviteOrgAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: inviteOrgAdmin
      tags:
      - Orgs Admins
  /api/v1/orgs/{org_id}/invites/{invite_id}:
    delete:
      description: Delete Admin Invite
      operationId: uninviteOrgAdmin
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uninviteOrgAdmin
      tags:
      - Orgs Admins
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/invite_id'
    put:
      description: Update Admin Invite
      operationId: updateOrgAdminInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgAdminInvite
      tags:
      - Orgs Admins
  /api/v1/orgs/{org_id}/jsi/devices:
    get:
      description: Get List of Org devices that connected to JSI
      operationId: listOrgJsiDevices
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - description: Device model
        in: query
        name: model
        schema:
          type: string
      - description: Device serial
        in: query
        name: serial
        schema:
          type: string
      - description: Device MAC Address
        in: query
        name: mac
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/JsiDevices'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgJsiDevices
      tags:
      - Orgs JSI
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/jsi/devices/outbound_ssh_cmd:
    get:
      description: Adopt JSI devices
      operationId: adoptOrgJsiDevice
      responses:
        '200':
          $ref: '#/components/responses/JunosRegisterCmd'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: adoptOrgJsiDevice
      tags:
      - Orgs JSI
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/jsi/devices/{device_mac}/shell:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/device_mac'
    post:
      description: Create Shell Session
      operationId: createOrgJsiDeviceShellSession
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSessionWithUrl'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgJsiDeviceShellSession
      tags:
      - Orgs JSI
  /api/v1/orgs/{org_id}/jsi/devices/{device_mac}/upgrade:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/device_mac'
    post:
      description: Upgrade
      operationId: upgradeOrgJsiDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 3.1.5
            schema:
              $ref: '#/components/schemas/version_string'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgJsiDevice
      tags:
      - Utilities Upgrade
  /api/v1/orgs/{org_id}/jsi/inventory:
    get:
      description: Get List of all devices purchased from the accounts associated
        with the Org
      operationId: listOrgJsiPastPurchases
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: serial
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/JsiInventory'
        '400':
          $ref: '#/components/responses/JsiInventoryError'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgJsiPastPurchases
      tags:
      - Orgs JSI
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/licenses:
    get:
      description: Get the list of licenses
      operationId: getOrgLicencesSummary
      responses:
        '200':
          $ref: '#/components/responses/Licence'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgLicencesSummary
      tags:
      - Orgs Licenses
    parameters:
    - $ref: '#/components/parameters/org_id'
    put:
      description: "Move, Undo Move or Delete Org License to Another Org\nIf the admin\
        \ has admin privilege against the `org_id` and `dst_org_id`, he can move some\
        \ of the licenses to another Org. Given that: \n1. the specified license is\
        \ currently active \n2. there\u2019s enough licenses left in the specified\
        \ license (by subscription_id) \n3. there will still be enough entitled licenses\
        \ for the type of license after the amendment"
      operationId: moveOrDeleteOrgLicenseToAnotherOrg
      requestBody:
        content:
          application/json:
            examples:
              annotate:
                value:
                  notes: customer notes
                  op: annotate
                  subscription_id: SUB-000144
              delete:
                value:
                  op: delete
                  subscription_id: SUB-0000144
              move:
                value:
                  dst_org_id: 3eff35f7-c218-894e-bca2-24e5325601cc
                  op: amend
                  quantity: 10
                  subscription_id: SUB-0000144
              undo_move:
                value:
                  amendment_id: 2b9116ab-cd1e-e897-6e08-31fccd88e792
                  op: unamend
            schema:
              $ref: '#/components/schemas/org_license_action'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: moveOrDeleteOrgLicenseToAnotherOrg
      tags:
      - Orgs Licenses
  /api/v1/orgs/{org_id}/licenses/usages:
    get:
      description: 'Get Licenses Usage by Sites

        This shows license usage (i.e. needed) based on the features enabled for the
        site.'
      operationId: getOrgLicencesBySite
      responses:
        '200':
          $ref: '#/components/responses/LicenceUsageOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgLicencesBySite
      tags:
      - Orgs Licenses
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/logs:
    get:
      description: Get List of change logs for the current Org
      operationId: listOrgLogs
      parameters:
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: admin name or email
        in: query
        name: admin_name
        schema:
          type: string
      - description: message
        in: query
        name: message
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          $ref: '#/components/schemas/list_org_logs_sort'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/LogsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgLogs
      tags:
      - Orgs Logs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/logs/count:
    get:
      description: Count by Distinct Attributes of Audit Logs
      operationId: countOrgLogs
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_logs_count_distinct'
      - in: query
        name: admin_id
        schema:
          type: string
      - in: query
        name: admin_name
        schema:
          type: string
      - in: query
        name: site_id
        schema:
          type: string
      - in: query
        name: message
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgLogs
      tags:
      - Orgs Logs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/maps/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Import data from files is a multipart POST which has a file, an
        optional json, and an optional csv, to create floorplan, assign matching inventory
        to specific site, place ap if name or mac matches


        ### CSV File Format

        ```csv

        Vendor AP name,Mist AP Mac

        US Office AP-2 - 5c:5b:35:00:00:02,5c5b35000002

        ```'
      operationId: importOrgMaps
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/map_org_import_file'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgMaps
      tags:
      - Orgs Maps
  /api/v1/orgs/{org_id}/marvisinvites:
    get:
      description: List Org Marvis Client Invites
      operationId: listOrgMarvisClientInvites
      responses:
        '200':
          $ref: '#/components/responses/MarvisClientsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMarvisClientInvites
      tags:
      - Orgs Clients - Marvis
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Marvis Client Invites
      operationId: createOrgMarvisClientInvites
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
            schema:
              $ref: '#/components/schemas/marvis_client'
      responses:
        '200':
          $ref: '#/components/responses/MarvisClient'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMarvisClientInvites
      tags:
      - Orgs Clients - Marvis
  /api/v1/orgs/{org_id}/marvisinvites/{marvisinvite_id}:
    delete:
      description: Delete Org Marvis Client Invite
      operationId: deleteOrgMarvisClientInvite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMarvisClientInvite
      tags:
      - Orgs Clients - Marvis
    get:
      description: Get Org Marvis Client Invite
      operationId: getOrgMarvisClientInvites
      responses:
        '200':
          $ref: '#/components/responses/MarvisClient'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMarvisClientInvites
      tags:
      - Orgs Clients - Marvis
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/marvisinvite_id'
    put:
      description: Update Org Marvis Client Invite
      operationId: updateOrgMarvisClientInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
            schema:
              $ref: '#/components/schemas/marvis_client'
      responses:
        '200':
          $ref: '#/components/responses/MarvisClient'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMarvisClientInvites
      tags:
      - Orgs Clients - Marvis
  /api/v1/orgs/{org_id}/mist_nac/test_idp:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "IDP Credential Validation. The output will be available through\
        \ websocket. As there can be multiple command issued against the same device\
        \ at the same time and the output all goes through the same websocket stream,\
        \ `session` is introduced for demux.\n\n#### Subscribe to Device Command outputs\n\
        `WS /api-ws/v1/stream`\n\n``` json\n{\n    \"subscribe\": \"orgs/:org_id/mist_nac/test_idp\"\
        \n}\n\n ```\n\n### Response (no idp can be found)\n\n``` json\n{\n    \"event\"\
        : \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\",\n    \"\
        status\": \n    \"data\": {\n        \"status\": \"failure\",\n        \"\
        error\": \"No matching IDP found\"\n    }\n}\n\n ```\n\n### Response OK\n\n\
        ``` json\n{\n    \"event\": \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\"\
        ,\n    \"status\": \n    \"data\": {\n        \"status\": \"success\",\n \
        \       \"idp_id\": \"915793c0-1355-4e98-b1c0-23df2227b357\",\n        \"\
        idp_type\": \"ldap\",\n        // more attributes will be added later\n  \
        \  }\n}\n\n ```\n\n### Response Invalid Credentials\n\n``` json\n{\n    \"\
        event\": \"data\",\n    \"channel\": \"/orgs/:org_id/mist_nac/test_idp\",\n\
        \    \"status\": \n    \"data\": {\n        \"status\": \"failure\",\n   \
        \     \"error\": \"Invalid Credentials\",\n        \"idp_id\": \"915793c0-1355-4e98-b1c0-23df2227b357\"\
        ,\n        \"idp_type\": \"ldap\",\n    }\n}\n\n ```"
      operationId: validateOrgIdpCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: xxxxxx
                  username: suriyas@juniper.net
            schema:
              $ref: '#/components/schemas/username_password'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: validateOrgIdpCredential
      tags:
      - Orgs NAC IDP
  /api/v1/orgs/{org_id}/mxclusters:
    get:
      description: Get List of Org MxEdge Clusters
      operationId: listOrgMxEdgeClusters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxclustersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgeClusters
      tags:
      - Orgs MxClusters
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxCluster
      operationId: createOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                    - host: string
                      port: 0
                  tunterm_ap_subnets:
                  - string
                  tunterm_hosts:
                  - string
            schema:
              $ref: '#/components/schemas/mxcluster'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
  /api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}:
    delete:
      description: Delete Org MXEdge Cluster
      operationId: deleteOrgMxEdgeCluster
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
    get:
      description: Get Org MxEdge Cluster Details
      operationId: getOrgMxEdgeCluster
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxcluster_id'
    put:
      description: Update Org MxEdge Cluster
      operationId: updateOrgMxEdgeCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  radsec:
                    enabled: true
                    server_name: string
                    servers:
                    - host: string
                      port: 0
                  tunterm_ap_subnets:
                  - string
                  tunterm_hosts:
                  - string
            schema:
              $ref: '#/components/schemas/mxcluster'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxcluster'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxEdgeCluster
      tags:
      - Orgs MxClusters
  /api/v1/orgs/{org_id}/mxedges:
    get:
      description: Get List of Org MxEdges
      operationId: listOrgMxEdges
      parameters:
      - description: filter for site level mist edges
        in: query
        name: for_sites
        schema:
          $ref: '#/components/schemas/mxedge_for_site'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdges
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxEdge
      operationId: createOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  model: ME-100
                  mxcluster_id: 572586b7-f97b-a22b-526c-8b97a3f609c4
                  mxedge_mgmt: {}
                  name: Guest
                  ntp_servers: []
                  oob_ip_config: {}
                  services:
                  - tunterm
                  tunterm_ip_config:
                    gateway: 10.2.1.254
                    ip: 10.2.1.1
                    netmask: 255.255.255.0
                  tunterm_port_config:
                    downstream_ports:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                    - '0'
                    - '1'
                    - '2'
                    - '3'
                  tunterm_switch_config:
                    '0':
                      port_vlan_id: 1
                      vlan_ids:
                      - 5
                      - 2
                      - 3
                    enabled: true
                  versions:
                    mxagent: 2.4.194
                    tunterm: 0.1.928-1
            schema:
              $ref: '#/components/schemas/mxedge'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxEdge
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/assign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Assign Org MxEdge to Site
      operationId: assignOrgMxEdgeToSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: '#/components/schemas/mxedges_assign'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/AssignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: assignOrgMxEdgeToSite
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/claim:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "For a Mist Edge in default state, it will show a random claim\
        \ code like `135-546-673` which you can \u201Cclaim\u201D it into your Org"
      operationId: claimOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 135-546-673
            schema:
              $ref: '#/components/schemas/code_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/ClaimMxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: claimOrgMxEdge
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/count:
    get:
      description: Count Org Mist Edges
      operationId: countOrgMxEdges
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_mxedge_count_distinct'
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge site id
        in: query
        name: site_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: model name
        in: query
        name: model
        schema:
          type: string
      - description: debian code name(buster, bullseye)
        in: query
        name: distro
        schema:
          type: string
      - description: tunterm version
        in: query
        name: tunterm_version
        schema:
          type: string
      - description: sort options, -prefix represents DESC order, default is -last_seen
        in: query
        name: sort
        schema:
          type: string
      - description: whether to return device stats, default is false
        in: query
        name: stats
        schema:
          type: boolean
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgMxEdges
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/events/count:
    get:
      description: Count Org Mist Edge Events
      operationId: countOrgSiteMxEdgeEvents
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_mxedge_events_count_distinct'
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - $ref: '#/components/parameters/mxedge_event_type'
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgSiteMxEdgeEvents
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/events/search:
    get:
      description: Search Org Mist Edge Events
      operationId: searchOrgMistEdgeEvents
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - $ref: '#/components/parameters/mxedge_event_type'
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgMistEdgeEvents
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/search:
    get:
      description: Search Org Mist Edges
      operationId: searchOrgMxEdges
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge site id
        in: query
        name: site_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - description: model name
        in: query
        name: model
        schema:
          type: string
      - description: debian code name(buster, bullseye)
        in: query
        name: distro
        schema:
          type: string
      - description: tunterm version
        in: query
        name: tunterm_version
        schema:
          type: string
      - description: sort options, -prefix represents DESC order, default is -last_seen
        in: query
        name: sort
        schema:
          type: string
      - description: whether to return device stats, default is false
        in: query
        name: stats
        schema:
          type: boolean
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgMxEdges
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/unassign:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Unassign Org MxEdge from Site
      operationId: unassignOrgMxEdgeFromSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
            schema:
              $ref: '#/components/schemas/mxedges_unassign'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/AssignSuccess'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unassignOrgMxEdgeFromSite
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/upgrade:
    get:
      description: Get List of Org Mist Edge Upgrades
      operationId: listOrgMxEdgeUpgrades
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeUpgradesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgeUpgrades
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Upgrade Mist Edges
      operationId: upgradeOrgMxEdges
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  mxedge_ids:
                  - 387804a7-3474-85ce-15a2-f9a9684c9c90
                  versions:
                    mxagent: current
                    tunterm: default
            schema:
              $ref: '#/components/schemas/mxedge_upgrade_multi'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgMxEdges
      tags:
      - Utilities Upgrade
  /api/v1/orgs/{org_id}/mxedges/upgrade/{upgrade_id}:
    get:
      description: Get Mist Edge Upgrade
      operationId: getOrgMxEdgeUpgrade
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeUpgrade
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/upgrade_id'
  /api/v1/orgs/{org_id}/mxedges/version:
    get:
      description: Get Mist Edge Upgrade Information
      operationId: getOrgMxEdgeUpgradeInfo
      parameters:
      - description: upgrade channel to follow, stable (default) / beta / alpha
        in: query
        name: channel
        schema:
          $ref: '#/components/schemas/get_org_mxedge_upgrade_info_channel'
      responses:
        '200':
          $ref: '#/components/responses/MxedgeUpgradeInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeUpgradeInfo
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}:
    delete:
      description: Delete Org MxEdge
      operationId: deleteOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdge
      tags:
      - Orgs MxEdges
    get:
      description: Get Org MxEdge details
      operationId: getOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdge
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    put:
      description: Update Org MxEdge
      operationId: updateOrgMxEdge
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  model: ME-X1
                  name: string
                  ntp_servers:
                  - string
                  services:
                  - tunterm
                  tunterm_ip_config:
                    dns:
                    - string
                    dns_suffix:
                    - string
                    gateway: string
                    ip: string
                    netmask: string
                  tunterm_port_config:
                    downstream_ports:
                    - string
                    separate_upstream_downstream: true
                    upstream_port_vlan_id: 1
                    upstream_ports:
                    - string
            schema:
              $ref: '#/components/schemas/mxedge'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxEdge
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/image/{image_number}:
    delete:
      description: Remove MxEdge Image
      operationId: deleteOrgMxEdgeImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxEdgeImage
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    - in: path
      name: image_number
      required: true
      schema:
        maximum: 3
        minimum: 1
        type: integer
    post:
      description: Attach up to 3 images to a mxedge
      operationId: addOrgMxEdgeImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image_import'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addOrgMxEdgeImage
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/restart:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: In the case where a Mist Edge is replaced, you would need to unregister
        it. Which disconnects the currently the connected Mist Edge and allow another
        to register.
      operationId: restartOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: restartOrgMxEdge
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/tunterm/bounce_port:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Bounce TunTerm Data Ports
      operationId: bounceOrgMxEdgeDataPorts
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ports:
                  - '0'
                  - '2'
              example-2:
                value:
                  hold_time: 0
                  ports:
                  - string
            schema:
              $ref: '#/components/schemas/utils_tunterm_bounce_port'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: bounceOrgMxEdgeDataPorts
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/{name}/{action}:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    - in: path
      name: name
      required: true
      schema:
        $ref: '#/components/schemas/mxedge_service_name'
    - description: restart or start or stop
      in: path
      name: action
      required: true
      schema:
        $ref: '#/components/schemas/mxedge_service_action'
    post:
      description: Control Services on a Mist Edge
      operationId: controlOrgMxEdgeServices
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: controlOrgMxEdgeServices
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/support:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadOrgMxEdgeSupportFiles
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadOrgMxEdgeSupportFiles
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxedges/{mxedge_id}/unregister:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: In the case where a Mist Edge is replaced, you would need to unregister
        it. Which disconnects the currently the connected Mist Edge and allow another
        to register.
      operationId: unregisterOrgMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unregisterOrgMxEdge
      tags:
      - Orgs MxEdges
  /api/v1/orgs/{org_id}/mxtunnels:
    get:
      description: Get List of Org MxTunnels
      operationId: listOrgMxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxtunnelsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxTunnels
      tags:
      - Orgs MxTunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create MxTunnel
      operationId: createOrgMxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  cluster_ids:
                  - string
                  hello_interval: 60
                  hello_retries: 7
                  ipsec:
                    dns_servers:
                    - string
                    enabled: true
                    extra_routes:
                    - dest: string
                      next_hop: 192.168.0.1
                    split_tunnel: true
                    use_mxedge: true
                  vlan_ids:
                  - 0
            schema:
              $ref: '#/components/schemas/mxtunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgMxTunnel
      tags:
      - Orgs MxTunnels
  /api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}:
    delete:
      description: Delete Org MxTunnel
      operationId: deleteOrgMxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgMxTunnel
      tags:
      - Orgs MxTunnels
    get:
      description: Get Org MxTunnel Details
      operationId: getOrgMxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxTunnel
      tags:
      - Orgs MxTunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxtunnel_id'
    put:
      description: Update Org MxTunnel
      operationId: updateOrgMxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxtunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Mxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMxTunnel
      tags:
      - Orgs MxTunnels
  /api/v1/orgs/{org_id}/nac_clients/count:
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countOrgNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_nac_clients_count_distinct'
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: site id if assigned, null if not assigned
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgNacClients
      tags:
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/events/count:
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countOrgNacClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_nac_client_events_count_distinct'
      - $ref: '#/components/parameters/nac_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgNacClientEvents
      tags:
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/events/search:
    get:
      description: Search NAC Client Events
      operationId: searchOrgNacClientEvents
      parameters:
      - $ref: '#/components/parameters/nac_event_type'
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          format: uuid
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: NAC Policy Dry Run Rule ID, if present and matched
        in: query
        name: dryrun_nacrule_id
        schema:
          type: string
      - description: True - if dryrun rule present and matched with priority, False
          - if not matched or not present
        in: query
        name: dryrun_nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201C802.1X\u201D, \u201CMAB\u201D\
          , \u201CDeviceAuth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan name or ID assigned to the client
        in: query
        name: vlan
        schema:
          type: integer
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSID
        in: query
        name: bssid
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          format: uuid
          type: string
      - description: IDP returned roles/groups for the user
        in: query
        name: idp_role
        schema:
          type: string
      - description: Radius attributes returned by NAC to NAS Devive
        in: query
        name: resp_attrs
        schema:
          $ref: '#/components/schemas/strings'
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: AP random macMAC
        in: query
        name: random_mac
        schema:
          type: boolean
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/EventsNacClientSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgNacClientEvents
      tags:
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nac_clients/search:
    get:
      description: Search Org NAC Clients
      operationId: searchOrgNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan name or ID assigned to the client
        in: query
        name: vlan
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: site id if assigned, null if not assigned
        in: query
        name: site_id
        schema:
          type: string
      - description: AP MAC connected to by client
        in: query
        name: ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/ClientNacSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgNacClients
      tags:
      - Orgs Clients - NAC
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/nacportals:
    get:
      description: List Org NAC Portals
      operationId: listOrgNacPortals
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NacPortalArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacPortals
      tags:
      - Orgs NAC Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org NAC Portal
      operationId: createOrgNacPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_portal'
      responses:
        '200':
          $ref: '#/components/responses/NacPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNacPortal
      tags:
      - Orgs NAC Portals
  /api/v1/orgs/{org_id}/nacportals/{nacportal_id}:
    delete:
      description: Delete Org NAC Portal
      operationId: deleteOrgNacPortal
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacPortal
      tags:
      - Orgs NAC Portals
    get:
      description: Get Org NAC Portal
      operationId: getOrgNacPortal
      responses:
        '200':
          $ref: '#/components/responses/NacPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacPortal
      tags:
      - Orgs NAC Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacportal_id'
    put:
      description: Update Org NAC Portal
      operationId: updateOrgNacPortal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_portal'
      responses:
        '200':
          $ref: '#/components/responses/NacPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNacPortal
      tags:
      - Orgs NAC Portals
  /api/v1/orgs/{org_id}/nacportals/{nacportal_id}/failures:
    get:
      description: Get List of Org NAC Portal SSO Latest Failures
      operationId: listOrgNacPortalSsoLatestFailures
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SsoLatestFailures'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacPortalSsoLatestFailures
      tags:
      - Orgs NAC Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacportal_id'
  /api/v1/orgs/{org_id}/nacportals/{nacportal_id}/saml_metadata:
    get:
      description: Get Org NAC Portal SSO SAML Metadata
      operationId: getOrgNacPortalSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/SsoSamlMetadata'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacPortalSsoSamlMetadata
      tags:
      - Orgs NAC Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacportal_id'
  /api/v1/orgs/{org_id}/nacportals/{nacportal_id}/saml_metadata.xml:
    get:
      description: "Download Org NAC Portal SSO SAML Metdata\n\nExample of metadata.xml:\n\
        ```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor xmlns:md=\"\
        urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://api.mist.com/api/v1/saml/5hdF5g/login\"\
        \ validUntil=\"2027-10-12T21:59:01Z\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"\
        >\n    <md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"\
        true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\
        >\n        <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/logout\" />\n       \
        \ <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\
        \        <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/login\" index=\"0\" isDefault=\"\
        true\"/>\n        <md:AttributeConsumingService index=\"0\">\n           \
        \ <md:ServiceName xml:lang=\"en-US\">Mist</md:ServiceName>\n            <md:RequestedAttribute\
        \ Name=\"Role\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"\
        \ isRequired=\"true\"/>\n            <md:RequestedAttribute Name=\"FirstName\"\
        \ NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"\
        false\"/>\n            <md:RequestedAttribute Name=\"LastName\" NameFormat=\"\
        urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"false\"/>\n\
        \        </md:AttributeConsumingService>\n    </md:SPSSODescriptor>\n</md:EntityDescriptor>\n\
        ```"
      operationId: downloadOrgNacPortalSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: downloadOrgNacPortalSsoSamlMetadata
      tags:
      - Orgs NAC Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacportal_id'
  /api/v1/orgs/{org_id}/nacrules:
    get:
      description: Get List of Org NAC Rules
      operationId: listOrgNacRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NacRulesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacRules
      tags:
      - Orgs NAC Rules
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: create Org NAC Rule
      operationId: createOrgNacRule
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5"
                  matching:
                    auth_type: eap-tls
                    nactags:
                    - 041d5d36-716c-4cfb-4988-3857c6aa14a2
                    - a809a97f-d599-f812-eb8c-c3f84aabf6ba
                    port_types:
                    - wired
                    site_ids:
                    - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                    - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                    sitegroup_ids:
                    - bb19fc3e-4124-4b57-80d9-c3f6edce47c4
                    - bb19fc3e-6564-4b57-80d9-c3f6edce47c1
                  name: name1
                  not_matching: {}
                  order: 1
            schema:
              $ref: '#/components/schemas/nac_rule'
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNacRule
      tags:
      - Orgs NAC Rules
  /api/v1/orgs/{org_id}/nacrules/{nacrule_id}:
    delete:
      description: Delete Org NAC Rule
      operationId: deleteOrgNacRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacRule
      tags:
      - Orgs NAC Rules
    get:
      description: Get Org NAC Rule
      operationId: getOrgNacRule
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacRule
      tags:
      - Orgs NAC Rules
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nacrule_id'
    put:
      description: Update Org NAC Rule
      operationId: updateOrgNacRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_rule'
      responses:
        '200':
          $ref: '#/components/responses/NacRule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNacRule
      tags:
      - Orgs NAC Rules
  /api/v1/orgs/{org_id}/nactags:
    get:
      description: Get List of Org NAC Tags
      operationId: listOrgNacTags
      parameters:
      - description: Type of NAC Tag
        in: query
        name: type
        schema:
          type: string
      - description: Name of NAC Tag
        in: query
        name: name
        schema:
          type: string
      - description: Type of NAC Tag
        in: query
        name: match
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NacTagsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNacTags
      tags:
      - Orgs NAC Tags
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org NAC Tag
      operationId: createOrgNacTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nac_tag'
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNacTag
      tags:
      - Orgs NAC Tags
  /api/v1/orgs/{org_id}/nactags/{nactag_id}:
    delete:
      description: Delete Org NAC Tag
      operationId: deleteOrgNacTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacTag
      tags:
      - Orgs NAC Tags
    get:
      description: Get Org NAC Tag
      operationId: getOrgNacTag
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacTag
      tags:
      - Orgs NAC Tags
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/nactag_id'
    put:
      description: Update Org NAC Tag
      operationId: updateOrgNacTag
      requestBody:
        content:
          application/json:
            examples: {}
            schema:
              $ref: '#/components/schemas/nac_tag'
      responses:
        '200':
          $ref: '#/components/responses/NacTag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNacTag
      tags:
      - Orgs NAC Tags
  /api/v1/orgs/{org_id}/networks:
    get:
      description: Get List of Org Networks
      operationId: listOrgNetworks
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NetworksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNetworks
      tags:
      - Orgs Networks
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Organization Network
      operationId: createOrgNetwork
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  disallow_mist_services: false
                  gateway: 192.168.70.1
                  hosts:
                    property1:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                    property2:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                  internal_access:
                    enabled: true
                  internet_access:
                    create_simple_service_policy: false
                    destination_nat:
                      property1:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                      property2:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                    enabled: true
                    restricted: false
                    static_nat:
                      property1:
                        internal_ip: 192.168.70.3
                        name: printer-1
                      property2:
                        internal_ip: 192.168.70.3
                        name: printer-1
                  isolation: true
                  name: string
                  subnet: 192.168.70.0/24
                  tenants:
                    property1:
                      addresses:
                      - 10.10.10.10.
                    property2:
                      addresses:
                      - 10.10.10.52
                  vlan_id: 0
                  vpn_access:
                    property1:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                      summarized_subnet: 172.16.0.0/16
                    property2:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                      summarized_subnet: 172.16.0.0/16
            schema:
              $ref: '#/components/schemas/network'
      responses:
        '200':
          $ref: '#/components/responses/Network'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNetwork
      tags:
      - Orgs Networks
  /api/v1/orgs/{org_id}/networks/{network_id}:
    delete:
      description: Delete Organization Network
      operationId: deleteOrgNetwork
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNetwork
      tags:
      - Orgs Networks
    get:
      description: Get Organization Network Details
      operationId: getOrgNetwork
      responses:
        '200':
          $ref: '#/components/responses/Network'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNetwork
      tags:
      - Orgs Networks
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/network_id'
    put:
      description: Update Organization Network
      operationId: updateOrgNetwork
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  disallow_mist_services: false
                  gateway: 192.168.70.1
                  hosts:
                    property1:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                    property2:
                      external_ips: 172.16.10.32-172.16.10.35
                      ips: 192.168.70.32-192.168.70.35
                  internal_access:
                    enabled: true
                  internet_access:
                    create_simple_service_policy: false
                    destination_nat:
                      property1:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                      property2:
                        internal_ip: 192.168.70.30
                        name: web server
                        port: 443
                    enabled: true
                    restricted: false
                    static_nat:
                      property1:
                        internal_ip: 192.168.70.3
                        name: printer-1
                      property2:
                        internal_ip: 192.168.70.3
                        name: printer-1
                  isolation: true
                  name: string
                  subnet: 192.168.70.0/24
                  tenants:
                    property1:
                      addresses:
                      - 10.10.10.10
                    property2:
                      addresses:
                      - 10.10.10.52
                  vlan_id: 0
                  vpn_access:
                    property1:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                      summarized_subnet: 172.16.0.0/16
                    property2:
                      allow_ping: true
                      destination_nat:
                        property1:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                        property2:
                          name: web server
                          port: 443
                          to: 192.168.70.5/30
                      nat_pool: 172.16.0.0/26
                      routed: true
                      source_nat:
                        exteral_ip: 172.16.0.8/30
                      static_nat:
                        property1:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                        property2:
                          internal_ip: 192.168.70.3
                          name: pos_station-1
                      summarized_subnet: 172.16.0.0/16
            schema:
              $ref: '#/components/schemas/network'
      responses:
        '200':
          $ref: '#/components/responses/Network'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNetwork
      tags:
      - Orgs Networks
  /api/v1/orgs/{org_id}/networktemplates:
    get:
      description: Get List of Org Network Templates
      operationId: listOrgNetworkTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/NetworktemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgNetworkTemplates
      tags:
      - Orgs Network Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Update Org Network Templates
      operationId: createOrgNetworkTemplate
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                  - set snmp community public
                  dhcp_snooping:
                    all_networks: true
                    enable_arp_spoof_check: true
                    enable_ip_source_guard: true
                    enabled: true
                    networks:
                    - string
                  dns_servers:
                  - string
                  dns_suffix:
                  - string
                  extra_routes:
                    property1:
                      via: string
                    property2:
                      via: string
                  group_tags: {}
                  import_org_networks:
                  - ap
                  mist_nac:
                    enabled: true
                    network: string
                  name: string
                  networks:
                    property1:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                    property2:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                  ntp_servers:
                  - string
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                      - equals: string
                        equals_any:
                        - string
                        expression: string
                        src: lldp_chassis_id
                        usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                    auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 111
                      size: 5m
                    console:
                      contents:
                      - facility: any
                        severity: any
                    enabled: false
                    files:
                    - archive:
                        files: 10
                        size: 5m
                      contents:
                      - facility: any
                        severity: any
                      explicit_priority: true
                      file: file-name
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      structured_data: true
                    network: string
                    send_to_all_servers: true
                    servers:
                    - contents:
                      - facility: any
                        severity: any
                      explicit_priority: true
                      facility: any
                      host: syslogd.internal
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      port: 514
                      protocol: udp
                      routing_instance: routing-instance-name
                      severity: any
                      source_address: string
                      structured_data: true
                      tag: string
                    time_format: millisecond
                    users:
                    - contents:
                      - facility: any
                        severity: any
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      user: '*'
                  snmp_config:
                    client_list:
                    - client_list_name: clist-1
                      clients:
                      - 151.140.101.218/32
                    contact: cns@juniper.net
                    description: Juniper QFX Series Switch - 1K_5LA
                    enabled: true
                    engine_id: local
                    location: Las Vegas, NV
                    name: TGH-1K-QFX10K
                    network: default
                    trap_groups:
                    - categories:
                      - authentication
                      group_name: profiler
                      targets:
                      - 172.29.158.19
                      version: v2
                    v2c_config:
                    - authorization: read-only
                      client_list_name: clist-1
                      community_name: abc123
                      view: all
                    v3_config:
                      notify:
                      - name: string
                        tag: string
                        type: trap
                      notify_filter:
                      - contents:
                        - include: true
                          oid: 1.3.6.1.4.1
                        profile_name: string
                      target_address:
                      - address: address
                        address_mask: address_mask
                        port: 161
                        tag_list: string
                        target_address_name: target_address_name
                        target_parameters: string
                      target_parameters:
                      - message_processing_model: v1
                        name: string
                        notify_filter: string
                        security_level: authentication
                        security_model: usm
                        security_name: m01620
                      usm:
                        engine-id: 00:00:00:0b:00:00:70:10:6f:08:b6:3f
                        engine_type: remote_engine
                        users:
                        - authentication_password: strings
                          authentication_type: authentication_md5
                          encryption_password: stringst
                          encryption_type: privacy-aes128
                          name: string
                      vacm:
                        access:
                        - group_name: string
                          prefix_list:
                          - context_prefix: iil
                            notify_view: all
                            read_view: all
                            security_level: privacy
                            security_model: any
                            type: default_context_prefix
                            write_view: all
                        security_to_group:
                          content:
                          - group: string
                            security_name: string
                          security_model: usm
                    views:
                      include: true
                      oid: 1.3.6.1
                      view_name: all
                  switch_matching:
                    enable: true
                    rules:
                    - additional_config_cmds:
                      - set snmp community public
                      match_role: string
                      name: string
                      port_config:
                        property1:
                          ae_disable_lacp: true
                          ae_idx: 0
                          aggregated: false
                          critical: true
                          description: string
                          disable_autoneg: false
                          duplex: auto
                          dynamic_usage: string
                          esilag: true
                          mtu: 1514
                          no_local_overwrite: true
                          poe_disabled: false
                          speed: auto
                          usage: string
                        property2:
                          ae_disable_lacp: true
                          ae_idx: 0
                          aggregated: false
                          critical: true
                          description: string
                          disable_autoneg: false
                          duplex: auto
                          dynamic_usage: string
                          esilag: true
                          mtu: 1514
                          no_local_overwrite: true
                          poe_disabled: false
                          speed: auto
                          usage: string
                      property1: string
                      property2: string
                      switch_mgmt:
                        ap_affinity_threshold: 10
                        config_revert_timer: 10
                        dhcp_option_fqdn: false
                        mxedge_proxy_host: string
                        mxedge_proxy_port: 2222
                        use_mxedge_proxy: false
                  switch_mgmt:
                    config_revert: 10
                    protect_re:
                      enabled: false
                    root_password: string
                    tacacs:
                      acct_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                  vrf_config:
                    enabled: false
                  vrf_instances:
                    property1:
                      extra_routes:
                        property1:
                          via: 192.0.2.10
                        property2:
                          via: 198.51.100.1
                      networks:
                      - string
                    property2:
                      extra_routes:
                        property1:
                          via: 198.51.100.1
                        property2:
                          via: 198.51.100.10
                      networks:
                      - string
            schema:
              $ref: '#/components/schemas/network_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Networktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgNetworkTemplate
      tags:
      - Orgs Network Templates
  /api/v1/orgs/{org_id}/networktemplates/{networktemplate_id}:
    delete:
      description: Delete Org Network Template
      operationId: deleteOrgNetworkTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNetworkTemplate
      tags:
      - Orgs Network Templates
    get:
      description: Get Org Network Templates Details
      operationId: getOrgNetworkTemplate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network_template'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNetworkTemplate
      tags:
      - Orgs Network Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/networktemplate_id'
    put:
      description: Update Org Network Template
      operationId: updateOrgNetworkTemplates
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                  - set snmp community public
                  dhcp_snooping:
                    all_networks: true
                    enable_arp_spoof_check: true
                    enable_ip_source_guard: true
                    enabled: true
                    networks:
                    - string
                  dns_servers:
                  - string
                  dns_suffix:
                  - string
                  extra_routes:
                    property1:
                      via: string
                    property2:
                      via: string
                  group_tags: {}
                  import_org_networks:
                  - ap
                  mist_nac:
                    enabled: true
                    network: string
                  name: string
                  networks:
                    property1:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                    property2:
                      subnet: 192.168.1.0/24
                      vlan_id: 10
                  ntp_servers:
                  - string
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                      - equals: string
                        equals_any:
                        - string
                        expression: string
                        src: lldp_chassis_id
                        usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                    auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 111
                      size: 5m
                    console:
                      contents:
                      - facility: any
                        severity: any
                    enabled: false
                    files:
                    - archive:
                        files: 10
                        size: 5m
                      contents:
                      - facility: any
                        severity: any
                      explicit_priority: true
                      file: file-name
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      structured_data: true
                    network: string
                    send_to_all_servers: true
                    servers:
                    - contents:
                      - facility: any
                        severity: any
                      explicit_priority: true
                      facility: any
                      host: syslogd.internal
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      port: 514
                      protocol: udp
                      routing_instance: routing-instance-name
                      severity: any
                      source_address: string
                      structured_data: true
                      tag: string
                    time_format: millisecond
                    users:
                    - contents:
                      - facility: any
                        severity: any
                      match: '"!alarm|ntp|errors.crc_error[chan]"'
                      user: '*'
                  snmp_config:
                    client_list:
                    - client_list_name: clist-1
                      clients:
                      - 151.140.101.218/32
                    contact: cns@juniper.net
                    description: Juniper QFX Series Switch - 1K_5LA
                    enabled: true
                    engine_id: local
                    location: Las Vegas, NV
                    name: TGH-1K-QFX10K
                    network: default
                    trap_groups:
                    - categories:
                      - authentication
                      group_name: profiler
                      targets:
                      - 172.29.158.19
                      version: v2
                    v2c_config:
                    - authorization: read-only
                      client_list_name: clist-1
                      community_name: abc123
                      view: all
                    v3_config:
                      notify:
                      - name: string
                        tag: string
                        type: trap
                      notify_filter:
                      - contents:
                        - include: true
                          oid: 1.3.6.1.4.1
                        profile_name: string
                      target_address:
                      - address: address
                        address_mask: address_mask
                        port: 161
                        tag_list: string
                        target_address_name: target_address_name
                        target_parameters: string
                      target_parameters:
                      - message_processing_model: v1
                        name: string
                        notify_filter: string
                        security_level: authentication
                        security_model: usm
                        security_name: m01620
                      usm:
                        engine-id: 00:00:00:0b:00:00:70:10:6f:08:b6:3f
                        engine_type: remote_engine
                        users:
                        - authentication_password: strings
                          authentication_type: authentication_md5
                          encryption_password: stringst
                          encryption_type: privacy-aes128
                          name: string
                      vacm:
                        access:
                        - group_name: string
                          prefix_list:
                          - context_prefix: iil
                            notify_view: all
                            read_view: all
                            security_level: privacy
                            security_model: any
                            type: default_context_prefix
                            write_view: all
                        security_to_group:
                          content:
                          - group: string
                            security_name: string
                          security_model: usm
                    views:
                      include: true
                      oid: 1.3.6.1
                      view_name: all
                  switch_matching:
                    enable: true
                    rules:
                    - additional_config_cmds:
                      - set snmp community public
                      match_role: string
                      name: string
                      port_config:
                        property1:
                          ae_disable_lacp: true
                          ae_idx: 0
                          aggregated: false
                          critical: true
                          description: string
                          disable_autoneg: false
                          duplex: auto
                          dynamic_usage: string
                          esilag: true
                          mtu: 1514
                          no_local_overwrite: true
                          poe_disabled: false
                          speed: auto
                          usage: string
                        property2:
                          ae_disable_lacp: true
                          ae_idx: 0
                          aggregated: false
                          critical: true
                          description: string
                          disable_autoneg: false
                          duplex: auto
                          dynamic_usage: string
                          esilag: true
                          mtu: 1514
                          no_local_overwrite: true
                          poe_disabled: false
                          speed: auto
                          usage: string
                      property1: string
                      property2: string
                      switch_mgmt:
                        ap_affinity_threshold: 10
                        config_revert_timer: 10
                        dhcp_option_fqdn: false
                        mxedge_proxy_host: string
                        mxedge_proxy_port: 2222
                        use_mxedge_proxy: false
                  switch_mgmt:
                    config_revert: 10
                    protect_re:
                      enabled: false
                    root_password: string
                    tacacs:
                      acct_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                  vrf_config:
                    enabled: false
                  vrf_instances:
                    property1:
                      extra_routes:
                        property1:
                          via: 198.51.100.1
                        property2:
                          via: 198.51.100.2
                      networks:
                      - string
                    property2:
                      extra_routes:
                        property1:
                          via: 198.51.100.1
                        property2:
                          via: 198.51.100.2
                      networks:
                      - string
            schema:
              $ref: '#/components/schemas/network_template'
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                Example:
                  value:
                    additional_config_cmds:
                    - set snmp community public
                    dhcp_snooping:
                      all_networks: true
                      enable_arp_spoof_check: true
                      enable_ip_source_guard: true
                      enabled: true
                      networks:
                      - string
                    dns_servers:
                    - string
                    dns_suffix:
                    - string
                    extra_routes:
                      property1:
                        via: string
                      property2:
                        via: string
                    import_org_networks:
                    - ap
                    mist_nac:
                      enabled: true
                      network: string
                    name: string
                    networks:
                      property1:
                        subnet: 192.168.1.0/24
                        vlan_id: 10
                      property2:
                        subnet: 192.168.1.0/24
                        vlan_id: 10
                    ntp_servers:
                    - string
                    port_usages:
                      dynamic:
                        mode: dynamic
                        reset_default_when: link_down
                        rules:
                        - equals: string
                          equals_any:
                          - string
                          expression: string
                          src: lldp_chassis_id
                          usage: string
                      property1:
                        all_networks: false
                        allow_dhcpd: true
                        authentication_protocol: pap
                        bypass_auth_when_server_down: true
                        description: string
                        disable_autoneg: false
                        disabled: false
                        duplex: auto
                        enable_mac_auth: true
                        enable_qos: true
                        guest_network: string
                        mac_auth_only: true
                        mac_limit: 0
                        mode: access
                        mtu: 0
                        networks:
                        - string
                        persist_mac: false
                        poe_disabled: false
                        port_auth: string
                        port_network: string
                        rejected_network: null
                        speed: string
                        storm_control:
                          no_broadcast: false
                          no_multicast: false
                          no_registered_multicast: false
                          no_unknown_unicast: false
                          percentage: 80
                        stp_edge: true
                        voip_network: string
                      property2:
                        all_networks: false
                        allow_dhcpd: true
                        authentication_protocol: pap
                        bypass_auth_when_server_down: true
                        description: string
                        disable_autoneg: false
                        disabled: false
                        duplex: auto
                        enable_mac_auth: true
                        enable_qos: true
                        guest_network: string
                        mac_auth_only: true
                        mac_limit: 0
                        mode: access
                        mtu: 0
                        networks:
                        - string
                        persist_mac: false
                        poe_disabled: false
                        port_auth: string
                        port_network: string
                        rejected_network: null
                        speed: string
                        storm_control:
                          no_broadcast: false
                          no_multicast: false
                          no_registered_multicast: false
                          no_unknown_unicast: false
                          percentage: 80
                        stp_edge: true
                        voip_network: string
                    radius_config:
                      acct_interim_interval: 0
                      acct_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1813
                        secret: testing123
                      auth_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1812
                        secret: testing123
                      auth_servers_retries: 3
                      auth_servers_timeout: 5
                      coa_enabled: false
                      coa_port: 3799
                      network: string
                      source_ip: string
                    remote_syslog:
                      archive:
                        files: 111
                        size: 5m
                      console:
                        contents:
                        - facility: any
                          severity: any
                      enabled: false
                      files:
                      - archive:
                          files: 10
                          size: 5m
                        contents:
                        - facility: any
                          severity: any
                        explicit_priority: true
                        file: file-name
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        structured_data: true
                      network: string
                      send_to_all_servers: true
                      servers:
                      - contents:
                        - facility: any
                          severity: any
                        explicit_priority: true
                        facility: any
                        host: syslogd.internal
                        match: '!alarm|ntp|errors.crc_error[chan]'
                        port: 514
                        protocol: udp
                        routing_instance: routing-instance-name
                        severity: any
                        source_address: string
                        structured_data: true
                        tag: string
                      time_format: millisecond
                      users:
                      - contents:
                        - facility: any
                          severity: any
                        match: '"!alarm|ntp|errors.crc_error[chan]"'
                        user: '*'
                    snmp_config:
                      client_list:
                      - client_list_name: clist-1
                        clients:
                        - 151.140.101.218/32
                      contact: cns@juniper.net
                      description: Juniper QFX Series Switch - 1K_5LA
                      enabled: true
                      engine_id: local
                      location: Las Vegas, NV
                      name: TGH-1K-QFX10K
                      network: default
                      trap_groups:
                      - categories:
                        - authentication
                        group_name: profiler
                        targets:
                        - 172.29.158.19
                        version: v2
                      v2c_config:
                      - authorization: read-only
                        client_list_name: clist-1
                        community_name: abc123
                        view: all
                      v3_config:
                        notify:
                        - name: string
                          tag: string
                          type: trap
                        notify_filter:
                        - contents:
                          - include: true
                            oid: 1.3.6.1.4.1
                          profile_name: string
                        target_address:
                        - address: address
                          address_mask: address_mask
                          port: 161
                          tag_list: string
                          target_address_name: target_address_name
                          target_parameters: string
                        target_parameters:
                        - message_processing_model: v1
                          name: string
                          notify_filter: string
                          security_level: authentication
                          security_model: usm
                          security_name: m01620
                        usm:
                          engine-id: 00:00:00:0b:00:00:70:10:6f:08:b6:3f
                          engine_type: remote_engine
                          users:
                          - authentication_password: strings
                            authentication_type: authentication_md5
                            encryption_password: stringst
                            encryption_type: privacy-aes128
                            name: string
                        vacm:
                          access:
                          - group_name: string
                            prefix_list:
                            - context_prefix: iil
                              notify_view: all
                              read_view: all
                              security_level: privacy
                              security_model: any
                              type: default_context_prefix
                              write_view: all
                          security_to_group:
                            content:
                            - group: string
                              security_name: string
                            security_model: usm
                      views:
                        include: true
                        oid: 1.3.6.1
                        view_name: all
                    switch_matching:
                      enable: true
                      rules:
                      - additional_config_cmds:
                        - set snmp community public
                        match_role: string
                        name: string
                        port_config:
                          property1:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                          property2:
                            ae_disable_lacp: true
                            ae_idx: 0
                            aggregated: false
                            critical: true
                            description: string
                            disable_autoneg: false
                            duplex: auto
                            dynamic_usage: string
                            esilag: true
                            mtu: 1514
                            no_local_overwrite: true
                            poe_disabled: false
                            speed: auto
                            usage: string
                        property1: string
                        property2: string
                        switch_mgmt:
                          ap_affinity_threshold: 10
                          config_revert_timer: 10
                          dhcp_option_fqdn: false
                          mxedge_proxy_host: string
                          mxedge_proxy_port: 2222
                          use_mxedge_proxy: false
                    switch_mgmt:
                      config_revert: 10
                      protect_re:
                        enabled: false
                      root_password: string
                      tacacs:
                        acct_servers:
                        - host: 198.51.100.1
                          port: '49'
                          secret: string
                          timeout: 10
                        enabled: true
                        network: string
                        tacplus_servers:
                        - host: 198.51.100.1
                          port: '49'
                          secret: string
                          timeout: 10
                    vrf_config:
                      enabled: false
                    vrf_instances:
                      property1:
                        extra_routes:
                          property1:
                            via: 198.51.100.1
                          property2:
                            via: 198.51.100.2
                        networks:
                        - string
                      property2:
                        extra_routes:
                          property1:
                            via: 198.51.100.1
                          property2:
                            via: 198.51.100.2
                        networks:
                        - string
              schema:
                $ref: '#/components/schemas/network_template'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgNetworkTemplates
      tags:
      - Orgs Network Templates
  /api/v1/orgs/{org_id}/ocdevices/outbound_ssh_cmd:
    get:
      description: 'Get Org Juniper Devices command


        Juniper devices can be managed/adopted by Mist. Currently outbound-ssh + netconf
        is used.

        A few lines of CLI commands are generated per-Org, allowing the Juniper devices
        to phone home to Mist.'
      operationId: getOrgJuniperDevicesCommand
      parameters:
      - description: site_id would be used for proxy config check of the site and
          automatic site assignment
        in: query
        name: site_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/JunosRegisterCmd'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgJuniperDevicesCommand
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/otherdevices:
    get:
      description: Get List of Org other devices (3rd party devices)
      operationId: listOrgOtherDevices
      parameters:
      - in: query
        name: vendor
        schema:
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: serial
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/DeviceOtherArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgOtherDevices
      tags:
      - Orgs Devices - Others
    parameters:
    - $ref: '#/components/parameters/org_id'
    put:
      description: Assign or unassign OtherDevices to and from a site.
      operationId: updateOrgOtherDevices
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  device_mac: 0adfea67e65b
                  macs:
                  - 5c5b350e0001
                  - 5c5b350e0003
                  op: assign
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: '#/components/schemas/other_device_update_multi'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgOtherDevices
      tags:
      - Orgs Devices - Others
  /api/v1/orgs/{org_id}/otherdevices/events/count:
    get:
      description: Count Org OtherDevices Events
      operationId: countOrgOtherDeviceEvents
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_otherdevices_events_count_distinct'
      - $ref: '#/components/parameters/otherdevice_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgOtherDeviceEvents
      tags:
      - Orgs Devices - Others
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/otherdevices/events/search:
    get:
      description: Search Org OtherDevices Events
      operationId: searchOrgOtherDeviceEvents
      parameters:
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: mac
        in: query
        name: mac
        schema:
          type: string
      - description: mac of attached device
        in: query
        name: device_mac
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: vendor name
        in: query
        name: vendor
        schema:
          type: string
      - $ref: '#/components/parameters/otherdevice_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/EventsOtherDevicesSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgOtherDeviceEvents
      tags:
      - Orgs Devices - Others
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/otherdevices/{device_mac}:
    delete:
      description: Delete OtherDevice
      operationId: deleteOrgOtherDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgOtherDevice
      tags:
      - Orgs Devices - Others
    get:
      description: Get Org other device (3rd party device)
      operationId: getOrgOtherDevice
      responses:
        '200':
          $ref: '#/components/responses/DeviceOther'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgOtherDevice
      tags:
      - Orgs Devices - Others
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/device_mac'
    put:
      description: If the Site / Device cannot be identified, a manual association
        can be made
      operationId: updateOrgOtherDevice
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  device_mac: 0adfea67e65b
                  site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
            schema:
              $ref: '#/components/schemas/other_device_update'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgOtherDevice
      tags:
      - Orgs Devices - Others
  /api/v1/orgs/{org_id}/otherdevices/{device_mac}/reboot:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/device_mac'
    post:
      description: Reboot OtherDevice
      operationId: rebootOrgOtherDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: rebootOrgOtherDevice
      tags:
      - Orgs Devices - Others
  /api/v1/orgs/{org_id}/pcaps:
    get:
      description: Get List of Org  Packet Captures
      operationId: listOrgPacketCaptures
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/PcapsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPacketCaptures
      tags:
      - Utilities PCAPs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/pcaps/capture:
    delete:
      description: Stop current Org capture
      operationId: stopOrgPacketCapture
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopOrgPacketCapture
      tags:
      - Utilities PCAPs
    get:
      description: Get Org Capturing status
      operationId: getOrgCapturingStatus
      responses:
        '200':
          $ref: '#/components/responses/PcapStatus'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgCapturingStatus
      tags:
      - Utilities PCAPs
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Initiate a Packet Capture\n\nThe output will be available through\
        \ websocket. As there can be multiple command issued against the same AP at\
        \ the same time and the output all goes through the same websocket stream,\
        \ session is introduced for demux.\n\n#### Subscribe to Device Command outputs\n\
        `WS /api-ws/v1/stream`\n\n```json\n{\n    subscribe: \"/sites/{site_id}/pcaps\"\
        \n}\n```\n#### Response (Wireless/RadioTap)\n```json\n{\n  \"event\": \"data\"\
        \n  \"channel\": \"/orgs/67970e46-4e12-11e6-9188-0242ac110007/pcaps\"\n  \"\
        data\": {\n      \"capture_id\": \"f039b1b4-a23e-48b2-906a-0da40524de73\"\
        , \n      \"pcap_dict\": {\n          \"dst_mac\": \"68:ec:c5:09:2e:87\",\n\
        \          \"src_mac\": \"8c:3b:ad:e0:47:40\", \n          \"vlan\": 1, \n\
        \          \"src_ip\": \"34.224.147.117\", \n          \"dst_ip\": \"192.168.1.55\"\
        ,\n          \"dst_port\": 51635, \n          \"src_port\": 443,\n       \
        \   \"protocol\": \"TCP\", \n          \"mxedge_id\": \"00000000-0000-0000-1000-001122334455\"\
        ,\n          \"direction\": \"tx\", \n          \"timestamp\": 1652247615,\
        \ \n          \"length\": 159.0, \n          \"interface\": \"port0\",\n \
        \         \"info\": \"1652247616.007409 IP ec2-34-224-147-117.compute-1.amazonaws.com.https\
        \ > ip-192-168-1-55.ec2.internal.51635: Flags [P.], seq \n               \
        \     2192123968:2192124057, ack 4035166782, win 12, options [nop,nop,TS val\
        \ 597467050 ecr 740580660], length 89\\\\n\",\n          }, \n      \"pcap_raw\"\
        : \"1MOyoQIABAAAAAAAAAAAAP//AAABAAAAQEx7YhMzAACfAAAAnwAAAGjsxQkuh4w7reBHQIEAAAEIAEUAAI1bLEAAKAZ/CiLgk3XAqAE3AbvJs4KpKEDwg8I+gBgADFf9AAABAQgKI5yfqiwkXTQXAwMAVKY5JopoKQrVEn0/3ld4YntctGEH/rTZuwtCvzSncFw71QJveJi9uxHs57KC8w9Apph3YvXJrmWg7M37+o+YV0KH/xmr626s5Bkhb3QhKOu+NoNEmA==\\\
        \"\n    }\n}\n```"
      operationId: startOrgPacketCapture
      requestBody:
        content:
          application/json:
            examples:
              MxEdge-Packet-Capture:
                value:
                  duration: 600
                  format: stream
                  max_pkt_len: 1500
                  mxedges:
                    00000000-0000-0000-1000-001122334455:
                      interfaces:
                        port1:
                          tcpdump_expression: udp port 67 or udp port 68
                  num_packets: 100
                  tcpdump_expression: vlan 999
                  type: mxedge
            schema:
              $ref: '#/components/schemas/capture_org'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/PcapStart'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startOrgPacketCapture
      tags:
      - Utilities PCAPs
  /api/v1/orgs/{org_id}/pma/dashboards:
    get:
      description: Get List of premium analytics dashboards for this Org
      operationId: listOrgPmaDashboards
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PmaDashboards'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPmaDashboards
      tags:
      - Orgs Premium Analytics
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/pskportals:
    get:
      description: Get List of Org Psk Portals
      operationId: listOrgPskPortals
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PskPortalsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPskPortals
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Psk Portal
      operationId: createOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  expire: 0
                  max_usage: 0
                  name: string
                  required_fields:
                  - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: '#/components/schemas/psk_portal'
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgPskPortal
      tags:
      - Orgs Psk Portals
  /api/v1/orgs/{org_id}/pskportals/logs:
    get:
      description: Get the list of PSK Portals Logs
      operationId: listOrgPskPortalLogs
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/PskPortalLogsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPskPortalLogs
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/pskportals/logs/count:
    get:
      description: Count by Distinct Attributes of PskPortal Logs
      operationId: countOrgPskPortalLogs
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_psk_portal_logs_count_distinct'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgPskPortalLogs
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/pskportals/logs/search:
    get:
      description: Search Org PSK Portal Logs
      operationId: searchOrgPskPortalLogs
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - in: query
        name: psk_name
        schema:
          type: string
      - in: query
        name: psk_id
        schema:
          format: uuid
          type: string
      - in: query
        name: pskportal_id
        schema:
          format: uuid
          type: string
      - description: audit_id
        in: query
        name: id
        schema:
          format: uuid
          type: string
      - in: query
        name: admin_name
        schema:
          type: string
      - in: query
        name: admin_id
        schema:
          format: uuid
          type: string
      - description: name_id used in SSO
        in: query
        name: name_id
        schema:
          format: uuid
          type: string
      responses:
        '200':
          $ref: '#/components/responses/PskPortalLogsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgPskPortalLogs
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/pskportals/{pskportal_id}:
    delete:
      description: Delete Org Psk Portal
      operationId: deleteOrgPskPortal
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskPortal
      tags:
      - Orgs Psk Portals
    get:
      description: get Org Psk Portal Details
      operationId: getOrgPskPortal
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgPskPortal
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/pskportal_id'
    put:
      description: update Org Psk Portal
      operationId: updateOrgPskPortal
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  auth: sso
                  expire: 0
                  max_usage: 0
                  name: string
                  required_fields:
                  - string
                  role: string
                  ssid: string
                  sso:
                    default_role: string
                    forced_role: string
                    idp_cert: string
                    idp_sign_algo: string
                    idp_sso_url: string
                    issuer: string
                    nameid_format: string
                  sso_required_role: string
                  template_url: string
                  type: byod
                  vlan_id: 0
            schema:
              $ref: '#/components/schemas/psk_portal'
      responses:
        '200':
          $ref: '#/components/responses/PskPortal'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgPskPortal
      tags:
      - Orgs Psk Portals
  /api/v1/orgs/{org_id}/pskportals/{pskportal_id}/portal_image:
    delete:
      description: 'Delete background image for PskPortal



        If image is not uploaded or is deleted, PskPortal will use default image.'
      operationId: deleteOrgPskPortalImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskPortalImage
      tags:
      - Orgs Psk Portals
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/pskportal_id'
    post:
      description: Upload background image for PskPortal
      operationId: uploadOrgPskPortalImage
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/psk_portal_image'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadOrgPskPortalImage
      tags:
      - Orgs Psk Portals
  /api/v1/orgs/{org_id}/pskportals/{pskportal_id}/portal_template:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/pskportal_id'
    put:
      description: Update Org Psk Portal Template
      operationId: updateOrgPskPortalTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk_portal_template'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgPskPortalTemplate
      tags:
      - Orgs Psk Portals
  /api/v1/orgs/{org_id}/psks:
    get:
      description: Get List of Org Psks
      operationId: listOrgPsks
      parameters:
      - example: psk_name
        in: query
        name: name
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgPsks
      tags:
      - Orgs Psks
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Create Org PSK



        When `usage`==`macs`, corresponding "macs" field will hold a list consisting
        of client mac addresses (["xx:xx:xx:xx:xx",...]) or mac patterns(["xx:xx:*","xx*",...])
        or both (["xx:xx:xx:xx:xx:xx", "xx:*", ...]). This list is capped at 5000'
      operationId: createOrgPsk
      parameters:
      - description: if a key exists with the same `name`, replace it with the new
          one
        in: query
        name: upsert
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgPsk
      tags:
      - Orgs Psks
    put:
      description: Update Multiple PSKs
      operationId: updateOrgMultiplePsks
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                - expire_time: 1614990263
                  mac: string
                  max_usage: 0
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 0
            schema:
              $ref: '#/components/schemas/psks'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgMultiplePsks
      tags:
      - Orgs Psks
  /api/v1/orgs/{org_id}/psks/delete:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Delete Org PSK List


        Delete list of psks on the org. This API accepts single string or list of
        strings'
      operationId: deleteOrgPskList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk_id_list'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskList
      tags:
      - Orgs Psks
  /api/v1/orgs/{org_id}/psks/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Import PSK from CSV file or JSON\n\n##\_CSV File Format\n```\n\
        PSK Import CSV File Format:\nname,ssid,passphrase,usage,vlan_id,mac,max_usage,role,expire_time,notify_expiry,expiry_notification_time,notify_on_create_or_edit,email\n\
        Common,warehouse,foryoureyesonly,single,35,a31425f31278,0,student,1618594236\n\
        Justin,reception,visible,multi,1002,200,teacher,1618594236\nCommon2,ssid,1245678-xx,single,35,a31425f31278,0,student,1618594236,true,7,true,admin@test.com\n\
        ```"
      operationId: importOrgPsks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psks'
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/psks_import_file'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgPsks
      tags:
      - Orgs Psks
  /api/v1/orgs/{org_id}/psks/{psk_id}:
    delete:
      description: Delete Org PSK
      operationId: deleteOrgPsk
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPsk
      tags:
      - Orgs Psks
    get:
      description: Get Org PSK Details
      operationId: getOrgPsk
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgPsk
      tags:
      - Orgs Psks
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/psk_id'
    put:
      description: Update Org PSK
      operationId: updateOrgPsk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgPsk
      tags:
      - Orgs Psks
  /api/v1/orgs/{org_id}/psks/{psk_id}/delete_old_passphrase:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/psk_id'
    post:
      description: "Delete `old_passphrase` from PSK. \nIf successful, response is\
        \ same as GET, returns the PSK with `old_passphrase` removed."
      operationId: deleteOrgPskOldPassphrase
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgPskOldPassphrase
      tags:
      - Orgs Psks
  /api/v1/orgs/{org_id}/rftemplates:
    get:
      description: Get List of Org RF Template
      operationId: listOrgRfTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/RftemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgRfTemplates
      tags:
      - Orgs RF Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org RF Template
      operationId: createOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rf_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgRfTemplate
      tags:
      - Orgs RF Templates
  /api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}:
    delete:
      description: Delete Org RF Template
      operationId: deleteOrgRfTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgRfTemplate
      tags:
      - Orgs RF Templates
    get:
      description: Get Org RF Template Details
      operationId: getOrgRfTemplate
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgRfTemplate
      tags:
      - Orgs RF Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/rftemplate_id'
    put:
      description: Update Org RF Template
      operationId: updateOrgRfTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rf_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgRfTemplate
      tags:
      - Orgs RF Templates
  /api/v1/orgs/{org_id}/sdkclients/{sdkclient_id}:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkclient_id'
    put:
      description: Update SDK Client
      operationId: updateSdkClient
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: John Smith
            schema:
              $ref: '#/components/schemas/name_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkClient
      tags:
      - Orgs Clients - SDK
  /api/v1/orgs/{org_id}/sdkinvites:
    get:
      description: Get List of Org SDK Invites
      operationId: listSdkInvites
      responses:
        '200':
          $ref: '#/components/responses/SdkinvitesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkInvites
      tags:
      - Orgs SDK Invites
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Invite
      operationId: createSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  name: string
                  quota: 0
                  quota_limited: true
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkInvite
      tags:
      - Orgs SDK Invites
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}:
    delete:
      description: Revoke SDK Invite
      operationId: revokeSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: revokeSdkInvite
      tags:
      - Orgs SDK Invites
    get:
      description: Get SDK Invite Details
      operationId: getSdkInvite
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInvite
      tags:
      - Orgs SDK Invites
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    put:
      description: Update SDK Invite
      operationId: updateSdkInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdkinvite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdkinvite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkInvite
      tags:
      - Orgs SDK Invites
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/email:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by Email
      operationId: sendSdkInviteEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@abc.com
            schema:
              $ref: '#/components/schemas/email_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteEmail
      tags:
      - Orgs SDK Invites
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/qrcode:
    get:
      description: Revoke SDK Invite
      operationId: getSdkInviteQrCode
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkInviteQrCode
      tags:
      - Orgs SDK Invites
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
  /api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/sms:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdkinvite_id'
    post:
      description: Send SDK Invite by SMS
      operationId: sendSdkInviteSms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  number: '14081234567'
            schema:
              $ref: '#/components/schemas/sdk_invite_sms'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSdkInviteSms
      tags:
      - Orgs SDK Invites
  /api/v1/orgs/{org_id}/sdktemplates:
    get:
      description: Get List of Org SDK Templates
      operationId: listSdkTemplates
      responses:
        '200':
          $ref: '#/components/responses/SdktemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSdkTemplates
      tags:
      - Orgs SDK Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create SDK Template
      operationId: createSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSdkTemplate
      tags:
      - Orgs SDK Templates
  /api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}:
    delete:
      description: Delete SDK Template
      operationId: deleteSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSdkTemplate
      tags:
      - Orgs SDK Templates
    get:
      description: Get SDK Template Details
      operationId: getSdkTemplate
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSdkTemplate
      tags:
      - Orgs SDK Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sdktemplate_id'
    put:
      description: Update SDK Template
      operationId: updateSdkTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sdktemplate'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sdktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSdkTemplate
      tags:
      - Orgs SDK Templates
  /api/v1/orgs/{org_id}/secpolicies:
    get:
      description: Get List of Org Security Policies
      operationId: listOrgSecPolicies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/SecpoliciesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSecPolicies
      tags:
      - Orgs SecPolicies
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Security Policy
      operationId: createOrgSecPolicies
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: string
                  wlans:
                  - acct_immediate_update: false
                    acct_interim_interval: 0
                    acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                    airwatch:
                      api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                      console_url: https://hs1.airwatchportals.com
                      enabled: true
                      password: user1
                      username: test123
                    allow_ipv6_ndp: true
                    allow_mdns: false
                    allow_ssdp: false
                    ap_ids:
                    - 497f6eca-6276-4993-bfeb-53e2bbba6f08
                    app_limit:
                      apps:
                        dropbox: 300
                        netflix: 60
                      enabled: false
                      wxtag_ids:
                        f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                    app_qos:
                      apps:
                        skype-business-video:
                          dscp: 32
                          dst_subnet: 10.2.0.0/16
                          src_subnet: 10.2.0.0/16
                      enabled: true
                      others:
                      - dscp: 32
                        dst_subnet: 10.2.0.0/16
                        port_ranges: 80,1024-6553
                        protocol: udp
                        src_subnet: 10.2.0.0/16
                    apply_to: site
                    arp_filter: false
                    auth:
                      anticlog_threshold: 16
                      eap_reauth: false
                      enable_mac_auth: false
                      key_idx: 1
                      keys:
                      - string
                      multi_psk_only: false
                      owe: string
                      pairwise:
                      - wpa2-ccmp
                      private_wlan: true
                      psk: foryoureyesonly
                      type: psk
                      wep_as_secondary_auth: true
                    auth_server_selection: ordered
                    auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                    auth_servers_nas_id: 5c5b350e0101-nas
                    auth_servers_nas_ip: 15.3.1.5
                    auth_servers_retries: 5
                    auth_servers_timeout: 5
                    band: string
                    band_steer: false
                    band_steer_force_band5: false
                    bands:
                    - '24'
                    - '5'
                    block_blacklist_clients: false
                    bonjour:
                      additional_vlan_ids:
                      - 0
                      enabled: false
                      services:
                        airplay:
                          radius_groups:
                          - teachers
                          scope: same_ap
                    cisco_cwa:
                      allowed_hostnames:
                      - snapchat.com
                      allowed_subnets:
                      - 63.5.3.0/24
                      blocked_subnets:
                      - 192.168.0.0/16
                      enabled: false
                    client_limit_down: 0
                    client_limit_down_enabled: false
                    client_limit_up: 0
                    client_limit_up_enabled: false
                    coa_servers:
                    - disable_event_timestamp_check: false
                      enabled: false
                      ip: 1.2.3.4
                      port: 3799
                      secret: testing456
                    disable_11ax: false
                    disable_ht_vht_rates: false
                    disable_uapsd: false
                    disable_v1_roam_notify: false
                    disable_v2_roam_notify: false
                    disable_wmm: false
                    dns_server_rewrite:
                      enabled: false
                      radius_groups:
                        contractor: 172.1.1.1
                        guest: 8.8.8.8
                    dtim: 2
                    dynamic_psk:
                      default_psk: foryoureyesonly
                      default_vlan_id: 999
                      enabled: false
                      source: cloud_psks
                      vlan_ids:
                      - 1
                    dynamic_vlan:
                      default_vlan_id: 999
                      enabled: false
                      local_vlan_ids:
                      - 1
                      type: airespace-interface-name
                      vlans:
                        '131': default
                        '322': fast,video
                    enable_local_keycaching: false
                    enable_wireless_bridging: false
                    enabled: true
                    fast_dot1x_timers: false
                    hide_ssid: false
                    hostname_ie: false
                    hotspot20:
                      domain_name:
                      - mist.com
                      enabled: true
                      nai_realms:
                      - string
                      operators:
                      - google
                      - att
                      rcoi:
                      - 5A03BA0000
                      venue_name: some_name
                    interface: all
                    isolation: false
                    l2_isolation: false
                    legacy_overds: false
                    limit_bcast: false
                    limit_probe_response: true
                    max_idletime: 1800
                    mist_nac:
                      enabled: false
                    no_static_dns: false
                    no_static_ip: false
                    portal:
                      amazon_client_id: string
                      amazon_client_secret: string
                      amazon_email_domains:
                      - string
                      amazon_enabled: false
                      auth: none
                      azure_client_id: string
                      azure_client_secret: string
                      azure_enabled: false
                      azure_tenant_id: string
                      broadnet_password: password
                      broadnet_sid: MIST
                      broadnet_user_id: juniper
                      bypass_when_cloud_down: false
                      clickatell_api_key: string
                      cross_site: false
                      email_enabled: true
                      enabled: false
                      expire: 1440
                      external_portal_url: string
                      facebook_client_id: string
                      facebook_client_secret: string
                      facebook_email_domains:
                      - string
                      facebook_enabled: false
                      forward: false
                      forward_url: http://abc.com/promotions
                      google_client_id: string
                      google_client_secret: string
                      google_email_domains:
                      - mydomain.edu
                      - mydomain.org
                      google_enabled: false
                      gupshup_password: string
                      gupshup_userid: string
                      microsoft_client_id: string
                      microsoft_client_secret: string
                      microsoft_email_domains:
                      - string
                      microsoft_enabled: false
                      passphrase_enabled: false
                      password: let me in
                      portal_allowed_hostnames: string
                      portal_allowed_subnets: string
                      portal_api_secret: string
                      portal_denied_hostnames: string
                      portal_image: https://url/to/image.png
                      portal_sso_url: string
                      predefined_sponsors_enabled: true
                      privacy: true
                      puzzel_password: string
                      puzzel_service_id: string
                      puzzel_username: string
                      smsMessageFormat: string
                      sms_enabled: false
                      sms_provider: twilio
                      sponsor_auto_approve: false
                      sponsor_email_domains:
                      - reserved.net
                      - reserved.org
                      sponsor_enabled: false
                      sponsor_link_validity_duration: 30
                      sponsor_notify_all: false
                      sponsor_status_notify: false
                      sponsors:
                        sponsor1@company.com: FirstName1 LastName1
                        sponsor2@company.com: FirstName2 LastName2
                      sso_default_role: string
                      sso_forced_role: string
                      sso_idp_cert: string
                      sso_idp_sign_algo: string
                      sso_idp_sso_url: string
                      sso_issuer: string
                      sso_nameid_format: email
                      telstra_client_id: string
                      telstra_client_secret: string
                      thumbnail: string
                      twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                      twilio_phone_number: '+18548888888'
                      twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                    portal_allowed_hostnames:
                    - snapchat.com
                    - ibm.com
                    portal_allowed_subnets:
                    - 63.5.3.0/24
                    portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                    portal_denied_hostnames:
                    - msg.snapchat.com
                    portal_image: http://example.com
                    portal_sso_url: string
                    portal_template_url: string
                    qos:
                      class: best_effort
                      overwrite: false
                    radsec:
                      enabled: true
                      idle_timeout: 60
                      mxcluster_ids:
                      - 572586b7-f97b-a22b-526c-8b97a3f609c4
                      proxy_hosts:
                      - mxedge1.local
                      server_name: radsec.abc.com
                      servers:
                      - host: 1.1.1.1
                        port: 1812
                      use_mxedge: true
                      use_site_mxedge: false
                    rateset:
                      '24':
                        ht: 00ff00ff00ff
                        legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                        min_rssi: -70
                        template: string
                        vht: 03ff03ff03ff01ff
                      '5':
                        ht: 00ff00ff00ff
                        legacy:
                        - '6'
                        - '9'
                        - '12'
                        - '18'
                        - 24b
                        - '36'
                        - '48'
                        - '54'
                        min_rssi: -70
                        template: string
                        vht: 03ff03ff03ff01ff
                    roam_mode: none
                    schedule:
                      enabled: false
                      hours:
                        fri: 09:00-17:00
                        mon: 09:00-17:00
                    sle_excluded: false
                    ssid: corporate
                    template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                    thumbnail: http://example.com
                    use_eapol_v1: false
                    vlan_enabled: false
                    vlan_id: 1
                    vlan_ids:
                    - 3
                    - 4
                    - 5
                    vlan_pooling: false
                    wlan_limit_down: 0
                    wlan_limit_down_enabled: false
                    wlan_limit_up: 0
                    wlan_limit_up_enabled: false
                    wxtag_ids:
                    - 497f6eca-6276-4993-bfeb-53e4bbba6f08
                    wxtunnel_id: string
                    wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/secpolicy'
      responses:
        '200':
          $ref: '#/components/responses/Secpolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSecPolicies
      tags:
      - Orgs SecPolicies
  /api/v1/orgs/{org_id}/secpolicies/{secpolicy_id}:
    delete:
      description: Delete Org Security Policy
      operationId: deleteOrgSecPolicy
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgSecPolicy
      tags:
      - Orgs SecPolicies
    get:
      description: Get Org Security Policy
      operationId: getOrgSecPolicy
      responses:
        '200':
          $ref: '#/components/responses/Secpolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSecPolicy
      tags:
      - Orgs SecPolicies
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/secpolicy_id'
    put:
      description: Update Org Security Policy
      operationId: updateOrgSecPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secpolicy'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Secpolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSecPolicies
      tags:
      - Orgs SecPolicies
  /api/v1/orgs/{org_id}/servicepolicies:
    get:
      description: Get List of Org Service Policies
      operationId: listOrgServicePolicies
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ServicePoliciesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgServicePolicies
      tags:
      - Orgs Service Policies
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Serrvice Policy
      operationId: createOrgServicePolicy
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  name: string
                  services:
                  - string
                  tenants:
                  - string
            schema:
              $ref: '#/components/schemas/service_policy'
      responses:
        '200':
          $ref: '#/components/responses/ServicePolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgServicePolicy
      tags:
      - Orgs Service Policies
  /api/v1/orgs/{org_id}/servicepolicies/{servicepolicy_id}:
    delete:
      description: Delete Org Service Policuy
      operationId: deleteOrgServicePolicy
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgServicePolicy
      tags:
      - Orgs Service Policies
    get:
      description: Get Org Service Policy Details
      operationId: getOrgServicePolicy
      responses:
        '200':
          $ref: '#/components/responses/ServicePolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgServicePolicy
      tags:
      - Orgs Service Policies
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/servicepolicy_id'
    put:
      description: Update Org Serrvice Policy
      operationId: updateOrgServicePolicy
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  action: allow
                  name: string
                  services:
                  - string
                  tenants:
                  - string
            schema:
              $ref: '#/components/schemas/service_policy'
      responses:
        '200':
          $ref: '#/components/responses/ServicePolicy'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgServicePolicy
      tags:
      - Orgs Service Policies
  /api/v1/orgs/{org_id}/services:
    get:
      description: Get List of Org Services
      operationId: listOrgServices
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ServicesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgServices
      tags:
      - Orgs Services
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create getOrgServices Service
      operationId: createOrgService
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  app_key: string
                  name: string
                  network_id: d6797cf4-42b9-4cad-8591-9dd91c3f0fc3
                  specs:
                  - address: string
                    port: 0
                    protocol: any
                  subnet: string
                  type: custom
            schema:
              $ref: '#/components/schemas/service'
      responses:
        '200':
          $ref: '#/components/responses/Service'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgService
      tags:
      - Orgs Services
  /api/v1/orgs/{org_id}/services/{service_id}:
    delete:
      description: deleteOrgService
      operationId: deleteOrgService
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgService
      tags:
      - Orgs Services
    get:
      description: Get Org Service
      operationId: getOrgService
      responses:
        '200':
          $ref: '#/components/responses/Service'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgService
      tags:
      - Orgs Services
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/service_id'
    put:
      description: update Org Service
      operationId: updateOrgService
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  addresses:
                  - string
                  app_categories:
                  - string
                  apps:
                  - string
                  dscp: 0
                  failover_policy: revertable
                  hostnames:
                  - string
                  max_jitter: 0
                  max_latency: 0
                  max_loss: 0
                  name: string
                  sle_enabled: false
                  specs:
                  - port_range: '0'
                    protocol: any
                  traffic_class: best_effort
                  traffic_type: data_best_effort
                  type: custom
                  vpn_name: addresses
            schema:
              $ref: '#/components/schemas/service'
      responses:
        '200':
          $ref: '#/components/responses/Service'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgService
      tags:
      - Orgs Services
  /api/v1/orgs/{org_id}/setting:
    get:
      description: Get Org Settings
      operationId: getOrgSettings
      responses:
        '200':
          $ref: '#/components/responses/OrgSetting'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSettings
      tags:
      - Orgs Setting
    parameters:
    - $ref: '#/components/parameters/org_id'
    put:
      description: Update Org Settings
      operationId: updateOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org_setting'
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    auto_device_naming:
                      enable: true
                      rules:
                      - expression: string
                        model: string
                        prefix: string
                        src: name
                        subnet: string
                        suffix: string
                        value: string
                    auto_deviceprofile_assignment:
                      enable: true
                      rules:
                      - expression: string
                        model: string
                        prefix: string
                        src: name
                        subnet: string
                        suffix: string
                        value: string
                    auto_site_assignment:
                      enable: true
                      rules:
                      - expression: string
                        model: string
                        prefix: string
                        src: name
                        subnet: string
                        suffix: string
                        value: string
                    cacerts:
                    - string
                    cloudshark:
                      apitoken: string
                      url: string
                    device_cert:
                      cert: string
                      key: string
                    disable_pcap: true
                    installer:
                      allow_all_sites: true
                      extra_site_ids:
                      - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      grace_period: 0
                    mgmt:
                      mxtunnel_ids:
                      - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      use_mxtunnel: true
                      use_wxtunnel: true
                    modified_time: 0
                    msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    password_policy:
                      enabled: true
                      freshness: 0
                      min_length: 8
                      requires_special_char: true
                      requires_two_factor_auth: true
                    pcap:
                      bucket: string
                      max_pkt_len: 0
                    pcap_bucket_verified: true
                    remote_syslog:
                      enabled: true
                      send_to_all_servers: true
                      servers:
                      - facility: change-log
                        host: string
                        port: 0
                        protocol: udp
                        severity: critical
                        tag: string
                    security:
                      disable_local_ssh: true
                      fips_zeroize_password: string
                      limit_ssh_access: true
                    tags:
                    - string
                    ui_idle_timeout: 0
              schema:
                $ref: '#/components/schemas/org_setting'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSettings
      tags:
      - Orgs Setting
  /api/v1/orgs/{org_id}/setting/blacklist:
    delete:
      description: Delete Org Blacklist Station Clients
      operationId: deleteOrgWirelessClientsBlocklist
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWirelessClientsBlocklist
      tags:
      - Orgs Setting
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Create Org Blacklist Client List. \n\nIf there is already a blacklist,\
        \ this API will replace it with the new one. \n\nMax number of blacklist clients\
        \ is 1000. \n\nRetrieve the current blacklisted clients from `blacklist_url`\
        \ under Org:Setting\n"
      operationId: createOrgWirelessClientsBlocklist
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                  - 18-65-90-de-f4-c6
                  - 84-89-ad-5d-69-0d
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/MacsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWirelessClientsBlocklist
      tags:
      - Orgs Setting
  /api/v1/orgs/{org_id}/setting/cradlepoint/setup:
    delete:
      description: This deletes the Cradlepoint integration in Mist
      operationId: deleteOrgCradlepointConnection
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgCradlepointConnection
      tags:
      - Orgs Cradlepoint
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: This sets up cradlepoint webhooks to send events to Mist
      operationId: setupOrgCradlepointConnectionToMist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_cradlepoint_config'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setupOrgCradlepointConnectionToMist
      tags:
      - Orgs Cradlepoint
    put:
      description: This updates the Cradlepoint integration settings in Mist
      operationId: updateOrgCradlepointConnectionToMist
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cp_api_id: 84446d61-2206-4ea5-855a-0043f980be54
                  cp_api_key: 79c329da9893e34099c7d8ad5cb9c941
                  ecm_api_id: 73446d61-2206-4ea5-855a-0043f980be62
                  ecm_api_key: 68b329da9893e34099c7d8ad5cb9c9405
            schema:
              $ref: '#/components/schemas/account_cradlepoint_config'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgCradlepointConnectionToMist
      tags:
      - Orgs Cradlepoint
  /api/v1/orgs/{org_id}/setting/cradlepoint/sync:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "This syncs cradlepoint devices with Mist. We\u2019ll also attempt\
        \ to use the LLDP data from cradlepoint to identify the linkage against Mist\
        \ Site / Device"
      operationId: syncOrgCradlepointRouters
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: syncOrgCradlepointRouters
      tags:
      - Orgs Cradlepoint
  /api/v1/orgs/{org_id}/setting/jse/info:
    get:
      description: Retrieves the list of JSE orgs associated with the account.
      operationId: getOrgJseInfo
      responses:
        '200':
          $ref: '#/components/responses/JseInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgJseInfo
      tags:
      - Orgs JSE
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/setting/jse/setup:
    delete:
      description: Delete JSE credential
      operationId: deleteOrgJsecCredential
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgJsecCredential
      tags:
      - Orgs JSE
    get:
      description: Get Org JSE Credential
      operationId: getOrgJsecCredential
      responses:
        '200':
          $ref: '#/components/responses/AccountJseInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgJsecCredential
      tags:
      - Orgs JSE
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "in JSE UI: \n1. Create custom role with Read access to service_location\
        \ and RW access to site and IPSec profile APIs. \n2. Create a user with the\
        \ above custom role. - email: john@abc.com \n3. Activate the user in the JSE\
        \ account. \n4. Create the service locations on the JSE account."
      operationId: setupOrgJsecCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cloud_name: devcentral.juniperclouds.net
                  password: foryoureyesonly
                  username: john@abc.com
            schema:
              $ref: '#/components/schemas/account_jse_config'
      responses:
        '200':
          $ref: '#/components/responses/AccountJseInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setupOrgJsecCredential
      tags:
      - Orgs JSE
  /api/v1/orgs/{org_id}/setting/juniper/link_accounts:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Link Juniper Accounts
      operationId: linkOrgToJuniperJuniperAccount
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  password: password
                  username: john@nmo.com
            schema:
              $ref: '#/components/schemas/account_juniper_config'
      responses:
        '200':
          $ref: '#/components/responses/JuniperLinkAccountSuccess'
        '400':
          $ref: '#/components/responses/JuniperLinkAccountFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: linkOrgToJuniperJuniperAccount
      tags:
      - Orgs Linked Applications
  /api/v1/orgs/{org_id}/setting/juniper/unlink_account:
    delete:
      description: 'Unlink Juniper Customer ID

        `linked_by` field is only required if there are duplicate account_names.'
      operationId: unlinkOrgFromJuniperCustomerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_juniper_info'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unlinkOrgFromJuniperCustomerId
      tags:
      - Orgs Linked Applications
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/setting/mist_nac_crls:
    get:
      description: Returns all uploaded CRL file IDs with names for the orgI
      operationId: getOrgNacCrl
      responses:
        '200':
          $ref: '#/components/responses/NacCrlFilesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgNacCrl
      tags:
      - Orgs NAC CRL
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Import NAC Org CRL file is a multipart POST which has a .crl file
        to allow user to manually upload a Certificate Revocation List file. We support
        one file upload per Issuer. Re-uploads for the same issuer will overwrite
        the existing file.
      operationId: importOrgNacCrl
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/org_crl_import_file'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/NacCrlFile'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgNacCrl
      tags:
      - Orgs NAC CRL
  /api/v1/orgs/{org_id}/setting/mist_nac_crls/{naccrl_id}:
    delete:
      description: Delete NAC Org CRL file is a DELETE request to delete CRL file
        identified by its ID (ID assigned on file upload/creation)
      operationId: deleteOrgNacCrl
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgNacCrl
      tags:
      - Orgs NAC CRL
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/naccrl_id'
  /api/v1/orgs/{org_id}/setting/pcap_bucket/setup:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Provide Customer Bucket Name\n\nSetting up Custom PCAP Bucket\
        \ Involves the following:\n* provide the bucket name\n* we\u2019ll attempt\
        \ to write a file MIST_TOKEN\n* you have to verify the ownership of the bucket\
        \ by providing the content of the MIST_TOKEN"
      operationId: setOrgCustomBucket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bucket: company-private-pcap
            schema:
              $ref: '#/components/schemas/pcap_bucket'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/PcapBucketConfig'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setOrgCustomBucket
      tags:
      - Orgs Setting
  /api/v1/orgs/{org_id}/setting/pcap_bucket/verify:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Verify Customer PCAP Bucket\n\n**Note**: If successful, a \u201C\
        VERIFIED\u201D file will be created in the bucket"
      operationId: verifyOrgCustomBucket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bucket: company-private-pcap
                  verify_token: eyJhbGciOiJIUzI1J9.eyJzdWIiOiIxMjM0joiMjgxOG5MDIyfQ.2rzcRvMA3Eg09NnjCAC-1EWMRtxAnFDM
            schema:
              $ref: '#/components/schemas/pcap_bucket_verify'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifyOrgCustomBucket
      tags:
      - Orgs Setting
  /api/v1/orgs/{org_id}/setting/zscaler/setup:
    delete:
      description: To delete Zscaler credential
      operationId: deleteOrgZscalerCredential
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgZscalerCredential
      tags:
      - Orgs Devices Zscaler
    get:
      description: To get Zscaler credential
      operationId: getOrgZscalerCredential
      responses:
        '200':
          $ref: '#/components/responses/ZscalerAccount'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgZscalerCredential
      tags:
      - Orgs Devices Zscaler
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: To setup Zscaler credential
      operationId: setupOrgZscalerCredential
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  cloud_name: zscalerbeta.net
                  partner_key: K35vrZcK3JvrZc
                  password: password
                  username: john@nmo.com
            schema:
              $ref: '#/components/schemas/account_zscaler_config'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setupOrgZscalerCredential
      tags:
      - Orgs Devices Zscaler
  /api/v1/orgs/{org_id}/setting/{app_name}/link_accounts:
    get:
      description: Get Org Level OAuth Application Linked Status
      operationId: getOrgOauthAppLinkedStatus
      parameters:
      - description: Mist portal url to which backend needs to redirect after succesful
          OAuth authorization. **Required** to get the `authorization_url`
        in: query
        name: forward
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/OauthAppLink'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgOauthAppAuthorizationUrl
      tags:
      - Orgs Linked Applications
    parameters:
    - $ref: '#/components/parameters/org_id'
    - description: OAuth application name
      in: path
      name: app_name
      required: true
      schema:
        $ref: '#/components/schemas/oauth_app_name'
    post:
      description: Add Jamf, VMware Authorization With Mist Portal
      operationId: addOrgOauthAppAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_oauth_add'
      responses:
        '200':
          description: Successful
        '400':
          description: Unsuccessful
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addOrgOauthAppAccounts
      tags:
      - Orgs Linked Applications
    put:
      description: 'Update Zoom, Teams, Intune Authorization.


        Request Payload, These Field And Values Will Be Specific To Each Of The Third
        Party Apps Accounts.'
      operationId: updateOrgOauthAppAccounts
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account_id: iojzXIJWEuiD73ZvydOfg
                  max_daily_api_requests: 5000
            schema:
              $ref: '#/components/schemas/account_oauth_config'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgOauthAppAccounts
      tags:
      - Orgs Linked Applications
  /api/v1/orgs/{org_id}/setting/{app_name}/link_accounts/{account_id}:
    delete:
      description: Delete Org Level OAuth Application Authorization With Mist Portal
      operationId: deleteOrgOauthAppAuthorization
      responses:
        '200':
          description: Successful
        '400':
          description: Unsuccessful
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgOauthAppAuthorization
      tags:
      - Orgs Linked Applications
    parameters:
    - $ref: '#/components/parameters/org_id'
    - description: OAuth application name
      in: path
      name: app_name
      required: true
      schema:
        $ref: '#/components/schemas/account_oauth_app_name'
    - $ref: '#/components/parameters/account_id'
  /api/v1/orgs/{org_id}/sitegroups:
    get:
      description: Get List of Org Site Groups
      operationId: listOrgSiteGroups
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/SitegroupsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSiteGroups
      tags:
      - Orgs Sitegroups
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Site Group
      operationId: createOrgSiteGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
            schema:
              $ref: '#/components/schemas/sitegroup'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sitegroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSiteGroup
      tags:
      - Orgs Sitegroups
  /api/v1/orgs/{org_id}/sitegroups/{sitegroup_id}:
    delete:
      description: Delete Org Site Group
      operationId: deleteOrgSiteGroup
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgSiteGroup
      tags:
      - Orgs Sitegroups
    get:
      description: Get Org Site Group
      operationId: getOrgSiteGroup
      responses:
        '200':
          $ref: '#/components/responses/Sitegroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSiteGroup
      tags:
      - Orgs Sitegroups
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sitegroup_id'
    put:
      description: Update Org Site Group
      operationId: updateOrgSiteGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
            schema:
              $ref: '#/components/schemas/name_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sitegroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSiteGroup
      tags:
      - Orgs Sitegroups
  /api/v1/orgs/{org_id}/sites:
    get:
      description: Get List of Org Sites
      operationId: listOrgSites
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/SitesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSites
      tags:
      - Orgs Sites
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Site
      operationId: createOrgSite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  address: 1601 S. Deanza Blvd., Cupertino, CA, 95014
                  alarmtemplate_id: 684dfc5c-fe77-2290-eb1d-ef3d677fe168
                  apporttemplate_id: string
                  aptemplate_id: 16bdf952-ade2-4491-80b0-85ce506c760b
                  country_code: US
                  gatewaytemplate_id: 6f9b2e75-9b2f-b5ae-81e3-e14c76f1a90f
                  latlng:
                    lat: 37.295833
                    lng: -122.032946
                  name: Mist Office
                  networktemplate_id: 12ae9bd2-e0ab-107b-72e8-a7a005565ec2
                  notes: string
                  rftemplate_id: bb8a9017-1e36-5d6c-6f2b-551abe8a76a2
                  secpolicy_id: 3bcd0beb-5d0a-4cbd-92c1-14aea91e98ef
                  sitegroup_ids:
                  - 497f6eca-6276-4997-bfeb-53cbbbba6f3b
                  timezone: America/Los_Angeles
            schema:
              $ref: '#/components/schemas/site'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Site'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSite
      tags:
      - Orgs Sites
  /api/v1/orgs/{org_id}/sites/count:
    get:
      description: Count Sites
      operationId: countOrgSites
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_sites_count_distinct'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgSites
      tags:
      - Orgs Sites
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/sites/search:
    get:
      description: Search Sites
      operationId: searchOrgSites
      parameters:
      - description: if Advanced Analytic feature is enabled
        in: query
        name: analytic_enabled
        schema:
          type: boolean
      - description: if App Waking feature is enabled
        in: query
        name: app_waking
        schema:
          type: boolean
      - description: if Asset Tracking is enabled
        in: query
        name: asset_enabled
        schema:
          type: boolean
      - description: if Auto Upgrade feature is enabled
        in: query
        name: auto_upgrade_enabled
        schema:
          type: boolean
      - description: if Auto Upgrade feature is enabled
        in: query
        name: auto_upgrade_version
        schema:
          type: string
      - description: site country code
        in: query
        name: country_code
        schema:
          type: string
      - description: if Honeypot detection is enabled
        in: query
        name: honeypot_enabled
        schema:
          type: boolean
      - description: site id
        in: query
        name: id
        schema:
          type: string
      - description: if unconnected client are located
        in: query
        name: locate_unconnected
        schema:
          type: boolean
      - description: if Mesh feature is enabled
        in: query
        name: mesh_enabled
        schema:
          type: boolean
      - description: site name
        in: query
        name: name
        schema:
          type: string
      - description: if Rogue detection is enabled
        in: query
        name: rogue_enabled
        schema:
          type: boolean
      - description: if Remote Syslog is enabled
        in: query
        name: remote_syslog_enabled
        schema:
          type: boolean
      - description: if managed mobility feature is enabled
        in: query
        name: rtsa_enabled
        schema:
          type: boolean
      - description: if Virtual Network Assistant is enabled
        in: query
        name: vna_enabled
        schema:
          type: boolean
      - description: if WIFI feature is enabled
        in: query
        name: wifi_enabled
        schema:
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SitesSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgSites
      tags:
      - Orgs Sites
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/sites/{site_name}/maps/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/site_name'
    post:
      description: 'Import data from files is a multipart POST which has a file, an
        optional json, and an optional csv, to create floorplan, assign matching inventory
        to specific site, place ap if name or mac matches


        #### Request


        ```

        "json": a JSON string describing your upload

        "file": a binary file

        ```'
      operationId: importOrgMapToSite
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/map_site_import_file'
        description: 'a JSON string, site id required, vendor option: ekahau, ibwave,
          etc., import_all_floorplans: optional, default: false, import_height: optional,
          default: true, import_orientation: optional, default: true

          "file": a binary file, option: .esx

          "csv": a csv file for ap name mapping, optional'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgMapToSite
      tags:
      - Orgs Maps
  /api/v1/orgs/{org_id}/sitetemplates:
    get:
      description: Get List of Org Site Templates
      operationId: listOrgSiteTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/SiteTemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSiteTemplates
      tags:
      - Orgs Site Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Site Template
      operationId: createOrgSiteTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_template'
      responses:
        '200':
          $ref: '#/components/responses/SiteTemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSiteTemplates
      tags:
      - Orgs Site Templates
  /api/v1/orgs/{org_id}/sitetemplates/{sitetemplate_id}:
    delete:
      description: Delete Org Site Template
      operationId: deleteOrgSiteTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgSiteTemplate
      tags:
      - Orgs Site Templates
    get:
      description: Get Org Site Template
      operationId: getOrgSiteTemplate
      responses:
        '200':
          $ref: '#/components/responses/SiteTemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSiteTemplate
      tags:
      - Orgs Site Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sitetemplate_id'
    put:
      description: Update Org Site Template
      operationId: updateOrgSiteTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/site_template'
      responses:
        '200':
          $ref: '#/components/responses/SiteTemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSiteTemplate
      tags:
      - Orgs Site Templates
  /api/v1/orgs/{org_id}/ssoroles:
    get:
      description: Get List of Org SSO Roles
      operationId: listOrgSsoRoles
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/SsoRolesMspArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSsoRoles
      tags:
      - Orgs SSO Roles
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org SSO Role
      operationId: createOrgSsoRole
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/sso_role_org'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SsoRoleOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSsoRole
      tags:
      - Orgs SSO Roles
  /api/v1/orgs/{org_id}/ssoroles/{ssorole_id}:
    delete:
      description: Delete Org SSO Role
      operationId: deleteOrgSsoRole
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgSsoRole
      tags:
      - Orgs SSO Roles
    get:
      description: Get Org SSO Role Details
      operationId: getOrgSsoRole
      responses:
        '200':
          $ref: '#/components/responses/SsoRoleOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSsoRole
      tags:
      - Orgs SSO Roles
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/ssorole_id'
    put:
      description: Update Org SSO Role
      operationId: updateOrgSsoRole
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/sso_role_org'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SsoRoleOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSsoRole
      tags:
      - Orgs SSO Roles
  /api/v1/orgs/{org_id}/ssos:
    get:
      description: Get List of Org SSO Configuration
      operationId: listOrgSsos
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/SsosArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSsos
      tags:
      - Orgs SSO
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org SSO Configuration
      operationId: createOrgSso
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  custom_logout_url: string
                  idp_cert: string
                  idp_sign_algo: string
                  idp_sso_url: string
                  ignore_unmatched_roles: true
                  issuer: string
                  name: string
                  nameid_format: email
            schema:
              $ref: '#/components/schemas/sso'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgSso
      tags:
      - Orgs SSO
  /api/v1/orgs/{org_id}/ssos/{sso_id}:
    delete:
      description: Delete Org SSO Configuration
      operationId: deleteOrgSso
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgSso
      tags:
      - Orgs SSO
    get:
      description: Get Org SSO Configuration Details
      operationId: getOrgSso
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSso
      tags:
      - Orgs SSO
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sso_id'
    put:
      description: Update Org SSO Configuration
      operationId: updateOrgSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sso'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgSso
      tags:
      - Orgs SSO
  /api/v1/orgs/{org_id}/ssos/{sso_id}/failures:
    get:
      description: Get List of Org SSO Latest Failures
      operationId: listOrgSsoLatestFailures
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SsoLatestFailures'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSsoLatestFailures
      tags:
      - Orgs SSO
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/orgs/{org_id}/ssos/{sso_id}/metadata:
    get:
      description: Get Org SSO SAML Metadata
      operationId: getOrgSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/SsoSamlMetadata'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgSsoSamlMetadata
      tags:
      - Orgs SSO
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/orgs/{org_id}/ssos/{sso_id}/metadata.xml:
    get:
      description: "Download Org SSO SAML Metdata\n\nExample of metadata.xml:\n```xml\n\
        <?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor xmlns:md=\"\
        urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://api.mist.com/api/v1/saml/5hdF5g/login\"\
        \ validUntil=\"2027-10-12T21:59:01Z\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"\
        >\n    <md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"\
        true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\
        >\n        <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/logout\" />\n       \
        \ <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\
        \        <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/login\" index=\"0\" isDefault=\"\
        true\"/>\n        <md:AttributeConsumingService index=\"0\">\n           \
        \ <md:ServiceName xml:lang=\"en-US\">Mist</md:ServiceName>\n            <md:RequestedAttribute\
        \ Name=\"Role\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"\
        \ isRequired=\"true\"/>\n            <md:RequestedAttribute Name=\"FirstName\"\
        \ NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"\
        false\"/>\n            <md:RequestedAttribute Name=\"LastName\" NameFormat=\"\
        urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"false\"/>\n\
        \        </md:AttributeConsumingService>\n    </md:SPSSODescriptor>\n</md:EntityDescriptor>\n\
        ```"
      operationId: downloadOrgSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: downloadOrgSsoSamlMetadata
      tags:
      - Orgs SSO
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/orgs/{org_id}/ssr/upgrade:
    get:
      description: Get List of Org SSR Upgrades
      operationId: listOrgSsrUpgrades
      responses:
        '200':
          $ref: '#/components/responses/SsrUpgradesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgSsrUpgrades
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Upgrade Org SSRs
      operationId: upgradeOrgSsrs
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  device_ids:
                  - 00000000-0000-0000-1000-5c5b3500001f
                  - 00000000-0000-0000-1000-5c5b35000020
                  strategy: big_bang
                  version: 5.3.0-93
            schema:
              $ref: '#/components/schemas/ssr_upgrade_multi'
      responses:
        '200':
          $ref: '#/components/responses/SsrUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeOrgSsrs
      tags:
      - Utilities Upgrade
  /api/v1/orgs/{org_id}/ssr/upgrade/{upgrade_id}/cancel:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/upgrade_id'
    post:
      description: "Best effort to cancel an upgrade. Devices which are already upgraded\
        \ wont be touched\u21B5\n"
      operationId: cancelOrgSsrUpgrade
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: cancelOrgSsrUpgrade
      tags:
      - Utilities Upgrade
  /api/v1/orgs/{org_id}/ssr/versions:
    get:
      description: Get available version for SSR
      operationId: listOrgAvailableSsrVersions
      parameters:
      - in: query
        name: channel
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SsrVersions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAvailableSsrVersions
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats:
    get:
      description: Get Org Stats
      operationId: getOrgStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/OrgStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgStats
      tags:
      - Orgs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets:
    get:
      description: Get List of Org Assets Stats
      operationId: listOrgAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgAssetsStats
      tags:
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/count:
    get:
      description: Count Org Assets
      operationId: countOrgAssetsByDistanceField
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_asset_count_distinct'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgAssetsByDistanceField
      tags:
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/assets/search:
    get:
      description: Search for Org Assets
      operationId: searchOrgAssets
      parameters:
      - in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: string
      - in: query
        name: ibeacon_minor
        schema:
          type: string
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: integer
      - in: query
        name: rssi
        schema:
          type: integer
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgAssets
      tags:
      - Orgs Assets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/bgp_peers/count:
    get:
      description: Count Org BGP Stats
      operationId: countOrgBgpStats
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgBgpStats
      tags:
      - Orgs Devices Stats
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/bgp_peers/search:
    get:
      description: Search Org BGP Stats
      operationId: searchOrgBgpStats
      responses:
        '200':
          $ref: '#/components/responses/BgpStatsArraySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgBgpStats
      tags:
      - Orgs Devices Stats
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/devices:
    get:
      description: 'Get List of Org Devices stats

        This API renders some high-level device stats, pagination is assumed and returned
        in response header (as the response is an array)'
      operationId: listOrgDevicesStats
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type_with_all'
      - in: query
        name: status
        schema:
          $ref: '#/components/schemas/device_status'
      - in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - description: EVPN Topology ID
        in: query
        name: evpntopo_id
        schema:
          format: uuid
          type: string
      - description: "if `evpn_unused`==`true`, find EVPN eligible switches which\
          \ don\u2019t belong to any EVPN Topology yet"
        in: query
        name: evpn_unused
        schema:
          type: string
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DevicesArrayStatsOrg'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgDevicesStats
      tags:
      - Orgs Devices
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/mxedges:
    get:
      description: Get List of Org MxEdge Stats
      operationId: listOrgMxEdgesStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - description: filter for site level mist edges
        in: query
        name: for_site
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgMxEdgesStats
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/mxedges/{mxedge_id}:
    get:
      description: Get Org MxEdge Details Stats
      operationId: getOrgMxEdgeStats
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgMxEdgeStats
      tags:
      - Orgs MxEdges
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/mxedge_id'
  /api/v1/orgs/{org_id}/stats/otherdevices/{device_mac}:
    get:
      description: Get Otherdevice Stats
      operationId: getOrgOtherDeviceStats
      responses:
        '200':
          $ref: '#/components/responses/DeviceOtherStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgOtherDeviceStats
      tags:
      - Orgs Devices - Others
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/device_mac'
  /api/v1/orgs/{org_id}/stats/ports/search:
    get:
      description: Search Switch / Gateway Ports
      operationId: searchOrgSwOrGwPorts
      parameters:
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Output errors
        in: query
        name: tx_errors
        schema:
          type: integer
      - description: Input errors
        in: query
        name: rx_errors
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: Limit on number of dynamically learned macs
        in: query
        name: mac_limit
        schema:
          type: integer
      - description: Number of mac addresses in the forwarding table
        in: query
        name: mac_count
        schema:
          type: integer
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          $ref: '#/components/schemas/search_org_sw_or_gw_ports_stp_state'
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          $ref: '#/components/schemas/search_org_sw_or_gw_ports_stp_role'
      - description: if `up`==`true` && has Authenticator role
        in: query
        name: auth_state
        schema:
          $ref: '#/components/schemas/search_org_sw_or_gw_ports_auth_state'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/PortStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgSwOrGwPorts
      tags:
      - Orgs Devices Stats
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/switch_ports/count:
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countOrgSwitchPorts
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_switch_port_count_distinct'
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          $ref: '#/components/schemas/count_org_switch_ports_stp_state'
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          $ref: '#/components/schemas/count_org_switch_ports_stp_role'
      - description: if `up`==`true`
        in: query
        name: auth_state
        schema:
          $ref: '#/components/schemas/count_org_switch_ports_auth_state'
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgSwitchPorts
      tags:
      - Orgs Devices Stats
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/tunnels/count:
    get:
      description: Count Mist Tunnels Stats
      operationId: countOrgTunnelsStats
      parameters:
      - description: "- If `type`==`wxtunnel`: wxtunnel_id / ap / remote_ip / remote_port\
          \ / state / mxedge_id / mxcluster_id / site_id / peer_mxedge_id; default\
          \ is wxtunnel_id \n- If `type`==`wan`: mac / site_id / node / peer_ip /\
          \ peer_host/ ip / tunnel_name / protocol / auth_algo / encrypt_algo / ike_version\
          \ / last_event / up"
        in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_tunnel_count_distinct'
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/org_tunnel_type_count'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgTunnelsStats
      tags:
      - Orgs Tunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/tunnels/search:
    get:
      description: Search Org Tunnels Stats
      operationId: searchOrgTunnelsStats
      parameters:
      - description: if `type`==`wxtunnel`
        in: query
        name: mxcluster_id
        schema:
          type: string
      - in: query
        name: site_id
        schema:
          type: string
      - description: if `type`==`wxtunnel`
        in: query
        name: wxtunnel_id
        schema:
          type: string
      - description: if `type`==`wxtunnel`
        in: query
        name: ap
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: mac
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: node
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: peer_ip
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: peer_host
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: ip
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: tunnel_name
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: protocol
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: auth_algo
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: encrypt_algo
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: ike_version
        schema:
          type: string
      - description: if `type`==`wan`
        in: query
        name: up
        schema:
          type: string
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/tunnel_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/TunnelsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgTunnelsStats
      tags:
      - Orgs Tunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/vpn_peers/count:
    get:
      description: Count Org Peer Path Statgs
      operationId: countOrgPeerPathStats
      parameters:
      - in: query
        name: distinct
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgPeerPathStats
      tags:
      - Orgs VPNs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/stats/vpn_peers/search:
    get:
      description: Search Org Peer Path Stats
      operationId: searchOrgPeerPathStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/VpnPeersStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgPeerPathStats
      tags:
      - Orgs VPNs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/subscriptions:
    delete:
      description: 'Unsubscribe from Org Alarms/Reports

        Subscriptions define how Org Alarms/Reports are delivered to whom'
      operationId: unsubscribeOrgAlarmsReports
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unsubscribeOrgAlarmsReports
      tags:
      - Orgs Subscriptions
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Subscribe to Org Alarms/Reports

        Subscriptions define how Org Alarms/Reports are delivered to whom'
      operationId: subscribeOrgAlarmsReports
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: subscribeOrgAlarmsReports
      tags:
      - Orgs Subscriptions
  /api/v1/orgs/{org_id}/templates:
    get:
      description: Get List of Org WLAN Templates
      operationId: listOrgTemplates
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/TemplatesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgTemplates
      tags:
      - Orgs WLAN Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Template
      operationId: createOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgTemplate
      tags:
      - Orgs WLAN Templates
  /api/v1/orgs/{org_id}/templates/{template_id}:
    delete:
      description: Delete Org Template
      operationId: deleteOrgTemplate
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgTemplate
      tags:
      - Orgs WLAN Templates
    get:
      description: Get Org Template Details
      operationId: getOrgTemplate
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgTemplate
      tags:
      - Orgs WLAN Templates
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/template_id'
    put:
      description: Update Org Template
      operationId: updateOrgTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgTemplate
      tags:
      - Orgs WLAN Templates
  /api/v1/orgs/{org_id}/templates/{template_id}/clone:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/template_id'
    post:
      description: Clone Org Template
      operationId: cloneOrgTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: Cloned
            schema:
              $ref: '#/components/schemas/name_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Template'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: cloneOrgTemplate
      tags:
      - Orgs WLAN Templates
  /api/v1/orgs/{org_id}/tickets:
    get:
      description: Get List of Tickets of an Org
      operationId: listOrgTickets
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/TicketsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgTickets
      tags:
      - Orgs Tickets
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create a support ticket
      operationId: createOrgTicket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  comment: string
                  subject: string
                  type: question
            schema:
              $ref: '#/components/schemas/ticket'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ticket'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgTicket
      tags:
      - Orgs Tickets
  /api/v1/orgs/{org_id}/tickets/count:
    get:
      description: Count Org Tickets
      operationId: countOrgTickets
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_tickets_count_distinct'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgTickets
      tags:
      - Orgs Tickets
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/tickets/{ticket_id}:
    get:
      description: Get support ticket details
      operationId: getOrgTicket
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Ticket'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgTicket
      tags:
      - Orgs Tickets
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/ticket_id'
    put:
      description: Update support ticket
      operationId: updateOrgTicket
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  comment: string
                  subject: string
                  type: question
            schema:
              $ref: '#/components/schemas/ticket'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ticket'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgTicket
      tags:
      - Orgs Tickets
  /api/v1/orgs/{org_id}/tickets/{ticket_id}/attachments:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/ticket_id'
    post:
      description: Get Org ticket Attachment
      operationId: UploadrgTicketAttachment
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/ticket_upload_attachments_file'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: UploadrgTicketAttachment
      tags:
      - Orgs Tickets
  /api/v1/orgs/{org_id}/tickets/{ticket_id}/attachments/{attachment_id}:
    get:
      description: Get Org ticket Attachment
      operationId: GetOrgTicketAttachment
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/TicketAttachment'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: GetOrgTicketAttachment
      tags:
      - Orgs Tickets
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/ticket_id'
    - $ref: '#/components/parameters/attachment_id'
  /api/v1/orgs/{org_id}/tickets/{ticket_id}/comments:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/ticket_id'
    post:
      description: Add Comment to support ticket
      operationId: addOrgTicketComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticket_comment'
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/ticket_comment_import_file'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ticket'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addOrgTicketComment
      tags:
      - Orgs Tickets
  /api/v1/orgs/{org_id}/troubleshoot:
    get:
      description: 'Troubleshoot sites, devices, clients, and wired clientsfor maximum
        of last 7 days from current time. See search APIs for device information:

        - [search Device]($e/Orgs%20Devices/searchOrgDevices)

        - [search Wireless Client]($e/Orgs%20Clients%20-%20Wireless/searchOrgWirelessClients)

        - [search Wired Client]($e/Orgs%20Clients%20-%20Wired/searchOrgWiredClients)

        - [search Wan Client]($e/Orgs%20Clients%20-%20Wan/searchOrgWanClients)


        **NOTE**: requires Marvis subscription license'
      operationId: troubleshootOrg
      parameters:
      - description: '**required** when troubleshooting device or a client'
        in: query
        name: mac
        schema:
          type: string
      - description: '**required** when troubleshooting site'
        in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - description: when troubleshooting site, type of network to troubleshoot
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/troubleshoot_type'
      responses:
        '200':
          $ref: '#/components/responses/Troubleshoot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: troubleshootOrg
      tags:
      - Orgs Marvis
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/usermacs:
    get:
      description: List Org User MACs
      operationId: listOrgUserMacs
      parameters:
      - in: query
        name: blacklisted
        schema:
          type: boolean
      - in: query
        name: for_guest_wifi
        schema:
          type: boolean
      - in: query
        name: cross_site
        schema:
          type: boolean
      - in: query
        name: site_id
        schema:
          format: uuid
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/UserMacArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgUserMacs
      tags:
      - Orgs User MACs
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: "Create Org User MACs\n\n### Usermacs import CSV file format\n\
        mac,labels,vlan,notes \n921b638445cd,\u201Dbldg1,flor1\u201D,vlan-100 \n721b638445ef,\u201D\
        bldg2,flor2\u201D,vlan-101,Canon Printers \n721b638445ee,\u201Dbldg3,flor3\u201D\
        ,vlan-102 \n921b638445ce,\u201Dbldg4,flor4\u201D,vlan-103 \n921b638445cf,\u201D\
        bldg5,flor5\u201D,vlan-104"
      operationId: createOrgUserMacs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_mac'
      responses:
        '200':
          $ref: '#/components/responses/UserMacImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgUserMacs
      tags:
      - Orgs User MACs
  /api/v1/orgs/{org_id}/usermacs/import:
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Import Org User MACs
      operationId: importOrgUserMacs
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                - labels:
                  - label1
                  mac: 921b638445cd
                  vlan: 30
                - labels:
                  - label2
                  - label3
                  mac: 721b638445ef
                  notes: mac address refers to Canon printers
                - labels:
                  - label4
                  mac: 721b638445ee
                - labels:
                  - label5
                  - label6
                  - label7
                  mac: 921b638445ce
                - mac: 921b638445cf
                  vlan: 100
            schema:
              $ref: '#/components/schemas/user_macs'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/binary_stream'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importOrgUserMacs
      tags:
      - Orgs User MACs
  /api/v1/orgs/{org_id}/usermacs/search:
    get:
      description: Search Org User MACs
      operationId: searchOrgUserMacs
      parameters:
      - description: mac address
        in: query
        name: mac
        schema:
          type: string
      - description: optional, array of strings of labels
        in: query
        name: labels
        schema:
          $ref: '#/components/schemas/search_org_user_macs_labels'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/UserMacSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgUserMacs
      tags:
      - Orgs User MACs
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/usermacs/search/{usermac_id}:
    delete:
      description: Delete Org User MAC
      operationId: deleteOrgUserMac
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgUserMac
      tags:
      - Orgs User MACs
    get:
      description: Get Org User MAC
      operationId: getOrgUserMac
      responses:
        '200':
          $ref: '#/components/responses/UserMac'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgUserMac
      tags:
      - Orgs User MACs
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/usermac_id'
  /api/v1/orgs/{org_id}/vars/search:
    get:
      description: 'Search vars


        Example: /api/v1/orgs/:org_id/vars/search?vars=*'
      operationId: searchOrgVars
      parameters:
      - in: query
        name: site_id
        schema:
          type: string
      - in: query
        name: vars
        schema:
          type: string
      - in: query
        name: src
        schema:
          $ref: '#/components/schemas/var_source'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/SearchVar'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgVars
      tags:
      - Orgs Vars
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/vpns:
    get:
      description: Get List of Org VPNs
      operationId: listOrgsVpns
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/VpnsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgsVpns
      tags:
      - Orgs VPNs
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org VPN
      operationId: createOrgVpns
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  paths:
                    property1:
                      bfd_profile: broadband
                      ip: string
                    property2:
                      bfd_profile: lte
                      ip: string
            schema:
              $ref: '#/components/schemas/vpn'
      responses:
        '200':
          $ref: '#/components/responses/Vpn'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgVpns
      tags:
      - Orgs VPNs
  /api/v1/orgs/{org_id}/vpns/{vpn_id}:
    delete:
      description: delete Org Vpn
      operationId: deleteOrgVpn
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgVpn
      tags:
      - Orgs VPNs
    get:
      description: getOrgVpn
      operationId: getOrgVpn
      responses:
        '200':
          $ref: '#/components/responses/Vpn'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgVpn
      tags:
      - Orgs VPNs
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/vpn_id'
    put:
      description: update Org Vpn
      operationId: updateOrgVpn
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  paths:
                    property1:
                      bfd_profile: broadband
                      ip: string
                    property2:
                      bfd_profile: broadband
                      ip: string
            schema:
              $ref: '#/components/schemas/vpn'
      responses:
        '200':
          $ref: '#/components/responses/Vpn'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgVpn
      tags:
      - Orgs VPNs
  /api/v1/orgs/{org_id}/wan_client/events/count:
    get:
      description: Count by Distinct Attributes of Org WAN Client-Events
      operationId: countOrgWanClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_wan_clients_events_count_distinct'
      - $ref: '#/components/parameters/client_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWanClientEvents
      tags:
      - Orgs Clients - Wan
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wan_clients/count:
    get:
      description: Count Org WAN Clients
      operationId: countOrgWanClients
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_wan_clients_count_distinct'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWanClients
      tags:
      - Orgs Clients - Wan
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wan_clients/events/search:
    get:
      description: Search Org WAN Client Events
      operationId: searchOrgWanClientEvents
      parameters:
      - $ref: '#/components/parameters/client_event_type'
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: client IP
        in: query
        name: ip
        schema:
          type: string
      - description: Manufacture
        in: query
        name: mfg
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WanClientEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWanClientEvents
      tags:
      - Orgs Clients - Wan
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wan_clients/search:
    get:
      description: Search Org WAN Clients
      operationId: searchOrgWanClients
      parameters:
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: client IP
        in: query
        name: ip
        schema:
          type: string
      - description: network
        in: query
        name: network
        schema:
          type: string
      - description: Manufacture
        in: query
        name: mfg
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/WanClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWanClients
      tags:
      - Orgs Clients - Wan
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/webhooks:
    get:
      description: Get List of Org Webhooks
      operationId: listOrgWebhooks
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WebhooksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWebhooks
      tags:
      - Orgs Webhooks
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: 'Create Org Webhook


        **N.B**. For org webhooks, only alarms/audits/client-info/client-join/client-sessions/device_events/device-updowns/mxedge_events
        Infrastructure topics are supported.'
      operationId: createOrgWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWebhook
      tags:
      - Orgs Webhooks
  /api/v1/orgs/{org_id}/webhooks/{webhook_id}:
    delete:
      description: Delete Org Webhook
      operationId: deleteOrgWebhook
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWebhook
      tags:
      - Orgs Webhooks
    get:
      description: Get Org Webhook Details
      operationId: getOrgWebhook
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWebhook
      tags:
      - Orgs Webhooks
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/webhook_id'
    put:
      description: Update Org Webhook
      operationId: updateOrgWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWebhook
      tags:
      - Orgs Webhooks
  /api/v1/orgs/{org_id}/webhooks/{webhook_id}/events/count:
    get:
      description: 'Count Org Webhooks deliveries



        Topics Supported:

        - alarms

        - audits

        - device-updowns

        - occupancy-alerts

        - ping'
      operationId: countOrgWebhooksDeliveries
      parameters:
      - in: query
        name: error
        schema:
          type: string
      - in: query
        name: status_code
        schema:
          type: integer
      - description: webhook delivery status
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/webhook_delivery_status'
      - description: webhook topic
        in: query
        name: topic
        schema:
          $ref: '#/components/schemas/webhook_delivery_topic'
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/webhook_delivery_distinct'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWebhooksDeliveries
      tags:
      - Orgs Webhooks
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/webhook_id'
  /api/v1/orgs/{org_id}/webhooks/{webhook_id}/events/search:
    get:
      description: 'Search Org Webhooks deliveries



        Topics Supported:

        - alarms

        - audits

        - device-updowns

        - occupancy-alerts

        - ping'
      operationId: searchOrgWebhooksDeliveries
      parameters:
      - in: query
        name: error
        schema:
          type: string
      - in: query
        name: status_code
        schema:
          type: integer
      - description: webhook delivery status
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/webhook_delivery_status'
      - description: webhook topic
        in: query
        name: topic
        schema:
          $ref: '#/components/schemas/webhook_delivery_topic'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WebhookDeliverySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWebhooksDeliveries
      tags:
      - Orgs Webhooks
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/webhook_id'
  /api/v1/orgs/{org_id}/webhooks/{webhook_id}/ping:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/webhook_id'
    post:
      description: send a Ping event to the webhook
      operationId: pingOrgWebhook
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: pingOrgWebhook
      tags:
      - Orgs Webhooks
  /api/v1/orgs/{org_id}/wired_clients/count:
    get:
      description: 'Count by Distinct Attributes of Clients


        Note: For list of avaialable `type` values, please refer to [listClientEventsDefinitions]($e/Constants%20Events/listClientEventsDefinitions)'
      operationId: countOrgWiredClients
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/org_wired_clients_count_distinct'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countOrgWiredClients
      tags:
      - Orgs Clients - Wired
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wired_clients/search:
    get:
      description: 'Search for Wired Clients in org


        Note: For list of avaialable `type` values, please refer to [listClientEventsDefinitions]($e/Constants%20Events/listClientEventsDefinitions)'
      operationId: searchOrgWiredClients
      parameters:
      - description: Site ID
        in: query
        name: site_id
        schema:
          type: string
      - description: device mac
        in: query
        name: device_mac
        schema:
          type: string
      - description: client mac
        in: query
        name: mac
        schema:
          type: string
      - description: port id
        in: query
        name: port_id
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: integer
      - description: ip
        in: query
        name: ip
        schema:
          type: string
      - description: client manufacturer
        in: query
        name: manufacture
        schema:
          type: string
      - description: single entry of hostname/mac
        in: query
        name: text
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/WiredClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchOrgWiredClients
      tags:
      - Orgs Clients - Wired
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wlans:
    get:
      description: Get List of Org Wlans
      operationId: listOrgWlans
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWlans
      tags:
      - Orgs Wlans
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org Wlan
      operationId: createOrgWlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWlan
      tags:
      - Orgs Wlans
  /api/v1/orgs/{org_id}/wlans/{wlan_id}:
    delete:
      description: Delete Org WLAN
      operationId: deleteOrgWlan
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWlan
      tags:
      - Orgs Wlans
    get:
      description: Get Org Wlan Detail
      operationId: getOrgWLAN
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWLAN
      tags:
      - Orgs Wlans
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: Update Org Wlan
      operationId: updateOrgWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53e5bbba6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  no_static_dns: false
                  no_static_ip: false
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53e7bbba6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWlan
      tags:
      - Orgs Wlans
  /api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_image:
    delete:
      description: Delete Org WLAN Portal Image
      operationId: deleteOrgWlanPortalImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWlanPortalImage
      tags:
      - Orgs Wlans
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wlan_id'
    post:
      description: Upload Org WLAN Portal Image
      operationId: uploadOrgWlanPortalImage
      requestBody:
        content:
          multipart/form_data:
            schema:
              $ref: '#/components/schemas/image_import'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadOrgWlanPortalImage
      tags:
      - Orgs Wlans
  /api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_template:
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: 'Update a Portal Template


        #### Sponsor Email Template

        Sponsor Email Template supports following template variables:


        | **Name** | **Description** |

        | --- | --- |

        | approve_url | Renders URL to approve the request; optionally &minutes=N
        query param can be appended to change the Authorization period of the guest,
        where N is a valid integer denoting number of minutes a guest remains authorized
        |

        | deny_url | Renders URL to reject the request |

        | guest_email | Renders Email ID of the guest |

        | guest_name | Renders Name of the guest |

        | field1 | Renders value of the Custom Field 1 |

        | field2 | Renders value of the Custom Field 2 |

        | company | Renders value of the Company field |

        | sponsor_link_validity_duration | Renders validity time of the request (i.e.
        Approve/Deny URL) |

        | auth_expire_minutes | Renders Wlan-level configured Guest Authorization
        Expiration time period (in minutes), If not configured then default (1 day
        in minutes) |'
      operationId: updateOrgWlanPortalTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wlan_portal_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Portaltemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWlanPortalTemplate
      tags:
      - Orgs Wlans
  /api/v1/orgs/{org_id}/wxrules:
    get:
      description: Get List of Org WxRules
      operationId: listOrgWxRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxRules
      tags:
      - Orgs WxRules
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org WxRule
      operationId: createOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  order: 1
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxRule
      tags:
      - Orgs WxRules
  /api/v1/orgs/{org_id}/wxrules/derived:
    get:
      description: Get Derived Org WxRule
      operationId: getOrgWxRulesDerived
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxRulesDerived
      tags:
      - Orgs WxRules
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wxrules/{wxrule_id}:
    delete:
      description: Delete Org WxRule
      operationId: deleteOrgWxRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxRule
      tags:
      - Orgs WxRules
    get:
      description: Get Org WxRule Details
      operationId: getOrgWxRule
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxRule
      tags:
      - Orgs WxRules
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxrule_id'
    put:
      description: Update Org WxRule
      operationId: updateOrgWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  order: 1
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxRule
      tags:
      - Orgs WxRules
  /api/v1/orgs/{org_id}/wxtags:
    get:
      description: Get List of Org WxLAN Tags
      operationId: listOrgWxTags
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtagArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxTags
      tags:
      - Orgs WxTags
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create WxLAN Tag
      operationId: createOrgWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                  - gmail
                  - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file_servers
                  type: match
                  values:
                  - b0c4e7001543
                  - a0c4e7001543
                  - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                  - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file_servers
                  type: match
                  values:
                  - 10.1.2.1
                  - 10.2.3.4/24
                  - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                  - '80'
                  - '8000'
                  - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                  - test_key1
                  - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                  - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                  - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                  - john@abc.com
                  - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                  - port_range: '80'
                    protocol: tcp
                    subnets:
                    - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                  - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxTag
      tags:
      - Orgs WxTags
  /api/v1/orgs/{org_id}/wxtags/apps:
    get:
      description: Get Application List
      operationId: getOrgApplicationList
      responses:
        '200':
          $ref: '#/components/responses/WxTagsAppsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgApplicationList
      tags:
      - Orgs WxTags
    parameters:
    - $ref: '#/components/parameters/org_id'
  /api/v1/orgs/{org_id}/wxtags/{wxtag_id}:
    delete:
      description: Delete WxLAN Tag
      operationId: deleteOrgWxTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxTag
      tags:
      - Orgs WxTags
    get:
      description: Get WxLAN Tag Details
      operationId: getOrgWxTag
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxTag
      tags:
      - Orgs WxTags
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtag_id'
    put:
      description: Update WxLAN Tag
      operationId: updateOrgWxTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxTag
      tags:
      - Orgs WxTags
  /api/v1/orgs/{org_id}/wxtags/{wxtag_id}/clients:
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getOrgCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: '#/components/responses/WxtagClients'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgCurrentMatchingClientsOfAWxTag
      tags:
      - Orgs WxTags
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtag_id'
  /api/v1/orgs/{org_id}/wxtunnels:
    get:
      description: Get List of Org WxLAN Tunnels
      operationId: listOrgWxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtunnelArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOrgWxTunnels
      tags:
      - Orgs WxTunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
    post:
      description: Create Org WxAN Tunnel
      operationId: createOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createOrgWxTunnel
      tags:
      - Orgs WxTunnels
  /api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}:
    delete:
      description: Delete Org WxLAN Tunnel
      operationId: deleteOrgWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteOrgWxTunnel
      tags:
      - Orgs WxTunnels
    get:
      description: Get Org WxLAN Tunnel Details
      operationId: getOrgWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOrgWxTunnel
      tags:
      - Orgs WxTunnels
    parameters:
    - $ref: '#/components/parameters/org_id'
    - $ref: '#/components/parameters/wxtunnel_id'
    put:
      description: Update Org WxLAN Tunnel
      operationId: updateOrgWxTunnel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateOrgWxTunnel
      tags:
      - Orgs WxTunnels
components:
  parameters:
    account_id:
      $ref: ../../components/parameters/account_id.yml
    admin_id:
      $ref: ../../components/parameters/admin_id.yml
    alarm_id:
      $ref: ../../components/parameters/alarm_id.yml
    alarmtemplate_id:
      $ref: ../../components/parameters/alarmtemplate_id.yml
    apitoken_id:
      $ref: ../../components/parameters/apitoken_id.yml
    aptemplate_id:
      $ref: ../../components/parameters/aptemplate_id.yml
    asset_id:
      $ref: ../../components/parameters/asset_id.yml
    assetfilter_id:
      $ref: ../../components/parameters/assetfilter_id.yml
    attachment_id:
      $ref: ../../components/parameters/attachment_id.yml
    client_event_type:
      $ref: ../../components/parameters/client_event_type.yml
    client_mac:
      $ref: ../../components/parameters/client_mac.yml
    device_event_type:
      $ref: ../../components/parameters/device_event_type.yml
    device_mac:
      $ref: ../../components/parameters/device_mac.yml
    deviceprofile_id:
      $ref: ../../components/parameters/deviceprofile_id.yml
    dot11_band:
      $ref: ../../components/parameters/dot11_band.yml
    dot11_proto:
      $ref: ../../components/parameters/dot11_proto.yml
    duration:
      $ref: ../../components/parameters/duration.yml
    end:
      $ref: ../../components/parameters/end.yml
    evpn_topology_id:
      $ref: ../../components/parameters/evpn_topology_id.yml
    fields:
      $ref: ../../components/parameters/fields.yml
    gatewaytemplate_id:
      $ref: ../../components/parameters/gatewaytemplate_id.yml
    guest_mac:
      $ref: ../../components/parameters/guest_mac.yml
    idpprofile_id:
      $ref: ../../components/parameters/idpprofile_id.yml
    interval:
      $ref: ../../components/parameters/interval.yml
    invite_id:
      $ref: ../../components/parameters/invite_id.yml
    ip:
      $ref: ../../components/parameters/ip.yml
    limit:
      $ref: ../../components/parameters/limit.yml
    marvisinvite_id:
      $ref: ../../components/parameters/marvisinvite_id.yml
    metric:
      $ref: ../../components/parameters/metric.yml
    mxcluster_id:
      $ref: ../../components/parameters/mxcluster_id.yml
    mxedge_event_type:
      $ref: ../../components/parameters/mxedge_event_type.yml
    mxedge_id:
      $ref: ../../components/parameters/mxedge_id.yml
    mxtunnel_id:
      $ref: ../../components/parameters/mxtunnel_id.yml
    nac_event_type:
      $ref: ../../components/parameters/nac_event_type.yml
    naccrl_id:
      $ref: ../../components/parameters/naccrl_id.yml
    nacportal_id:
      $ref: ../../components/parameters/nacportal_id.yml
    nacrule_id:
      $ref: ../../components/parameters/nacrule_id.yml
    nactag_id:
      $ref: ../../components/parameters/nactag_id.yml
    network_id:
      $ref: ../../components/parameters/network_id.yml
    networktemplate_id:
      $ref: ../../components/parameters/networktemplate_id.yml
    org_id:
      $ref: ../../components/parameters/org_id.yml
    otherdevice_event_type:
      $ref: ../../components/parameters/otherdevice_event_type.yml
    page:
      $ref: ../../components/parameters/page.yml
    psk_id:
      $ref: ../../components/parameters/psk_id.yml
    psk_id_query:
      $ref: ../../components/parameters/psk_id_query.yml
    pskportal_id:
      $ref: ../../components/parameters/pskportal_id.yml
    rftemplate_id:
      $ref: ../../components/parameters/rftemplate_id.yml
    sdkclient_id:
      $ref: ../../components/parameters/sdkclient_id.yml
    sdkinvite_id:
      $ref: ../../components/parameters/sdkinvite_id.yml
    sdktemplate_id:
      $ref: ../../components/parameters/sdktemplate_id.yml
    secpolicy_id:
      $ref: ../../components/parameters/secpolicy_id.yml
    service_id:
      $ref: ../../components/parameters/service_id.yml
    servicepolicy_id:
      $ref: ../../components/parameters/servicepolicy_id.yml
    site_name:
      $ref: ../../components/parameters/site_name.yml
    sitegroup_id:
      $ref: ../../components/parameters/sitegroup_id.yml
    sitetemplate_id:
      $ref: ../../components/parameters/sitetemplate_id.yml
    sso_id:
      $ref: ../../components/parameters/sso_id.yml
    ssorole_id:
      $ref: ../../components/parameters/ssorole_id.yml
    start:
      $ref: ../../components/parameters/start.yml
    template_id:
      $ref: ../../components/parameters/template_id.yml
    ticket_id:
      $ref: ../../components/parameters/ticket_id.yml
    upgrade_id:
      $ref: ../../components/parameters/upgrade_id.yml
    usermac_id:
      $ref: ../../components/parameters/usermac_id.yml
    vpn_id:
      $ref: ../../components/parameters/vpn_id.yml
    webhook_id:
      $ref: ../../components/parameters/webhook_id.yml
    wlan_id:
      $ref: ../../components/parameters/wlan_id.yml
    wxrule_id:
      $ref: ../../components/parameters/wxrule_id.yml
    wxtag_id:
      $ref: ../../components/parameters/wxtag_id.yml
    wxtunnel_id:
      $ref: ../../components/parameters/wxtunnel_id.yml
  responses:
    AccountJseInfo:
      $ref: ../../components/responses/AccountJseInfo.yml
    Admin:
      $ref: ../../components/responses/Admin.yml
    AdminsArray:
      $ref: ../../components/responses/AdminsArray.yml
    AlarmsSearch:
      $ref: ../../components/responses/AlarmsSearch.yml
    Alarmtemplate:
      $ref: ../../components/responses/Alarmtemplate.yml
    AlarmtemplatesArray:
      $ref: ../../components/responses/AlarmtemplatesArray.yml
    ApitokenOrg:
      $ref: ../../components/responses/ApitokenOrg.yml
    ApitokensOrgArray:
      $ref: ../../components/responses/ApitokensOrgArray.yml
    Aptemplate:
      $ref: ../../components/responses/Aptemplate.yml
    AptemplatesArray:
      $ref: ../../components/responses/AptemplatesArray.yml
    Asset:
      $ref: ../../components/responses/Asset.yml
    Assetfilter:
      $ref: ../../components/responses/Assetfilter.yml
    AssetfiltersArray:
      $ref: ../../components/responses/AssetfiltersArray.yml
    AssetsArray:
      $ref: ../../components/responses/AssetsArray.yml
    AssetsArrayStats:
      $ref: ../../components/responses/AssetsArrayStats.yml
    AssetsArrayStatsSearch:
      $ref: ../../components/responses/AssetsArrayStatsSearch.yml
    AssignSuccess:
      $ref: ../../components/responses/AssignSuccess.yml
    BgpStatsArraySearch:
      $ref: ../../components/responses/BgpStatsArraySearch.yml
    Certificate:
      $ref: ../../components/responses/Certificate.yml
    ClaimLicense:
      $ref: ../../components/responses/ClaimLicense.yml
    ClaimMxedge:
      $ref: ../../components/responses/ClaimMxedge.yml
    ClientNacSearch:
      $ref: ../../components/responses/ClientNacSearch.yml
    ClientsSearch:
      $ref: ../../components/responses/ClientsSearch.yml
    ConfigsHistorySearch:
      $ref: ../../components/responses/ConfigsHistorySearch.yml
    Count:
      $ref: ../../components/responses/Count.yml
    DeviceEventsSearch:
      $ref: ../../components/responses/DeviceEventsSearch.yml
    DeviceOther:
      $ref: ../../components/responses/DeviceOther.yml
    DeviceOtherArray:
      $ref: ../../components/responses/DeviceOtherArray.yml
    DeviceOtherStats:
      $ref: ../../components/responses/DeviceOtherStats.yml
    Deviceprofile:
      $ref: ../../components/responses/Deviceprofile.yml
    DeviceprofilesArray:
      $ref: ../../components/responses/DeviceprofilesArray.yml
    DevicesArrayStatsOrg:
      $ref: ../../components/responses/DevicesArrayStatsOrg.yml
    DevicesSearch:
      $ref: ../../components/responses/DevicesSearch.yml
    EventsNacClientSearch:
      $ref: ../../components/responses/EventsNacClientSearch.yml
    EventsOtherDevicesSearch:
      $ref: ../../components/responses/EventsOtherDevicesSearch.yml
    EventsSearch:
      $ref: ../../components/responses/EventsSearch.yml
    EvpnTopologiesArray:
      $ref: ../../components/responses/EvpnTopologiesArray.yml
    EvpnTopology:
      $ref: ../../components/responses/EvpnTopology.yml
    File:
      $ref: ../../components/responses/File.yml
    Gatewaytemplate:
      $ref: ../../components/responses/Gatewaytemplate.yml
    GatewaytemplatesArray:
      $ref: ../../components/responses/GatewaytemplatesArray.yml
    Guest:
      $ref: ../../components/responses/Guest.yml
    GuestsArray:
      $ref: ../../components/responses/GuestsArray.yml
    GuestsSearch:
      $ref: ../../components/responses/GuestsSearch.yml
    HTTP400:
      $ref: ../../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../../components/responses/HTTP429.yml
    IdpProfile:
      $ref: ../../components/responses/IdpProfile.yml
    IdpProfileArray:
      $ref: ../../components/responses/IdpProfileArray.yml
    InsightMetricOrg:
      $ref: ../../components/responses/InsightMetricOrg.yml
    JseInfo:
      $ref: ../../components/responses/JseInfo.yml
    JsiDevices:
      $ref: ../../components/responses/JsiDevices.yml
    JsiInventory:
      $ref: ../../components/responses/JsiInventory.yml
    JsiInventoryError:
      $ref: ../../components/responses/JsiInventoryError.yml
    JuniperLinkAccountFailed:
      $ref: ../../components/responses/JuniperLinkAccountFailed.yml
    JuniperLinkAccountSuccess:
      $ref: ../../components/responses/JuniperLinkAccountSuccess.yml
    JunosRegisterCmd:
      $ref: ../../components/responses/JunosRegisterCmd.yml
    Licence:
      $ref: ../../components/responses/Licence.yml
    LicenceUsageOrg:
      $ref: ../../components/responses/LicenceUsageOrg.yml
    LogsSearch:
      $ref: ../../components/responses/LogsSearch.yml
    MacsArray:
      $ref: ../../components/responses/MacsArray.yml
    MapImport:
      $ref: ../../components/responses/MapImport.yml
    MarvisClient:
      $ref: ../../components/responses/MarvisClient.yml
    MarvisClientsArray:
      $ref: ../../components/responses/MarvisClientsArray.yml
    MxEdgeEventsSearch:
      $ref: ../../components/responses/MxEdgeEventsSearch.yml
    MxEdgeSearch:
      $ref: ../../components/responses/MxEdgeSearch.yml
    MxEdgeUpgrade:
      $ref: ../../components/responses/MxEdgeUpgrade.yml
    MxEdgeUpgradesArray:
      $ref: ../../components/responses/MxEdgeUpgradesArray.yml
    Mxcluster:
      $ref: ../../components/responses/Mxcluster.yml
    MxclustersArray:
      $ref: ../../components/responses/MxclustersArray.yml
    Mxedge:
      $ref: ../../components/responses/Mxedge.yml
    MxedgeStats:
      $ref: ../../components/responses/MxedgeStats.yml
    MxedgeUpgradeInfo:
      $ref: ../../components/responses/MxedgeUpgradeInfo.yml
    MxedgesArray:
      $ref: ../../components/responses/MxedgesArray.yml
    MxedgesArrayStats:
      $ref: ../../components/responses/MxedgesArrayStats.yml
    Mxtunnel:
      $ref: ../../components/responses/Mxtunnel.yml
    MxtunnelsArray:
      $ref: ../../components/responses/MxtunnelsArray.yml
    NacCrlFile:
      $ref: ../../components/responses/NacCrlFile.yml
    NacCrlFilesArray:
      $ref: ../../components/responses/NacCrlFilesArray.yml
    NacPortal:
      $ref: ../../components/responses/NacPortal.yml
    NacPortalArray:
      $ref: ../../components/responses/NacPortalArray.yml
    NacRule:
      $ref: ../../components/responses/NacRule.yml
    NacRulesArray:
      $ref: ../../components/responses/NacRulesArray.yml
    NacTag:
      $ref: ../../components/responses/NacTag.yml
    NacTagsArray:
      $ref: ../../components/responses/NacTagsArray.yml
    Network:
      $ref: ../../components/responses/Network.yml
    NetworksArray:
      $ref: ../../components/responses/NetworksArray.yml
    Networktemplate:
      $ref: ../../components/responses/Networktemplate.yml
    NetworktemplatesArray:
      $ref: ../../components/responses/NetworktemplatesArray.yml
    OK:
      $ref: ../../components/responses/OK.yml
    OauthAppLink:
      $ref: ../../components/responses/OauthAppLink.yml
    Org:
      $ref: ../../components/responses/Org.yml
    OrgDeviceUpgrade:
      $ref: ../../components/responses/OrgDeviceUpgrade.yml
    OrgDeviceUpgradeList:
      $ref: ../../components/responses/OrgDeviceUpgradeList.yml
    OrgDevices:
      $ref: ../../components/responses/OrgDevices.yml
    OrgEventsSearch:
      $ref: ../../components/responses/OrgEventsSearch.yml
    OrgInventory:
      $ref: ../../components/responses/OrgInventory.yml
    OrgInventoryAdd:
      $ref: ../../components/responses/OrgInventoryAdd.yml
    OrgInventoryChanges:
      $ref: ../../components/responses/OrgInventoryChanges.yml
    OrgSetting:
      $ref: ../../components/responses/OrgSetting.yml
    OrgSiteSle:
      $ref: ../../components/responses/OrgSiteSle.yml
    OrgStats:
      $ref: ../../components/responses/OrgStats.yml
    OrgSuppressedAlarms:
      $ref: ../../components/responses/OrgSuppressedAlarms.yml
    PcapBucketConfig:
      $ref: ../../components/responses/PcapBucketConfig.yml
    PcapStart:
      $ref: ../../components/responses/PcapStart.yml
    PcapStatus:
      $ref: ../../components/responses/PcapStatus.yml
    PcapsSearch:
      $ref: ../../components/responses/PcapsSearch.yml
    PmaDashboards:
      $ref: ../../components/responses/PmaDashboards.yml
    PortStatsSearch:
      $ref: ../../components/responses/PortStatsSearch.yml
    Portaltemplate:
      $ref: ../../components/responses/Portaltemplate.yml
    Psk:
      $ref: ../../components/responses/Psk.yml
    PskPortal:
      $ref: ../../components/responses/PskPortal.yml
    PskPortalLogsSearch:
      $ref: ../../components/responses/PskPortalLogsSearch.yml
    PskPortalsArray:
      $ref: ../../components/responses/PskPortalsArray.yml
    PsksArray:
      $ref: ../../components/responses/PsksArray.yml
    RadioMacs:
      $ref: ../../components/responses/RadioMacs.yml
    Rftemplate:
      $ref: ../../components/responses/Rftemplate.yml
    RftemplatesArray:
      $ref: ../../components/responses/RftemplatesArray.yml
    Router128TRegisterCmd:
      $ref: ../../components/responses/Router128TRegisterCmd.yml
    Sdkinvite:
      $ref: ../../components/responses/Sdkinvite.yml
    SdkinvitesArray:
      $ref: ../../components/responses/SdkinvitesArray.yml
    Sdktemplate:
      $ref: ../../components/responses/Sdktemplate.yml
    SdktemplatesArray:
      $ref: ../../components/responses/SdktemplatesArray.yml
    SearchVar:
      $ref: ../../components/responses/SearchVar.yml
    SecpoliciesArray:
      $ref: ../../components/responses/SecpoliciesArray.yml
    Secpolicy:
      $ref: ../../components/responses/Secpolicy.yml
    Service:
      $ref: ../../components/responses/Service.yml
    ServicePoliciesArray:
      $ref: ../../components/responses/ServicePoliciesArray.yml
    ServicePolicy:
      $ref: ../../components/responses/ServicePolicy.yml
    ServicesArray:
      $ref: ../../components/responses/ServicesArray.yml
    Site:
      $ref: ../../components/responses/Site.yml
    SiteTemplate:
      $ref: ../../components/responses/SiteTemplate.yml
    SiteTemplatesArray:
      $ref: ../../components/responses/SiteTemplatesArray.yml
    Sitegroup:
      $ref: ../../components/responses/Sitegroup.yml
    SitegroupsArray:
      $ref: ../../components/responses/SitegroupsArray.yml
    SitesArray:
      $ref: ../../components/responses/SitesArray.yml
    SitesSearch:
      $ref: ../../components/responses/SitesSearch.yml
    Sso:
      $ref: ../../components/responses/Sso.yml
    SsoLatestFailures:
      $ref: ../../components/responses/SsoLatestFailures.yml
    SsoRoleOrg:
      $ref: ../../components/responses/SsoRoleOrg.yml
    SsoRolesMspArray:
      $ref: ../../components/responses/SsoRolesMspArray.yml
    SsoSamlMetadata:
      $ref: ../../components/responses/SsoSamlMetadata.yml
    SsosArray:
      $ref: ../../components/responses/SsosArray.yml
    SsrUpgrade:
      $ref: ../../components/responses/SsrUpgrade.yml
    SsrUpgradesArray:
      $ref: ../../components/responses/SsrUpgradesArray.yml
    SsrVersions:
      $ref: ../../components/responses/SsrVersions.yml
    Template:
      $ref: ../../components/responses/Template.yml
    TemplatesArray:
      $ref: ../../components/responses/TemplatesArray.yml
    Ticket:
      $ref: ../../components/responses/Ticket.yml
    TicketAttachment:
      $ref: ../../components/responses/TicketAttachment.yml
    TicketsArray:
      $ref: ../../components/responses/TicketsArray.yml
    Troubleshoot:
      $ref: ../../components/responses/Troubleshoot.yml
    TunnelsSearch:
      $ref: ../../components/responses/TunnelsSearch.yml
    UpgradeOrgDevices:
      $ref: ../../components/responses/UpgradeOrgDevices.yml
    UserMac:
      $ref: ../../components/responses/UserMac.yml
    UserMacArray:
      $ref: ../../components/responses/UserMacArray.yml
    UserMacImport:
      $ref: ../../components/responses/UserMacImport.yml
    UserMacSearch:
      $ref: ../../components/responses/UserMacSearch.yml
    Vpn:
      $ref: ../../components/responses/Vpn.yml
    VpnPeersStats:
      $ref: ../../components/responses/VpnPeersStats.yml
    VpnsArray:
      $ref: ../../components/responses/VpnsArray.yml
    WanClientEventsSearch:
      $ref: ../../components/responses/WanClientEventsSearch.yml
    WanClientsSearch:
      $ref: ../../components/responses/WanClientsSearch.yml
    Webhook:
      $ref: ../../components/responses/Webhook.yml
    WebhookDeliverySearch:
      $ref: ../../components/responses/WebhookDeliverySearch.yml
    WebhooksArray:
      $ref: ../../components/responses/WebhooksArray.yml
    WebsocketSession:
      $ref: ../../components/responses/WebsocketSession.yml
    WebsocketSessionWithUrl:
      $ref: ../../components/responses/WebsocketSessionWithUrl.yml
    WiredClientsSearch:
      $ref: ../../components/responses/WiredClientsSearch.yml
    WirelessClientSessionsSearch:
      $ref: ../../components/responses/WirelessClientSessionsSearch.yml
    Wlan:
      $ref: ../../components/responses/Wlan.yml
    WlansArray:
      $ref: ../../components/responses/WlansArray.yml
    WxTagsAppsArray:
      $ref: ../../components/responses/WxTagsAppsArray.yml
    Wxrule:
      $ref: ../../components/responses/Wxrule.yml
    WxruleArray:
      $ref: ../../components/responses/WxruleArray.yml
    Wxtag:
      $ref: ../../components/responses/Wxtag.yml
    WxtagArray:
      $ref: ../../components/responses/WxtagArray.yml
    WxtagClients:
      $ref: ../../components/responses/WxtagClients.yml
    Wxtunnel:
      $ref: ../../components/responses/Wxtunnel.yml
    WxtunnelArray:
      $ref: ../../components/responses/WxtunnelArray.yml
    ZscalerAccount:
      $ref: ../../components/responses/ZscalerAccount.yml
  schemas:
    account_cradlepoint_config:
      $ref: ../../components/schemas/account_cradlepoint_config.yml
    account_jse_config:
      $ref: ../../components/schemas/account_jse_config.yml
    account_juniper_config:
      $ref: ../../components/schemas/account_juniper_config.yml
    account_juniper_info:
      $ref: ../../components/schemas/account_juniper_info.yml
    account_oauth_add:
      $ref: ../../components/schemas/account_oauth_add.yml
    account_oauth_app_name:
      $ref: ../../components/schemas/account_oauth_app_name.yml
    account_oauth_config:
      $ref: ../../components/schemas/account_oauth_config.yml
    account_zscaler_config:
      $ref: ../../components/schemas/account_zscaler_config.yml
    admin:
      $ref: ../../components/schemas/admin.yml
    alarm_template:
      $ref: ../../components/schemas/alarm_template.yml
    alarms:
      $ref: ../../components/schemas/alarms.yml
    ap_template:
      $ref: ../../components/schemas/ap_template.yml
    asset:
      $ref: ../../components/schemas/asset.yml
    asset_filter:
      $ref: ../../components/schemas/asset_filter.yml
    assets_import_file:
      $ref: ../../components/schemas/assets_import_file.yml
    assets_import_json:
      $ref: ../../components/schemas/assets_import_json.yml
    binary_stream:
      $ref: ../../components/schemas/binary_stream.yml
    capture_org:
      $ref: ../../components/schemas/capture_org.yml
    claim_activation:
      $ref: ../../components/schemas/claim_activation.yml
    claim_codes:
      $ref: ../../components/schemas/claim_codes.yml
    code_string:
      $ref: ../../components/schemas/code_string.yml
    count_org_devices_mxtunnel_status:
      $ref: ../../components/schemas/count_org_devices_mxtunnel_status.yml
    count_org_switch_ports_auth_state:
      $ref: ../../components/schemas/count_org_switch_ports_auth_state.yml
    count_org_switch_ports_stp_role:
      $ref: ../../components/schemas/count_org_switch_ports_stp_role.yml
    count_org_switch_ports_stp_state:
      $ref: ../../components/schemas/count_org_switch_ports_stp_state.yml
    days_number:
      $ref: ../../components/schemas/days_number.yml
    device_status:
      $ref: ../../components/schemas/device_status.yml
    device_type:
      $ref: ../../components/schemas/device_type.yml
    device_type_with_all:
      $ref: ../../components/schemas/device_type_with_all.yml
    deviceprofile:
      $ref: ../../components/schemas/deviceprofile.yml
    email_string:
      $ref: ../../components/schemas/email_string.yml
    evpn_topology:
      $ref: ../../components/schemas/evpn_topology.yml
    gateway_template:
      $ref: ../../components/schemas/gateway_template.yml
    get_org_mxedge_upgrade_info_channel:
      $ref: ../../components/schemas/get_org_mxedge_upgrade_info_channel.yml
    guest:
      $ref: ../../components/schemas/guest.yml
    ha_cluster_config:
      $ref: ../../components/schemas/ha_cluster_config.yml
    ha_cluster_delete:
      $ref: ../../components/schemas/ha_cluster_delete.yml
    idp_profile:
      $ref: ../../components/schemas/idp_profile.yml
    image_import:
      $ref: ../../components/schemas/image_import.yml
    inventory_update:
      $ref: ../../components/schemas/inventory_update.yml
    list_org_logs_sort:
      $ref: ../../components/schemas/list_org_logs_sort.yml
    mac_addresses:
      $ref: ../../components/schemas/mac_addresses.yml
    map_org_import_file:
      $ref: ../../components/schemas/map_org_import_file.yml
    map_site_import_file:
      $ref: ../../components/schemas/map_site_import_file.yml
    marvis_client:
      $ref: ../../components/schemas/marvis_client.yml
    mxcluster:
      $ref: ../../components/schemas/mxcluster.yml
    mxedge:
      $ref: ../../components/schemas/mxedge.yml
    mxedge_for_site:
      $ref: ../../components/schemas/mxedge_for_site.yml
    mxedge_service_action:
      $ref: ../../components/schemas/mxedge_service_action.yml
    mxedge_service_name:
      $ref: ../../components/schemas/mxedge_service_name.yml
    mxedge_upgrade_multi:
      $ref: ../../components/schemas/mxedge_upgrade_multi.yml
    mxedges_assign:
      $ref: ../../components/schemas/mxedges_assign.yml
    mxedges_unassign:
      $ref: ../../components/schemas/mxedges_unassign.yml
    mxtunnel:
      $ref: ../../components/schemas/mxtunnel.yml
    nac_portal:
      $ref: ../../components/schemas/nac_portal.yml
    nac_rule:
      $ref: ../../components/schemas/nac_rule.yml
    nac_tag:
      $ref: ../../components/schemas/nac_tag.yml
    name_string:
      $ref: ../../components/schemas/name_string.yml
    network:
      $ref: ../../components/schemas/network.yml
    network_template:
      $ref: ../../components/schemas/network_template.yml
    note_string:
      $ref: ../../components/schemas/note_string.yml
    oauth_app_name:
      $ref: ../../components/schemas/oauth_app_name.yml
    org:
      $ref: ../../components/schemas/org.yml
    org_apitoken:
      $ref: ../../components/schemas/org_apitoken.yml
    org_asset_count_distinct:
      $ref: ../../components/schemas/org_asset_count_distinct.yml
    org_client_sessions_count_distinct:
      $ref: ../../components/schemas/org_client_sessions_count_distinct.yml
    org_clients_count_distinct:
      $ref: ../../components/schemas/org_clients_count_distinct.yml
    org_crl_import_file:
      $ref: ../../components/schemas/org_crl_import_file.yml
    org_devices_count_distinct:
      $ref: ../../components/schemas/org_devices_count_distinct.yml
    org_devices_events_count_distinct:
      $ref: ../../components/schemas/org_devices_events_count_distinct.yml
    org_devices_last_configs_count_distinct:
      $ref: ../../components/schemas/org_devices_last_configs_count_distinct.yml
    org_guests_count_distinct:
      $ref: ../../components/schemas/org_guests_count_distinct.yml
    org_license_action:
      $ref: ../../components/schemas/org_license_action.yml
    org_logs_count_distinct:
      $ref: ../../components/schemas/org_logs_count_distinct.yml
    org_mxedge_count_distinct:
      $ref: ../../components/schemas/org_mxedge_count_distinct.yml
    org_mxedge_events_count_distinct:
      $ref: ../../components/schemas/org_mxedge_events_count_distinct.yml
    org_nac_client_events_count_distinct:
      $ref: ../../components/schemas/org_nac_client_events_count_distinct.yml
    org_nac_clients_count_distinct:
      $ref: ../../components/schemas/org_nac_clients_count_distinct.yml
    org_otherdevices_events_count_distinct:
      $ref: ../../components/schemas/org_otherdevices_events_count_distinct.yml
    org_psk_portal_logs_count_distinct:
      $ref: ../../components/schemas/org_psk_portal_logs_count_distinct.yml
    org_setting:
      $ref: ../../components/schemas/org_setting.yml
    org_site_sle_type:
      $ref: ../../components/schemas/org_site_sle_type.yml
    org_sites_count_distinct:
      $ref: ../../components/schemas/org_sites_count_distinct.yml
    org_switch_port_count_distinct:
      $ref: ../../components/schemas/org_switch_port_count_distinct.yml
    org_tickets_count_distinct:
      $ref: ../../components/schemas/org_tickets_count_distinct.yml
    org_tunnel_count_distinct:
      $ref: ../../components/schemas/org_tunnel_count_distinct.yml
    org_tunnel_type_count:
      $ref: ../../components/schemas/org_tunnel_type_count.yml
    org_wan_clients_count_distinct:
      $ref: ../../components/schemas/org_wan_clients_count_distinct.yml
    org_wan_clients_events_count_distinct:
      $ref: ../../components/schemas/org_wan_clients_events_count_distinct.yml
    org_wired_clients_count_distinct:
      $ref: ../../components/schemas/org_wired_clients_count_distinct.yml
    other_device_update:
      $ref: ../../components/schemas/other_device_update.yml
    other_device_update_multi:
      $ref: ../../components/schemas/other_device_update_multi.yml
    pcap_bucket:
      $ref: ../../components/schemas/pcap_bucket.yml
    pcap_bucket_verify:
      $ref: ../../components/schemas/pcap_bucket_verify.yml
    psk:
      $ref: ../../components/schemas/psk.yml
    psk_id_list:
      $ref: ../../components/schemas/psk_id_list.yml
    psk_portal:
      $ref: ../../components/schemas/psk_portal.yml
    psk_portal_image:
      $ref: ../../components/schemas/psk_portal_image.yml
    psk_portal_template:
      $ref: ../../components/schemas/psk_portal_template.yml
    psks:
      $ref: ../../components/schemas/psks.yml
    psks_import_file:
      $ref: ../../components/schemas/psks_import_file.yml
    replace_device:
      $ref: ../../components/schemas/replace_device.yml
    rf_template:
      $ref: ../../components/schemas/rf_template.yml
    sdk_invite_sms:
      $ref: ../../components/schemas/sdk_invite_sms.yml
    sdkinvite:
      $ref: ../../components/schemas/sdkinvite.yml
    sdktemplate:
      $ref: ../../components/schemas/sdktemplate.yml
    search_org_devices_mxtunnel_status:
      $ref: ../../components/schemas/search_org_devices_mxtunnel_status.yml
    search_org_sw_or_gw_ports_auth_state:
      $ref: ../../components/schemas/search_org_sw_or_gw_ports_auth_state.yml
    search_org_sw_or_gw_ports_stp_role:
      $ref: ../../components/schemas/search_org_sw_or_gw_ports_stp_role.yml
    search_org_sw_or_gw_ports_stp_state:
      $ref: ../../components/schemas/search_org_sw_or_gw_ports_stp_state.yml
    search_org_user_macs_labels:
      $ref: ../../components/schemas/search_org_user_macs_labels.yml
    secpolicy:
      $ref: ../../components/schemas/secpolicy.yml
    service:
      $ref: ../../components/schemas/service.yml
    service_policy:
      $ref: ../../components/schemas/service_policy.yml
    site:
      $ref: ../../components/schemas/site.yml
    site_template:
      $ref: ../../components/schemas/site_template.yml
    sitegroup:
      $ref: ../../components/schemas/sitegroup.yml
    sso:
      $ref: ../../components/schemas/sso.yml
    sso_role_org:
      $ref: ../../components/schemas/sso_role_org.yml
    ssr_upgrade_multi:
      $ref: ../../components/schemas/ssr_upgrade_multi.yml
    strings:
      $ref: ../../components/schemas/strings.yml
    suppressed_alarm:
      $ref: ../../components/schemas/suppressed_alarm.yml
    suppressed_alarm_scope:
      $ref: ../../components/schemas/suppressed_alarm_scope.yml
    template:
      $ref: ../../components/schemas/template.yml
    ticket:
      $ref: ../../components/schemas/ticket.yml
    ticket_comment:
      $ref: ../../components/schemas/ticket_comment.yml
    ticket_comment_import_file:
      $ref: ../../components/schemas/ticket_comment_import_file.yml
    ticket_upload_attachments_file:
      $ref: ../../components/schemas/ticket_upload_attachments_file.yml
    troubleshoot_type:
      $ref: ../../components/schemas/troubleshoot_type.yml
    tunnel_type:
      $ref: ../../components/schemas/tunnel_type.yml
    upgrade_org_devices:
      $ref: ../../components/schemas/upgrade_org_devices.yml
    user_mac:
      $ref: ../../components/schemas/user_mac.yml
    user_macs:
      $ref: ../../components/schemas/user_macs.yml
    username_password:
      $ref: ../../components/schemas/username_password.yml
    utils_tunterm_bounce_port:
      $ref: ../../components/schemas/utils_tunterm_bounce_port.yml
    var_source:
      $ref: ../../components/schemas/var_source.yml
    version_string:
      $ref: ../../components/schemas/version_string.yml
    vpn:
      $ref: ../../components/schemas/vpn.yml
    webhook:
      $ref: ../../components/schemas/webhook.yml
    webhook_delivery_distinct:
      $ref: ../../components/schemas/webhook_delivery_distinct.yml
    webhook_delivery_status:
      $ref: ../../components/schemas/webhook_delivery_status.yml
    webhook_delivery_topic:
      $ref: ../../components/schemas/webhook_delivery_topic.yml
    wlan:
      $ref: ../../components/schemas/wlan.yml
    wlan_portal_template:
      $ref: ../../components/schemas/wlan_portal_template.yml
    wxlan_rule:
      $ref: ../../components/schemas/wxlan_rule.yml
    wxlan_tag:
      $ref: ../../components/schemas/wxlan_tag.yml
    wxlan_tunnel:
      $ref: ../../components/schemas/wxlan_tunnel.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
