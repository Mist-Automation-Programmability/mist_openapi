openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2405.1.2**

    >

    > Date: **May 28, 2024**


    ---


    #### Available Documentation

    * [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)

    * [Open API](https://doc.mist-lab.fr/)


    ---


    #### Useful links

    * [Mist Homepage](https://www.mist.com)

    * [Mist Documentation](https://www.mist.com/documentation)

    * [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account
    required)

    * [Mist Blog](https://www.mist.com/news/?md_post_type=post)

    * [Mist Updates](https://www.mist.com/documentation/category/product-updates/)'
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2405.1.2
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
    enableLogging: true
    generateExceptions: false
    generateInterfaces: true
    generateModels: true
    nullify404: true
    shortCopyrightNotice: "Copyright \xA9 2024 Juniper Networks, Inc.  All rights\
      \ reserved"
    useControllerPrefix: false
    useEnumPostfix: true
    useMethodPrefix: false
    useModelPostfix: false
    userAgent: SDK 2024.2.1
    userConfigurableRetries: true
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist EMEA 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist EMEA 02
      servers:
      - name: API Host
        url: https://api.gc3.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist EMEA 01
  url: https://api.eu.mist.com
- description: Mist EMEA 02
  url: https://api.gc3.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- description: A site represents a project, a deployment. For MSP, it can be as small
    as a coffee shop or a five-star 600-room hotel. A site contains a set of Maps,
    Wlans, Policies, Zones.
  name: Sites
- name: Sites AP Templates
- name: Sites Alarms
- name: Sites Anomaly
- description: Applications contains a list of applications users are interested in
    monitoring / routing / policying
  name: Sites Applications
- name: Sites Asset Filters
- name: Sites Assets
- name: Sites Beacons
- name: Sites Calls
- name: Sites Clients - NAC
- name: Sites Clients - SDK
- name: Sites Clients - Wan
- name: Sites Clients - Wired
- name: Sites Clients - Wireless
- name: Sites Device Profiles
- description: 'Mist provides many ways (device-type specific template, site template,
    device profile, per-device) to configure devices for different kind of scenarios.

    The precedence goes from most specific to least specific

    Device > Device Profile > RFTemplate (for AP only) > DeviceType-specific Template
    > Site Template > Site Setting'
  name: Sites Devices
- name: Sites Devices - Discovered Switches
- description: API Call for 3rd party devices
  name: Sites Devices - Others
- name: Sites Devices - WAN Cluster
- name: Sites Devices - Wired
- name: Sites Devices - Wired - Virtual Chassis
- name: Sites Devices - Wireless
- name: Sites Devices Stats
- description: 'EVPN allows an alternative but more efficient LAN architecture utilizing
    VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding
    plane.

    In our implementation, following the steps to deploy EVPN topologies in a Site'
  name: Sites EVPN Topologies
- name: Sites Events
- name: Sites Gateway Templates
- name: Sites Guests
- name: Sites Insights
- name: Sites JSE
- name: Sites Licenses
- name: Sites Location
- name: Sites Maps
- name: Sites Maps - Auto-orientation
- name: Sites Maps - Auto-placement
- name: Sites MxEdges
- name: Sites Network Templates
- name: Sites Networks
- name: Sites Psks
- name: Sites RF Templates
- name: Sites RRM
- name: Sites RSSI Zones
- name: Sites Rfdiags
- name: Sites Rogues
- name: Sites SLEs
- name: Sites Service Policies
- name: Sites Services
- name: Sites Setting
- name: Sites Site Templates
- name: Sites Skyatp
- name: Sites Synthetic Tests
- name: Sites UI Settings
- name: Sites VPNs
- name: Sites WAN Usages
- name: Sites Webhooks
- name: Sites Wlans
- name: Sites WxRules
- name: Sites WxTags
- name: Sites WxTunnels
- name: Sites Zones
- name: Sites vBeacons
- name: Utilities Common
- name: Utilities LAN
- name: Utilities Location
- name: Utilities MxEdge
- name: Utilities PCAPs
- name: Utilities Upgrade
- name: Utilities WAN
- name: Utilities Wi-Fi
paths:
  /api/v1/sites/{site_id}:
    delete:
      description: Delete Site
      operationId: deleteSite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSite
      tags:
      - Sites
    get:
      description: Get Site Info
      operationId: getSiteInfo
      responses:
        '200':
          $ref: '#/components/responses/Site'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteInfo
      tags:
      - Sites
    parameters:
    - $ref: '#/components/parameters/site_id'
    put:
      description: Update Site Info
      operationId: updateSiteInfo
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  address: string
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  country_code: string
                  latlng:
                    lat: 0
                    lng: 0
                  name: string
                  networktemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  notes: string
                  rftemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  secpolicy_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  sitegroup_ids:
                  - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  timezone: string
            schema:
              $ref: '#/components/schemas/site'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Site'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteInfo
      tags:
      - Sites
  /api/v1/sites/{site_id}/alarms/ack:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Ack multiple Site Alarms
      operationId: multiAckSiteAlarms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alarm_ack'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: multiAckSiteAlarms
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/alarms/ack_all:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Ack all Site Alarms


        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or
        equal to 1000.'
      operationId: ackSiteAllAlarms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: ackSiteAllAlarms
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/alarms/count:
    get:
      description: Count Site Alarms
      operationId: countSiteAlarms
      parameters:
      - description: Group by and count the alarms by some distinct field
        in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/alarm_count_disctinct'
      - description: Name of the admins who have acked the alarms; accepts multiple
          values separated by comma
        in: query
        name: ack_admin_name
        schema:
          type: string
      - in: query
        name: acked
        schema:
          type: boolean
      - description: Key-name of the alarms; accepts multiple values separated by
          comma
        in: query
        name: type
        schema:
          type: string
      - description: Alarm severity; accepts multiple values separated by comma
        in: query
        name: severity
        schema:
          type: string
      - description: Alarm group name; accepts multiple values separated by comma
        in: query
        name: group
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteAlarms
      tags:
      - Sites Alarms
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/alarms/search:
    get:
      description: Search Site Alarms
      operationId: searchSiteAlarms
      parameters:
      - description: Key-name of the alarms; accepts multiple values separated by
          comma
        in: query
        name: type
        schema:
          type: string
      - description: Name of the admins who have acked the alarms; accepts multiple
          values separated by comma
        in: query
        name: ack_admin_name
        schema:
          type: string
      - in: query
        name: acked
        schema:
          type: boolean
      - description: Alarm severity; accepts multiple values separated by comma
        in: query
        name: severity
        schema:
          type: string
      - description: Alarm group name; accepts multiple values separated by comma
        in: query
        name: group
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AlarmsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteAlarms
      tags:
      - Sites Alarms
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/alarms/unack:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Unack multiple Site Alarms
      operationId: multiUnackSiteAlarms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/alarm_ack'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: multiUnackSiteAlarms
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/alarms/unack_all:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Unack all Site Alarms


        **N.B.**: Batch size for multiple alarm ack and unack has to be less or or
        equal to 1000.'
      operationId: unackSiteAllArlarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  note: maintenance window
            schema:
              $ref: '#/components/schemas/note'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unackSiteAllArlarms
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/alarms/{alarm_id}/ack:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/alarm_id'
    post:
      description: Ack Site Alarm
      operationId: ackSiteAlarm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: ackSiteAlarm
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/alarms/{alarm_id}/unack:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/alarm_id'
    post:
      description: Unack Site Alarm
      operationId: unackSiteAlarm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unackSiteAlarm
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/anomaly/client/{client_mac}/{metric}:
    get:
      description: Get Client Anomaly Events
      operationId: getSiteAnomalyEventsForClient
      responses:
        '200':
          $ref: '#/components/responses/AnomalyMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAnomalyEventsForClient
      tags:
      - Sites Anomaly
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    - $ref: '#/components/parameters/metric'
  /api/v1/sites/{site_id}/anomaly/device/{device_mac}/{metric}:
    get:
      description: Get Device Anomaly Events
      operationId: getSiteAnomalyEventsforDevice
      responses:
        '200':
          $ref: '#/components/responses/AnomalyMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAnomalyEventsforDevice
      tags:
      - Sites Anomaly
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/metric'
    - $ref: '#/components/parameters/device_mac'
  /api/v1/sites/{site_id}/anomaly/{metric}:
    get:
      description: Get Site Anomaly Events
      operationId: getSiteAnomalyEvents
      responses:
        '200':
          $ref: '#/components/responses/AnomalyMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAnomalyEvents
      tags:
      - Sites Anomaly
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/metric'
  /api/v1/sites/{site_id}/apps:
    get:
      description: Get List of Site Applications
      operationId: listSiteApps
      responses:
        '200':
          $ref: '#/components/responses/SiteApps'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteApps
      tags:
      - Sites Applications
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/aptemplates/derived:
    get:
      description: Get derived AP Templates for Site
      operationId: getSiteApTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Aptemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteApTemplateDerived
      tags:
      - Sites AP Templates
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/assetfilters:
    get:
      description: Get List of Site Asset Filters
      operationId: listSiteAssetFilters
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetfiltersArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetFilters
      tags:
      - Sites Asset Filters
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset Filter
      operationId: createSiteAssetFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAssetFilters
      tags:
      - Sites Asset Filters
  /api/v1/sites/{site_id}/assetfilters/{assetfilter_id}:
    delete:
      description: Deletes an existing BLE asset filter for the given site.
      operationId: deleteSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAssetFilter
      tags:
      - Sites Asset Filters
    get:
      description: Get Site Asset Filter Details
      operationId: getSiteAssetFilter
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetFilter
      tags:
      - Sites Asset Filters
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/assetfilter_id'
    put:
      description: Updates an existing BLE asset filter for the given site.
      operationId: updateSiteAssetFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset_filter'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Assetfilter'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAssetFilter
      tags:
      - Sites Asset Filters
  /api/v1/sites/{site_id}/assets:
    get:
      description: Get List of Site Assets
      operationId: listSiteAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssets
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Asset
      operationId: createSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteAsset
      tags:
      - Sites Assets
  /api/v1/sites/{site_id}/assets/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Impert Site Assets. \n\nIt can be done via a CSV file or a JSON\
        \ payload.\n\n## CSV File Format\n```csv\nname,mac\n\"asset_name\",5c5b53010101\n\
        ``` "
      operationId: importSiteAssets
      parameters:
      - description: API will replace the assets with same mac if provided `upsert`==`True`,
          otherwise will report in errors in response.
        in: query
        name: upsert
        schema:
          default: 'False'
          enum:
          - 'True'
          - 'False'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assets_import_json'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/assets_import_file'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteAssets
      tags:
      - Sites Assets
  /api/v1/sites/{site_id}/assets/{asset_id}:
    delete:
      description: Delete Site Asset
      operationId: deleteSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteAsset
      tags:
      - Sites Assets
    get:
      description: Get Site Asset Details
      operationId: getSiteAsset
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAsset
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/asset_id'
    put:
      description: Update Site Asset
      operationId: updateSiteAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asset'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Asset'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteAsset
      tags:
      - Sites Assets
  /api/v1/sites/{site_id}/beacons:
    get:
      description: Get List of Site Beacons
      operationId: listSiteBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/BeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeacons
      tags:
      - Sites Beacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Beacon
      operationId: createSiteBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteBeacon
      tags:
      - Sites Beacons
  /api/v1/sites/{site_id}/beacons/{beacon_id}:
    delete:
      description: Delete Site Beacon
      operationId: deleteSiteBeacons
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteBeacons
      tags:
      - Sites Beacons
    get:
      description: Get Site Beacon Details
      operationId: getSiteBeacon
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeacon
      tags:
      - Sites Beacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/beacon_id'
    put:
      description: Update Site Beacon
      operationId: updateSiteBeacons
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  eddystone_instance: string
                  eddystone_namespace: string
                  eddystone_url: string
                  ibeacon_major: 0
                  ibeacon_minor: 0
                  ibeacon_uuid: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  mac: string
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  power: 0
                  type: eddystone-uid
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/beacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Beacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteBeacons
      tags:
      - Sites Beacons
  /api/v1/sites/{site_id}/clients/count:
    get:
      description: Count by Distinct Attributes of Clients
      operationId: countSiteWirelessClients
      parameters:
      - example: hostname
        in: query
        name: distinct
        schema:
          default: device
          enum:
          - ssid
          - ap
          - ip
          - vlan
          - hostname
          - os
          - model
          - device
          title: Site Clients count distinct
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - in: query
        name: vlan
        schema:
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: os
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: device
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClients
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/disconnect:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: To unauthorize multiple clients
      operationId: disconnectSiteMultipleClients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: disconnectSiteMultipleClients
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/clients/events/count:
    get:
      description: Count by Distinct Attributes of Client-Events
      operationId: countSiteWirelessClientEvents
      parameters:
      - example: type
        in: query
        name: distinct
        schema:
          enum:
          - type
          - proto
          - band
          - channel
          - wlan_id
          - ssid
          title: Site Client Events count distinct
          type: string
      - $ref: '#/components/parameters/client_event_type'
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_proto'
      - $ref: '#/components/parameters/dot11_band'
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClientEvents
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/events/search:
    get:
      description: Get Site Clients Events
      operationId: searchSiteWirelessClientEvents
      parameters:
      - $ref: '#/components/parameters/client_event_type'
      - description: for assoc/disassoc events
        in: query
        name: reason_code
        schema:
          type: integer
      - description: SSID Name
        in: query
        name: ssid
        schema:
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_proto'
      - $ref: '#/components/parameters/dot11_band'
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClientEvents
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/search:
    get:
      description: "Search Wireless Clients\n\n**NOTE**: fuzzy logic can be used with\
        \ \u2018*\u2019, supported filters: mac, hostname, device, os, model. E.g.\
        \ /clients/search?device=Mac*&hostname=jerry"
      operationId: searchSiteWirelessClients
      parameters:
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/ip'
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: device type, e.g. Mac, Nvidia, iPhone
        in: query
        name: device
        schema:
          type: string
      - description: os, e.g. Sierra, Yosemite, Windows 10
        in: query
        name: os
        schema:
          type: string
      - description: "model, e.g. \u201CMBP 15 late 2013\u201D, 6, 6s, \u201C8+ GSM\u201D"
        in: query
        name: model
        schema:
          type: string
      - description: AP mac where the client has connected to
        in: query
        name: ap
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - description: partial / full MAC address, hostname, username, psk_name or ip
        in: query
        name: text
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClients
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/sessions/count:
    get:
      description: Count by Distinct Attributes of Client Sessions
      operationId: countSiteWirelessClientSessions
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - ssid
          - wlan_id
          - ap
          - mac
          - client_family
          - client_manufacture
          - client_model
          - client_os
          title: Site Client Sessions count distinct
          type: string
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_band'
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWirelessClientSessions
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/sessions/search:
    get:
      description: Search Client Sessions
      operationId: searchSiteWirelessClientSessions
      parameters:
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_band'
      - description: "E.g. \u201CMac\u201D, \u201CiPhone\u201D, \u201CApple watch\u201D"
        in: query
        name: client_family
        schema:
          type: string
      - description: "E.g. \u201CApple\u201D"
        in: query
        name: client_manufacture
        schema:
          type: string
      - description: "E.g. \u201C8+\u201D, \u201CXS\u201D"
        in: query
        name: client_model
        schema:
          type: string
      - description: Username
        in: query
        name: client_username
        schema:
          type: string
      - description: "E.g. \u201CMojave\u201D, \u201CWindows 10\u201D, \u201CLinux\u201D"
        in: query
        name: client_os
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: wlan_id
        in: query
        name: wlan_id
        schema:
          type: string
      - $ref: '#/components/parameters/psk_id_query'
      - description: PSK Name
        in: query
        name: psk_name
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWirelessClientSessions
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/clients/unauthorize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "This unauthorize clients (if they are guest) and disconnect them.\
        \ From the guest\u2019s perspective, they will see the splash page again and\
        \ go through the flow (e.g. Terms of Use) again."
      operationId: unauthorizeSiteMultipleClients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unauthorizeSiteMultipleClients
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/clients/{client_mac}/coa:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: Trigger a CoA (change of authorization) against a client
      operationId: reauthSiteDot1xWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: reauthSiteDot1xWirelessClient
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/clients/{client_mac}/disconnect:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: "This disconnect a client (and it\u2019s likely to connect back)"
      operationId: disconnectSiteWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: disconnectSiteWirelessClient
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/clients/{client_mac}/events:
    get:
      description: Get the list of events for a specific client
      operationId: getSiteEventsForClient
      parameters:
      - description: e.g. MARVIS_EVENT_CLIENT_DHCP_STUCK
        in: query
        name: type
        schema:
          type: string
      - $ref: '#/components/parameters/dot11_proto'
      - $ref: '#/components/parameters/dot11_band'
      - in: query
        name: channel
        schema:
          type: string
      - in: query
        name: wlan_id
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ClientEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteEventsForClient
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/clients/{client_mac}/unauthorize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    post:
      description: "This unauthorize a client (if it\u2019s a guest) and disconnect\
        \ it. From the guest\u2019s perspective, s/he will see the splash page again\
        \ and go through the flow (e.g. Terms of Use) again."
      operationId: unauthorizeSiteWirelessClient
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unauthorizeSiteWirelessClient
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/deviceprofiles/derived:
    get:
      description: Retrieves the list of Device Profiles available for the Site
      operationId: listSiteDeviceProfilesDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/DeviceprofilesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDeviceProfilesDerived
      tags:
      - Sites Device Profiles
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices:
    get:
      description: Get list of devices on the site.
      operationId: listSiteDevices
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type_with_all'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/DevicesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDevices
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/ap_channels:
    get:
      description: Get a list of allowed channels (per channel width)
      operationId: getSiteDeviceRadioChannels
      parameters:
      - description: country code for the site (for AP config generation), in [two-character](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        example: US
        in: query
        name: country_code
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DeviceRadioChannels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceRadioChannels
      tags:
      - Sites Devices - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/config_history/count:
    get:
      description: Counts the number of entries in device config history for distinct
        field with given filters
      operationId: countSiteDeviceConfigHistory
      parameters:
      - in: query
        name: distinct
        schema:
          title: Site Device Config History count distinct
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteDeviceConfigHistory
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/config_history/search:
    get:
      description: Search for entries in device config history
      operationId: searchSiteDeviceConfigHistory
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: Device MAC Address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ConfigsHistorySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDeviceConfigHistory
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/count:
    get:
      description: Counts the number of entries in ap events history for distinct
        field with given filters
      operationId: countSiteDevices
      parameters:
      - in: query
        name: distinct
        schema:
          default: model
          enum:
          - model
          - version
          - map_id
          - hostname
          - mxtunnel_status
          - mxedge_id
          - lldp_system_name
          - lldp_system_desc
          - lldp_port_id
          - lldp_mgmt_addr
          title: Site Devices count distinct
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: mxtunnel_status
        schema:
          type: string
      - in: query
        name: mxedge_id
        schema:
          type: string
      - in: query
        name: lldp_system_name
        schema:
          type: string
      - in: query
        name: lldp_system_desc
        schema:
          type: string
      - in: query
        name: lldp_port_id
        schema:
          type: string
      - in: query
        name: lldp_mgmt_addr
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteDevices
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/events/count:
    get:
      description: Counts the number of entries in ap events history for distinct
        field with given filters
      operationId: countSiteDeviceEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: model
          enum:
          - model
          - type
          - type_code
          - mac
          title: Site Device Events count distinct
          type: string
      - in: query
        name: model
        schema:
          type: string
      - $ref: '#/components/parameters/device_event_type'
      - in: query
        name: type_code
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteDeviceEvents
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/events/search:
    get:
      description: Search Devices Events
      operationId: searchSiteDeviceEvents
      parameters:
      - description: device mac
        in: query
        name: mac
        schema:
          type: string
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: event message
        in: query
        name: text
        schema:
          type: string
      - description: event time
        in: query
        name: timestamp
        schema:
          type: string
      - $ref: '#/components/parameters/device_event_type'
      - description: Return last/recent event for passed in field
        example: port_id
        in: query
        name: last_by
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsDevices'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDeviceEvents
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/export:
    get:
      description: To download the exported device information
      operationId: exportSiteDevices
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: exportSiteDevices
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Import Information for Multiple Devices


        CSV format:

        ```csv

        mac,name,map_id,x,y,height,orientation,labels,band_24.power,band_24.bandwidth,band_24.channel,band_24.disabled,band_5.power,band_5.bandwidth,band_5.channel,band_5.disabled,band_6.power,band_6.bandwidth,band_6.channel,band_6.disabled

        5c5b53010101,"AP 1",845a23bf-bed9-e43c-4c86-6fa474be7ae5,30,10,2.3,45,"guest,
        campus, vip",1,20,0,false,0,40,0,false,17,80,0,false

        ```'
      operationId: importSiteDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ap_import_json'
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/binary_stream'
      responses:
        '200':
          $ref: '#/components/responses/DevicesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteDevices
      tags:
      - Sites Devices
  /api/v1/sites/{site_id}/devices/last_config/count:
    get:
      description: Counts the number of entries in device config history for distinct
        field with given filters
      operationId: countSiteDeviceLastConfig
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - version
          - name
          - site_id
          - mac
          title: Site Device Last Config count distinct
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteDeviceLastConfig
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/last_config/search:
    get:
      description: Search Device Last Configs
      operationId: searchSiteDeviceLastConfigs
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ConfigsHistorySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDeviceLastConfigs
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/reprovision:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: To force all APs to reprovision itself again.
      operationId: reprovisionSiteAllAps
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: reprovisionSiteAllAps
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/devices/reset_radio_config:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Reset all APs in the Site to use RRM
      operationId: resetSiteAllApsToUseRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                  - '24'
                  - '5'
                  - '6'
                  force: false
            schema:
              $ref: '#/components/schemas/utils_reset_radio_config'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: resetSiteAllApsToUseRrm
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/devices/restart:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Note that only the devices that are connected will be restarted.
      operationId: multiRestartSiteDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_ids:
                  - 00000000-0000-0000-1000-5c5b35584a6f
                  - 00000000-0000-0000-1000-5c5b350ea3b3
              example-2:
                value:
                  device_ids:
                  - 421f6eca-6276-4893-bfeb-53cbbbba6f02
                  node: node0
            schema:
              $ref: '#/components/schemas/utils_devices_restart_multi'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: multiRestartSiteDevices
      tags:
      - Sites Devices
  /api/v1/sites/{site_id}/devices/search:
    get:
      description: Search Device
      operationId: searchSiteDevices
      parameters:
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: device model
        in: query
        name: model
        schema:
          type: string
      - description: device MAC
        in: query
        name: mac
        schema:
          type: string
      - description: version
        in: query
        name: version
        schema:
          type: string
      - description: power_constrained
        in: query
        name: power_constrained
        schema:
          type: boolean
      - $ref: '#/components/parameters/ip'
      - description: MxTunnel status, up / down
        in: query
        name: mxtunnel_status
        schema:
          enum:
          - up
          - down
          type: string
      - description: Mist Edge id, if AP is connecting to a Mist Edge
        in: query
        name: mxedge_id
        schema:
          format: uuid
          type: string
      - description: LLDP system name
        in: query
        name: lldp_system_name
        schema:
          type: string
      - description: LLDP system description
        in: query
        name: lldp_system_desc
        schema:
          type: string
      - description: LLDP port id
        in: query
        name: lldp_port_id
        schema:
          type: string
      - description: LLDP management ip address
        in: query
        name: lldp_mgmt_addr
        schema:
          type: string
      - description: Channel of band_24
        in: query
        name: band_24_channel
        schema:
          type: integer
      - description: Channel of band_5
        in: query
        name: band_5_channel
        schema:
          type: integer
      - description: Channel of band_6
        in: query
        name: band_6_channel
        schema:
          type: integer
      - description: Bandwidth of band_24
        in: query
        name: band_24_bandwith
        schema:
          type: integer
      - description: Bandwidth of band_5
        in: query
        name: band_5_bandwith
        schema:
          type: integer
      - description: Bandwidth of band_6
        in: query
        name: band_6_bandwith
        schema:
          type: integer
      - description: Port speed of eth0
        in: query
        name: eth0_port_speed
        schema:
          type: integer
      - description: sort options
        in: query
        name: sort
        schema:
          default: timestamp
          enum:
          - timestamp
          - mac
          - model
          - sku
          type: string
      - description: sort options in reverse order
        in: query
        name: desc-sort
        schema:
          enum:
          - timestamp
          - mac
          - model
          - sku
          type: string
      - description: whether to return device stats
        in: query
        name: stats
        schema:
          default: false
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DevicesSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDevices
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/send_ble_beacon:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Send arbitrary BLE Beacon for a period of time


        Note that only the devices that are connected will be restarted.'
      operationId: sendSiteDevicesArbitratryBleBeacon
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  beacon_frame: 68b329da9893e34099c7d8ad5cb9c940
                  beacon_freq: 100
                  duration: 10
                  macs:
                  - 5c5b35584a6f
                  - 5c5b350ea3b3
                  map_ids:
                  - 845a23bf-bed9-e43c-4c86-6fa474be7ae5
            schema:
              $ref: '#/components/schemas/utils_send_ble_beacon'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: sendSiteDevicesArbitratryBleBeacon
      tags:
      - Utilities Location
  /api/v1/sites/{site_id}/devices/upgrade:
    get:
      description: Get all upgrades for site
      operationId: listSiteDevicesUpgrade
      parameters:
      - in: query
        name: status
        schema:
          enum:
          - downloading
          - completed
          - created
          - downloaded
          - upgrading
          - cancelled
          - failed
          title: site_device_upgrade_status_filter
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DeviceUpgradeArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDevicesUpgrade
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Upgrade Multiple Device\n\n**Note**: this call doesn\u2019t guarantee\
        \ the devices to be upgraded right away (they may be offline)"
      operationId: multiUpgradeSiteDevices
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  canary_phases:
                  - 1
                  - 10
                  - 50
                  - 100
                  device_ids:
                  - string
                  enable_p2p: true
                  force: false
                  max_failure_percentage: 5
                  max_failures:
                  - 0
                  models:
                  - string
                  start_time: 0
                  strategy: big_bang
                  version: stable
            schema:
              $ref: '#/components/schemas/device_upgrade_site_multi'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/DeviceUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: multiUpgradeSiteDevices
      tags:
      - Utilities Upgrade
  /api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}:
    get:
      description: Get Site Device Upgrade
      operationId: getSiteUpgrade
      responses:
        '200':
          $ref: '#/components/responses/DeviceUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteUpgrade
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/upgrade_id'
  /api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}/cancel:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/upgrade_id'
    post:
      description: Best effort to cancel an upgrade. Devices which are already upgraded
        wont be touched
      operationId: cancelSiteDeviceUpgrade
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: cancelSiteDeviceUpgrade
      tags:
      - Utilities Upgrade
  /api/v1/sites/{site_id}/devices/upgrade_bios:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Upgrade Bios on Multiple Device
      operationId: upgradeSiteMultipleDevicesBios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upgrade_bios_multi'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteMultipleDevicesBios
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/upgrade_fpga:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Upgrade Bios on Multiple Device
      operationId: upgradeSiteMultipleDevicesFpga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upgrade_fpga_multi'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteMultipleDevicesFpga
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/versions:
    get:
      description: Get List of Available Device Versions
      operationId: listSiteAvailableDeviceVersions
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type'
      - description: fetch version for device model, use/combine with `type` as needed
          (for switch and gateway devices)
        in: query
        name: model
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DeviceVersion'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAvailableDeviceVersions
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/devices/zeroize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Zeroize all FIPS APs in the Site
      operationId: zeroizeSiteFipsAllAps
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  password: NUKETHESITE
            schema:
              $ref: '#/components/schemas/utils_zeroise_fips'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: zeroizeSiteFipsAllAps
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/devices/{device_id}:
    delete:
      description: Delete Site Device
      operationId: deleteSiteDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteDevice
      tags:
      - Sites Devices
    get:
      description: Get Device Configuration
      operationId: getSiteDevice
      responses:
        '200':
          $ref: '#/components/responses/Device'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDevice
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: Update Device Configuration
      operationId: updateSiteDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mist_device'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Device'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteDevice
      tags:
      - Sites Devices
  /api/v1/sites/{site_id}/devices/{device_id}/arp:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "ARP can be performed on the Device. The output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ AP at the same time and the output all goes through the same websocket stream,\
        \ session is introduced for demux.\n\n\n#### Subscribe to Device Command outputs\n\
        `WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n##### Example output from ws stream\n```json\n{ \n \"event\": \"\
        data\", \n \"channel\": \"/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd\"\
        , \n \"data\": { \n   \"session\": \"session_id\", \n   \"raw\": \n   \"Output\"\
        : \"\\tMAC\\t\\tDEV\\tVLAN\\tRx Packets\\t\\t Rx Bytes\\t\\tTx Packets\\t\\\
        t Tx Bytes\\tFlows\\tIdle sec\\n-----------------------------------------------------------------------------------------------------------------------\"\
        \n  } \n}\n```"
      operationId: arpFromDevice
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
            schema:
              $ref: '#/components/schemas/ha_cluster_node'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: arpFromDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/bounce_port:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Port Bounce can be performed from the Switch.The output will be\
        \ available through websocket. As there can be multiple command issued against\
        \ the same AP at the same time and the output all goes through the same websocket\
        \ stream, session is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n##### Example output from ws stream\n```json\n{\n    \"event\":\
        \ \"data\",\n    \"channel\": \"/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd\"\
        ,\n    \"data\": {\n        \"session\": \"session_id\",\n        \"raw\"\
        : \"Port bounce complete.\"\n    }\n}\n```"
      operationId: portsBounceFromSwitch
      requestBody:
        content:
          application/json:
            examples:
              multiple:
                value:
                  ports:
                  - ge-0/0/0
                  - ge-0/0/1
              single:
                value:
                  port: ge-0/0/0
            schema:
              $ref: '#/components/schemas/utils_bounce_port'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: portsBounceFromSwitch
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/cable_test:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "TDR can be performed from the Switch. The output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ Switch at the same time and the output all goes through the same websocket\
        \ stream, session is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n##### Example output from ws stream\n```json\n{\n    \"event\":\
        \ \"data\",\n    \"channel\": \"/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd\"\
        ,\n    \"data\": {\n        \"session\": \"session_id\",\n        \"raw\"\
        : \"Interface TDR detail:\\nTest status : Test successfully executed  ge-0/0/0\\\
        n\"\n    }\n}\n```"
      operationId: cableTestFromSwitch
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  port: ge-0/0/0
            schema:
              $ref: '#/components/schemas/utils_cable_test'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: cableTestFromSwitch
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/check_radius_server:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Ping test from the AP to confirm \u2018reachability\u2019 of the\
        \ Radius server. Utilize Juniper EX switch(to which an AP is connected to)\
        \ radius test capabilities to get details on the Radius Server \u2018availability\u2019\
        ."
      operationId: startSiteSwitchRadiusSyntheticTest
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  password: string
                  profile: dot1x
                  user: string
            schema:
              $ref: '#/components/schemas/synthetic_test_radius_server'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: triggerSiteSwitchRadiusSyntheticTest
      tags:
      - Sites Synthetic Tests
  /api/v1/sites/{site_id}/devices/{device_id}/clear_arp:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: 'Clear ARP cache for SSR, SRX and Switch


        Clear the entire ARP cache or a subset if arguments are provided.


        *Note*: port_id is optional if neither vlan nor ip is specified'
      operationId: clearSiteSsrArpCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_clear_arp'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          description: 'port_id must be specified with vlan or ip

            Both vlan and ip cannot be specified'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteSsrArpCache
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/clear_bgp:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Clear routes associated with one or all BGP neighbors
      operationId: clearSiteSsrBgpRoutes
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  neighbor: all
                  type: in
                  vrf: TestVrf
            schema:
              $ref: '#/components/schemas/utils_clear_bgp'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          description: parameter neighbor absent
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteBgpRoutes
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/clear_bpdu_error:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Clear bridge protocol data unit (BPDU) error condition caused by
        the detection of a possible bridging loop from Spanning Tree Protocol (STP)
        operation that renders the port unoperational.
      operationId: clearBpduErrosFromPortsOnSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_clear_bpdu'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: Port not specified
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearBpduErrosFromPortsOnSwitch
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/clear_mac_table:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Clear MAC Table from the Device.\n\nThe output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ device at the same time and the output all goes through the same websocket\
        \ stream, `session` is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n"
      operationId: clearSiteDeviceMacTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_mac_table'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteDeviceMacTable
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/clear_macs:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Clear all learned MAC addresses, including persistent MAC addresses,
        on a port.
      operationId: clearAllLearnedMacsFromPortOnSwitch
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ports:
                  - ge-0/0/0.0
            schema:
              $ref: '#/components/schemas/utils_clear_macs'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearAllLearnedMacsFromPortOnSwitch
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/config_cmd:
    get:
      description: 'Get Config CLI Commands

        For a brown-field switch deployment where we adopted the switch through Adoption
        Command, we do not wipe out / overwrite the existing config automatically.
        Instead, we generate CLI commands that we would have generated. The user can
        inspect, modify, and incorporate this into their existing config manually.


        Once they feel comfortable about the config we generate, they can enable allow_mist_config
        where we will take full control of their config like a claimed switch'
      operationId: getSiteDeviceConfigCmd
      parameters:
      - description: Make output cmds sorted (for better readability) or not.
        in: query
        name: sort
        schema:
          default: 'false'
          enum:
          - 'true'
          - 'false'
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DeviceConfigCmd'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceConfigCmd
      tags:
      - Utilities Common
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
  /api/v1/sites/{site_id}/devices/{device_id}/ha:
    delete:
      description: Delete HA Cluster
      operationId: deleteSiteDeviceHaCluster
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteDeviceHaCluster
      tags:
      - Sites Devices - WAN Cluster
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "## Create HA Cluster\nBoth nodes has to be in the same site. We\
        \ expect the user to configure ha_sync / ha_data port in port_configs already\n\
        \n### SRX cabling\n\nsee [Chassis Cluster User Guide for SRX Series Devices](https://www.juniper.net/documentation/us/en/software/junos/chassis-cluster-security-devices/topics/concept/chassis-cluster-srx-series-node-interface-understanding.html)\
        \ Here\u2019s the recommended cabling.\n\n#### SRX300\n\nFrom ZTP / default\
        \ state, ge-0/0/0 and ge-0/0/7 (SFP) are default WAN ports and will get DHCP\
        \ IP. However, ge-0/0/0 becomes OOB/fxp0 after cluster is enabled (i.e. using\
        \ it for reach Mist is not recommended)\n\n1.  form cluster in UI\n2.  configure\
        \ ge-0/0/7,ge-1/0/7 for WAN (reth0)\n3.  configure ge-0/0/2,ge-1/0/2 for ha_data\n\
        4.  configure ge-0/0/3- for LAN or additional WAN e.g.\n    \n\n``` json\n\
        {\n    \"port_config\": {\n        \"ge-0/0/2,ge-1/0/2\": {\n            \"\
        usage\": \"ha_data\"\n        },\n        \"ge-0/0/7,ge-1/0/7\": {\n     \
        \       \"usage\": \"wan\",\n            \"redundant\": true,\n          \
        \  \"reth_idx\": 0,\n            \"ip_config\": {\"type\": \"dhcp\"}\n   \
        \     },\n    }\n}\n\n```\n\n1.  connect ge-0/0/1 back to back for ha_control\n\
        2.  connect ge-0/0/2 back to back for ha_data\n3.  connect both ge-0/0/7 to\
        \ uplink switch to WAN and to reach Mist\n4.  power up both devices\n5.  it\
        \ takes about 30 minutes for the cluster to form\n    \n\n#### SRX320\n\n\
        From ZTP / default state, ge-0/0/0, ge-0/0/7 (SFP) and cl-1/0/0 (LTE) are\
        \ default WAN ports and will get DHCP IP. However, ge-0/0/0 becomes OOB/fxp0\
        \ after cluster is enabled (i.e. using it for reach Mist is not recommended)\n\
        \n##### ZTP via ge-0/0/7\n\nSimilar to SRX300\n\n##### ZTP via cl-1/0/0 (LTE)\n\
        \n1.  form cluster in UI\n2.  configure cl-1/0/0, cl-3/0/0 as WAN (reth0)\n\
        3.  configure ge-0/0/2,ge-3/0/2 for ha_data\n4.  same as above\n    \n\n####\
        \ SRX340 / SRX345 / SRX380\n\nSRX340/SRX345 has dedicated OOB/fxp0 ports\n\
        \n1.  form cluster in UI\n2.  configure ge-0/0/0,ge-5/0/0 for WAN (reth0)\n\
        3.  configure ge-0/0/2,ge-5/0/2 for ha_data\n4.  configure ge-0/0/3- for LAN\
        \ or additional WAN\n5.  connect ge-0/0/0 to uplink switch to WAN and to reach\
        \ Mist\n6.  connect ge-0/0/1 back-to-back for ha_control\n7.  connect ge-0/0/2\
        \ back-to-back for ha_data (fabric); or for SRX380, xe-0/0/16 if 10G SFP+\
        \ is used\n8.  connect ge-0/0/3- to LAN or additional WANs\n    \n\n#### SRX550\n\
        \nge-0/0/0 becomes OOB/fxp0 after cluster is enabled, make suenable oob_ip_config\
        \ as dhcp to maintain cloud connectivity\n\n1.  connect ge-0/0/0 to reach\
        \ Mist (after cluster is fully up, this port becomes OOB/fxp0)\n2.  connect\
        \ ge-0/0/1 back-to-back for ha_control\n3.  connect ge-0/0/2 back-to-back\
        \ for ha_data (fabric)\n4.  connect ge-0/0/3 to WAN (after cluster is up,\
        \ intended to be used for reth0)\n5.  connect ge-0/0/4- to LAN or additional\
        \ WANs\n    \n\n#### SRX1500\n\nSRX1500 has, additionally, dedicated HA Control\
        \ port\n\n1.  form cluster in UI\n2.  configure ge-0/0/0,ge-5/0/0 for WAN\
        \ (reth0)\n3.  configure ge-0/0/1,ge-5/0/1 for ha_data\n4.  configure ge-0/0/2-\
        \ for LAN or additional WAN\n5.  connect dedicated ha_control back-to-back\n\
        6.  connect ge-0/0/0 to uplink switch to WAN and to reach Mist\n7.  connect\
        \ ge-0/0/1 back-to-back for ha_data\n8.  connect ge-0/0/2- to LAN or additional\
        \ WANs\n    \n\n#### SRX4100\n\nSRX4100 has dedicated ha_control and ha_data\
        \ (fabric) ports\n\n1.  connect dedicated ha_control back-to-back\n2.  connect\
        \ dedicated ha_data back-to-back\n3.  connect xe-0/0/0 to WAN to reach Mist\n\
        4.  connect xe-0/0/1- to LAN or additional WANs\n    \n\n#### VSRX\n\nWhen\
        \ standalone, VSRX has fxp0 as first Network Adapter, then ge-0/0/0-N When\
        \ clustered, VSRX has fxp0, em0, then ge-0/0/0-N\n\n1.  connect net0 (fxp0)\
        \ to WAN to reach Mist\n2.  connect net1 back-to-back for ha_control\n3. \
        \ connect net2 (ge-0/0/0) back-to-back for ha_data (fab0/fab1)\n4.  connect\
        \ net3 (ge-0/0/1) to WAN, intended to be used for reth0\n5.  connect net4\
        \ (ge-0/0/2) to LAN\n    \n\nSRX340/SRX345 has dedicated OOB/fxp0 ports VSRX\
        \ has fxp0 as first Network Adapter, then ge-0/0/0-N\n\n1.  connect ge-0/0/0\
        \ to WAN to reach Mist\n2.  connect ge-0/0/1 back-to-back for ha_control\n\
        3.  connect ge-0/0/2 back-to-back for ha_data (fabric); or for SRX380, xe-0/0/16\
        \ if 10G SFP+ is used\n4.  connect ge-0/0/3- to LAN or additional WANs\n \
        \   \n\n#### SRX550\n\nge-0/0/0 becomes OOB/fxp0 after cluster is enabled,\
        \ make suenable oob_ip_config as dhcp to maintain cloud connectivity\n\n1.\
        \  connect ge-0/0/0 to reach Mist (after cluster is fully up, this port becomes\
        \ OOB/fxp0)\n2.  connect ge-0/0/1 back-to-back for ha_control\n3.  connect\
        \ ge-0/0/2 back-to-back for ha_data (fabric)\n4.  connect ge-0/0/3 to WAN\
        \ (after cluster is up, intended to be used for reth0)\n5.  connect ge-0/0/4-\
        \ to LAN or additional WANs\n    \n\n#### SRX1500\n\nSRX1500 has, additionally,\
        \ dedicated HA Control port\n\n1. form cluster in UI\n2. configure ge-0/0/0,ge-7/0/0\
        \ for WAN (reth0)\n3. configure ge-0/0/1,ge-7/0/1 for ha_data\n4. configure\
        \ ge-0/0/2- for LAN or additional WAN\n5. connect dedicated ha_control back-to-back\n\
        6. connect ge-0/0/0 to uplink switch to WAN and to reach Mist\n7. connect\
        \ ge-0/0/1 back-to-back for ha_data\n8. connect ge-0/0/2- to LAN or additional\
        \ WANs\n\n    \n#### SRX1600\n\nSRX1600 has, additionally, two dedicated HA\
        \ Control port\n\n1. form cluster in UI\n2. configure ge-0/0/0,ge-7/0/0 for\
        \ WAN (reth0)\n3. configure ge-0/0/1,ge-7/0/1 for ha_data\n4. configure ge-0/0/2-\
        \ for LAN or additional WAN\n5. connect dedicated both ha_control back-to-back\n\
        6. connect ge-0/0/0 to uplink switch to WAN and to reach Mist\n7. connect\
        \ ge-0/0/1 back-to-back for ha_data\n8. connect ge-0/0/2- to LAN or additional\
        \ WANs\n\n\n#### SRX4100\n\nSRX4100 has dedicated ha_control and ha_data (fabric)\
        \ ports\n\n1.  connect dedicated ha_control back-to-back\n2.  connect dedicated\
        \ ha_data back-to-back\n3.  connect xe-0/0/0 to WAN to reach Mist\n4.  connect\
        \ xe-0/0/1- to LAN or additional WANs\n\n\n## Replace a Node in a HA Cluster\n\
        Usually Device Replacement is done by Device Replacement API. For a HA cluster,\
        \ you can also replace a node by another device in the same site."
      operationId: createSiteDeviceHaCluster
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  nodes:
                  - mac: aff827549235
                  - mac: 8396cd006c8c
            schema:
              $ref: '#/components/schemas/gateway_cluster_form'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteDeviceHaCluster
      tags:
      - Sites Devices - WAN Cluster
    put:
      deprecated: true
      description: Swap nodes on the HA Cluster
      operationId: swapSiteDeviceHaClusterNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_cluster_swap'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: swapSiteDeviceHaClusterNode
      tags:
      - Sites Devices - WAN Cluster
  /api/v1/sites/{site_id}/devices/{device_id}/image{image_number}:
    delete:
      description: Delete image from a device
      operationId: deleteSiteDeviceImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteDeviceImage
      tags:
      - Sites Devices
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    - in: path
      name: image_number
      required: true
      schema:
        type: integer
    post:
      description: Attach up to 3 images to a device
      operationId: addSiteDeviceImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/image_import'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addSiteDeviceImage
      tags:
      - Sites Devices
  /api/v1/sites/{site_id}/devices/{device_id}/iot:
    get:
      description: Returns the current state of each enabled IoT pin configured as
        an output.
      operationId: getSiteDeviceIotPort
      responses:
        '200':
          $ref: '#/components/responses/DeviceIot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceIotPort
      tags:
      - Sites Devices - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: "**Note**: For each IoT pin referenced:\n * The pin must be enabled\
        \ using the Device `iot_config` API\n * The pin must support the output direction"
      operationId: setSiteDeviceIotPort
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: integer
              description: Property key is the IoT port name (e.g A0)
              example:
                A1: 1
                DO: 0
              type: object
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/DeviceIot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setSiteDeviceIotPort
      tags:
      - Sites Devices - Wireless
  /api/v1/sites/{site_id}/devices/{device_id}/local_port_config:
    delete:
      description: Sometimes HelpDesk Admin needs to change port configs
      operationId: deleteSiteLocalSwitchPortConfig
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteLocalSwitchPortConfig
      tags:
      - Sites Devices - Wired
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: Sometimes HelpDesk Admin needs to change port configs
      operationId: updateSiteLocalSwitchPortConfig
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  ae_disable_lacp: true
                  ae_idx: 0
                  aggregated: false
                  description: string
                  disable_autoneg: true
                  duplex: auto
                  dynamic_usage: string
                  esilag: true
                  poe_disabled: true
                  speed: auto
                  usage: string
            schema:
              $ref: '#/components/schemas/junos_port_config'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteLocalSwitchPortConfig
      tags:
      - Sites Devices - Wired
  /api/v1/sites/{site_id}/devices/{device_id}/locate:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "### Access Points\nLocate an Access Point by blinking it's LED.\n\
        It is a persisted state that has to be stopped by calling Stop Locating API\n\
        \n### Switches\nLocate a Switch by blinking all port LEDs. \nBy default, request\
        \ is sent to `master` switch and LEDs will keep flashing for 5 minutes.\n\
        In case of virtual chassis (VC) the desired member mac has to be passed in\
        \ the request payload. \nAt anypoint, only one VC member can be requested\
        \ to flash the LED. \nTo stop LED flashing before the duration ends /unlocate\
        \ API request can be made. \nIf /unlocate API is not called LED will continue\
        \ to flash on device for the given duration. \nDefault duration is 5 minutes\
        \ and 120 minutes is the maximum."
      operationId: startSiteLocateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locate_switch'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteLocateDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/monitor_traffic:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Monitor traffic on switches and SRX.\n\nJUNOS uses cmd \u201C\
        monitor interface\u201D to monitor traffic on particular JUNOS uses cmd \u201C\
        monitor interface traffic\u201D to monitor traffic on all ports"
      operationId: monitorSiteDeviceTraffic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_monitor_traffic'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSessionWithUrl'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: monitorSiteDeviceTraffic
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/ping:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Ping from AP, Switch and SSR\n\nPing can be performed from the\
        \ Device. The output will be available through websocket. As there can be\
        \ multiple command issued against the same AP at the same time and the output\
        \ all goes through the same websocket stream, session is introduced for demux.\n\
        \n#### Subscribe to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n\
        {\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```\n\
        ##### Example output from ws stream\n```json\n{\n    \"event\": \"data\",\n\
        \    \"channel\": \"/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd\"\
        ,\n    \"data\": {\n        \"session\": \"session_id\",\n        \"raw\"\
        : \"64 bytes from 23.211.0.110: seq=8 ttl=58 time=12.323 ms\\n\"\n    }\n\
        }\n```"
      operationId: pingFromDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  count: 10
                  host: 1.1.1.1
            schema:
              $ref: '#/components/schemas/utils_ping'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: pingFromDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/poll_stats:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: This API can be used to poll statistics from the Switch proactively
        once. After it is called, the statistics will be pushed back to the cloud
        within the statistics interval.
      operationId: pollSiteSwitchStats
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: pollSiteSwitchStats
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/readopt:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: For the octerm devices, the device ID must come from fpc0. However,
        for a VC, the users may change the original fpc0 from CLI. To fix the issue,
        the readopt API could be used to trigger the readopt process so the device
        would get the corret device ID to connect the cloud.
      operationId: readoptSiteOctermDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: readoptSiteOctermDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/release_dhcp:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Releases an active DHCP lease.
      operationId: releaseSiteSsrDhcpLease
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  port: string
            schema:
              $ref: '#/components/schemas/utils_release_dhcp'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: Parameter `port ` absent
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: releaseSiteSsrDhcpLease
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/reprovision:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: To force one device to reprovision itself again.
      operationId: reprovisionSiteOctermDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: readoptSiteOctermDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/request_ztp_password:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: In the case where soemthing happens during/after ZTP, the root-password
        is modified (required for ZTP to set up outbound-ssh) but the user-defined
        password config has not be configured. This API can be used to retrieve the
        temporary password.
      operationId: getSiteDeviceZtpPassword
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    root_password: ef8070ef8f924edb592e1819ed64b31172ab8de9d5cde75d3f46acd9506202ab9b1cbb97e381c5aa11037f17e5ed7b4b609461cd813d944670549d410ef82f2e
              schema:
                $ref: '#/components/schemas/root_password'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceZtpPassword
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/resolve_dns:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "DNS resolutions are performed on the Device.\n\nThe output will\
        \ be available through websocket. As there can be multiple command issued\
        \ against the same SSR at the same time and the output all goes through the\
        \ same websocket stream, `session` is used for demux.\n \n #### Subscribe\
        \ to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"\
        subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```\n##### Example\
        \ output from ws stream\n```\n Router      | Hostname               | Resolved\
        \ | Last Resolved        | Expiration\n-------------|------------------------|----------|----------------------|---------------------\n\
        \ test-device | xxx.yyy.net            | Y        | 2022-03-28T03:56:49Z |\
        \ 2022-03-28T03:57:49Z\n```"
      operationId: testSiteSsrDnsResolution
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: testSiteSsrDnsResolution
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/restart:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Restart / Reboot a device
      operationId: restartSiteDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_devices_restart'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: restartSiteDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/service_ping:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Ping from SSR\n\nService Ping can be performed from the Device.\
        \ The output will be available through websocket. As there can be multiple\
        \ command issued against the same device at the same time and the output all\
        \ goes through the same websocket stream, session is introduced for demux.\n\
        \n#### Subscribe to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n\
        {\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```\n\
        ##### Example output from ws stream\n```json\n{\n    \"event\": \"data\",\n\
        \    \"channel\": \"/sites/4ac1dcf4-9d8b-7211-65c4-057819f0862b/devices/00000000-0000-0000-1000-5c5b350e0060/cmd\"\
        ,\n    \"data\": {\n        \"session\": \"session_id\",\n        \"raw\"\
        : \"64 bytes from 23.211.0.110: seq=8 ttl=58 time=12.323 ms\\n\"\n    }\n\
        }\n```"
      operationId: servicePingFromSsr
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  count: 10
                  host: 1.1.1.1
                  service: web-session
            schema:
              $ref: '#/components/schemas/utils_service_ping'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: servicePingFromSsr
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/shell:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Create Shell Session
      operationId: createSiteDeviceShellSession
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSessionWithUrl'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteDeviceShellSession
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/show_arp:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get ARP Table from the Device.\n\nThe output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ device at the same time and the output all goes through the same websocket\
        \ stream, `session` is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n"
      operationId: getSiteDeviceArpTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_show_arp'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceArpTable
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/show_bgp_rummary:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get BGP Summary from SSR, SRX and Switch.\n\n\nThe output will\
        \ be available through websocket. As there can be multiple command issued\
        \ against the same device at the same time and the output all goes through\
        \ the same websocket stream, `session` is introduced for demux.\n\n#### Subscribe\
        \ to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \\\"\
        subscribe\\\": \\\"/sites/{site_id}/devices/{device_id}/cmd\\\"\\\n\n}\n```\n\
        \n##### Example output from ws stream\n```\nTue 2024-04-23 16:36:06 UTC\n\
        Retrieving bgp entries...\nBGP table version is 354, local router ID is 10.224.8.16,\
        \ vrf id 0\nDefault local pref 100, local AS 65000\nStatus codes:  s suppressed,\
        \ d damped, h history, * valid, > best, = multipath,\n              i internal,\
        \ r RIB-failure, S Stale, R Removed\nNexthop codes: @NNN nexthop's vrf id,\
        \ < announce-nh-self\nOrigin codes:  i - IGP, e - EGP, ? - incomplete\nRPKI\
        \ validation codes: V valid, I invalid, N Not found\n\n  Network         \
        \                             Next Hop                                  Metric\
        \ LocPrf Weight Path\n*> 161.161.161.0/24\n```\""
      operationId: getSiteDeviceBgpSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_show_bgp_rummary'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceBgpSummary
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/show_evpn_database:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Get EVPN Database from the Device. The output will be available
        through websocket.
      operationId: getSiteDeviceEvpnDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_show_evpn_database'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceEvpnDatabase
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/show_mac_table:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get MAC Table from the Device.\n\nThe output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ device at the same time and the output all goes through the same websocket\
        \ stream, `session` is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n"
      operationId: getSiteDeviceMacTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_mac_table'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceMacTable
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/show_route:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get routes from SSR, SRX and Switch. \n\nThe output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ device at the same time and the output all goes through the same websocket\
        \ stream, `session` is introduced for demux.\n\n#### Subscribe to Device Command\
        \ outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\
        \n}\n```\n##### Example output from ws stream\n```\nadmin@labsystem1.fiedler#\
        \ show bgp neighbors\nBGP neighbor is 192.168.4.1, remote AS 4200000001, local\
        \ AS 4200000128, external\nlink\n  BGP version 4, remote router ID 1.1.1.1\n\
        \  BGP state = Established, up for 00:27:25\n  Last read 00:00:25, hold time\
        \ is 90, keepalive interval is 30 seconds\n  Configured hold time is 90, keepalive\
        \ interval is 30 seconds\n  Neighbor capabilities:\n    4 Byte AS: advertised\
        \ and received\n    Route refresh: advertised and received(old &amp; new)\n\
        \    Address family IPv4 Unicast: advertised and received\n    Graceful Restart\
        \ Capabilty: advertised and received\n      Remote Restart timer is 120 seconds\n\
        \      Address families by peer:\n        none\n        ...\n```"
      operationId: getSiteSsrAndSrxRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/utils_show_route'
        description: all attributes are optional
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceRoutes
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/show_service_path:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get service path information of the Device.\n\nThe output will\
        \ be available through websocket. As there can be multiple command issued\
        \ against the same device at the same time and the output all goes through\
        \ the same websocket stream, session is introduced for demux.\n\n\n#### Subscribe\
        \ to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"\
        subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```\n##### Example\
        \ output from ws stream\n```\nshow service-path\n\nService    Service-route\
        \     Type              Destination  Next-Hop  Interface  Vector  Cost  Rate\
        \  Capacity        State\n\nWeb        web-route1        service-agent   \
        \  4.4.4.4      1.1.1.2     lan        red     10    1    200/3000       Up*\n\
        Web        web-route1        service-agent     4.4.4.4      1.1.1.3     lan\
        \        red     10    1    200/3000       Up\nWeb        web-route2     \
        \   service-agent     5.5.5.5      2.2.2.2     lan       blue     20    2\
        \    50/unlimited   Down\nLogin      <None>            BgpOverSVR        10.1.1.1\
        \     1.2.3.4     wan        red     10    3        -          Up\nLogin \
        \     <None>            BgpOverSVR        11.1.1.1     1.2.3.4     wan   \
        \     red     10    1        -          Up\nApp1       <None>            Routed\
        \                -           -         -          -      -     -        -\
        \          -\nApp1       learned-routed    Routed                -       \
        \    -         -          -      -     -        -          -\n```"
      operationId: getSiteSsrServicePath
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  service_name: any
            schema:
              $ref: '#/components/schemas/utils_show_service_path'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSsrServicePath
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/show_session:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Get active sessions passing through the Device.\n\nThe output\
        \ will be available through websocket. As there can be multiple command issued\
        \ against the same device at the same time and the output all goes through\
        \ the same websocket stream, session is introduced for demux.\n\n#### Subscribe\
        \ to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"\
        subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```\n##### Example\
        \ output from ws stream\n```\nadmin@ssr.node# show sessions\nFri 2020-04-17\
        \ 16:55:34 UTC\n\nNode: node1\n\n====================================== =====\
        \ ============= =========== ========== ====== ======= ================= ==========\
        \ ================= =========== ================= ========== ===================\
        \ ========= =================\n Session Id                             Dir\
        \   Service       Tenant      Dev Name   VLAN   Proto   Src IP           \
        \ Src Port   Dest IP           Dest Port   NAT IP            NAT Port   Payload\
        \ Encrypted   Timeout   Uptime\n====================================== =====\
        \ ============= =========== ========== ====== ======= ================= ==========\
        \ ================= =========== ================= ========== ===================\
        \ ========= =================\n 01187fb8-765a-45e5-ae90-37d77f15e292   fwd\
        \   Internet      lanSubnet   lan           0   udp     192.168.0.28     \
        \    44674   35.166.173.18          9930   96.230.191.130       19569   false\
        \                   154   0 days  0:00:28\n 01187fb8-765a-45e5-ae90-37d77f15e292\
        \   rev   Internet      lanSubnet   wan           0   udp     35.166.173.18\
        \         9930   96.230.191.130        19569   0.0.0.0                  0\
        \   false                   154   0 days  0:00:28\n 0859a4ae-bcff-4aa6-b812-79a5236a6c13\
        \   fwd   Internet      lanSubnet   lan           0   tcp     192.168.0.41\
        \         60843   17.249.171.246          443   96.230.191.130       51941\
        \   false                     2   0 days  0:00:10\n\n```"
      operationId: getSiteSsrAndSrxSessions
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  node: node0
                  service_name: any
            schema:
              $ref: '#/components/schemas/utils_show_session'
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSsrAndSrxSessions
      tags:
      - Utilities WAN
  /api/v1/sites/{site_id}/devices/{device_id}/snapshot:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Create recovery device snapshot (Available on Junos OS EX2300-,
        EX3400-, EX4400- devices)
      operationId: createSiteDeviceSnapshot
      responses:
        '200':
          $ref: '#/components/responses/DeviceSnapshot'
        '400':
          content:
            application/json:
              examples:
                cannot-snapshot-an-offline-device:
                  value: cannot snapshot an offline device
                snapshot-not-supported:
                  value: snapshot not supported
              schema:
                type: string
          description: Bad Request
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteDeviceSnapshot
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/support:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Support / Upload device support files\n\n#### Info Param\n**Parameter**|**Description**\
        \ \n :-------------: |:-------------: |:-------------: \nprocess|Upload 1\
        \ file with output of show system processes extensive\noutbound-ssh|Upload\
        \ 1 file that concatenates all /var/log/outbound-ssh.log* files\nmessages|Upload\
        \ 1 to 10 /var/log/messages* files\ncore-dumps|Upload all core dump files,\
        \ if any\nfull|string|Upload 1 file with output of request support information,\
        \ 1 file that concatenates all /var/log/outbound-ssh.log files, all core dump\
        \ files, the 3 most recent /var/log/messages files, and Mist agent logs (for\
        \ Junos devices running the Mist agent)\nvar-logs|Upload all non-empty files\
        \ in the /var/log/ directory\njma-logs|Upload Mist agent logs (for Junos devices\
        \ running the Mist agent only)"
      operationId: uploadSiteDeviceSupportFile
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  info: full
            schema:
              $ref: '#/components/schemas/utils_send_support_logs'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: Device not online
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadSiteDeviceSupportFile
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/synthetic_test:
    get:
      description: Get Device Synthetic Test
      operationId: getSiteDeviceSyntheticTest
      responses:
        '200':
          description: scheduled
        '400':
          description: Device not online / Device not supported / Already in progress
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceSyntheticTest
      tags:
      - Sites Synthetic Tests
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Trigger Device Synthetic Test
      operationId: triggerSiteDeviceSyntheticTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/synthetic_test_device'
      responses:
        '200':
          description: scheduled
        '400':
          description: Device not online / Device not supported / Already in progress
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: triggerSiteDeviceSyntheticTest
      tags:
      - Sites Synthetic Tests
  /api/v1/sites/{site_id}/devices/{device_id}/traceroute:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "Traceroute can be performed from the Device.\n\nThe output will\
        \ be available through websocket. As there can be multiple command issued\
        \ against the same AP at the same time and the output all goes through the\
        \ same websocket stream, session is introduced for demux.\n\n#### Subscribe\
        \ to Device Command outputs\n`WS /api-ws/v1/stream`\n\n```json\n{\n    \"\
        subscribe\": \"/sites/{site_id}/devices/{device_id}/cmd\"\n}\n```"
      operationId: tracerouteFromDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  host: string
                  port: 33434
                  protocol: udp
            schema:
              $ref: '#/components/schemas/utils_traceroute'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/WebsocketSession'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: tracerouteFromDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/unlocate:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Stop Locate a Device
      operationId: stopSiteLocateDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopSiteLocateDevice
      tags:
      - Utilities Common
  /api/v1/sites/{site_id}/devices/{device_id}/upgrade:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Device Upgrade
      operationId: upgradeSiteDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  version: 3.1.5
            schema:
              $ref: '#/components/schemas/device_upgrade'
      responses:
        '200':
          $ref: '#/components/responses/UpgradeInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteDevice
      tags:
      - Utilities Upgrade
  /api/v1/sites/{site_id}/devices/{device_id}/upgrade_bios:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Upgrade device bios
      operationId: upgradeSiteDeviceBios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upgrade_bios'
      responses:
        '200':
          $ref: '#/components/responses/DeviceBiosUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteDeviceBios
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/upgrade_fpga:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Upgrade device fpga
      operationId: upgradeSiteDeviceFPGA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/upgrade_fpga'
      responses:
        '200':
          $ref: '#/components/responses/DeviceBiosUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteDeviceFPGA
      tags:
      - Utilities LAN
  /api/v1/sites/{site_id}/devices/{device_id}/vc:
    delete:
      description: "When all the member switches of VC are removed and only member\
        \ ID 0 is left, the cloud would detect this situation and automatically changes\
        \ the single switch to non-VC role.\n\nFor some unexpected cases that the\
        \ VC is gone and disconncted, the API below could be used to change the state\
        \ of VC\u2019s switches to be standalone. After it is executed, all the switches\
        \ will be shown as standalone switches under Inventory."
      operationId: deleteSiteVirtualChassis
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteVirtualChassis
      tags:
      - Sites Devices - Wired - Virtual Chassis
    get:
      description: 'Get VC Status


        The API returns a combined view of the VC status which includes topology and
        stats_'
      operationId: getSiteDeviceVirtualChassis
      responses:
        '200':
          $ref: '#/components/responses/VirtualChassis'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceVirtualChassis
      tags:
      - Sites Devices - Wired - Virtual Chassis
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: "For models (e.g. EX3400 and up) having dedicated VC ports, it\
        \ is easier to form a VC by just connecting cables with the dedicated VC ports.\
        \ Cloud will detect the new VC and update the inventory.\n\nIn case that the\
        \ user would like to choose the dedicated switch as a VC master. Or for EX2300-C-12P\
        \ and EX2300-C-12T which doesn\u2019t have dedicated VC ports, below are procedures\
        \ to automate the VC creation:\n\n1. Power on the switch that is choosen as\
        \ the VC master first. And the powering on the other member switches.\n2.\
        \ Claim or adopt all these switches under the same organization\u2019s Inventory\n\
        3. Assign these switches into the same Site\n4. Invoke vc command on the switch\
        \ choosen to be the VC master. For EX2300-C-12P, VC ports will be created\
        \ automatically.\n5. Connect the cables to the VC ports for these switches\n\
        6. Wait for the VC to be formed. The Org\u2019s inventory will be updated\
        \ for the new VC."
      operationId: createSiteVirtualChassis
      requestBody:
        content:
          application/json:
            examples:
              create-a-VC-with-three-members:
                value:
                  members:
                  - mac: aff827549235
                    vc_ports:
                    - xe-0/1/0
                    vc_role: master
                  - mac: 8396cd006c8c
                    vc_ports:
                    - xe-0/1/0
                    - xe-0/1/1
                    vc_role: backup
                  - mac: 8396cd00888c
                    vc_ports:
                    - xe-0/1/0
                    vc_role: linecard
              create-a-pre-provisioned-VC-with-three-members:
                value:
                  members:
                  - mac: aff827549235
                    member_id: 0
                    vc_ports:
                    - xe-0/1/0
                    - xe-0/1/1
                    vc_role: master
                  - mac: 8396cd006c8c
                    member_id: 1
                    vc_ports:
                    - xe-0/1/0
                    vc_role: linecard
                  - mac: 8396cd00888c
                    member_id: 2
                    vc_ports:
                    - xe-0/1/0
                    vc_role: backup
                  preprovisioned: true
            schema:
              $ref: '#/components/schemas/virtual_chassis_config'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VirtualChassis'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteVirtualChassis
      tags:
      - Sites Devices - Wired - Virtual Chassis
    put:
      description: "The VC creation and adding member switch API will update the device\u2019\
        s virtual chassis config which is applied after VC is formed to create JUNOS\
        \ pre-provisioned virtual chassis configuration.\n\n## Change to use preprovisioned\
        \ VC\nTo switch the VC to use preprovisioned VC, enable preprovisioned in\
        \ virtual_chassis config. Both vc_role master and backup will be matched to\
        \ routing-engine role in Junos preprovisioned VC config.\n\nIn this config,\
        \ fpc0 has to be the same as the mac of device_id. Use renumber if you want\
        \ to replace fpc0 which involves device_id change.\n\nNotice: to configure\
        \ preprovisioned VC, every member of the VC must be in the inventory.\n\n\
        ## Add new members\nFor models (e.g. EX4300 and up) having dedicated VC ports,\
        \ it is easier to add new member switches into a VC by just connecting cables\
        \ with the dedicated VC ports. Cloud will detect the new members and update\
        \ the inventory.\n\nFor EX2300 VC, adding new members requires to follow the\
        \ procedures below:\n1. Powering on the new member switches and ensuring cables\
        \ are not connected to any VC ports.\n2. Claim or adopt all new member switches\
        \ under the VC\u2019s organization Inventory\n3. Assign all new member switches\
        \ to the same Site as the VC\n4. Invoke vc command to add switches to the\
        \ VC.\n5. Connect the cables to the VC ports for these switches\n6. After\
        \ a while, the Org\u2019s Inventory shows this new switches has been added\
        \ into the VC.\n\n## Removing member switch\nTo remove a member switch from\
        \ the VC, following the procedures below:\n\n1. Ensuring the VC is connected\
        \ to the cloud first\n2. Unplug the cable from the VC port of the switch\n\
        3. Waiting for the VC state (vc_state) of this switch is changed to not-present\n\
        4. Invoke update_vc with remove to remove this switch from the VC\n5. The\
        \ Org\u2019s Inventory shows the switch is removed.\n\nPlease notice that\
        \ member ID 0 (fpc0) cannot be removed. When a VC has two switches left, unpluging\
        \ the cable may result in the situation that fpc0 becomes a line card (LC).\
        \ When this situation is happened, please re-plug in the cable, wait for both\
        \ switches becoming present (show virtual-chassis) and then removing the cable\
        \ again.\n\n## Renumber a member switch\nWhen a member switch doesn\u2019\
        t work properly and needed to be replaced, the renumber API could be used.\
        \ The following two types of renumber are supported:\n\n1. Replace a non-fpc0\
        \ member switch\n2. Replace fpc0. When fpc0 is relaced, PAPI device config\
        \ and JUNOS config will be both updated.\n\nFor renumber to work, the following\
        \ procedures are needed: \n1. Ensuring the VC is connected to the cloud and\
        \ the state of the member switch to be replaced must be non present. \n2.\
        \ Adding the new member switch to the VC \n3. Waiting for the VC state (vc_state)\
        \ of this VC to be updated to API server \n4. Invoke vc with renumber to replace\
        \ the new member switch from fpc X to\n\n## Perprovision VC members\nBy specifying\
        \ \u201Cpreprovision\u201D op, you can convert the current VC to pre-provisioned\
        \ mode, update VC members as well as specify vc_ports when adding new members\
        \ for device models without dedicated vc ports. Use renumber for fpc0 replacement\
        \ which involves device_id change.\n\nNote: \n1. vc_ports is used for adding\
        \ new members and not needed if * the device model has dedicated vc ports,\
        \ or * no new member is added \n2. New VC members to be added should exist\
        \ in the same Site as the VC\n\nUpdate Device\u2019s VC config can achieve\
        \ similar purpose by directly modifying current virtual_chassis config. However,\
        \ it cannot fulfill requests to enabling vc_ports on new members that are\
        \ yet to belong to current VC."
      operationId: updateSiteVirtualChassisMember
      requestBody:
        content:
          application/json:
            examples:
              adding-two-new-switches-as-line-cards-into-the-VC:
                value:
                  members:
                  - mac: aff827549235
                    member: 0
                    vc_ports:
                    - xe-0/1/1
                    vc_role: linecard
                  - mac: 8396cd00777c
                    vc_ports:
                    - xe-0/1/0
                    vc_role: linecard
                  op: add
              convert-to-pre-provisioned-VC:
                value:
                  member: 0
                  members:
                  - mac: string
                    member: 0
                    vc_ports:
                    - string
                    vc_role: master
                  new-member: 0
                  op: add
              removing-two-switches-from-VC:
                value:
                  members:
                  - member: 2
                  - member: 3
                  op: remove
              renumber-member-ID-3-to-member-ID-2:
                value:
                  member: 3
                  new-member: 2
                  op: renumber
            schema:
              $ref: '#/components/schemas/virtual_chassis_update'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VirtualChassis'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteVirtualChassisMember
      tags:
      - Sites Devices - Wired - Virtual Chassis
  /api/v1/sites/{site_id}/devices/{device_id}/vc/vc_port:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Set VC port
      operationId: setSiteVcPort
      requestBody:
        content:
          application/json:
            examples:
              delete-VC-port-of-xe-0/1/1-of-member-0-and-member-2:
                value:
                  members:
                  - member: 0
                    vc_ports:
                    - xe-0/1/1
                  - member: 2
                    vc_ports:
                    - xe-0/1/1
                  op: delete
              set-VC-port-of-xe-0/1/1-of-member-0-and-member-2:
                value:
                  members:
                  - member: 0
                    vc_ports:
                    - xe-0/1/1
                  - member: 2
                    vc_ports:
                    - xe-0/1/1
                  op: set
            schema:
              $ref: '#/components/schemas/virtual_chassis_port'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: setSiteVcPort
      tags:
      - Sites Devices - Wired - Virtual Chassis
  /api/v1/sites/{site_id}/events/fast_roam:
    get:
      description: Get Roaming Events data
      operationId: getSiteRoamingEvents
      parameters:
      - description: event type
        in: query
        name: type
        schema:
          enum:
          - success
          - fail
          - none
          title: fast_roam_result
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/EventsFastroam'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRoamingEvents
      tags:
      - Sites Events
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/events/system/count:
    get:
      description: Count System Events
      operationId: countSiteSystemEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          title: Site System Events count distinct
          type: string
      - $ref: '#/components/parameters/system_event_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteSystemEvents
      tags:
      - Sites Events
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/events/system/search:
    get:
      description: Search System Events
      operationId: searchSiteSystemEvents
      parameters:
      - $ref: '#/components/parameters/system_event_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DeviceEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteSystemEvents
      tags:
      - Sites Events
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/evpn_topologies:
    get:
      description: Get the existing EVPN topology
      operationId: listSiteEvpnTopologies
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteEvpnTopologies
      tags:
      - Sites EVPN Topologies
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "While all the `evpn_id` / `downlink_ips` can be specifidd by hand,\
        \ the easiest way is to call the `build_vpn_topology` API, allowing you to\
        \ examine the diff, and update it yourself. You can also simply call it with\
        \ `overwrite=true` which will apply the updates for you.\n\n**Notes:**\n1.\
        \ You can use `core` / `distribution` / `access` to create a CLOS topology\n\
        2. You can also use `core` / `distribution` to form a 2-tier EVPN topology\
        \ where ESI-Lag is configured distribution to connect to access switches\n\
        3. In a small/medium campus, `collapsed-core` can be used where core switches\
        \ are the inter-connected to do EVPN\n4. The API uses a few pre-defined parameters\
        \ and best-practices to generate the configs. It can be customized by using\
        \ `evpn_options` in Site Setting / Network Template. (e.g. a different subnet\
        \ for the underlay)\n\n#### Collapsed Core\nIn a small-medium campus, EVPN\
        \ can also be enabled only at the core switches (up to 4) by assigning all\
        \ participating switches with `collapsed-core role`. When there are more than\
        \ 2 switches, a ring-like topology will be formed.\n\n#### ESI-Lag\nIf the\
        \ access switchess does not have EVPN support, you can take advantage of EVPN\
        \ by setting up ESI-Lag on distribution switches\n\n#### Leaf / Access / Collapsed-Core\n\
        For leaf nodes in a EVPN topology, you\u2019d have to configure the IPs for\
        \ networks that would participate in EVPN. Optionally, VRFs to isolate traffic\
        \ from one tenant verus another"
      operationId: createSiteEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: CC
                  overwrite: true
                  pod_names:
                    '1': default
                    '2': default
                  switches:
                  - mac: 5c5b35000003
                    role: collapsed-core
                  - mac: 5c5b35000004
                    role: collapsed-core
            schema:
              $ref: '#/components/schemas/junos_evpn_topology'
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteEvpnTopology
      tags:
      - Sites EVPN Topologies
  /api/v1/sites/{site_id}/evpn_topologies/{evpn_topology_id}:
    delete:
      description: Delete the site EVPN Topology
      operationId: deleteSiteEvpnTopology
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteEvpnTopology
      tags:
      - Sites EVPN Topologies
    get:
      description: Get One EVPN Topology Detail
      operationId: getSiteEvpnTopology
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteEvpnTopology
      tags:
      - Sites EVPN Topologies
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/evpn_topology_id'
    put:
      description: Update the EVPN Topolgy
      operationId: updateSiteEvpnTopology
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  overwrite: false
                  switches:
                  - mac: 5c5b35000003
                    role: collapsed-core
                  - mac: 5c5b35000004
                    role: none
            schema:
              $ref: '#/components/schemas/junos_evpn_topology'
      responses:
        '200':
          $ref: '#/components/responses/EvpnTopology'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteEvpnTopology
      tags:
      - Sites EVPN Topologies
  /api/v1/sites/{site_id}/gatewaytemplates/derived:
    get:
      description: Get derived Gateway Templates for Site
      operationId: getSiteGatewayTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Gatewaytemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteGatewayTemplateDerived
      tags:
      - Sites Gateway Templates
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests:
    get:
      description: Get List of Site Guest Authorizations
      operationId: listSiteAllGuestAuthorizations
      parameters:
      - description: UUID of single or multiple (Comma separated) WLAN under Site
          `site_id` (to filter by WLAN)
        in: query
        name: wlan_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/GuestsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAllGuestAuthorizations
      tags:
      - Sites Guests
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/count:
    get:
      description: Count Authorized Guest
      operationId: countSiteGuestAuthorizations
      parameters:
      - example: auth_method
        in: query
        name: distinct
        schema:
          default: auth_method
          enum:
          - auth_method
          - ssid
          - company
          title: Site Guests count distinct
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteGuestAuthorizations
      tags:
      - Sites Guests
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/derived:
    get:
      description: Get List of Site Guest Authorizations
      operationId: listSiteAllGuestAuthorizationsDerived
      parameters:
      - description: UUID of single or multiple (Comma separated) WLAN under Site
          `site_id` (to filter by WLAN)
        in: query
        name: wlan_id
        schema:
          type: string
      - description: whether to get org level guests, default is false i.e get site
          level guests
        in: query
        name: cross_site
        schema:
          default: 'false'
          enum:
          - 'true'
          - 'false'
          type: string
      responses:
        '200':
          $ref: '#/components/responses/GuestsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAllGuestAuthorizationsDerived
      tags:
      - Sites Guests
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/search:
    get:
      description: Search Authorized Guest
      operationId: searchSiteGuestAuthorization
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: wlan_id
        schema:
          type: string
      - in: query
        name: auth_method
        schema:
          type: string
      - in: query
        name: ssid
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/GuestsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteGuestAuthorization
      tags:
      - Sites Guests
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/guests/{guest_mac}:
    delete:
      description: Delete Guest Authorization
      operationId: deleteSiteGuestAuthorization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteGuestAuthorization
      tags:
      - Sites Guests
    get:
      description: Get Guest Authorization
      operationId: getSiteGuestAuthorization
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteGuestAuthorization
      tags:
      - Sites Guests
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/guest_mac'
    put:
      description: Update Guest Authorization
      operationId: updateSiteGuestAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guest'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Guest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteGuestAuthorization
      tags:
      - Sites Guests
  /api/v1/sites/{site_id}/insights/client/{client_mac}/{metric}:
    get:
      description: 'Get Client Insight Metrics

        See metrics possibilities at /api/v1/const/insight_metrics'
      operationId: getSiteInsightMetricsForClient
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightMetric'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteInsightMetricsForClient
      tags:
      - Sites Insights
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
    - $ref: '#/components/parameters/metric'
  /api/v1/sites/{site_id}/insights/device/{device_mac}/{metric}:
    get:
      description: 'Get AP Insight Metrics

        See metrics possibilities at /api/v1/const/insight_metrics'
      operationId: getSiteInsightMetricsForDevice
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/DeviceMetric'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteInsightMetricsForDevice
      tags:
      - Sites Insights
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/metric'
    - $ref: '#/components/parameters/device_mac'
  /api/v1/sites/{site_id}/insights/rogues:
    get:
      description: Get List of Site Rogue/Neighbor APs
      operationId: listSiteRogueAPs
      parameters:
      - $ref: '#/components/parameters/rogue_type'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightRogue'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRogueAPs
      tags:
      - Sites Rogues
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/insights/rogues/clients:
    get:
      description: Get List of Site Rogue Clients
      operationId: listSiteRogueClients
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightRogueClients'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRogueClients
      tags:
      - Sites Rogues
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/insights/{metric}:
    get:
      description: 'Get Site Insight Metrics

        See metrics possibilities at /api/v1/const/insight_metrics'
      operationId: getSiteInsightMetrics
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      responses:
        '200':
          $ref: '#/components/responses/InsightMetric'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteInsightMetrics
      tags:
      - Sites Insights
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/metric'
  /api/v1/sites/{site_id}/licenses/usages:
    get:
      description: This shows license usage (i.e. needed) based on the features enabled
        for the site.
      operationId: getSiteLicenseUsage
      responses:
        '200':
          $ref: '#/components/responses/GetLicenceUsage'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteLicenseUsage
      tags:
      - Sites Licenses
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/coverage:
    get:
      description: Get Beam Coverage Overview
      operationId: getSiteBeamCoverageOverview
      parameters:
      - description: map_id (filter by map_id)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client_type (as filter. optional)
        in: query
        name: client_type
        schema:
          title: coverage_client_type
          type: string
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/resolution'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      responses:
        '200':
          $ref: '#/components/responses/LocationCoverage'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteBeamCoverageOverview
      tags:
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/current:
    get:
      description: 'Get Machine Learning Current Stat

        For each VBLE AP, it has ML model parameters (e.g. Path-loss-estimate, Intercept)
        as well as completion indicators (Level and PercentageComplete). For the completeness,
        ML takes N sample to finish its first level and use N*0.25 samples to complete
        each successive level. When a device is moved, the completeness will be reset
        as it has to re-learn.'
      operationId: getSiteMachineLearningCurrentStat
      parameters:
      - description: map_id (as filter, optional)
        example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMachineLearningCurrentStat
      tags:
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/defaults:
    get:
      description: Get Default PLF for Models
      operationId: getSiteDefaultPlfForModels
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDefaultPlfForModels
      tags:
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/location/ml/device/{device_id}:
    delete:
      description: Clear ML Overwrite for Device
      operationId: clearSiteMlOverwriteForDevice
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForDevice
      tags:
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    put:
      description: Overwrite ML For Device
      operationId: overwriteSiteMlForDevice
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/ml_overwrite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForDevice
      tags:
      - Sites Location
  /api/v1/sites/{site_id}/location/ml/map/{map_id}:
    delete:
      description: Clear ML Overwrite for Map
      operationId: clearSiteMlOverwriteForMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteMlOverwriteForMap
      tags:
      - Sites Location
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    put:
      description: Overwrite ML For Map
      operationId: overwriteSiteMlForMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  iOS:
                    int: 6
                    ple: -3
                  iPod:
                    int: -10
                    ple: -5
            schema:
              $ref: '#/components/schemas/ml_overwrite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Ml'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: overwriteSiteMlForMap
      tags:
      - Sites Location
  /api/v1/sites/{site_id}/location/ml/reset/map/{map_id}:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: Reset ML Stats by Map
      operationId: resetSiteMlStatsByMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: resetSiteMlStatsByMap
      tags:
      - Sites Location
  /api/v1/sites/{site_id}/maps:
    get:
      description: Get List of Site Maps
      operationId: listSiteMaps
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MapsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMaps
      tags:
      - Sites Maps
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Map
      operationId: createSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                  - coordinate: string
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  width: 0
                  width_m: 0
            schema:
              $ref: '#/components/schemas/map'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteMap
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Import data from files is a multipart POST which has an file,
        an optional json, and an optional csv, to create floorplan, assign matching
        inventory to specific site, place ap if name or mac matches.


        # Note

        This endpoint (at the site level), the AP must be already assigned to the
        site to be placed on the floorplan. If you want to place APs from the Org
        inventory, it is required to use the endpoint at the Org level [importOrgMaps](#operation/importOrgMaps)


        # CSV File Format

        ```csv

        Vendor AP name,Mist AP Mac

        US Office AP-2,5c:5b:35:00:00:02

        US Office AP-3,5c5b35000002

        ```'
      operationId: importSiteMaps
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/map_site_import_file'
      responses:
        '200':
          $ref: '#/components/responses/MapImport'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteMaps
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/{map_id}:
    delete:
      description: Delete Site Map
      operationId: deleteSiteMap
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMap
      tags:
      - Sites Maps
    get:
      description: Get Site Map Details
      operationId: getSiteMap
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMap
      tags:
      - Sites Maps
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    put:
      description: Update Site Map
      operationId: updateSiteMap
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  flags: {}
                  height: 0
                  height_m: 0
                  latlng_br:
                    lat: string
                    lng: string
                  latlng_tl:
                    lat: string
                    lng: string
                  locked: true
                  name: string
                  occupancy_limit: 0
                  orientation: 0
                  origin_x: 0
                  origin_y: 0
                  ppm: 0
                  sitesurvey_path:
                  - coordinate: string
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  thumbnail_url: string
                  type: image
                  url: string
                  view: roadmap
                  wall_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  wayfinding:
                    micello:
                      account_key: string
                      default_level_id: 0
                      map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    snap_to_path: true
                  wayfinding_path:
                    coordinate: string
                    nodes:
                    - edges:
                        N2: string
                      name: string
                      position:
                        x: 0
                        y: 0
                  width: 0
                  width_m: 0
            schema:
              $ref: '#/components/schemas/map'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Map'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteMap
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/{map_id}/auto_orient:
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoOrientation
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteApAutoOrientation
      tags:
      - Sites Maps - Auto-orientation
    parameters:
    - $ref: '#/components/parameters/map_id'
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'This API is called to trigger a map for auto orientation. For
        auto orient feature to work, BLE data needs to be collected from the APs on
        the map. This precess is not disruptive unlike FTM collection. Repeated POST
        to this endpoint while a map is still running will be rejected.


        List of devices to provide suggestions for is an optional parameter that can
        be given to this API. This will provide auto orient suggestions only for the
        devices specified. If no list of devices is provided, all APs asociated with
        that map are considered by default'
      operationId: startSiteApAutoOrientation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_orient'
      responses:
        '200':
          $ref: '#/components/responses/AutoOrientation'
        '400':
          $ref: '#/components/responses/AutoOrientationFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteApAutoOrientation
      tags:
      - Sites Maps - Auto-orientation
  /api/v1/sites/{site_id}/maps/{map_id}/auto_placement:
    delete:
      description: This API is called to force stop auto placement for a given map
      operationId: deleteSiteApAutoplacement
      responses:
        '200':
          description: Autoplacement Process has stopped for this map
        '400':
          description: Autoplacement was not triggered
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteApAutoplacement
      tags:
      - Sites Maps - Auto-placement
    get:
      description: 'This API is called to view the current status of auto placement
        for a given map.



        #### Status Descriptions


        | Status | Description |

        | --- | --- |

        | `pending` | Autoplacement has not been requested for this map |

        | `inprogress` | Autoplacement is currently processing |

        | `done` | The autoplacement process has completed |

        | `data_needed` | Additional position data is required for autoplacement.
        Users should verify the requested anchor APs have a position on the map |

        | `invalid_model` | Autoplacement is not supported on the model of the APs
        on the map |

        | `invalid_version` | Autoplacement is not supported with the APs current
        firmware version |

        | `error` | There was an error in the autoplacement process |'
      operationId: getSiteApAutoPlacement
      responses:
        '200':
          $ref: '#/components/responses/AutoPlacementInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteApAutoplacement
      tags:
      - Sites Maps - Auto-placement
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: 'This API is called to trigger a map for auto placement. For auto
        placement feature to work, RTT-FTM data need to be collected from the APs
        on the map. This scan is disruptive and therefore the user must be notified
        of service disrution during the functioning of auto placement Repeated POST
        to this endpoint while a map is still running will be rejected.


        List of devices to provide suggestions for is an optional parameter that can
        be given to this API. This will provide autoplacement suggestions only for
        the devices specified. If no list of devices is provided, all APs asociated
        with that map are considered by default'
      operationId: runSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_placement'
      responses:
        '200':
          description: Autoplacement Process has begun for this map
        '400':
          description: "* Map has less than 3 APs associated with it to perform auto\
            \ placement \n* Auto AP Placement is already in progress for this Map\n\
            * Autoplacement data does not exist or has gone stale"
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: runSiteApAutoplacement
      tags:
      - Sites Maps - Auto-placement
  /api/v1/sites/{site_id}/maps/{map_id}/clear_auto_orient:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to destroy the autoorientations of a map or subset
        of APs on a map.
      operationId: clearSiteApAutoOrient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_addresses'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteApAutoOrient
      tags:
      - Sites Maps - Auto-orientation
  /api/v1/sites/{site_id}/maps/{map_id}/clear_autoplacement:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to destroy the cached autoplacement locations
        of a map or subset of APs on a map.
      operationId: clearSiteApAutoplacement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_addresses'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: clearSiteApAutoplacement
      tags:
      - Sites Maps - Auto-placement
  /api/v1/sites/{site_id}/maps/{map_id}/image:
    delete:
      description: Delete Site Map Image
      operationId: deleteSiteMapImage
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMapImage
      tags:
      - Sites Maps
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: Add image map is a multipart POST which has an file (Image) and
        an optional json parameter
      operationId: addSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/image_import'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: addSiteMapImage
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/{map_id}/replace:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: 'Replace Map Image



        This works like an PUT where the image will be replaced. If transform is provided,
        all the locations of the objects on the map (AP, Zone, Vbeacon, Beacon) will
        be transformed as well (relative to the new Map)'
      operationId: replaceSiteMapImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/map_site_replace_file'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: replaceSiteMapImage
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/{map_id}/set_map:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: "This API can be used to assign a list of AP Macs associated with\
        \ site_id to the specified map_id. Note that map_id must be associated with\
        \ corresponding site_id. This API obeys the following rules \n1. if AP is\
        \ unassigned to any Map, it gets associated with map_id \n2. Any moved APs\
        \ are returned in the response \n3. If the AP is considered a locked AP, no\
        \ action will be taken"
      operationId: bulkAssignSiteApsToMap
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  macs:
                  - 5c5b35000001
                  - 5c5b35584a6f
            schema:
              $ref: '#/components/schemas/mac_addresses'
      responses:
        '200':
          $ref: '#/components/responses/SetDevicesMap'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: bulkAssignSiteApsToMap
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/maps/{map_id}/use_auto_ap_values:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This API is used to accept or reject the cached autoplacement and
        auto orientation values of a map or subset of APs on a map. A rejected AP
        will retain its current X,Y and orientation until accpeted.
      operationId: confirmSiteApLocalizationData
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  accept: false
                  device_macs:
                  - string
                  for: placement
            schema:
              $ref: '#/components/schemas/use_auto_ap_values'
      responses:
        '200':
          description: Success
        '400':
          description: 'Invalid localization service expected: placement or orientation'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: confirmSiteApLocalizationData
      tags:
      - Sites Maps - Auto-placement
  /api/v1/sites/{site_id}/maps/{map_id}/wayfinding/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
    post:
      description: This imports the vendor map meta data into the Map JSON. This is
        required by the SDK and App in order to access/render the vendor Map properly.
      operationId: importSiteWayfindings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wayfinding_import_json'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSiteWayfindings
      tags:
      - Sites Maps
  /api/v1/sites/{site_id}/mxedges:
    get:
      description: Get List of Site Mist Edges
      operationId: listSiteMxEdges
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxedgesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMxEdges
      tags:
      - Sites MxEdges
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Mist Edge
      operationId: createSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxedge'
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteMxEdge
      tags:
      - Sites MxEdges
  /api/v1/sites/{site_id}/mxedges/events/count:
    get:
      description: Count Mist Edge Events
      operationId: countSiteMxEdgeEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: mxedge_id
          enum:
          - mxedge_id
          - type
          - mxcluster_id
          - package
          title: Site Mx Edge Events count distinct
          type: string
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - $ref: '#/components/parameters/mxedge_event_type'
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteMxEdgeEvents
      tags:
      - Sites MxEdges
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/mxedges/events/search:
    get:
      description: Search Site Mist Edge Events
      operationId: searcSitehMistEdgeEvents
      parameters:
      - description: mist edge id
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: mist edge cluster id
        in: query
        name: mxcluster_id
        schema:
          type: string
      - $ref: '#/components/parameters/mxedge_event_type'
      - description: service running on mist edge(mxagent, tunterm etc)
        in: query
        name: service
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/MxEdgeEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searcSitehMistEdgeEvents
      tags:
      - Sites MxEdges
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/mxedges/{mxedge_id}:
    delete:
      description: Delete Site Mist Edge
      operationId: deleteSiteMxEdge
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteMxEdge
      tags:
      - Sites MxEdges
    get:
      description: get Site Mist Edge
      operationId: getSiteMxEdge
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMxEdge
      tags:
      - Sites MxEdges
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
    put:
      description: Update Site Mist Edge settings
      operationId: updateSiteMxEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mxedge'
      responses:
        '200':
          $ref: '#/components/responses/Mxedge'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteMxEdge
      tags:
      - Sites MxEdges
  /api/v1/sites/{site_id}/mxedges/{mxedge_id}/support:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
    post:
      description: Support / Upload Mist Edge support files
      operationId: uploadSiteMxEdgeSupportFiles
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadSiteMxEdgeSupportFiles
      tags:
      - Sites MxEdges
  /api/v1/sites/{site_id}/mxtunnels/{mxtunnel_id}/preempt_aps:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxtunnel_id'
    post:
      description: "To preempt AP\u2019s which are not connected to preferred peer\
        \ to the preferred peer"
      operationId: preemptSitesMxTunnel
      responses:
        '200':
          $ref: '#/components/responses/MxTunnelsPreemptAps'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: preemptSitesMxTunnel
      tags:
      - Utilities MxEdge
  /api/v1/sites/{site_id}/nac_clients/count:
    get:
      description: Count by Distinct Attributes of NAC Clients
      operationId: countSiteNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - last_nacrule_id
          - auth_type
          - last_vlan_id
          - last_nas_vendor
          - last_username
          - last_ap
          - mac
          - last_ssid
          - last_status
          - mdm_compliance_status
          - mdm_provider
          title: Site Nac Clients count distinct
          type: string
      - description: NAC Policy Rule ID, if matched
        in: query
        name: last_nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: last_vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: last_nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: last_ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: last_username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: AP MAC connected to by client
        in: query
        name: last_ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: last_status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteNacClients
      tags:
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/events/count:
    get:
      description: Count by Distinct Attributes of NAC Client-Events
      operationId: countSiteNacClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          enum:
          - type
          - nacrule_id
          - dryrun_nacrule_id
          - auth_type
          - vlan
          - nas_vendor
          - username
          - ap
          - mac
          - ssid
          title: Site Nac Client Events count distinct
          type: string
      - $ref: '#/components/parameters/nac_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteNacClientEvents
      tags:
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/events/search:
    get:
      description: Search NAC Client Events
      operationId: searcsearcSiteNacClientEventsacClientEvents
      parameters:
      - $ref: '#/components/parameters/nac_event_type'
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          format: uuid
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: NAC Policy Dry Run Rule ID, if present and matched
        in: query
        name: dryrun_nacrule_id
        schema:
          type: string
      - description: True - if dryrun rule present and matched with priority, False
          - if not matched or not present
        in: query
        name: dryrun_nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: vlan
        schema:
          type: integer
      - description: Vlan source, e.g. "nactag", "usermac"
        in: query
        name: vlan_source
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSID
        in: query
        name: bssid
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          format: uuid
          type: string
      - description: IDP returned roles/groups for the user
        in: query
        name: idp_role
        schema:
          type: string
      - description: Username presented to the Identity Provider
        in: query
        name: idp_username
        schema:
          type: string
      - description: Radius attributes returned by NAC to NAS Devive
        in: query
        name: resp_attrs
        schema:
          $ref: '#/components/schemas/strings'
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: labels derived from usermac entry
        in: query
        name: usermac_labels
        schema:
          $ref: '#/components/schemas/strings'
      - description: AP MAC
        in: query
        name: ap
        schema:
          type: string
      - description: AP random macMAC
        in: query
        name: random_mac
        schema:
          type: boolean
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: Lookup(IDP etc.,) time taken in seconds
        in: query
        name: lookup_time_taken
        schema:
          type: number
      - description: time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/EventsNacClientSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searcsearcSiteNacClientEventsacClientEvents
      tags:
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/nac_clients/search:
    get:
      description: Search Site NAC Clients
      operationId: searchSiteNacClients
      parameters:
      - description: NAC Policy Rule ID, if matched
        in: query
        name: nacrule_id
        schema:
          type: string
      - description: NAC Policy Rule Matched
        in: query
        name: nacrule_matched
        schema:
          type: boolean
      - description: "authentication type, e.g. \u201Ceap-tls\u201D, \u201Ceap-ttls\u201D\
          , \u201Ceap-teap\u201D, \u201Cmab\u201D, \u201Cdevice-auth\u201D"
        in: query
        name: auth_type
        schema:
          type: string
      - description: Vlan ID
        in: query
        name: vlan_id
        schema:
          type: string
      - description: vendor of NAS device
        in: query
        name: nas_vendor
        schema:
          type: string
      - description: SSO ID, if present and used
        in: query
        name: idp_id
        schema:
          type: string
      - description: SSID
        in: query
        name: ssid
        schema:
          type: string
      - description: Username presented by the client
        in: query
        name: username
        schema:
          type: string
      - description: start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: AP MAC connected to by client
        in: query
        name: ap
        schema:
          type: string
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: ID of Mist Edge that the client is connected through
        in: query
        name: mxedge_id
        schema:
          type: string
      - description: NAC Policy Rule Name matched
        in: query
        name: nacrule_name
        schema:
          type: string
      - description: "Connection status of client i.e \u201Cpermitted\u201D, \u201C\
          denied, \u201Csession_ended\u201D"
        in: query
        name: status
        schema:
          type: string
      - description: "Client type i.e. \u201Cwireless\u201D, \u201Cwired\u201D etc."
        in: query
        name: type
        schema:
          type: string
      - description: "MDM compliancy of client i.e \u201Ccompliant\u201D, \u201Cnot\
          \ compliant\u201D"
        in: query
        name: mdm_compliance_status
        schema:
          type: string
      - description: "MDM provider of client\u2019s organisation eg \u201Cintune\u201D\
          , \u201Cjamf\u201D"
        in: query
        name: mdm_provider
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/ClientNacSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteNacClients
      tags:
      - Sites Clients - NAC
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/networks/derived:
    get:
      description: Retrieves the list of Networks available for the Site
      operationId: listSiteNetworksDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/NetworksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteNetworksDerived
      tags:
      - Sites Networks
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/networktemplates/derived:
    get:
      description: Get derived Network Templates for Site
      operationId: getSiteNetworkTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Networktemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteNetworkTemplateDerived
      tags:
      - Sites Network Templates
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/otherdevices:
    get:
      description: Get List of Site other devices (3rd party devices)
      operationId: listSiteOtherDevices
      parameters:
      - in: query
        name: vendor
        schema:
          type: string
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: serial
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/DeviceOtherArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteOtherDevices
      tags:
      - Sites Devices - Others
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/otherdevices/events/count:
    get:
      description: Count Site OtherDevices Events
      operationId: countSiteOtherDeviceEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - mac
          - type
          - vendor
          - site_id
          title: Site Other Device Events count distinct
          type: string
      - $ref: '#/components/parameters/otherdevice_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteOtherDeviceEvents
      tags:
      - Sites Devices - Others
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/otherdevices/events/search:
    get:
      description: Search Site OtherDevices Events
      operationId: searchSiteOtherDeviceEvents
      parameters:
      - description: mac
        in: query
        name: mac
        schema:
          type: string
      - description: mac of attached device
        in: query
        name: device_mac
        schema:
          type: string
      - description: vendor name
        in: query
        name: vendor
        schema:
          type: string
      - $ref: '#/components/parameters/otherdevice_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/EventsOtherDevicesSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteOtherDeviceEvents
      tags:
      - Sites Devices - Others
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/pcaps:
    get:
      description: Get List of Site Packet Captures
      operationId: listSitePacketCaptures
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - description: optional client mac filter
        in: query
        name: client_mac
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/PcapsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSitePacketCaptures
      tags:
      - Utilities PCAPs
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/pcaps/capture:
    delete:
      description: Stop current capture
      operationId: stopSitePacketCapture
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopSitePacketCapture
      tags:
      - Utilities PCAPs
    get:
      description: Get Capturing status
      operationId: getSiteCapturingStatus
      responses:
        '200':
          $ref: '#/components/responses/PcapStatus'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCapturingStatus
      tags:
      - Utilities PCAPs
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Initiate a Site Packet Capture\n\nThe output will be available\
        \ through websocket. As there can be multiple command issued against the same\
        \ AP at the same time and the output all goes through the same websocket stream,\
        \ session is introduced for demux.\n\n#### Subscribe to Device Command outputs\n\
        `WS /api-ws/v1/stream`\n\n```json\n{\n    subscribe: \"/sites/{site_id}/pcaps\"\
        \n}\n```\n#### Response (MxEdge)\n```json\n{\n    \"event\": \"data\"\n  \
        \  \"channel\": \"/sites/:site_id/pcaps\"\n    \"data\": {\n         \"capture_id\"\
        : \"6b1be4fb-b239-44d9-9d3b-cb1ff3af1721\",\n     \"lost_messages\": 0\n \
        \        \"pcap_dict\": {\n             \"channel_frequency\": 2412,\n   \
        \          \"channel\": \"1\",\n             \"datarate\": \"1.0 Mbps\",\n\
        \             \"rssi\": -75, \n             \"dst\": \"78:bd:bc:ca:0b:0a\"\
        ,\n             \"src\": \"18:b8:1f:4c:91:c0\",\n             \"bssid\": \"\
        18:b8:1f:4c:91:c0\",\n             \"frame_type\": \"Management\", \n    \
        \         \"frame_subtype\": \"Probe Response\", \n         \"proto\": \"\
        802.11\", \n             \"ap_mac\": \"d4:20:b0:81:99:2e\", \n           \
        \  \"direction\": \"tx\", \n             \"timestamp\": 1652246543, \n   \
        \          \"length\": 416.0,\n             \"interface\": \"radiotap\",\n\
        \             \"info\": \"1652246544.467733 1683216786us tsft 1.0 Mb/s 2412\
        \ MHz 11g -75dBm signal -82dBm noise antenna 0 Probe Response (ATTKmsWiVS)\
        \ [1.0* 2.0* 5.5* 11.0* 18.0 24.0 36.0 54.0 Mbit] CH: 2, PRIVACY\\\\n\",\n\
        \         }, \n        \"pcap_raw\": \"1MOyoQIABAAAAAAAAAAAAP//AAABAAAAEEh7Yh5VBwCgAQAAoAEAAAAAKwBvCADAAQAAAIw7reCS2VNkAAAAABACbAmABLWuAAEAEBgAAwACAABQADoBeL28ygsKGLgfTJHAGLgfTJHAcIZ2WDlBJQAAAGQAERUACkFUVEttc1dpVlMBCIKEi5YkMEhsAwECBwZVUyABCx4gAQAjAhkAKgEEMgQMEhhgMBQBAAAPrAQBAAAPrAQBAAAPrAIMAAsFAQAbAABGBTIIAQAALRqtCR////8AAAAAAAAAAAAAAAAAAAAAAAAAAD0WAggVAAAAAAAAAAAAAAAAAAAAAAAAAH8IBAAIAAAAAEDdkwBQ8gQQSgABEBBEAAECEDsAAQMQRwAQn2481frn3KT+uGod2ERx+RAhAAtBcnJpcywgSW5jLhAjAApCR1cyMTAtNzAwECQACkJHVzIxMC03MDAQQgAKQkdXMjEwLTcwMBBUAAgABgBQ8gQAARARAA5BcnJpcyBXaXJlbGVzcxAIAAIgCBA8AAEBEEkABgA3KgABIN0JABAYAgEQHAAA3RgAUPICAQGEAAOkAAAnpAAAQkNeAGIyLwAzjakr\"\
        \n}\n```\n\n#### vResponse (Wired)\n```json\n{\n    \"event\": \"data\"\n\
        \    \"channel\": \"/sites/67970e46-4e12-11e6-9188-0242ac110007/pcaps\"\n\
        \    \"data\": {\n        \"capture_id\": \"f039b1b4-a23e-48b2-906a-0da40524de73\"\
        , \n        \"pcap_dict\": {\n             \"dst_mac\": \"68:ec:c5:09:2e:87\"\
        ,\n             \"src_mac\": \"8c:3b:ad:e0:47:40\", \n             \"vlan\"\
        : 1, \n             \"src_ip\": \"34.224.147.117\", \n             \"dst_ip\"\
        : \"192.168.1.55\",\n             \"dst_port\": 51635, \n             \"src_port\"\
        : 443,\n             \"proto\": \"TCP\", \n             \"ap_mac\": \"d4:20:b0:81:99:2e\"\
        ,\n             \"direction\": \"tx\", \n             \"timestamp\": 1652247615,\
        \ \n             \"length\": 159.0, \n             \"interface\": \"wired\"\
        ,\n             \"info\": \"1652247616.007409 IP ec2-34-224-147-117.compute-1.amazonaws.com.https\
        \ > ip-192-168-1-55.ec2.internal.51635: Flags [P.], seq 2192123968:2192124057,\
        \ ack 4035166782, win 12, options [nop,nop,TS val 597467050 ecr 740580660],\
        \ length 89\\\\n\",\n             }, \n        \"pcap_raw\": \"1MOyoQIABAAAAAAAAAAAAP//AAABAAAAQEx7YhMzAACfAAAAnwAAAGjsxQkuh4w7reBHQIEAAAEIAEUAAI1bLEAAKAZ/CiLgk3XAqAE3AbvJs4KpKEDwg8I+gBgADFf9AAABAQgKI5yfqiwkXTQXAwMAVKY5JopoKQrVEn0/3ld4YntctGEH/rTZuwtCvzSncFw71QJveJi9uxHs57KC8w9Apph3YvXJrmWg7M37+o+YV0KH/xmr626s5Bkhb3QhKOu+NoNEmA==\"\
        \n\n    }\n}\n```\n\n#### Stop Response (Wired/Wireless)\n```json\n{\n   \
        \ \"event\": \"data\"\n    \"channel\": \"/sites/67970e46-4e12-11e6-9188-0242ac110007/pcaps\"\
        \n    \"data\": {\n      \"capture_id\": \"a2f7374d-6a70-41fd-8a3f-71e42573baaf\"\
        , \n      \"lost_messages\": 0,\n      \"pcap_dict\": null\n    }\n}\n```"
      operationId: startSitePacketCapture
      requestBody:
        content:
          application/json:
            examples:
              AP-New-Wireless-Client-Associations-Packet-Capture:
                value:
                  client_mac: 60a10a773412
                  duration: 600
                  includes_mcast: false
                  max_pkt_len: 128
                  num_packets: 100
                  type: new_assoc
              AP-Radiotap-Packet-Capture:
                value:
                  duration: 600
                  max_pkt_len: 68
                  num_packets: 100
                  type: radiotap
              AP-Radiotap-Packet-Capture-and-Wired-Packet-Capture:
                value:
                  ap_mac: string
                  client_mac: string
                  duration: 600
                  includes_mcast: true
                  max_pkt_len: 128
                  num_packets: 1024
                  ssid: string
                  type: client
              AP-Scan-radio-Packet-Capture:
                value:
                  ap_mac: null
                  band: '24'
                  bandwidth: 20
                  channel: 1
                  client_mac: 38f9d3972ff1
                  duration: 600
                  format: stream
                  max_pkt_len: 68
                  num_packets: 100
                  tcpdump_expression: tcp port 80
                  type: scan
              AP-Wired-Packet-Capture:
                value:
                  duration: 600
                  max_pkt_len: 68
                  num_packets: 100
                  tcpdump_expression: tcp port 80
                  type: wired
              AP-Wireless-Packet-Capture:
                value:
                  ap_mac: null
                  band: '24'
                  duration: 600
                  max_pkt_len: 128
                  num_packets: 100
                  type: wireless
              Client-Packet-Capture:
                value:
                  client_mac: 60a10a773412
                  duration: 300
                  includes_mcast: false
                  max_pkt_len: 128
                  num_packets: 1000
                  type: client
              SSR-Packet-Capture:
                value:
                  duration: 600
                  format: stream
                  gateways:
                    '001122334455':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: tcp
                        ge-0/0/1:
                          tcpdump_expression: port 443
                        ge-1/0/0:
                          tcpdump_expression: tcp
                        ge-1/0/1:
                          tcpdump_expression: port 443
                    '001122334466':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: udp
                        ge-0/0/1:
                          tcpdump_expression: port 32768
                  max_pkt_len: 1500
                  num_packets: 100
                  type: gateway
              Switch-Packet-Capture:
                value:
                  duration: 600
                  format: stream
                  max_pkt_len: 1500
                  num_packets: 100
                  switches:
                    '001122334455':
                      ports:
                        ge-0/0/0:
                          tcpdump_expression: udp
                        ge-0/0/1: {}
                        ge-1/0/0: null
                        ge-1/0/1: {}
                    '001122334466':
                      ports:
                        ge-0/0/0: {}
                        ge-0/0/1: {}
                  tcpdump_expression: port 443
                  type: switch
            schema:
              $ref: '#/components/schemas/capture_site'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/PcapStart'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSitePacketCapture
      tags:
      - Utilities PCAPs
  /api/v1/sites/{site_id}/pcaps/{pcap_id}:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/pcap_id'
    put:
      description: Update or add notes to a completed packet capture
      operationId: updateSitePacketCapture
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  notes: wired pcap test
            schema:
              $ref: '#/components/schemas/notes'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSitePacketCapture
      tags:
      - Utilities PCAPs
  /api/v1/sites/{site_id}/psks:
    get:
      description: Get List of Site PSKs
      operationId: listSitePsks
      parameters:
      - in: query
        name: ssid
        schema:
          type: string
      - in: query
        name: role
        schema:
          type: string
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSitePsks
      tags:
      - Sites Psks
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Create Site PSK



        When `usage`==`macs`, corresponding "macs" field will hold a list consisting
        of client mac addresses (["xx:xx:xx:xx:xx",...]) or mac patterns(["xx:xx:*","xx*",...])
        or both (["xx:xx:xx:xx:xx:xx", "xx:*", ...]). This list is capped at 5000'
      operationId: createSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSitePsk
      tags:
      - Sites Psks
    put:
      description: Update multi PSKs
      operationId: updateSitePsks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psks'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSitePsks
      tags:
      - Sites Psks
  /api/v1/sites/{site_id}/psks/import:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'Import PSK from CSV file or JSON


        ## CSV File Format

        ```csv

        PSK Import CSV File Format:

        name,ssid,passphrase,usage,vlan_id,mac

        Common,warehouse,foryoureyesonly,single,35,a31425f31278

        Justin,reception,visible,multi,1002

        ```'
      operationId: importSitePsks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/psks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/psks_import_file'
      responses:
        '200':
          $ref: '#/components/responses/PsksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: importSitePsks
      tags:
      - Sites Psks
  /api/v1/sites/{site_id}/psks/{psk_id}:
    delete:
      description: Delete Site PSK
      operationId: deleteSitePsk
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSitePsk
      tags:
      - Sites Psks
    get:
      description: Get Site PSK Details
      operationId: getSitePsk
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSitePsk
      tags:
      - Sites Psks
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/psk_id'
    put:
      description: Update Site PSK
      operationId: updateSitePsk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  mac: string
                  name: string
                  passphrase: stringst
                  ssid: string
                  usage: multi
                  vlan_id: 1
            schema:
              $ref: '#/components/schemas/psk'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Psk'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSitePsk
      tags:
      - Sites Psks
  /api/v1/sites/{site_id}/rfdiags:
    get:
      description: List RF Glass Recording
      operationId: getSiteSiteRfdiagRecording
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RfdiagsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSiteRfdiagRecording
      tags:
      - Sites Rfdiags
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Start RF Glass Recording
      operationId: startSiteRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rf_diag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: startSiteRecording
      tags:
      - Sites Rfdiags
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}:
    delete:
      description: Delete Recording
      operationId: deleteSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteRfdiagRecording
      tags:
      - Sites Rfdiags
    get:
      description: Get RF Diage Recording Details
      operationId: getSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRfdiagRecording
      tags:
      - Sites Rfdiags
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
    put:
      description: Update Recording
      operationId: updateSiteRfdiagRecording
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rf_diag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rfdiag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteRfdiagRecording
      tags:
      - Sites Rfdiags
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/download:
    get:
      description: 'Download Recording

        Download raw_events blob'
      operationId: downloadSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: downloadSiteRfdiagRecording
      tags:
      - Sites Rfdiags
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
  /api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/stop:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rfdiag_id'
    post:
      description: If the recording session is active for the given rfdiag_id, it
        will finish the recording. duration and end_time will be updated to reflect
        the correct values.
      operationId: stopSiteRfdiagRecording
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: stopSiteRfdiagRecording
      tags:
      - Sites Rfdiags
  /api/v1/sites/{site_id}/rftemplates/derived:
    get:
      description: Get derived RF Templates for Site
      operationId: getSiteRfTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Rftemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRfTemplateDerived
      tags:
      - Sites RF Templates
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/events/count:
    get:
      description: Count Rogue Events
      operationId: countSiteRogueEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: bssid
          enum:
          - bssid
          - ssid
          - ap
          - type
          title: Site Rogue Events count distinct
          type: string
      - $ref: '#/components/parameters/rogue_type'
      - description: ssid of the network detected as threat
        in: query
        name: ssid
        schema:
          type: string
      - description: bssid of the network detected as threat
        in: query
        name: bssid
        schema:
          type: string
      - description: mac of the device that had strongest signal strength for ssid/bssid
          pair
        in: query
        name: ap_mac
        schema:
          type: string
      - description: channel over which ap_mac heard ssid/bssid pair
        in: query
        name: channel
        schema:
          type: string
      - description: whether the reporting AP see a wireless client (on LAN) connecting
          to it
        in: query
        name: seen_on_lan
        schema:
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteRogueEvents
      tags:
      - Sites Rogues
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/events/search:
    get:
      description: Search Rogue Events
      operationId: searchSiteRogueEvents
      parameters:
      - $ref: '#/components/parameters/rogue_type'
      - description: ssid of the network detected as threat
        in: query
        name: ssid
        schema:
          type: string
      - description: bssid of the network detected as threat
        in: query
        name: bssid
        schema:
          type: string
      - description: mac of the device that had strongest signal strength for ssid/bssid
          pair
        in: query
        name: ap_mac
        schema:
          type: string
      - description: channel over which ap_mac heard ssid/bssid pair
        in: query
        name: channel
        schema:
          type: integer
      - description: whether the reporting AP see a wireless client (on LAN) connecting
          to it
        in: query
        name: seen_on_lan
        schema:
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RogueEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteRogueEvents
      tags:
      - Sites Rogues
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rogues/{rogue_bssid}:
    get:
      description: Get Rogue AP Details
      operationId: getSiteRogueAP
      responses:
        '200':
          $ref: '#/components/responses/RogueDetails'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRogueAP
      tags:
      - Sites Rogues
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rogue_bssid'
  /api/v1/sites/{site_id}/rogues/{rogue_bssid}/deauth_clients:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rogue_bssid'
    post:
      description: Send Deauth frame to clients connected to a Rogue AP
      operationId: deauthSiteWirelessClientsConnectedToARogue
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deauthSiteWirelessClientsConnectedToARogue
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/rrm/current:
    get:
      description: Get Current Channel Planning
      operationId: getSiteCurrentChannelPlanning
      responses:
        '200':
          $ref: '#/components/responses/Rrm'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentChannelPlanning
      tags:
      - Sites RRM
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rrm/current/devices/{device_id}/band/{band}:
    get:
      description: Get Current RRM Considerations for an AP on a Specific Band
      operationId: getSiteCurrentRrmConsiderations
      responses:
        '200':
          $ref: '#/components/responses/RrmConsideration'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentRrmConsiderations
      tags:
      - Sites RRM
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    - description: 802.11 Band
      in: path
      name: band
      required: true
      schema:
        $ref: '#/components/schemas/dot11_band'
  /api/v1/sites/{site_id}/rrm/events:
    get:
      description: Get Site RRM Events
      operationId: getSiteRrmEvents
      parameters:
      - $ref: '#/components/parameters/dot11_band'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/RrmEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRrmEvents
      tags:
      - Sites RRM
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/rrm/neighbors//band/{band}:
    get:
      description: Get Current RRM observed neighbors
      operationId: getSiteCurrentRrmNeighbors
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/RrmNeighbors'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentRrmNeighbors
      tags:
      - Sites RRM
    parameters:
    - $ref: '#/components/parameters/site_id'
    - description: 802.11 Band
      in: path
      name: band
      required: true
      schema:
        $ref: '#/components/schemas/dot11_band'
  /api/v1/sites/{site_id}/rrm/optimize:
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Optimize Site RRM
      operationId: optimizeSiteRrm
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  bands:
                  - '24'
                  - '5'
                  - '6'
            schema:
              $ref: '#/components/schemas/utils_rrm_optimize'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: optimizeSiteRrm
      tags:
      - Utilities Wi-Fi
  /api/v1/sites/{site_id}/rssizones:
    get:
      description: Get List of Site RSSI Zone (RSSI-based)
      operationId: listSiteRssiZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rssi_zones'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteRssiZones
      tags:
      - Sites RSSI Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create RSSI Zone
      operationId: createSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssi_zone'
        description: Request Body
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    created_time: 0
                    devices:
                    - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                      rssi: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    modified_time: 0
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
              schema:
                $ref: '#/components/schemas/rssi_zone'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteRssiZone
      tags:
      - Sites RSSI Zones
  /api/v1/sites/{site_id}/rssizones/{rssizone_id}:
    delete:
      description: Delete Site RSSI Zone
      operationId: deleteSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteRssiZone
      tags:
      - Sites RSSI Zones
    get:
      description: Get Site RSSI Zone details
      operationId: getSiteRssiZone
      responses:
        '200':
          $ref: '#/components/responses/RssizonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteRssiZone
      tags:
      - Sites RSSI Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/rssizone_id'
    put:
      description: Update Site RSSI Zone
      operationId: updateSiteRssiZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  devices:
                  - device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    rssi: 0
                  name: string
            schema:
              $ref: '#/components/schemas/rssi_zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Rssizone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteRssiZone
      tags:
      - Sites RSSI Zones
  /api/v1/sites/{site_id}/servicepolicies/derived:
    get:
      description: Retrieves the list of Service Policies available for the Site
      operationId: listSiteServicePoliciesDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/ServicePoliciesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteServicePoliciesDerived
      tags:
      - Sites Service Policies
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/services/derived:
    get:
      description: Retrieves the list of Services available for the Site
      operationId: listSiteServicesDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/ServicesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteServicesDerived
      tags:
      - Sites Services
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/services/events/count:
    get:
      description: Count Service Path Events
      operationId: countSiteServicePathEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - mac
          - vpn_name
          - vpn_path
          - policy
          - port_id
          - model
          - site_id
          title: Site Service Events count distinct
          type: string
      - description: Event type, e.g. GW_SERVICE_PATH_DOWN
        in: query
        name: type
        schema:
          type: string
      - description: Description of the event including the reason it is triggered
        in: query
        name: text
        schema:
          type: string
      - description: Peer name
        in: query
        name: vpn_name
        schema:
          type: string
      - description: Peer path name
        in: query
        name: vpn_path
        schema:
          type: string
      - description: Service policy associated with that specific path
        in: query
        name: policy
        schema:
          type: string
      - description: Network interface
        in: query
        name: port_id
        schema:
          type: string
      - description: Device model
        in: query
        name: model
        schema:
          type: string
      - description: Device firmware version
        in: query
        name: version
        schema:
          type: string
      - description: Start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteServicePathEvents
      tags:
      - Sites Services
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/services/events/search:
    get:
      description: Search Service Path Events
      operationId: searchSiteServicePathEvents
      parameters:
      - description: Event type, e.g. GW_SERVICE_PATH_DOWN
        in: query
        name: type
        schema:
          type: string
      - description: Description of the event including the reason it is triggered
        in: query
        name: text
        schema:
          type: string
      - description: Peer name
        in: query
        name: vpn_name
        schema:
          type: string
      - description: Peer path name
        in: query
        name: vpn_path
        schema:
          type: string
      - description: Service policy associated with that specific path
        in: query
        name: policy
        schema:
          type: string
      - description: Network interface
        in: query
        name: port_id
        schema:
          type: string
      - description: Device model
        in: query
        name: model
        schema:
          type: string
      - description: Device firmware version
        in: query
        name: version
        schema:
          type: string
      - description: Start time, in epoch
        in: query
        name: timestamp
        schema:
          type: number
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ServicePathEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteServicePathEvents
      tags:
      - Sites Services
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/setting:
    get:
      description: Get Site Settings
      operationId: getSiteSetting
      responses:
        '200':
          $ref: '#/components/responses/SiteSettings'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSetting
      tags:
      - Sites Setting
    parameters:
    - $ref: '#/components/parameters/site_id'
    put:
      description: Update Site Settings
      operationId: updateSiteSettings
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  additional_config_cmds:
                  - set snmp community public
                  analytic:
                    enabled: false
                  ap_matching:
                    enabled: true
                    rules:
                    - eth1,eth2:
                        port_vlan_id: 1
                        vlan_ids:
                        - 1
                        - 10
                        - 50
                  ap_port_config:
                    model_specific:
                      AP32:
                        eth1,eth2:
                          port_vlan_id: 1
                          vlan_ids:
                          - 1
                          - 10
                          - 50
                  auto_placement:
                    orientation: 45
                    x: 30
                    y: 60
                  auto_preemption:
                    day_of_week: any
                    enabled: false
                    time_of_day: any
                  auto_upgrade:
                    custom_versions:
                      AP21: stable
                      AP41: 0.1.5135
                      AP61: 0.1.7215
                    day_of_week: sun
                    enabled: false
                    time_of_day: '12:00'
                    version: beta
                  blacklist_url: https://papi.s3.amazonaws.com/blacklist/xxx...
                  ble_config:
                    beacon_enabled: false
                    beacon_rate: 3
                    beacon_rate_mode: custom
                    beam_disabled:
                    - 1
                    - 3
                    - 6
                    custom_ble_packet_enabled: false
                    custom_ble_packet_frame: 0x........
                    custom_ble_packet_freq_msec: 300
                    eddystone_uid_adv_power: -65
                    eddystone_uid_beams: 2-4,7
                    eddystone_uid_enabled: false
                    eddystone_uid_freq_msec: 200
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_adv_power: -65
                    eddystone_url_beams: 2-4,7
                    eddystone_url_enabled: true
                    eddystone_url_freq_msec: 1000
                    eddystone_url_url: https://www.abc.com
                    ibeacon_adv_power: -65
                    ibeacon_beams: 2-4,7
                    ibeacon_enabled: false
                    ibeacon_freq_msec: 0
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    power: 10
                    power_mode: custom
                  config_auto_revert: false
                  created_time: 0
                  device_updown_threshold: 0
                  dns_servers:
                  - string
                  dns_suffix:
                  - string
                  engagement:
                    dwell_tag_names:
                      bounce: Bounce
                      engaged: Engaged
                      passerby: Passer By
                      stationed: Stationed
                    dwell_tags:
                      bounce: 'null'
                      engaged: 300-14400
                      passerby: 'null'
                      stationed: 14400-43200
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                      sat: 09:00-12:00
                      sun: 09:00-12:00
                      thu: 09:00-17:00
                      tue: 09:00-17:00
                      wed: 09:00-17:00
                    max_dwell: 43200
                    min_dwell: 0
                  evpn_options:
                    auto_loopback_subnet: 100.101.0.0/16
                    auto_router_id_subnet: 100.100.0.0/24
                    core_as_border: false
                    overlay:
                      as: 65000
                    per_vlan_vga_v4_mac: false
                    routed_at: edge
                    underlay:
                      as_base: 65001
                      routed_id_prefix: /24
                      subnet: 10.255.240.0/20
                  flags:
                    property1: string
                    property2: string
                  for_site: true
                  gateway_additional_config_cmds:
                  - set snmp community public
                  gateway_mgmt:
                    admin_sshkeys:
                    - string
                    app_probing:
                      apps:
                      - string
                      custom_apps:
                      - app_type: string
                        hostname:
                        - string
                        name: string
                        protocol: http
                      enabled: true
                    app_usage: true
                    auto_signature_update:
                      day_of_week: any
                      enable: true
                      time_of_day: string
                    config_revert_timer: 10
                    probe_hosts:
                    - string
                    root_password: string
                    security_log_source_address: string
                    security_log_source_interface: string
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f10
                  led:
                    brightness: 255
                    enabled: true
                  modified_time: 0
                  mxedge:
                    mist_das:
                      coa_servers:
                      - disable_event_timestamp_check: false
                        enabled: true
                        host: string
                        port: 3799
                        secret: string
                      enabled: false
                    radsec:
                      acct_servers:
                      - host: string
                        port: 1813
                        secret: string
                        ssids:
                        - string
                      auth_servers:
                      - host: string
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: string
                        keywrap_mack: string
                        port: 1812
                        secret: string
                        ssids:
                        - string
                      enabled: true
                      match_ssid: true
                      proxy_hosts:
                      - string
                      server_selection: ordered
                      source: any
                  mxedge_mgmt:
                    mist_password: MIST_PASSWORD
                    root_password: ROOT_PASSWORD
                  mxtunnels:
                    ap_subnets:
                    - 0.0.0.0/0
                    auto_preemption:
                      day_of_week: mon
                      enabled: false
                      time_of_day: '12:00'
                    clusters:
                    - name: primary,
                      tunterm_hosts:
                      - mxedge1
                      - mxedge2.local
                    created_time: 0
                    enabled: true
                    for_site: true
                    hello_interval: 60
                    hello_retries: 3
                    hosts:
                    - string
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f18
                    modified_time: 0
                    mtu: 1100
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    protocol: udp
                    radsec:
                      acct_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1813
                        secret: testing123
                      auth_servers:
                      - host: 1.2.3.4
                        keywrap_enabled: true
                        keywrap_format: hex
                        keywrap_kek: '1122334455'
                        keywrap_mack: '1122334455'
                        port: 1812
                        secret: testing123
                      enabled: false
                      use_mxedge: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    vlan_ids:
                    - 3
                    - 5
                    - 6
                    - 7-9
                  networks:
                    property1:
                      dns:
                      - string
                      dns_suffix:
                      - string
                      gateway: string
                      ospf_interface_type: string
                      subnet: string
                      vlan_id: 0
                      zone: string
                    property2:
                      dns:
                      - string
                      dns_suffix:
                      - string
                      gateway: string
                      ospf_interface_type: string
                      subnet: string
                      vlan_id: 0
                      zone: string
                  ntp_servers:
                  - string
                  occupancy:
                    assets_enabled: false
                    clients_enabled: true
                    min_duration: 3000
                    sdkclients_enabled: false
                    unconnected_clients_enabled: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  ospf_areas:
                    property1:
                      include_loopback: false
                      networks:
                        corp:
                          auth_keys:
                            '1': auth-key-1
                          auth_type: md5
                          bfd_minimum_interval: 500
                          dead_interval: 40
                          hello_interval: 10
                          interface_type: nbma
                          metric: 10000
                        guest:
                          passive: true
                      type: default
                    property2:
                      include_loopback: false
                      networks:
                        corp:
                          auth_keys:
                            '1': auth-key-1
                          auth_type: md5
                          bfd_minimum_interval: 500
                          dead_interval: 40
                          hello_interval: 10
                          interface_type: nbma
                          metric: 10000
                        guest:
                          passive: true
                      type: default
                  persist_config_on_device: false
                  port_mirroring:
                    property1:
                      egress_port_ids:
                      - ge-0/0/3
                      ingress_networks:
                      - corp
                      ingress_port_ids:
                      - ge-0/0/3
                      output_network: analyze
                      output_port_id: ge-0/0/5
                    property2:
                      egress_port_ids:
                      - ge-0/0/3
                      ingress_networks:
                      - corp
                      ingress_port_ids:
                      - ge-0/0/3
                      output_network: analyze
                      output_port_id: ge-0/0/5
                  port_usages:
                    dynamic:
                      mode: dynamic
                      reset_default_when: link_down
                      rules:
                      - equals: string
                        equals_any:
                        - string
                        expression: string
                        src: lldp_chassis_id
                        usage: string
                    property1:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                    property2:
                      all_networks: false
                      allow_dhcpd: true
                      authentication_protocol: pap
                      bypass_auth_when_server_down: true
                      description: string
                      disable_autoneg: false
                      disabled: false
                      duplex: auto
                      enable_mac_auth: true
                      enable_qos: true
                      guest_network: string
                      mac_auth_only: true
                      mac_limit: 0
                      mode: access
                      mtu: 0
                      networks:
                      - string
                      persist_mac: false
                      poe_disabled: false
                      port_auth: string
                      port_network: string
                      rejected_network: null
                      speed: string
                      storm_control:
                        no_broadcast: false
                        no_multicast: false
                        no_registered_multicast: false
                        no_unknown_unicast: false
                        percentage: 80
                      stp_edge: true
                      voip_network: string
                  proxy:
                    url: http://proxy.internal:8080/
                  radio_config:
                    allow_rrm_disable: false
                    ant_gain_24: 4
                    ant_gain_5: 5
                    ant_gain_6: 5
                    antenna_mode: default
                    band_24:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_24_usage: '5'
                    band_5:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_5_on_24_radio:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    band_6:
                      allow_rrm_disable: true
                      ant_gain: 0
                      antenna_mode: default
                      bandwidth: 20
                      channel: 0
                      channels:
                      - 0
                      disabled: true
                      power: 0
                      power_max: 0
                      power_min: 0
                      preamble: short
                      usage: '24'
                    indoor_use: false
                    scanning_enabled: true
                  radius_config:
                    acct_interim_interval: 0
                    acct_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1813
                      secret: testing123
                    auth_servers:
                    - host: 1.2.3.4
                      keywrap_enabled: true
                      keywrap_format: hex
                      keywrap_kek: '1122334455'
                      keywrap_mack: '1122334455'
                      port: 1812
                      secret: testing123
                    auth_servers_retries: 3
                    auth_servers_timeout: 5
                    coa_enabled: false
                    coa_port: 3799
                    network: string
                    source_ip: string
                  remote_syslog:
                    archive:
                      files: 20
                      size: 5m
                    console:
                      contents:
                      - facility: config
                        severity: warning
                    enabled: false
                    files:
                    - archive:
                        files: 10
                        size: 5m
                      contents:
                      - facility: config
                        severity: warning
                      explicit_priority: true
                      file: file-name
                      match: '!alarm|ntp|errors.crc_error[chan]'
                      structured_data: true
                    network: default
                    send_to_all_servers: false
                    servers:
                    - facility: config
                      host: syslogd.internal
                      port: 514
                      protocol: udp
                      severity: info
                      tag: ''
                    time_format: millisecond
                    users:
                    - contents:
                      - facility: config
                        severity: warning
                      match: '"!alarm|ntp|errors.crc_error[chan]"'
                      user: '*'
                  report_gatt: false
                  rogue:
                    enabled: false
                    honeypot_enabled: false
                    min_duration: 10
                    min_rssi: -80
                    whitelisted_bssids:
                    - NeighborSSID
                    whitelisted_ssids:
                    - cc:8e:6f:d4:bf:16
                    - cc-8e-6f-d4-bf-16
                    - cc-73-*
                    - cc:82:*
                  rtsa:
                    app_waking: false
                    disable_dead_reckoning: true
                    disable_pressure_sensor: false
                    enabled: true
                    track_asset: false
                  simple_alert:
                    arp_failure:
                      client_count: 10
                      duration: 20
                      incident_count: 10
                    dhcp_failure:
                      client_count: 10
                      duration: 10
                      incident_count: 20
                    dns_failure:
                      client_count: 20
                      duration: 10
                      incident_count: 30
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  skyatp:
                    enabled: true
                    send_ip_mac_mapping: true
                  srx_app:
                    enabled: false
                  ssh_keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAA...Wxa6p6UW0ZbcP john@host
                  ssr:
                    conductor_hosts:
                    - '"1.1.1.1", "2.2.2.2"'
                    disable_stats: true
                  status_portal:
                    enabled: false
                    hostnames:
                    - my.misty.com
                  switch_matching:
                    additional_config_cmds:
                    - set snmp community public
                    enabled: false
                    rules:
                    - {}
                  switch_mgmt:
                    ap_affinity_threshold: 10
                    config_revert_timer: 10
                    dhcp_option_fqdn: false
                    mxedge_proxy_host: string
                    mxedge_proxy_port: 2222
                    protect_re:
                      allowed_services:
                      - '["snmp", "icmp"]'
                      custom:
                      - port_range: string
                        protocol: any
                        subnets:
                        - string
                      enabled: true
                      trusted_hosts:
                      - '["10.242.3.0/24"]'
                    root_password: string
                    tacacs:
                      acct_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                      enabled: true
                      network: string
                      tacplus_servers:
                      - host: 198.51.100.1
                        port: '49'
                        secret: string
                        timeout: 10
                    use_mxedge_proxy: true
                  track_anonymous_devices: false
                  tunterm_monitoring:
                  - host: 10.2.8.15
                    port: 80
                    protocol: tcp
                    timeout: 300
                  tunterm_monitoring_disabled: false
                  vars:
                    RADIUS_IP1: 172.31.2.5
                    RADIUS_SECRET: 11s64632d
                  vna:
                    enabled: false
                  vrf_instances:
                    guest:
                      extra_routes:
                        0.0.0.0/0:
                          via: 192.168.31.1
                      networks:
                      - guest
                  vrrp_groups:
                    property1:
                      auth_key: auth-key-1
                      auth_password: string
                      auth_type: md5
                      networks:
                        data:
                          ip: 10.182.96.1
                        mgmt:
                          ip: 10.182.104.1
                        v10:
                          ip: 10.182.104.129
                        wap:
                          ip: 10.182.102.1
                    property2:
                      auth_key: auth-key-1
                      auth_password: string
                      auth_type: md5
                      networks:
                        data:
                          ip: 10.182.96.1
                        mgmt:
                          ip: 10.182.104.1
                        v10:
                          ip: 10.182.104.129
                        wap:
                          ip: 10.182.102.1
                  vs_instances:
                    property1:
                      networks:
                      - guest
                    property2:
                      networks:
                      - guest
                  wan_vna:
                    enabled: false
                  watched_station_url: https://papi.s3.amazonaws.com/watched_station/xxx...
                  whitelist_url: https://papi.s3.amazonaws.com/whitelist/xxx...
                  wids:
                    repeated_auth_failures:
                      duration: 60
                      threshold: 0
                  wifi:
                    cisco_enabled: true
                    disable_11k: false
                    disable_radios_when_power_constrained: false
                    enable_arp_spoof_check: false
                    enable_shared_radio_scanning: true
                    enabled: true
                    locate_connected: true
                    locate_unconnected: false
                    mesh_allow_dfs: false
                    mesh_enable_crm: false
                    mesh_enabled: false
                    mesh_psk: string
                    mesh_ssid: string
                    proxy_arp: default
                  wired_vna:
                    enabled: false
                  zone_occupancy_alert:
                    email_notifiers:
                    - foo@juniper.net
                    - bar@juniper.net
                    enabled: false
                    threshold: 5
            schema:
              $ref: '#/components/schemas/site_setting'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SiteSettings'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteSettings
      tags:
      - Sites Setting
  /api/v1/sites/{site_id}/setting/blacklist:
    delete:
      description: Delete Site Blacklist Station Clients
      operationId: deleteSiteWirelessClientsBlocklist
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWirelessClientsBlocklist
      tags:
      - Sites Setting
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'This endpoint is to provide list of client macs for annotation
        blacklist.


        Retrieve the current clients list `blacklist_url` under Site:Setting'
      operationId: createSiteWirelessClientsBlocklist
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                  - 18-65-90-de-f4-c6
                  - 84-89-ad-5d-69-0d
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/MacsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWirelessClientsBlocklist
      tags:
      - Sites Setting
  /api/v1/sites/{site_id}/setting/jse/info:
    get:
      description: Retrieves the list of JSE orgs associated with the account
      operationId: getSiteJseInfo
      responses:
        '200':
          $ref: '#/components/responses/JseInfo'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteJseInfo
      tags:
      - Sites JSE
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/setting/watched_station:
    delete:
      description: Delete Site Watched Station Clients
      operationId: deleteSiteWatchedStations
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWatchedStations
      tags:
      - Sites Setting
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'This endpoint is to provide list of client macs for annotation
        as watched station.


        Retrieve the current clients list from `watched_station_url` under Site:Setting'
      operationId: createSiteWatchedStations
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  macs:
                  - 18-65-90-de-f4-c6
                  - 84-89-ad-5d-69-0d
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/MacsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWatchedStations
      tags:
      - Sites Setting
  /api/v1/sites/{site_id}/setting/whitelist:
    delete:
      description: Delete Site Whitelist Station Clients
      operationId: deleteSiteWirelessClientsAllowlist
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWirelessClientsAllowlist
      tags:
      - Sites Setting
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: 'This endpoint is to provide list of client macs for annotation
        as whitelist.


        Retrieve the current clients list from `whitelist_url` under Site:Setting'
      operationId: createSiteWirelessClientsAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mac_addresses'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/MacsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWirelessClientsAllowlist
      tags:
      - Sites Setting
  /api/v1/sites/{site_id}/sitetemplates/derived:
    get:
      description: Get derived Site Templates for Site
      operationId: getSiteSiteTemplateDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/SiteTemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSiteTemplateDerived
      tags:
      - Sites Site Templates
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/skyatp/events/count:
    get:
      description: Count by Distinct Attributes of Skyatp Events (WIP)
      operationId: countSiteSkyatpEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - mac
          - device_mac
          - threat_level
          title: Site SkyATP Events count distinct
          type: string
      - description: event type, e.g. cc, fs, mw
        in: query
        name: type
        schema:
          type: string
      - description: client MAC
        in: query
        name: mac
        schema:
          type: string
      - description: device MAC
        in: query
        name: device_mac
        schema:
          type: string
      - description: threat level
        in: query
        name: threat_level
        schema:
          type: integer
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteSkyatpEvents
      tags:
      - Sites Skyatp
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/skyatp/events/search:
    get:
      description: Search Skyatp Events (WIP)
      operationId: searchSiteSkyatpEvents
      parameters:
      - description: event type, e.g. cc, fs, mw
        in: query
        name: type
        schema:
          type: string
      - description: client MAC
        in: query
        name: mac
        schema:
          type: string
      - description: device MAC
        in: query
        name: device_mac
        schema:
          type: string
      - description: threat level
        in: query
        name: threat_level
        schema:
          type: integer
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SkyAtpEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteSkyatpEvents
      tags:
      - Sites Skyatp
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifier/{classifier}/summary:
    get:
      description: Get SLE classifier details
      operationId: getSiteSleClassifierDetails
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SleClassifierSummary'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleClassifierDetails
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        title: sle_summary_scope
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
    - in: path
      name: classifier
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifiers:
    get:
      description: Get the list of classifiers for a specific metric
      operationId: getSiteSleMetricClassifiers
      responses:
        '200':
          content:
            application/json:
              examples:
                example:
                  value:
                  - asymmetry-uplink
                  - weak-signal
                  - asymmetry-downlink
              schema:
                $ref: '#/components/schemas/strings'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleMetricClassifiers
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/histogram:
    get:
      description: Get the histogram for the SLE metric
      operationId: getSiteSleHistogram
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SleHistogram'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleHistogram
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impact-summary:
    get:
      description: "Get impact summary counts optionally filtered by classifier and\
        \ failure type\n \n* Wireless SLE Fields: `wlan`, `device_type`, `device_os`\
        \ ,`band`, `ap`, `server`, `mxedge`\n* Wired SLE Fields: `switch`, `client`,\
        \ `vlan`, `interface`, `chassis`\n* WAN SLE Fields: `gateway`, `client`, `interface`,\
        \ `chassis`, `peer_path`, `gateway_zones`"
      operationId: getSiteSleImpactSummary
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: fields
        schema:
          enum:
          - wlan
          - device_type
          - device_os
          - band
          - ap
          - server
          - mxedge
          - switch
          - client
          - vlan
          - interface
          - chassis
          - gateway
          - peer_path
          - gateway_zones
          type: string
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactSummary'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactSummary
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-applications:
    get:
      description: For WAN SLEs. Get list of impacted interfaces optionally filtered
        by classifier and failure type
      operationId: getSiteSleImpactedApplications
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedApplications'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedApplications
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - switch
        - gateway
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-aps:
    get:
      description: For Wireless SLEs. Get list of impacted APs optionally filtered
        by classifier and failure type
      operationId: getSiteSleImpactedAps
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedAps'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedAps
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-chassis:
    get:
      description: For Wired and WAN SLEs. Get list of impacted interfaces optionally
        filtered by classifier and failure type
      operationId: getSiteSleImpactedChassis
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedChassis'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedChassis
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - switch
        - gateway
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-clients:
    get:
      description: For Wired SLEs. Get list of impacted interfaces optionally filtered
        by classifier and failure type
      operationId: getSiteSleImpactedWiredClients
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedClients'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedWiredClients
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - switch
        - gateway
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-gateways:
    get:
      description: For WAN SLEs. Get list of impacted interfaces optionally filtered
        by classifier and failure type
      operationId: getSiteSleImpactedGateways
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedGateways'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedGateways
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-interfaces:
    get:
      description: For Wired and WAN SLEs. Get list of impacted interfaces optionally
        filtered by classifier and failure type
      operationId: getSiteSleImpactedInterfaces
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedInterfaces'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedInterfaces
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - switch
        - gateway
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-switches:
    get:
      description: For Wired SLEs. Get list of impacted switches optionally filtered
        by classifier and failure type
      operationId: getSiteSleImpactedSwitches
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedSwitches'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedSwitches
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-users:
    get:
      description: For Wireless SLEs. Get list of impacted wireless users optionally
        filtered by classifier and failure type
      operationId: getSiteSleImpactedWirelessClients
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - in: query
        name: classifier
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SleImpactedUsers'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleImpactedWirelessClients
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        title: sle_impacted_users_scope
        type: string
    - in: path
      name: scope_id
      required: true
      schema:
        format: uuid
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/summary:
    get:
      description: ' Get the summary for the SLE metric'
      operationId: getSiteSleSummary
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SleSummary'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleSummary
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold:
    get:
      description: Get the SLE threshold
      operationId: getSiteSleThreshold
      responses:
        '200':
          $ref: '#/components/responses/SleThreshold'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSleThreshold
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        title: sle_threshold_scope
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
    - description: values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics
      in: path
      name: metric
      required: true
      schema:
        type: string
    post:
      description: Replace the SLE threshold
      operationId: replaceSiteSleThreshold
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  maximum: -60
                  minimum: -90
            schema:
              $ref: '#/components/schemas/sle_threshold'
      responses:
        '200':
          $ref: '#/components/responses/SleThreshold'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: replaceSiteSleThreshold
      tags:
      - Sites SLEs
    put:
      description: Update the SLE threshold
      operationId: updateSiteSleThreshold
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  maximum: -60
                  minimum: -90
            schema:
              $ref: '#/components/schemas/sle_threshold'
      responses:
        '200':
          $ref: '#/components/responses/SleThreshold'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteSleThreshold
      tags:
      - Sites SLEs
  /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics:
    get:
      description: Get the list of metrics for the given scope
      operationId: getSiteSlesMetrics
      responses:
        '200':
          $ref: '#/components/responses/SiteSleMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSlesMetrics
      tags:
      - Sites SLEs
    parameters:
    - $ref: '#/components/parameters/site_id'
    - in: path
      name: scope
      required: true
      schema:
        enum:
        - site
        - ap
        - switch
        - gateway
        - client
        type: string
    - description: '* site_id if `scope`==`site`

        * device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`

        * mac if `scope`==`client`'
      in: path
      name: scope_id
      required: true
      schema:
        type: string
  /api/v1/sites/{site_id}/ssr/upgrade/{upgrade_id}:
    get:
      description: Get Specific Site SSR Upgrade
      operationId: getSiteSsrUpgrade
      responses:
        '200':
          $ref: '#/components/responses/SsrUpgradeStatus'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSsrUpgrade
      tags:
      - Utilities Upgrade
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/upgrade_id'
  /api/v1/sites/{site_id}/ssr/{device_id}/upgrade:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
    post:
      description: Upgrade Site SSR device
      operationId: upgradeSiteSsr
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  channel: stable
                  version: 5.3.1-170-93
            schema:
              $ref: '#/components/schemas/ssr_upgrade'
      responses:
        '200':
          $ref: '#/components/responses/SsrUpgrade'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: upgradeSiteSsr
      tags:
      - Utilities Upgrade
  /api/v1/sites/{site_id}/stats:
    get:
      description: Get Site Stats
      operationId: getSiteStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    address: string
                    alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    country_code: string
                    created_time: 0
                    id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    lat: 0
                    latlng:
                      lat: 0
                      lng: 0
                    lng: 0
                    modified_time: 0
                    msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    name: string
                    networktemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    num_ap: 0
                    num_ap_connected: 0
                    num_clients: 0
                    num_devices: 0
                    num_devices_connected: 0
                    num_gateway: 0
                    num_gateway_connected: 0
                    num_switch: 0
                    num_switch_connected: 0
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rftemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                    timezone: string
                    tzoffset: 0
              schema:
                $ref: '#/components/schemas/site_stats'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteStats
      tags:
      - Sites
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/apps/count:
    get:
      description: Count by Distinct Attributes of Applications
      operationId: countSiteApps
      parameters:
      - description: Default for wireless devices is `ap`. Default for wired devices
          is `device_mac`
        in: query
        name: distinct
        schema:
          enum:
          - ap
          - wcid
          - ssid
          - wlan_id app
          - device_mac
          - src_ip
          - port_id
          - app
          - category
          - service
          title: Site Apps count distinct
          type: string
      - description: MAC of the device
        in: query
        name: device_mac
        schema:
          type: string
      - description: Application name
        in: query
        name: app
        schema:
          type: string
      - description: If a device is wired or wireless. Default is False.
        in: query
        name: wired
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteApps
      tags:
      - Sites Applications
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets:
    get:
      description: Get List of Site Assets Stats
      operationId: listSiteAssetsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteAssetsStats
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/asset_id:
    get:
      description: Get Site Asset Details
      operationId: getSiteAssetStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetStats
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/count:
    get:
      description: Count Asset by distinct field
      operationId: countSiteAssets
      parameters:
      - in: query
        name: distinct
        schema:
          default: map_id
          enum:
          - mac
          - map_id
          - ibeacon_uuid
          - ibeacon_major
          - ibeacon_minor
          - eddystone_uid_namespace
          - eddystone_uid_instance
          - eddystone_url
          - by
          - name
          - device_name
          title: Site Assets count distinct
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteAssets
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/assets/search:
    get:
      description: Assets Search
      operationId: searchSiteAssets
      parameters:
      - in: query
        name: mac
        schema:
          type: string
      - in: query
        name: map_id
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_uuid
        schema:
          format: uuid
          type: string
      - in: query
        name: ibeacon_major
        schema:
          type: integer
      - in: query
        name: ibeacon_minor
        schema:
          type: integer
      - in: query
        name: eddystone_uid_namespace
        schema:
          type: string
      - in: query
        name: eddystone_uid_instance
        schema:
          type: string
      - in: query
        name: eddystone_url
        schema:
          type: string
      - in: query
        name: device_name
        schema:
          type: string
      - in: query
        name: by
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: ap_mac
        schema:
          type: string
      - in: query
        name: beam
        schema:
          type: string
      - in: query
        name: rssi
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/AssetsArrayStatsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteAssets
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/beacons:
    get:
      description: Get List of Site Beacons Stats
      operationId: listSiteBeaconsStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/beacon_stats'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteBeaconsStats
      tags:
      - Sites Beacons
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/bgp_peers/count:
    get:
      description: Count BGP Stats
      operationId: countSiteBgpStats
      parameters:
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: distinct
        schema:
          title: Site BGP Peers count distinct
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteBgpStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/bgp_peers/search:
    get:
      description: Search BGP Stats
      operationId: searchSiteBgpStats
      responses:
        '200':
          $ref: '#/components/responses/BgpStatsArraySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteBgpStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/calls/client/{client_mac}/troubleshoot:
    get:
      description: Troubleshoot a call
      operationId: troubleshootSiteCall
      parameters:
      - description: meeting_id
        in: query
        name: meeting_id
        required: true
        schema:
          type: string
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Third party app name
        in: query
        name: app
        schema:
          example: zoom
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/CallTroubleshoot'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: troubleshootSiteCall
      tags:
      - Sites Calls
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/stats/calls/count:
    get:
      description: Count by Distinct Attributes of Calls
      operationId: countSiteCalls
      parameters:
      - in: query
        name: distrinct
        schema:
          default: mac
          enum:
          - mac
          type: string
      - description: feedback rating (e.g. "rating=1" or "rating=1,2")
        in: query
        name: rating
        schema:
          maximum: 5
          minimum: 1
          type: integer
      - in: query
        name: app
        schema:
          type: string
      - in: query
        name: start
        schema:
          type: string
      - in: query
        name: end
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteCalls
      tags:
      - Sites Calls
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/calls/search:
    get:
      description: Search Calls
      operationId: searchSiteCalls
      parameters:
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Third party app name
        in: query
        name: app
        schema:
          example: zoom
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/CallStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteCalls
      tags:
      - Sites Calls
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/calls/troubleshoot:
    get:
      description: Summary of calls troubleshoot by site
      operationId: listSiteTroubleshootCalls
      parameters:
      - description: meeting_id
        in: query
        name: meeting_id
        required: true
        schema:
          type: string
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Third party app name
        in: query
        name: app
        schema:
          example: zoom
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/CallTroubleshootSummary'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteTroubleshootCalls
      tags:
      - Sites Calls
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/stats/clients:
    get:
      description: Get List of Site All Clients Stats Details
      operationId: listSiteWirelessClientsStats
      parameters:
      - in: query
        name: wired
        schema:
          default: false
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWirelessClientsStats
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/clients/{client_mac}:
    get:
      description: Get Site Client Stats Details
      operationId: getSiteWirelessClientStats
      parameters:
      - in: query
        name: wired
        schema:
          default: false
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_stats'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWirelessClientStats
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/client_mac'
  /api/v1/sites/{site_id}/stats/devices:
    get:
      description: Get List of Site Devices Stats
      operationId: listSiteDevicesStats
      parameters:
      - in: query
        name: type
        schema:
          $ref: '#/components/schemas/device_type_with_all'
      - in: query
        name: status
        schema:
          default: all
          enum:
          - all
          - connected
          - disconnected
          title: stat_device_status_filter
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/DevicesArrayStatsSite'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDevicesStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/devices/{device_id}:
    get:
      description: Get Site Device Stats Details
      operationId: getSiteDeviceStats
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_stats'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDeviceStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
  /api/v1/sites/{site_id}/stats/devices/{device_id}/clients:
    get:
      description: Get wireless client stat by Device
      operationId: getSiteAllClientsStatsByDevice
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_wireless_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAllClientsStatsByDevice
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/device_id'
  /api/v1/sites/{site_id}/stats/discovered_assets:
    get:
      description: "Get List of Site Discovered BLE Assets that doesn\u2019t match\
        \ any of the Asset / Assetfilters"
      operationId: listSiteDiscoveredAssets
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteDiscoveredAssets
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_switch_metrics/search:
    get:
      description: Search Discovered Switch Metrics
      operationId: searchSiteDiscoveredSwitchesMetrics
      parameters:
      - description: metric scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - switch
          type: string
      - description: metric type
        in: query
        name: type
        schema:
          enum:
          - inactive_wired_vlans
          - switch_ap_affinity
          - poe_compliance
          - version_compliance
          title: Discovered Switch Type
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DiscoveredSwitchMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDiscoveredSwitchesMetrics
      tags:
      - Sites Devices - Discovered Switches
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_switches/count:
    get:
      description: Count Discovered Switches
      operationId: countSiteDiscoveredSwitches
      parameters:
      - in: query
        name: distinct
        schema:
          default: system_name
          enum:
          - system_name
          - version
          - model
          - mgmt_addr
          title: Site Discovered Switches count distinct
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteDiscoveredSwitches
      tags:
      - Sites Devices - Discovered Switches
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_switches/metrics:
    get:
      description: Discovered switches related metrics, lists related switch system
        names & details if not compliant
      operationId: getSiteDiscoveredSwitchesMetrics
      parameters:
      - description: 'configurable # ap per switch threshold, default 12'
        in: query
        name: threshold
        schema:
          type: string
      - description: system name for switch level metrics, optional
        in: query
        name: system_name
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DiscoveredSwitchesMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDiscoveredSwitchesMetrics
      tags:
      - Sites Devices - Discovered Switches
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/discovered_switches/search:
    get:
      description: Search Discovered Switches
      operationId: searchSiteDiscoveredSwitches
      parameters:
      - in: query
        name: adopted
        schema:
          type: boolean
      - in: query
        name: system_name
        schema:
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: vendor
        schema:
          type: string
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/DiscoveredSwitches'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteDiscoveredSwitches
      tags:
      - Sites Devices - Discovered Switches
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/filtered_assets:
    get:
      description: Get a list of BLE beacons that matches Asset or AssetFilter
      operationId: getSiteAssetsOfInterest
      parameters:
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/AssetOfInterestArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteAssetsOfInterest
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/gateways/metrics:
    get:
      description: Get Site Gateway Metrics
      operationId: getSiteGatewayMetrics
      responses:
        '200':
          $ref: '#/components/responses/GatewayMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteGatewayMetrics
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/clients:
    get:
      description: Get Site Clients Stats By Map
      operationId: getSiteWirelessClientsStatsByMap
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_wireless_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWirelessClientsStatsByMap
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/discovered_assets:
    get:
      description: "Get a list of BLE beacons that we discovered (whether they\u2019\
        re defined as assets or not)"
      operationId: getSiteDiscoveredAssetByMap
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteDiscoveredAssetByMap
      tags:
      - Sites Assets
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/sdkclients:
    get:
      description: Get SdkClient Stats By Map
      operationId: getSiteSdkStatsByMap
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sdkclient_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStatsByMap
      tags:
      - Sites Clients - SDK
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/maps/{map_id}/unconnected_clients:
    get:
      description: Get List of Site Unconnected Client Location
      operationId: listSiteUnconnectedClientStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                  - ap_mac: 5c5b350e0410
                    last_seen: 1428939600
                    mac: 5684dae9ac8b
                    manufacture: Apple
                    map_id: ea77be98-ab51-4ff8-a863-ac3c8e1b1c3a
                    rssi: -75
                    x: 60
                    y: 80
              schema:
                $ref: '#/components/schemas/unconnected_client_stats_array'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteUnconnectedClientStats
      tags:
      - Sites Clients - Wireless
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/map_id'
  /api/v1/sites/{site_id}/stats/mxedges:
    get:
      description: Get List of Site MxEdges Stats
      operationId: listSiteMxEdgesStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteMxEdgesStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/mxedges/{mxedge_id}:
    get:
      description: Get One Site MxEdge Stats
      operationId: getSiteMxEdgeStats
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/MxedgeStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteMxEdgeStats
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/mxedge_id'
  /api/v1/sites/{site_id}/stats/ports/count:
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countSiteSwOrGwPorts
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - port_id
          - port_mac
          - full_duplex
          - mac
          - neighbor_mac
          - neighbor_port_desc
          - neighbor_system_name
          - poe_disabled
          - poe_mode
          - poe_on
          - speed
          - up
          title: Site Ports count distinct
          type: string
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          enum:
          - forwarding
          - blocking
          - learning
          - listening
          - disabled
          type: string
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          enum:
          - designated
          - backup
          - alternate
          - root
          - root-prevented
          type: string
      - description: if `up`==`true` && has Authenticator role
        in: query
        name: auth_state
        schema:
          enum:
          - init
          - authenticated
          - authenticating
          - held
          type: string
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteSwOrGwPorts
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/ports/search:
    get:
      description: Search Switch / Gateway Ports
      operationId: searchSiteSwOrGwPorts
      parameters:
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: device type
        in: query
        name: device_type
        schema:
          enum:
          - ap
          - ble
          - switch
          - gateway
          - mxedge
          - nac
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Output errors
        in: query
        name: tx_errors
        schema:
          type: integer
      - description: Input errors
        in: query
        name: rx_errors
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: Limit on number of dynamically learned macs
        in: query
        name: mac_limit
        schema:
          type: integer
      - description: Number of mac addresses in the forwarding table
        in: query
        name: mac_count
        schema:
          type: integer
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - description: indicates if interface is active/inactive
        in: query
        name: active
        schema:
          type: boolean
      - description: Last sampled jitter of the interface
        in: query
        name: jitter
        schema:
          type: number
      - description: Last sampled loss of the interface
        in: query
        name: loss
        schema:
          type: number
      - description: Last sampled latency of the interface
        in: query
        name: latency
        schema:
          type: number
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          enum:
          - forwarding
          - blocking
          - learning
          - listening
          - disabled
          type: string
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          enum:
          - designated
          - backup
          - alternate
          - root
          - root-prevented
          type: string
      - description: Optic Slot Partnumber, Check for null/empty
        in: query
        name: xcvr_part_number
        schema:
          type: string
      - description: if `up`==`true` && has Authenticator role
        in: query
        name: auth_state
        schema:
          enum:
          - init
          - authenticated
          - authenticating
          - held
          type: string
      - description: LTE IMSI value, Check for null/empty
        in: query
        name: lte_imsi
        schema:
          type: string
      - description: LTE ICCID value, Check for null/empty
        in: query
        name: lte_iccid
        schema:
          type: string
      - description: LTE IMEI value, Check for null/empty
        in: query
        name: lte_imei
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SwitchPortsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteSwOrGwPorts
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/sdkclients/{sdkclient_id}:
    get:
      description: Get Detail Stats of a SdkClient
      operationId: getSiteSdkStats
      responses:
        '200':
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: de87bf9d-183f-e383-cc68-6ba43947d403
                    last_seen: 1428939600
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: John's iPhone
                    network_connection:
                      mac: c3-b6-e5-af-41-15
                      rssi: -75
                      signal_level: 3
                      type: WiFi
                    uuid: ada72f8f-1643-e5c6-94db-f2a5636f1a64
                    vbeacons:
                    - id: d379d29d-24b4-96c5-5dd4-6f2a2dc5aaeb
                      since: 1428939300
                    x: 60
                    y: 80
                    zones:
                    - id: 8ac84899-32db-6327-334c-9b6d58544cfe
                      since: 1428939600
              schema:
                $ref: '#/components/schemas/sdkclient_wireless_stats'
          description: OK
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSdkStats
      tags:
      - Sites Clients - SDK
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/sdkclient_id'
  /api/v1/sites/{site_id}/stats/switch_ports/count:
    get:
      description: Count by Distinct Attributes of Switch/Gateway Ports
      operationId: countSiteSwitchPorts
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - port_id
          - port_mac
          - full_duplex
          - mac
          - neighbor_mac
          - neighbor_port_desc
          - neighbor_system_name
          - poe_disabled
          - poe_mode
          - poe_on
          - speed
          - up
          title: Site Switch Ports count distinct
          type: string
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          enum:
          - forwarding
          - blocking
          - learning
          - listening
          - disabled
          type: string
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          enum:
          - designated
          - backup
          - alternate
          - root
          - root-prevented
          type: string
      - description: if `up`==`true`
        in: query
        name: auth_state
        schema:
          enum:
          - init
          - authenticated
          - authenticating
          - held
          type: string
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteSwitchPorts
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/switch_ports/search:
    get:
      description: Search Switch / Gateway Ports
      operationId: searchSiteSwitchPorts
      parameters:
      - description: indicates full or half duplex
        in: query
        name: full_duplex
        schema:
          type: boolean
      - description: device identifier
        in: query
        name: mac
        schema:
          type: string
      - description: Chassis identifier of the chassis type listed
        in: query
        name: neighbor_mac
        schema:
          type: string
      - description: "Description supplied by the system on the interface E.g. \u201C\
          GigabitEthernet2/0/39\u201D"
        in: query
        name: neighbor_port_desc
        schema:
          type: string
      - description: "Name supplied by the system on the interface E.g. neighbor system\
          \ name E.g. \u201CKumar-Acc-SW.mist.local\u201D"
        in: query
        name: neighbor_system_name
        schema:
          type: string
      - description: is the POE configured not be disabled.
        in: query
        name: poe_disabled
        schema:
          type: boolean
      - description: "poe mode depending on class E.g. \u201C802.3at\u201D"
        in: query
        name: poe_mode
        schema:
          type: string
      - description: is the device attached to POE
        in: query
        name: poe_on
        schema:
          type: boolean
      - description: interface name
        in: query
        name: port_id
        schema:
          type: string
      - description: interface mac address
        in: query
        name: port_mac
        schema:
          type: string
      - description: Amount of power being used by the interface at the time the command
          is executed. Unit in watts.
        in: query
        name: power_draw
        schema:
          type: number
      - description: Output packets
        in: query
        name: tx_pkts
        schema:
          type: integer
      - description: Input packets
        in: query
        name: rx_pkts
        schema:
          type: integer
      - description: Input bytes
        in: query
        name: rx_bytes
        schema:
          type: integer
      - description: Output rate
        in: query
        name: tx_bps
        schema:
          type: integer
      - description: Input rate
        in: query
        name: rx_bps
        schema:
          type: integer
      - description: Multicast output packets
        in: query
        name: tx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast output packets
        in: query
        name: tx_bcast_pkts
        schema:
          type: integer
      - description: Multicast input packets
        in: query
        name: rx_mcast_pkts
        schema:
          type: integer
      - description: Broadcast input packets
        in: query
        name: rx_bcast_pkts
        schema:
          type: integer
      - description: port speed
        in: query
        name: speed
        schema:
          type: integer
      - description: if `up`==`true`
        in: query
        name: stp_state
        schema:
          enum:
          - forwarding
          - blocking
          - learning
          - listening
          - disabled
          type: string
      - description: if `up`==`true`
        in: query
        name: stp_role
        schema:
          enum:
          - designated
          - backup
          - alternate
          - root
          - root-prevented
          type: string
      - description: if `up`==`true` && has Authenticator role
        in: query
        name: auth_state
        schema:
          enum:
          - init
          - authenticated
          - authenticating
          - held
          type: string
      - description: indicates if interface is up
        in: query
        name: up
        schema:
          type: boolean
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SwitchPortsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteSwitchPorts
      tags:
      - Sites Devices Stats
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/switches/metrics:
    get:
      description: Get version compliance metrics for managed or monitored switches
      operationId: getSiteSwitchesMetrics
      parameters:
      - in: query
        name: type
        schema:
          enum:
          - active_ports_summary
          title: Switch Metric Type
          type: string
      - in: query
        name: scope
        schema:
          enum:
          - site
          - switch
          title: Switch Metric Scope
          type: string
      - description: switch mac, used only with metric `type`==`active_ports_summary`
        in: query
        name: switch_mac
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SwitchMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSwitchesMetrics
      tags:
      - Sites Devices - Wired
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/wxrules:
    get:
      description: Get Wxlan Rule usage
      operationId: getSiteWxRulesUsage
      responses:
        '200':
          $ref: '#/components/responses/WxruleStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRulesUsage
      tags:
      - Sites WxRules
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/zones:
    get:
      description: Get List of Site Zones Stats
      operationId: listSiteZonesStats
      parameters:
      - example: 00000000-0000-0000-0000-000000000000
        in: query
        name: map_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ZoneStatsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZonesStats
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/stats/{zone_type}/{zone_id}:
    get:
      description: Get Detail Zone Stats
      operationId: getSiteZoneStats
      responses:
        '200':
          $ref: '#/components/responses/ZoneStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZoneStats
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
    - $ref: '#/components/parameters/zone_id'
  /api/v1/sites/{site_id}/subscriptions:
    delete:
      description: Unsubscribe to Site Alarms
      operationId: UnsubscribeSiteAlarms
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: UnsubscribeSiteAlarms
      tags:
      - Sites Alarms
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Subscribe to Site Alarms
      operationId: SubscribeSiteAlarms
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: SubscribeSiteAlarms
      tags:
      - Sites Alarms
  /api/v1/sites/{site_id}/synthetic_test:
    get:
      description: Get Synthetic Testing Status
      operationId: getSiteSyntheticTestStatus
      responses:
        '200':
          $ref: '#/components/responses/SynthetictestStatus'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteSyntheticTestStatus
      tags:
      - Sites Synthetic Tests
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Trigger Synthetic Testing
      operationId: triggerSiteSyntheticTest
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  email: test@mist.com
            schema:
              $ref: '#/components/schemas/synthetic_test'
      responses:
        '200':
          $ref: '#/components/responses/SyntheticTest'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: triggerSiteSyntheticTest
      tags:
      - Sites Synthetic Tests
  /api/v1/sites/{site_id}/synthetic_test/search:
    get:
      description: Search Site Synthetic Testing
      operationId: searchSiteSyntheticTest
      parameters:
      - description: Device MAC Address
        in: query
        name: mac
        schema:
          type: string
      - description: port_id used to run the test (for SSR only)
        in: query
        name: port_id
        schema:
          type: string
      - description: VLAN ID
        in: query
        name: vlan_id
        schema:
          type: string
      - description: entity who triggers the test
        in: query
        name: by
        schema:
          type: string
      - description: test failure reason
        in: query
        name: reason
        schema:
          type: string
      - description: synthetic test type
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/synthetic_test_type'
      responses:
        '200':
          $ref: '#/components/responses/SynthetictestSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteSyntheticTest
      tags:
      - Sites Synthetic Tests
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/uisettings:
    get:
      description: Site UI settings
      operationId: listSiteUiSettings
      responses:
        '200':
          $ref: '#/components/responses/UiSettingsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteUiSettings
      tags:
      - Sites UI Settings
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Site UI settings
      operationId: createSiteUiSettings
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 1508823803
                  defaultScopeId: 67970e46-4e12-11e6-9188-0242ad112847
                  defaultScopeType: site
                  defaultTimeRange:
                    end: 1508828400
                    endDate: 10/23/2017
                    interval: 1d
                    name: This Week
                    shortName: thisWeek
                    start: 1508655600
                    usePreset: true
                  description: Description of the databoard
                  for_site: true
                  id: 3bdcc7e8-c04d-4512-b4fc-093da9057eb0
                  isCustomDataboard: true
                  isScopeLinked: true
                  isTimeRangeLinked: true
                  modified_time: 0
                  name: New Databoard
                  org_id: cc079380-5029-4d4a-9125-858de85731ff
                  purpose: databoard
                  site_id: 67970e46-4e12-11e6-9188-0242ad112847
                  tiles:
                  - chartBand: 2.4 ghz
                    chartColor: '#00B4AD'
                    chartDirection: tx + rx
                    chartRankBy: string
                    chartType: timeSeries
                    colspan: 5
                    column: 1
                    hideEmptyRows: true
                    id: 7a9ab38c-cfc3-483d-b51a-0aec571fadc0
                    metric:
                      apiName: client-dhcp-latency
                    name: New Analysis
                    row: 1
                    rowspan: 2
                    scopeId: e0c767834b4c
                    scopeType: client
                    sortedColumns: null
                    timeRange:
                      end: 1508823743
                      endDate: 10/23/2017
                      interval: 1d
                      name: Past 7 Days
                      shortName: 7d
                      start: 1508223600
                      usePreset: true
                    trendType: line
                    vizType: averageTimeSeriesChart
            schema:
              $ref: '#/components/schemas/ui_settings'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/UiSettings'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteUiSettings
      tags:
      - Sites UI Settings
  /api/v1/sites/{site_id}/uisettings/derived:
    get:
      description: Get both site UI settings(for_site=true) and org UI settings (for_site=false)
      operationId: getSiteUiSettingDerived
      responses:
        '200':
          $ref: '#/components/responses/UiSettings'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteUiSettingDerived
      tags:
      - Sites UI Settings
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/uisettings/{uisetting_id}:
    delete:
      description: Site UI settings
      operationId: deleteSiteUiSetting
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteUiSetting
      tags:
      - Sites UI Settings
    get:
      description: Site UI settings
      operationId: getSiteUiSetting
      responses:
        '200':
          $ref: '#/components/responses/UiSettingsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteUiSetting
      tags:
      - Sites UI Settings
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/uisetting_id'
    post:
      description: Site UI settings
      operationId: updateSiteUiSetting
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  created_time: 1508823803
                  defaultScopeId: 67970e46-4e12-11e6-9188-0242ad112847
                  defaultScopeType: site
                  defaultTimeRange:
                    end: 1508828400
                    endDate: 10/23/2017
                    interval: 1d
                    name: This Week
                    shortName: thisWeek
                    start: 1508655600
                    usePreset: true
                  description: Description of the databoard
                  for_site: true
                  id: 3bdcc7e8-c04d-4512-b4fc-093da9057eb0
                  isCustomDataboard: true
                  isScopeLinked: true
                  isTimeRangeLinked: true
                  modified_time: 0
                  name: New Databoard
                  org_id: cc079380-5029-4d4a-9125-858de85731ff
                  purpose: databoard
                  site_id: 67970e46-4e12-11e6-9188-0242ad112847
                  tiles:
                  - chartBand: 2.4 ghz
                    chartColor: '#00B4AD'
                    chartDirection: tx + rx
                    chartRankBy: string
                    chartType: timeSeries
                    colspan: 5
                    column: 1
                    hideEmptyRows: true
                    id: 7a9ab38c-cfc3-483d-b51a-0aec571fadc0
                    metric:
                      apiName: client-dhcp-latency
                    name: New Analysis
                    row: 1
                    rowspan: 2
                    scopeId: e0c767834b4c
                    scopeType: client
                    sortedColumns: null
                    timeRange:
                      end: 1508823743
                      endDate: 10/23/2017
                      interval: 1d
                      name: Past 7 Days
                      shortName: 7d
                      start: 1508223600
                      usePreset: true
                    trendType: line
                    vizType: averageTimeSeriesChart
            schema:
              $ref: '#/components/schemas/ui_settings'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/UiSettings'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteUiSetting
      tags:
      - Sites UI Settings
  /api/v1/sites/{site_id}/vbeacons:
    get:
      description: Get List of Site Virtual Beacons
      operationId: listSiteVBeacons
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/VBeaconsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteVBeacons
      tags:
      - Sites vBeacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Virtual Beacon
      operationId: createSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteVBeacon
      tags:
      - Sites vBeacons
  /api/v1/sites/{site_id}/vbeacons/{vbeacon_id}:
    delete:
      description: Delete Site Virtual Beacon
      operationId: deleteSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteVBeacon
      tags:
      - Sites vBeacons
    get:
      description: Get Site Virtual Beacon Details
      operationId: getSiteVBeacon
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteVBeacon
      tags:
      - Sites vBeacons
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/vbeacon_id'
    put:
      description: Update Site Virtual Beacon
      operationId: updateSiteVBeacon
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  major: 0
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  message: string
                  minor: 0
                  name: string
                  power: 4
                  power_mode: default
                  url: string
                  uuid: 6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9
                  wayfinding_nodename: string
                  x: 0
                  y: 0
            schema:
              $ref: '#/components/schemas/vbeacon'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/VBeacon'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteVBeacon
      tags:
      - Sites vBeacons
  /api/v1/sites/{site_id}/vpns/derived:
    get:
      description: VPN object represents an overlay network where gateways can participate
        in and optionally expose routes to.
      operationId: listSiteVpnsDerived
      parameters:
      - description: whether resolve the site variables
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      responses:
        '200':
          $ref: '#/components/responses/VpnsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteVpnsDerived
      tags:
      - Sites VPNs
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_client/events/count:
    get:
      description: Count by Distinct Attributes of Site WAN Client-Events
      operationId: countSiteWanClientEvents
      parameters:
      - in: query
        name: distinct
        schema:
          default: type
          enum:
          - type
          - hostname
          - ip
          - mfg
          - mac
          title: Site Wan Client events distinct
          type: string
      - $ref: '#/components/parameters/client_event_type'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWanClientEvents
      tags:
      - Sites Clients - Wan
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_clients/count:
    get:
      description: Count Site WAN Clients
      operationId: countSiteWanClients
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - hostname
          - ip
          - mfg
          - mac
          title: Site Wan Clients count distinct
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWanClients
      tags:
      - Sites Clients - Wan
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_clients/events/search:
    get:
      description: Search Site WAN Client Events
      operationId: searchSiteWanClientEvents
      parameters:
      - $ref: '#/components/parameters/client_event_type'
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: client IP
        in: query
        name: ip
        schema:
          type: string
      - description: Manufacture
        in: query
        name: mfg
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WanClientEventsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWanClientEvents
      tags:
      - Sites Clients - Wan
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_clients/search:
    get:
      description: Search Site WAN Clients
      operationId: searchSiteWanClients
      parameters:
      - description: partial / full MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: partial / full hostname
        in: query
        name: hostname
        schema:
          type: string
      - description: client IP
        in: query
        name: ip
        schema:
          type: string
      - description: Manufacture
        in: query
        name: mfg
        schema:
          type: string
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/WanClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWanClients
      tags:
      - Sites Clients - Wan
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_usages/count:
    get:
      description: Count Site WAN Uages
      operationId: countSiteWanUsage
      parameters:
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: Peer MAC address
        in: query
        name: peer_mac
        schema:
          type: string
      - description: Port ID for the device
        in: query
        name: port_id
        schema:
          type: string
      - description: Peer Port ID for the device
        in: query
        name: peer_port_id
        schema:
          type: string
      - description: policy for the wan path
        in: query
        name: policy
        schema:
          type: string
      - description: tenant network in which the packet is sent
        in: query
        name: tenant
        schema:
          type: string
      - description: path_type of the port
        in: query
        name: path_type
        schema:
          type: string
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/wan_usages_count_disctinct'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWanUsage
      tags:
      - Sites WAN Usages
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wan_usages/search:
    get:
      description: Search Site WAN Uages
      operationId: searchSiteWanUsage
      parameters:
      - description: MAC address
        in: query
        name: mac
        schema:
          type: string
      - description: Peer MAC address
        in: query
        name: peer_mac
        schema:
          type: string
      - description: Port ID for the device
        in: query
        name: port_id
        schema:
          type: string
      - description: Peer Port ID for the device
        in: query
        name: peer_port_id
        schema:
          type: string
      - description: policy for the wan path
        in: query
        name: policy
        schema:
          type: string
      - description: tenant network in which the packet is sent
        in: query
        name: tenant
        schema:
          type: string
      - description: path_type of the port
        in: query
        name: path_type
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Wan_Usages'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWanUsage
      tags:
      - Sites WAN Usages
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/webhooks:
    get:
      description: Get List of Site Webhooks
      operationId: listSiteWebhooks
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WebhooksArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWebhooks
      tags:
      - Sites Webhooks
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: "Webhook defines a webhook, modeled after [github\u2019s model](https://developer.github.com/webhooks/).\n\
        \nThere is two types of webhooks:\n* webhooks ([examples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace/folder/224925-be01e694-7253-4195-8563-78e2a745e114))\n\
        * raw data webhooks ([examples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace/folder/224925-e2d5d5f8-4bdb-4efc-93e4-90f4b33d0b2b))\n\
        \n##### Webhooks\nWebhooks can be configured at the org level (subset of topics\
        \ only) and at the site level. It is possible to have multiple topics in the\
        \ same webhook configuration and/or to have multiple webhooks configured at\
        \ the same time.\n\n##### Client Raw Data Webhooks\nRaw data webhooks are\
        \ a special subset of webhooks that provide insight into raw data packets\
        \ emitted by a client, identified by their advertising MAC address (assets,\
        \ discovered ble, connected wifi, unconnected wifi). The data that client\
        \ raw data webhooks encompasses are reporting AP information, RSSI Data, and\
        \ any special packets/telemetry packets that the client may emit. Note that\
        \ client raw webhooks are the raw data coming from the client and do not contain\
        \ the X,Y location data of the client. In order to get the location data for\
        \ a client please see our location webhooks. Clients can be identified uniquely\
        \ across these client raw data topics and location webhook topic using MAC\
        \ address as the Unique identifier (client identifier).\n\n###### Client Raw\
        \ Data Webhooks Topics\nTopics that correspond to client raw data for different\
        \ client types. \n* `asset-raw-rssi` - Raw data from packets emitted by named\
        \ and filtered assets \n* `discovered-raw-rssi` - Raw data from packets emitted\
        \ by passive BLE devices \n* `wifi-conn-raw` - Raw data from packets emitted\
        \ by connected devices \n* `wifi-unconn-raw` - Raw data from packets emitted\
        \ by unconnected devices (passive)\n\n###### Rules for configuring client\
        \ raw data webhooks\n1. Only one instance of a webhook object containing a\
        \ client raw data webhook topic is allowed. (a site level entry will override\
        \ an org level entry for the client raw data webhook topic in question)\n\
        2. Only one client raw data webhook topic is allowed per `http-post` message\
        \ to webhooks api\n"
      operationId: createSiteWebhook
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  headers: {}
                  name: string
                  secret: string
                  splunk_token: string
                  topics:
                  - location
                  type: http-post
                  url: string
                  verify_cert: true
            schema:
              $ref: '#/components/schemas/webhook'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/SiteWebhookUpdateFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWebhook
      tags:
      - Sites Webhooks
  /api/v1/sites/{site_id}/webhooks/{webhook_id}:
    delete:
      description: Delete Site Webhook
      operationId: deleteSiteWebhook
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWebhook
      tags:
      - Sites Webhooks
    get:
      description: Get Site Webhook Details
      operationId: getSiteWebhook
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWebhook
      tags:
      - Sites Webhooks
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/webhook_id'
    put:
      description: Update Site Webhook
      operationId: updateSiteWebhook
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  enabled: true
                  headers: {}
                  name: string
                  secret: string
                  splunk_token: string
                  topics:
                  - location
                  type: http-post
                  url: string
                  verify_cert: true
            schema:
              $ref: '#/components/schemas/webhook'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Webhook'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWebhook
      tags:
      - Sites Webhooks
  /api/v1/sites/{site_id}/webhooks/{webhook_id}/events/count:
    get:
      description: 'Count Site Webhooks deliveries



        Topics Supported:

        - alarms

        - audits

        - device-updowns

        - occupancy-alerts

        - ping'
      operationId: countSiteWebhooksDeliveries
      parameters:
      - in: query
        name: error
        schema:
          type: string
      - in: query
        name: status_code
        schema:
          type: integer
      - description: webhook delivery status
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/webhook_delivery_status'
      - description: webhook topic
        in: query
        name: topic
        schema:
          $ref: '#/components/schemas/webhook_delivery_topic'
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/webhook_delivery_distinct'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWebhooksDeliveries
      tags:
      - Sites Webhooks
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/webhook_id'
  /api/v1/sites/{site_id}/webhooks/{webhook_id}/events/search:
    get:
      description: 'Search Site Webhooks deliveries



        Topics Supported:

        - alarms

        - audits

        - device-updowns

        - occupancy-alerts

        - ping'
      operationId: searchSiteWebhooksDeliveries
      parameters:
      - in: query
        name: error
        schema:
          type: string
      - in: query
        name: status_code
        schema:
          type: integer
      - description: webhook delivery status
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/webhook_delivery_status'
      - description: webhook topic
        in: query
        name: topic
        schema:
          $ref: '#/components/schemas/webhook_delivery_topic'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WebhookDeliverySearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWebhooksDeliveries
      tags:
      - Sites Webhooks
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/webhook_id'
  /api/v1/sites/{site_id}/webhooks/{webhook_id}/ping:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/webhook_id'
    post:
      description: send a Ping event to the webhook
      operationId: pingSiteWebhook
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: pingSiteWebhook
      tags:
      - Sites Webhooks
  /api/v1/sites/{site_id}/wired_clients/count:
    get:
      description: Count by Distinct Attributes of Clients
      operationId: countSiteWiredClients
      parameters:
      - in: query
        name: distinct
        schema:
          default: mac
          enum:
          - port_id
          - vlan
          - mac
          title: Site Wired Clients count distinct
          type: string
      - description: client mac
        in: query
        name: mac
        schema:
          type: string
      - description: device mac
        in: query
        name: device_mac
        schema:
          type: string
      - description: port id
        in: query
        name: port_id
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteWiredClients
      tags:
      - Sites Clients - Wired
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wired_clients/search:
    get:
      description: Search Wired Clients
      operationId: searchSiteWiredClients
      parameters:
      - description: device mac
        in: query
        name: device_mac
        schema:
          type: string
      - description: client mac
        in: query
        name: mac
        schema:
          type: string
      - description: client ip
        in: query
        name: ip
        schema:
          type: string
      - description: port id
        in: query
        name: port_id
        schema:
          type: string
      - description: vlan
        in: query
        name: vlan
        schema:
          type: string
      - description: manufacture
        in: query
        name: manufacture
        schema:
          type: string
      - description: single entry of hostname/mac
        in: query
        name: text
        schema:
          type: string
      - description: nacrule_id
        in: query
        name: nacrule_id
        schema:
          type: string
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/WiredClientsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteWiredClients
      tags:
      - Sites Clients - Wired
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wlans:
    get:
      description: Get List of Site WLANs
      operationId: listSiteWlans
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWlans
      tags:
      - Sites Wlans
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WLAN
      operationId: createSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbb6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbc6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                  - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                  - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                    - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                    - string
                    facebook_enabled: false
                    forward: false
                    forward_url: http://abc.com/promotions
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                    - mydomain.edu
                    - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                    - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: https://url/to/image.png
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                    - reserved.net
                    - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                  - snapchat.com
                  - ibm.com
                  portal_allowed_subnets:
                  - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                  - msg.snapchat.com
                  portal_image: http://example.com
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: http://example.com
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbd6f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWlan
      tags:
      - Sites Wlans
  /api/v1/sites/{site_id}/wlans/derived:
    get:
      description: Get Wlans Derived
      operationId: listSiteWlanDerived
      parameters:
      - description: whether to resolve SITE_VARS
        example: true
        in: query
        name: resolve
        schema:
          default: false
          type: boolean
      - description: filter by WLAN ID
        in: query
        name: wlan_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/WlansArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWlanDerived
      tags:
      - Sites Wlans
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wlans/{wlan_id}:
    delete:
      description: Delete Site WLAN
      operationId: deleteSiteWlan
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWlan
      tags:
      - Sites Wlans
    get:
      description: Get Site WLAN
      operationId: getSiteWlan
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWlan
      tags:
      - Sites Wlans
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: Update Site WLAN
      operationId: updateSiteWlan
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  acct_immediate_update: false
                  acct_interim_interval: 0
                  acct_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1813
                    secret: testing123
                  airwatch:
                    api_key: aHhlbGxvYXNkZmFzZGZhc2Rmc2RmCg=="
                    console_url: https://hs1.airwatchportals.com
                    enabled: true
                    password: user1
                    username: test123
                  allow_ipv6_ndp: true
                  allow_mdns: false
                  allow_ssdp: false
                  ap_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbbe6f08
                  app_limit:
                    apps:
                      dropbox: 300
                      netflix: 60
                    enabled: false
                    wxtag_ids:
                      f99862d9-2726-931f-7559-3dfdf5d070d3: 30
                  app_qos:
                    apps:
                      skype-business-video:
                        dscp: 32
                        dst_subnet: 10.2.0.0/16
                        src_subnet: 10.2.0.0/16
                    enabled: true
                    others:
                    - dscp: 32
                      dst_subnet: 10.2.0.0/16
                      port_ranges: 80,1024-6553
                      protocol: udp
                      src_subnet: 10.2.0.0/16
                  apply_to: site
                  arp_filter: false
                  auth:
                    anticlog_threshold: 16
                    eap_reauth: false
                    enable_mac_auth: false
                    key_idx: 1
                    keys:
                    - string
                    multi_psk_only: false
                    owe: string
                    pairwise:
                    - wpa2-ccmp
                    private_wlan: true
                    psk: foryoureyesonly
                    type: psk
                    wep_as_secondary_auth: true
                  auth_server_selection: ordered
                  auth_servers:
                  - host: 1.2.3.4
                    keywrap_enabled: true
                    keywrap_format: hex
                    keywrap_kek: '1122334455'
                    keywrap_mack: '1122334455'
                    port: 1812
                    secret: testing123
                  auth_servers_nas_id: 5c5b350e0101-nas
                  auth_servers_nas_ip: 15.3.1.5
                  auth_servers_retries: 5
                  auth_servers_timeout: 5
                  band: string
                  band_steer: false
                  band_steer_force_band5: false
                  bands:
                  - '24'
                  - '5'
                  block_blacklist_clients: false
                  bonjour:
                    additional_vlan_ids:
                    - 0
                    enabled: false
                    services:
                      airplay:
                        radius_groups:
                        - teachers
                        scope: same_ap
                  cisco_cwa:
                    allowed_hostnames:
                    - snapchat.com
                    allowed_subnets:
                    - 63.5.3.0/24
                    blocked_subnets:
                    - 192.168.0.0/16
                    enabled: false
                  client_limit_down: 0
                  client_limit_down_enabled: false
                  client_limit_up: 0
                  client_limit_up_enabled: false
                  coa_servers:
                  - disable_event_timestamp_check: false
                    enabled: false
                    ip: 1.2.3.4
                    port: 3799
                    secret: testing456
                  created_time: 0
                  disable_11ax: false
                  disable_ht_vht_rates: false
                  disable_uapsd: false
                  disable_v1_roam_notify: false
                  disable_v2_roam_notify: false
                  disable_wmm: false
                  dns_server_rewrite:
                    enabled: false
                    radius_groups:
                      contractor: 172.1.1.1
                      guest: 8.8.8.8
                  dtim: 2
                  dynamic_psk:
                    default_psk: foryoureyesonly
                    default_vlan_id: 999
                    enabled: false
                    source: cloud_psks
                    vlan_ids:
                    - 1
                  dynamic_vlan:
                    default_vlan_id: 999
                    enabled: false
                    local_vlan_ids:
                    - 1
                    type: airespace-interface-name
                    vlans:
                      '131': default
                      '322': fast,video
                  enable_local_keycaching: false
                  enable_wireless_bridging: false
                  enabled: true
                  fast_dot1x_timers: false
                  for_site: true
                  hide_ssid: false
                  hostname_ie: false
                  hotspot20:
                    domain_name:
                    - mist.com
                    enabled: true
                    nai_realms:
                    - string
                    operators:
                    - google
                    - att
                    rcoi:
                    - 5A03BA0000
                    venue_name: some_name
                  id: 497f6eca-6276-4993-bfeb-53cbbbbf6f08
                  interface: all
                  isolation: false
                  l2_isolation: false
                  legacy_overds: false
                  limit_bcast: false
                  limit_probe_response: true
                  max_idletime: 1800
                  mist_nac:
                    enabled: false
                  modified_time: 0
                  msp_id: c0cf23fc-d82f-4219-988c-82fb61d8c875
                  mxtunnel: {}
                  mxtunnel_ids:
                  - 08cd7499-5841-51c8-e663-fb16b6f3b45e
                  mxtunnel_name:
                  - default
                  no_static_dns: false
                  no_static_ip: false
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  portal:
                    amazon_client_id: string
                    amazon_client_secret: string
                    amazon_email_domains:
                    - string
                    amazon_enabled: false
                    auth: none
                    azure_client_id: string
                    azure_client_secret: string
                    azure_enabled: false
                    azure_tenant_id: string
                    broadnet_password: password
                    broadnet_sid: MIST
                    broadnet_user_id: juniper
                    bypass_when_cloud_down: false
                    clickatell_api_key: string
                    cross_site: false
                    email_enabled: true
                    enabled: false
                    expire: 1440
                    external_portal_url: string
                    facebook_client_id: string
                    facebook_client_secret: string
                    facebook_email_domains:
                    - string
                    facebook_enabled: false
                    forward: false
                    forward_url: http://abc.com/promotions
                    google_client_id: string
                    google_client_secret: string
                    google_email_domains:
                    - mydomain.edu
                    - mydomain.org
                    google_enabled: false
                    gupshup_password: string
                    gupshup_userid: string
                    microsoft_client_id: string
                    microsoft_client_secret: string
                    microsoft_email_domains:
                    - string
                    microsoft_enabled: false
                    passphrase_enabled: false
                    password: let me in
                    portal_allowed_hostnames: string
                    portal_allowed_subnets: string
                    portal_api_secret: string
                    portal_denied_hostnames: string
                    portal_image: https://url/to/image.png
                    portal_sso_url: string
                    predefined_sponsors_enabled: true
                    privacy: true
                    puzzel_password: string
                    puzzel_service_id: string
                    puzzel_username: string
                    smsMessageFormat: string
                    sms_enabled: false
                    sms_provider: twilio
                    sponsor_auto_approve: false
                    sponsor_email_domains:
                    - reserved.net
                    - reserved.org
                    sponsor_enabled: false
                    sponsor_link_validity_duration: 30
                    sponsor_notify_all: false
                    sponsor_status_notify: false
                    sponsors:
                      sponsor1@company.com: FirstName1 LastName1
                      sponsor2@company.com: FirstName2 LastName2
                    sso_default_role: string
                    sso_forced_role: string
                    sso_idp_cert: string
                    sso_idp_sign_algo: string
                    sso_idp_sso_url: string
                    sso_issuer: string
                    sso_nameid_format: email
                    telstra_client_id: string
                    telstra_client_secret: string
                    thumbnail: string
                    twilio_auth_token: af9dac44c344a875ab5d31cb7abcdefg
                    twilio_phone_number: '+18548888888'
                    twilio_sid: AC72ec6ba0ec5af30e6731c5e47abcdefgh
                  portal_allowed_hostnames:
                  - snapchat.com
                  - ibm.com
                  portal_allowed_subnets:
                  - 63.5.3.0/24
                  portal_api_secret: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
                  portal_denied_hostnames:
                  - msg.snapchat.com
                  portal_image: http://example.com
                  portal_sso_url: string
                  portal_template_url: string
                  qos:
                    class: best_effort
                    overwrite: false
                  radsec:
                    enabled: true
                    idle_timeout: 60
                    mxcluster_ids:
                    - 572586b7-f97b-a22b-526c-8b97a3f609c4
                    proxy_hosts:
                    - mxedge1.local
                    server_name: radsec.abc.com
                    servers:
                    - host: 1.1.1.1
                      port: 1812
                    use_mxedge: true
                    use_site_mxedge: false
                  rateset:
                    '24':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                    '5':
                      ht: 00ff00ff00ff
                      legacy:
                      - '6'
                      - '9'
                      - '12'
                      - '18'
                      - 24b
                      - '36'
                      - '48'
                      - '54'
                      min_rssi: -70
                      template: string
                      vht: 03ff03ff03ff01ff
                  roam_mode: none
                  schedule:
                    enabled: false
                    hours:
                      fri: 09:00-17:00
                      mon: 09:00-17:00
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  sle_excluded: false
                  ssid: corporate
                  template_id: c6d67e98-83ea-49f0-8812-e4abae2b68bc
                  thumbnail: http://example.com
                  use_eapol_v1: false
                  vlan_enabled: false
                  vlan_id: 1
                  vlan_ids:
                  - 3
                  - 4
                  - 5
                  vlan_pooling: false
                  wlan_limit_down: 0
                  wlan_limit_down_enabled: false
                  wlan_limit_up: 0
                  wlan_limit_up_enabled: false
                  wxtag_ids:
                  - 497f6eca-6276-4993-bfeb-53cbbbba0f08
                  wxtunnel_id: string
                  wxtunnel_remote_id: string
            schema:
              $ref: '#/components/schemas/wlan'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wlan'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWlan
      tags:
      - Sites Wlans
  /api/v1/sites/{site_id}/wlans/{wlan_id}/portal_image:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wlan_id'
    post:
      description: Wlan Portal Image Upload
      operationId: uploadSiteWlanPortalImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/image_import'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uploadSiteWlanPortalImage
      tags:
      - Sites Wlans
  /api/v1/sites/{site_id}/wlans/{wlan_id}/portal_template:
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wlan_id'
    put:
      description: 'Update a Portal Template


        #### Sponsor Email Template

        Sponsor Email Template supports following template variables:


        | **Name** | **Description** |

        | --- | --- |

        | approve_url | Renders URL to approve the request; optionally &minutes=N
        query param can be appended to change the Authorization period of the guest,
        where N is a valid integer denoting number of minutes a guest remains authorized
        |

        | deny_url | Renders URL to reject the request |

        | guest_email | Renders Email ID of the guest |

        | guest_name | Renders Name of the guest |

        | field1 | Renders value of the Custom Field 1 |

        | field2 | Renders value of the Custom Field 2 |

        | company | Renders value of the Company field |

        | sponsor_link_validity_duration | Renders validity time of the request (i.e.
        Approve/Deny URL) |

        | auth_expire_minutes | Renders Wlan-level configured Guest Authorization
        Expiration time period (in minutes), If not configured then default (1 day
        in minutes) |'
      operationId: updateSiteWlanPortalTemplate
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  accessCodeAlternateEmail: string
                  alignment: string
                  authButtonAmazon: string
                  authButtonAzure: string
                  authButtonEmail: string
                  authButtonFacebook: string
                  authButtonGoogle: string
                  authButtonMicrosoft: string
                  authButtonPassphrase: string
                  authButtonSms: string
                  authButtonSponsor: string
                  authLabel: string
                  backLink: string
                  color: string
                  colorDark: string
                  colorLight: string
                  company: true
                  companyError: string
                  companyLabel: string
                  email: true
                  emailAccessDomainError: string
                  emailCancel: string
                  emailCodeError: string
                  emailError: string
                  emailFieldLabel: string
                  emailLabel: string
                  emailMessage: string
                  emailSubmit: string
                  emailTitle: string
                  field1: true
                  field1Error: string
                  field1Label: string
                  field1Required: true
                  field2: true
                  field2Error: string
                  field2Label: string
                  field2Required: true
                  field3: true
                  field3Error: string
                  field3Label: string
                  field3Required: true
                  field4: true
                  field4Error: string
                  field4Label: string
                  field4Required: true
                  message: string
                  name: true
                  nameError: string
                  nameLabel: string
                  optout: true
                  optoutLabel: string
                  pageTitle: string
                  passphraseCancel: string
                  passphraseError: string
                  passphraseLabel: string
                  passphraseMessage: string
                  passphraseSubmit: string
                  passphraseTitle: string
                  poweredBy: true
                  requiredFieldLabel: string
                  signInLabel: string
                  smsCarrierDefault: string
                  smsCarrierError: string
                  smsCarrierFieldLabel: string
                  smsCodeCancel: string
                  smsCodeError: string
                  smsCodeFieldLabel: string
                  smsCodeMessage: string
                  smsCodeSubmit: string
                  smsCodeTitle: string
                  smsCountryFieldLabel: string
                  smsCountryFormat: string
                  smsHaveAccessCode: string
                  smsMessageFormat: string
                  smsNumberCancel: string
                  smsNumberError: string
                  smsNumberFieldLabel: string
                  smsNumberFormat: string
                  smsNumberMessage: string
                  smsNumberSubmit: string
                  smsNumberTitle: string
                  smsUsernameFormat: string
                  smsValidityDuration: 0
                  sponsorBackLink: string
                  sponsorCancel: string
                  sponsorEmail: string
                  sponsorEmailError: string
                  sponsorEmailTemplate: string
                  sponsorInfoApproved: string
                  sponsorInfoDenied: string
                  sponsorInfoPending: string
                  sponsorName: string
                  sponsorNameError: string
                  sponsorNotePending: string
                  sponsorStatusApproved: string
                  sponsorStatusDenied: string
                  sponsorStatusPending: string
                  sponsorSubmit: string
                  tos: true
                  tosAcceptLabel: string
                  tosError: string
                  tosLink: string
                  tosText: string
            schema:
              $ref: '#/components/schemas/wlan_portal_template'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Portaltemplate'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWlanPortalTemplate
      tags:
      - Sites Wlans
  /api/v1/sites/{site_id}/wxrules:
    get:
      description: Get List of Site WxLan Rules
      operationId: listSiteWxRules
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxRules
      tags:
      - Sites WxRules
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxLan Rule
      operationId: createSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53ecbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxRule
      tags:
      - Sites WxRules
  /api/v1/sites/{site_id}/wxrules/derived:
    get:
      description: Get Site WxLan Rule Derived
      operationId: getSiteWxRulesDerived
      responses:
        '200':
          $ref: '#/components/responses/WxruleArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRulesDerived
      tags:
      - Sites WxRules
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wxrules/{wxrules_id}:
    delete:
      description: Delete Site WxLan Rule
      operationId: deleteSiteWxRule
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxRule
      tags:
      - Sites WxRules
    get:
      description: Get Site WxLan Rule Details
      operationId: getSiteWxRule
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxRule
      tags:
      - Sites WxRules
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxrules_id'
    put:
      description: Update Site WxLan Rule
      operationId: updateSiteWxRule
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  action: allow
                  apply_tags:
                  - c049dfcd-0c73-5014-1c64-062e9903f1e5
                  blocked_apps:
                  - mist
                  - all-videos
                  created_time: 0
                  dst_allow_wxtags:
                  - fff34466-eec0-3756-6765-381c728a6037
                  - eee2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  dst_deny_wxtags:
                  - aaa34466-eec0-3756-6765-381c728a6037
                  - bbb2c7b0-d1d0-5a30-f349-e35fa43dc3b3
                  enabled: true
                  for_site: true
                  id: 497f6eca-6276-4993-bfeb-53edbbba6f08
                  modified_time: 0
                  order: 1
                  org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                  site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                  src_wxtags:
                  - 8bfc2490-d726-3587-038d-cb2e71bd2330
                  - 3aa8e73f-9f46-d827-8d6a-567bb7e67fc9
            schema:
              $ref: '#/components/schemas/wxlan_rule'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxrule'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxRule
      tags:
      - Sites WxRules
  /api/v1/sites/{site_id}/wxtags:
    get:
      description: Get List of Site WxTags
      operationId: listSiteWxTags
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtagArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxTags
      tags:
      - Sites WxTags
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxTag
      operationId: createSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              app:
                value:
                  match: app
                  name: match app
                  type: match
                  values:
                  - gmail
                  - dropbox
              client_mac:
                value:
                  match: client_mac
                  name: file-servers
                  type: match
                  values:
                  - b0c4e7001543
                  - a0c4e7001543
                  - 00c4e7001543
              hostnames:
                value:
                  match: hostname
                  name: mist
                  type: match
                  values:
                  - mist.com
              ip_range_subnets:
                value:
                  match: ip_range_subnet
                  name: file-servers
                  type: match
                  values:
                  - 10.1.2.1
                  - 10.2.3.4/24
                  - 10.1.2.5-10.2.3.4
              ports:
                value:
                  match: port
                  name: web-ports
                  type: match
                  values:
                  - '80'
                  - '8000'
                  - '8080'
              psk_name:
                value:
                  match: psk_name
                  name: VIP
                  type: match
                  values:
                  - test_key1
                  - test_key2
              psk_role:
                value:
                  match: psk_role
                  name: VIP
                  type: match
                  values:
                  - test_role
              radius_group:
                value:
                  match: radius_group
                  name: VIP
                  type: match
                  values:
                  - vip
              radius_username:
                value:
                  match: radius_username
                  name: VIP
                  type: match
                  values:
                  - john@abc.com
                  - eric@abc.com
              traffic-spec:
                value:
                  name: protocol-subnet-port
                  specs:
                  - port_range: '80'
                    protocol: tcp
                    subnets:
                    - 10.1.2.0/24
                  type: spec
              vlan:
                value:
                  name: vlan-assignment
                  type: vlan
                  vlan_id: 1055
              wlan_id:
                value:
                  match: wlan_id
                  name: guest-wlan
                  type: match
                  values:
                  - be22bba78e22e1cf5185b880816fe2cf
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxTag
      tags:
      - Sites WxTags
  /api/v1/sites/{site_id}/wxtags/apps:
    get:
      description: Get Application List
      operationId: getSiteApplicationList
      responses:
        '200':
          $ref: '#/components/responses/WxTagsAppsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteApplicationList
      tags:
      - Sites WxTags
    parameters:
    - $ref: '#/components/parameters/site_id'
  /api/v1/sites/{site_id}/wxtags/{wxtag_id}:
    delete:
      description: Delete Site WxTag
      operationId: deleteSiteWxTag
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxTag
      tags:
      - Sites WxTags
    get:
      description: Get Site WxTag Details
      operationId: getSiteWxTag
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxTag
      tags:
      - Sites WxTags
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtag_id'
    put:
      description: Update Site WxTag
      operationId: updateSiteWxTag
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  last_ips:
                  - string
                  mac: string
                  match: wlan_id
                  name: string
                  op: in
                  resource_mac: string
                  services:
                  - string
                  specs:
                  - port_range: string
                    protocol: tcp
                    subnet:
                    - string
                  subnet: string
                  type: match
                  values:
                  - string
            schema:
              $ref: '#/components/schemas/wxlan_tag'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtag'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxTag
      tags:
      - Sites WxTags
  /api/v1/sites/{site_id}/wxtags/{wxtag_id}/clients:
    get:
      description: Get Current Matching Clients of a WXLAN Tag
      operationId: getSiteCurrentMatchingClientsOfAWxTag
      responses:
        '200':
          $ref: '#/components/responses/WxTagsMatchingArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteCurrentMatchingClientsOfAWxTag
      tags:
      - Sites WxTags
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtag_id'
  /api/v1/sites/{site_id}/wxtunnels:
    get:
      description: Get List of Site WxLan Tunnels
      operationId: listSiteWxTunnels
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/WxtunnelArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteWxTunnels
      tags:
      - Sites WxTunnels
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site WxLan Tunnel
      operationId: createSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                    - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                  - string
                  router_id: string
                  secret: string
                  sessions:
                  - ap_as_session_id: string
                    comment: string
                    enable_cookie: true
                    ethertype: ethernet
                    local_session_id: 1
                    pseudo_802.1ad_enabled: true
                    remote_id: string
                    remote_session_id: 1
                    use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteWxTunnel
      tags:
      - Sites WxTunnels
  /api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}:
    delete:
      description: Delete Site WxLan Tunnel
      operationId: deleteSiteWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteWxTunnel
      tags:
      - Sites WxTunnels
    get:
      description: Get Site WxLan tunnel Details
      operationId: getSiteWxTunnel
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteWxTunnel
      tags:
      - Sites WxTunnels
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/wxtunnel_id'
    put:
      description: Update Site WxLan Tunnel
      operationId: updateSiteWxTunnel
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  dmvpn:
                    enabled: true
                    holding_time: 0
                    host_routes:
                    - string
                  for_mgmt: true
                  hello_interval: 1
                  hello_retries: 3
                  hostname: string
                  ipsec:
                    enabled: true
                    psk: string123
                  is_static: true
                  mtu: 0
                  name: string
                  peers:
                  - string
                  router_id: string
                  secret: string
                  sessions:
                  - ap_as_session_id: string
                    comment: string
                    enable_cookie: true
                    ethertype: ethernet
                    local_session_id: 1
                    pseudo_802.1ad_enabled: true
                    remote_id: string
                    remote_session_id: 1
                    use_ap_as_session_ids: true
                  udp_port: 0
                  use_udp: true
            schema:
              $ref: '#/components/schemas/wxlan_tunnel'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Wxtunnel'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteWxTunnel
      tags:
      - Sites WxTunnels
  /api/v1/sites/{site_id}/zones:
    get:
      description: Get List of Site Zones
      operationId: listSiteZones
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/ZonesArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteZones
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    post:
      description: Create Site Zone
      operationId: createSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createSiteZone
      tags:
      - Sites Zones
  /api/v1/sites/{site_id}/zones/{zone_id}:
    delete:
      description: Delete Site Zone
      operationId: deleteSiteZone
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSiteZone
      tags:
      - Sites Zones
    get:
      description: Get Site Zone Details
      operationId: getSiteZone
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSiteZone
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_id'
    put:
      description: Update Site Zone
      operationId: updateSiteZone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  map_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  name: string
                  vertices:
                  - x: 0
                    y: 0
            schema:
              $ref: '#/components/schemas/zone'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Zone'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSiteZone
      tags:
      - Sites Zones
  /api/v1/sites/{site_id}/{zone_type}/count:
    get:
      description: Count Site Zone Sessions
      operationId: countSiteZoneSessions
      parameters:
      - example: scope_id
        in: query
        name: distinct
        schema:
          default: scope_id
          enum:
          - user_type
          - user
          - scope_id
          - scope
          title: Site Zone count distinct
          type: string
      - description: user type
        in: query
        name: user_type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          title: Zone Scope
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countSiteZoneSessions
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
  /api/v1/sites/{site_id}/{zone_type}/visits/search:
    get:
      description: Search Zone Sessions
      operationId: searchSiteZoneSessions
      parameters:
      - description: user type, client (default) / sdkclient / asset
        in: query
        name: user_type
        schema:
          $ref: '#/components/schemas/rf_client_type'
      - description: client MAC / Asset MAC / SDK UUID
        in: query
        name: user
        schema:
          type: string
      - description: if `scope`==`map`/`zone`/`rssizone`, the scope id
        in: query
        name: scope_id
        schema:
          type: string
      - description: scope
        in: query
        name: scope
        schema:
          default: site
          enum:
          - site
          - map
          - zone
          - rssizone
          title: Visits Scope
          type: string
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/ZoneSessionsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchSiteZoneSessions
      tags:
      - Sites Zones
    parameters:
    - $ref: '#/components/parameters/site_id'
    - $ref: '#/components/parameters/zone_type'
components:
  parameters:
    alarm_id:
      $ref: ../../components/parameters/alarm_id.yml
    asset_id:
      $ref: ../../components/parameters/asset_id.yml
    assetfilter_id:
      $ref: ../../components/parameters/assetfilter_id.yml
    beacon_id:
      $ref: ../../components/parameters/beacon_id.yml
    client_event_type:
      $ref: ../../components/parameters/client_event_type.yml
    client_mac:
      $ref: ../../components/parameters/client_mac.yml
    device_event_type:
      $ref: ../../components/parameters/device_event_type.yml
    device_id:
      $ref: ../../components/parameters/device_id.yml
    device_mac:
      $ref: ../../components/parameters/device_mac.yml
    dot11_band:
      $ref: ../../components/parameters/dot11_band.yml
    dot11_proto:
      $ref: ../../components/parameters/dot11_proto.yml
    duration:
      $ref: ../../components/parameters/duration.yml
    end:
      $ref: ../../components/parameters/end.yml
    evpn_topology_id:
      $ref: ../../components/parameters/evpn_topology_id.yml
    guest_mac:
      $ref: ../../components/parameters/guest_mac.yml
    interval:
      $ref: ../../components/parameters/interval.yml
    ip:
      $ref: ../../components/parameters/ip.yml
    limit:
      $ref: ../../components/parameters/limit.yml
    map_id:
      $ref: ../../components/parameters/map_id.yml
    metric:
      $ref: ../../components/parameters/metric.yml
    mxedge_event_type:
      $ref: ../../components/parameters/mxedge_event_type.yml
    mxedge_id:
      $ref: ../../components/parameters/mxedge_id.yml
    mxtunnel_id:
      $ref: ../../components/parameters/mxtunnel_id.yml
    nac_event_type:
      $ref: ../../components/parameters/nac_event_type.yml
    name:
      $ref: ../../components/parameters/name.yml
    otherdevice_event_type:
      $ref: ../../components/parameters/otherdevice_event_type.yml
    page:
      $ref: ../../components/parameters/page.yml
    pcap_id:
      $ref: ../../components/parameters/pcap_id.yml
    psk_id:
      $ref: ../../components/parameters/psk_id.yml
    psk_id_query:
      $ref: ../../components/parameters/psk_id_query.yml
    resolution:
      $ref: ../../components/parameters/resolution.yml
    rfdiag_id:
      $ref: ../../components/parameters/rfdiag_id.yml
    rogue_bssid:
      $ref: ../../components/parameters/rogue_bssid.yml
    rogue_type:
      $ref: ../../components/parameters/rogue_type.yml
    rssizone_id:
      $ref: ../../components/parameters/rssizone_id.yml
    sdkclient_id:
      $ref: ../../components/parameters/sdkclient_id.yml
    site_id:
      $ref: ../../components/parameters/site_id.yml
    start:
      $ref: ../../components/parameters/start.yml
    system_event_type:
      $ref: ../../components/parameters/system_event_type.yml
    uisetting_id:
      $ref: ../../components/parameters/uisetting_id.yml
    upgrade_id:
      $ref: ../../components/parameters/upgrade_id.yml
    vbeacon_id:
      $ref: ../../components/parameters/vbeacon_id.yml
    webhook_id:
      $ref: ../../components/parameters/webhook_id.yml
    wlan_id:
      $ref: ../../components/parameters/wlan_id.yml
    wxrules_id:
      $ref: ../../components/parameters/wxrules_id.yml
    wxtag_id:
      $ref: ../../components/parameters/wxtag_id.yml
    wxtunnel_id:
      $ref: ../../components/parameters/wxtunnel_id.yml
    zone_id:
      $ref: ../../components/parameters/zone_id.yml
    zone_type:
      $ref: ../../components/parameters/zone_type.yml
  responses:
    AlarmsSearch:
      $ref: ../../components/responses/AlarmsSearch.yml
    AnomalyMetrics:
      $ref: ../../components/responses/AnomalyMetrics.yml
    Aptemplate:
      $ref: ../../components/responses/Aptemplate.yml
    Asset:
      $ref: ../../components/responses/Asset.yml
    AssetOfInterestArray:
      $ref: ../../components/responses/AssetOfInterestArray.yml
    AssetStats:
      $ref: ../../components/responses/AssetStats.yml
    Assetfilter:
      $ref: ../../components/responses/Assetfilter.yml
    AssetfiltersArray:
      $ref: ../../components/responses/AssetfiltersArray.yml
    AssetsArray:
      $ref: ../../components/responses/AssetsArray.yml
    AssetsArrayStats:
      $ref: ../../components/responses/AssetsArrayStats.yml
    AssetsArrayStatsSearch:
      $ref: ../../components/responses/AssetsArrayStatsSearch.yml
    AutoOrientation:
      $ref: ../../components/responses/AutoOrientation.yml
    AutoOrientationFailed:
      $ref: ../../components/responses/AutoOrientationFailed.yml
    AutoPlacementInfo:
      $ref: ../../components/responses/AutoPlacementInfo.yml
    Beacon:
      $ref: ../../components/responses/Beacon.yml
    BeaconsArray:
      $ref: ../../components/responses/BeaconsArray.yml
    BgpStatsArraySearch:
      $ref: ../../components/responses/BgpStatsArraySearch.yml
    CallStatsArray:
      $ref: ../../components/responses/CallStatsArray.yml
    CallTroubleshoot:
      $ref: ../../components/responses/CallTroubleshoot.yml
    CallTroubleshootSummary:
      $ref: ../../components/responses/CallTroubleshootSummary.yml
    ClientEventsSearch:
      $ref: ../../components/responses/ClientEventsSearch.yml
    ClientNacSearch:
      $ref: ../../components/responses/ClientNacSearch.yml
    ClientSessionsSearch:
      $ref: ../../components/responses/ClientSessionsSearch.yml
    ClientsSearch:
      $ref: ../../components/responses/ClientsSearch.yml
    ConfigsHistorySearch:
      $ref: ../../components/responses/ConfigsHistorySearch.yml
    Count:
      $ref: ../../components/responses/Count.yml
    Device:
      $ref: ../../components/responses/Device.yml
    DeviceBiosUpgrade:
      $ref: ../../components/responses/DeviceBiosUpgrade.yml
    DeviceConfigCmd:
      $ref: ../../components/responses/DeviceConfigCmd.yml
    DeviceEventsSearch:
      $ref: ../../components/responses/DeviceEventsSearch.yml
    DeviceIot:
      $ref: ../../components/responses/DeviceIot.yml
    DeviceMetric:
      $ref: ../../components/responses/DeviceMetric.yml
    DeviceOtherArray:
      $ref: ../../components/responses/DeviceOtherArray.yml
    DeviceRadioChannels:
      $ref: ../../components/responses/DeviceRadioChannels.yml
    DeviceSnapshot:
      $ref: ../../components/responses/DeviceSnapshot.yml
    DeviceUpgrade:
      $ref: ../../components/responses/DeviceUpgrade.yml
    DeviceUpgradeArray:
      $ref: ../../components/responses/DeviceUpgradeArray.yml
    DeviceVersion:
      $ref: ../../components/responses/DeviceVersion.yml
    DeviceprofilesArray:
      $ref: ../../components/responses/DeviceprofilesArray.yml
    DevicesArray:
      $ref: ../../components/responses/DevicesArray.yml
    DevicesArrayStatsSite:
      $ref: ../../components/responses/DevicesArrayStatsSite.yml
    DevicesSearch:
      $ref: ../../components/responses/DevicesSearch.yml
    DiscoveredSwitchMetrics:
      $ref: ../../components/responses/DiscoveredSwitchMetrics.yml
    DiscoveredSwitches:
      $ref: ../../components/responses/DiscoveredSwitches.yml
    DiscoveredSwitchesMetrics:
      $ref: ../../components/responses/DiscoveredSwitchesMetrics.yml
    EventsDevices:
      $ref: ../../components/responses/EventsDevices.yml
    EventsFastroam:
      $ref: ../../components/responses/EventsFastroam.yml
    EventsNacClientSearch:
      $ref: ../../components/responses/EventsNacClientSearch.yml
    EventsOtherDevicesSearch:
      $ref: ../../components/responses/EventsOtherDevicesSearch.yml
    EventsSearch:
      $ref: ../../components/responses/EventsSearch.yml
    EvpnTopology:
      $ref: ../../components/responses/EvpnTopology.yml
    File:
      $ref: ../../components/responses/File.yml
    GatewayMetrics:
      $ref: ../../components/responses/GatewayMetrics.yml
    Gatewaytemplate:
      $ref: ../../components/responses/Gatewaytemplate.yml
    GetLicenceUsage:
      $ref: ../../components/responses/GetLicenceUsage.yml
    Guest:
      $ref: ../../components/responses/Guest.yml
    GuestsArray:
      $ref: ../../components/responses/GuestsArray.yml
    GuestsSearch:
      $ref: ../../components/responses/GuestsSearch.yml
    HTTP400:
      $ref: ../../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../../components/responses/HTTP429.yml
    InsightMetric:
      $ref: ../../components/responses/InsightMetric.yml
    InsightRogue:
      $ref: ../../components/responses/InsightRogue.yml
    InsightRogueClients:
      $ref: ../../components/responses/InsightRogueClients.yml
    JseInfo:
      $ref: ../../components/responses/JseInfo.yml
    LocationCoverage:
      $ref: ../../components/responses/LocationCoverage.yml
    MacsArray:
      $ref: ../../components/responses/MacsArray.yml
    Map:
      $ref: ../../components/responses/Map.yml
    MapImport:
      $ref: ../../components/responses/MapImport.yml
    MapsArray:
      $ref: ../../components/responses/MapsArray.yml
    Ml:
      $ref: ../../components/responses/Ml.yml
    MxEdgeEventsSearch:
      $ref: ../../components/responses/MxEdgeEventsSearch.yml
    MxTunnelsPreemptAps:
      $ref: ../../components/responses/MxTunnelsPreemptAps.yml
    Mxedge:
      $ref: ../../components/responses/Mxedge.yml
    MxedgeStats:
      $ref: ../../components/responses/MxedgeStats.yml
    MxedgeStatsArray:
      $ref: ../../components/responses/MxedgeStatsArray.yml
    MxedgesArray:
      $ref: ../../components/responses/MxedgesArray.yml
    NetworksArray:
      $ref: ../../components/responses/NetworksArray.yml
    Networktemplate:
      $ref: ../../components/responses/Networktemplate.yml
    OK:
      $ref: ../../components/responses/OK.yml
    PcapStart:
      $ref: ../../components/responses/PcapStart.yml
    PcapStatus:
      $ref: ../../components/responses/PcapStatus.yml
    PcapsSearch:
      $ref: ../../components/responses/PcapsSearch.yml
    Portaltemplate:
      $ref: ../../components/responses/Portaltemplate.yml
    Psk:
      $ref: ../../components/responses/Psk.yml
    PsksArray:
      $ref: ../../components/responses/PsksArray.yml
    Rfdiag:
      $ref: ../../components/responses/Rfdiag.yml
    RfdiagsArray:
      $ref: ../../components/responses/RfdiagsArray.yml
    Rftemplate:
      $ref: ../../components/responses/Rftemplate.yml
    RogueDetails:
      $ref: ../../components/responses/RogueDetails.yml
    RogueEventsSearch:
      $ref: ../../components/responses/RogueEventsSearch.yml
    Rrm:
      $ref: ../../components/responses/Rrm.yml
    RrmConsideration:
      $ref: ../../components/responses/RrmConsideration.yml
    RrmEvents:
      $ref: ../../components/responses/RrmEvents.yml
    RrmNeighbors:
      $ref: ../../components/responses/RrmNeighbors.yml
    Rssizone:
      $ref: ../../components/responses/Rssizone.yml
    RssizonesArray:
      $ref: ../../components/responses/RssizonesArray.yml
    ServicePathEventsSearch:
      $ref: ../../components/responses/ServicePathEventsSearch.yml
    ServicePoliciesArray:
      $ref: ../../components/responses/ServicePoliciesArray.yml
    ServicesArray:
      $ref: ../../components/responses/ServicesArray.yml
    SetDevicesMap:
      $ref: ../../components/responses/SetDevicesMap.yml
    Site:
      $ref: ../../components/responses/Site.yml
    SiteApps:
      $ref: ../../components/responses/SiteApps.yml
    SiteSettings:
      $ref: ../../components/responses/SiteSettings.yml
    SiteSleMetrics:
      $ref: ../../components/responses/SiteSleMetrics.yml
    SiteTemplate:
      $ref: ../../components/responses/SiteTemplate.yml
    SiteWebhookUpdateFailed:
      $ref: ../../components/responses/SiteWebhookUpdateFailed.yml
    SkyAtpEventsSearch:
      $ref: ../../components/responses/SkyAtpEventsSearch.yml
    SleClassifierSummary:
      $ref: ../../components/responses/SleClassifierSummary.yml
    SleHistogram:
      $ref: ../../components/responses/SleHistogram.yml
    SleImpactSummary:
      $ref: ../../components/responses/SleImpactSummary.yml
    SleImpactedApplications:
      $ref: ../../components/responses/SleImpactedApplications.yml
    SleImpactedAps:
      $ref: ../../components/responses/SleImpactedAps.yml
    SleImpactedChassis:
      $ref: ../../components/responses/SleImpactedChassis.yml
    SleImpactedClients:
      $ref: ../../components/responses/SleImpactedClients.yml
    SleImpactedGateways:
      $ref: ../../components/responses/SleImpactedGateways.yml
    SleImpactedInterfaces:
      $ref: ../../components/responses/SleImpactedInterfaces.yml
    SleImpactedSwitches:
      $ref: ../../components/responses/SleImpactedSwitches.yml
    SleImpactedUsers:
      $ref: ../../components/responses/SleImpactedUsers.yml
    SleSummary:
      $ref: ../../components/responses/SleSummary.yml
    SleThreshold:
      $ref: ../../components/responses/SleThreshold.yml
    SsrUpgrade:
      $ref: ../../components/responses/SsrUpgrade.yml
    SsrUpgradeStatus:
      $ref: ../../components/responses/SsrUpgradeStatus.yml
    SwitchMetrics:
      $ref: ../../components/responses/SwitchMetrics.yml
    SwitchPortsSearch:
      $ref: ../../components/responses/SwitchPortsSearch.yml
    SyntheticTest:
      $ref: ../../components/responses/SyntheticTest.yml
    SynthetictestSearch:
      $ref: ../../components/responses/SynthetictestSearch.yml
    SynthetictestStatus:
      $ref: ../../components/responses/SynthetictestStatus.yml
    UiSettings:
      $ref: ../../components/responses/UiSettings.yml
    UiSettingsArray:
      $ref: ../../components/responses/UiSettingsArray.yml
    UpgradeInfo:
      $ref: ../../components/responses/UpgradeInfo.yml
    VBeacon:
      $ref: ../../components/responses/VBeacon.yml
    VBeaconsArray:
      $ref: ../../components/responses/VBeaconsArray.yml
    VirtualChassis:
      $ref: ../../components/responses/VirtualChassis.yml
    VpnsArray:
      $ref: ../../components/responses/VpnsArray.yml
    WanClientEventsSearch:
      $ref: ../../components/responses/WanClientEventsSearch.yml
    WanClientsSearch:
      $ref: ../../components/responses/WanClientsSearch.yml
    Wan_Usages:
      $ref: ../../components/responses/Wan_Usages.yml
    Webhook:
      $ref: ../../components/responses/Webhook.yml
    WebhookDeliverySearch:
      $ref: ../../components/responses/WebhookDeliverySearch.yml
    WebhooksArray:
      $ref: ../../components/responses/WebhooksArray.yml
    WebsocketSession:
      $ref: ../../components/responses/WebsocketSession.yml
    WebsocketSessionWithUrl:
      $ref: ../../components/responses/WebsocketSessionWithUrl.yml
    WiredClientsSearch:
      $ref: ../../components/responses/WiredClientsSearch.yml
    Wlan:
      $ref: ../../components/responses/Wlan.yml
    WlansArray:
      $ref: ../../components/responses/WlansArray.yml
    WxTagsAppsArray:
      $ref: ../../components/responses/WxTagsAppsArray.yml
    WxTagsMatchingArray:
      $ref: ../../components/responses/WxTagsMatchingArray.yml
    Wxrule:
      $ref: ../../components/responses/Wxrule.yml
    WxruleArray:
      $ref: ../../components/responses/WxruleArray.yml
    WxruleStatsArray:
      $ref: ../../components/responses/WxruleStatsArray.yml
    Wxtag:
      $ref: ../../components/responses/Wxtag.yml
    WxtagArray:
      $ref: ../../components/responses/WxtagArray.yml
    Wxtunnel:
      $ref: ../../components/responses/Wxtunnel.yml
    WxtunnelArray:
      $ref: ../../components/responses/WxtunnelArray.yml
    Zone:
      $ref: ../../components/responses/Zone.yml
    ZoneSessionsSearch:
      $ref: ../../components/responses/ZoneSessionsSearch.yml
    ZoneStats:
      $ref: ../../components/responses/ZoneStats.yml
    ZoneStatsArray:
      $ref: ../../components/responses/ZoneStatsArray.yml
    ZonesArray:
      $ref: ../../components/responses/ZonesArray.yml
  schemas:
    alarm_ack:
      $ref: ../../components/schemas/alarm_ack.yml
    alarm_count_disctinct:
      $ref: ../../components/schemas/alarm_count_disctinct.yml
    ap_import_json:
      $ref: ../../components/schemas/ap_import_json.yml
    asset:
      $ref: ../../components/schemas/asset.yml
    asset_array:
      $ref: ../../components/schemas/asset_array.yml
    asset_filter:
      $ref: ../../components/schemas/asset_filter.yml
    asset_stats_array:
      $ref: ../../components/schemas/asset_stats_array.yml
    assets_import_file:
      $ref: ../../components/schemas/assets_import_file.yml
    assets_import_json:
      $ref: ../../components/schemas/assets_import_json.yml
    auto_orient:
      $ref: ../../components/schemas/auto_orient.yml
    auto_placement:
      $ref: ../../components/schemas/auto_placement.yml
    beacon:
      $ref: ../../components/schemas/beacon.yml
    beacon_stats:
      $ref: ../../components/schemas/beacon_stats.yml
    binary_stream:
      $ref: ../../components/schemas/binary_stream.yml
    capture_site:
      $ref: ../../components/schemas/capture_site.yml
    client_stats:
      $ref: ../../components/schemas/client_stats.yml
    client_stats_array:
      $ref: ../../components/schemas/client_stats_array.yml
    client_wireless_stats_array:
      $ref: ../../components/schemas/client_wireless_stats_array.yml
    device_stats:
      $ref: ../../components/schemas/device_stats.yml
    device_type:
      $ref: ../../components/schemas/device_type.yml
    device_type_with_all:
      $ref: ../../components/schemas/device_type_with_all.yml
    device_upgrade:
      $ref: ../../components/schemas/device_upgrade.yml
    device_upgrade_site_multi:
      $ref: ../../components/schemas/device_upgrade_site_multi.yml
    dot11_band:
      $ref: ../../components/schemas/dot11_band.yml
    gateway_cluster_form:
      $ref: ../../components/schemas/gateway_cluster_form.yml
    gateway_cluster_swap:
      $ref: ../../components/schemas/gateway_cluster_swap.yml
    guest:
      $ref: ../../components/schemas/guest.yml
    ha_cluster_node:
      $ref: ../../components/schemas/ha_cluster_node.yml
    image_import:
      $ref: ../../components/schemas/image_import.yml
    junos_evpn_topology:
      $ref: ../../components/schemas/junos_evpn_topology.yml
    junos_port_config:
      $ref: ../../components/schemas/junos_port_config.yml
    locate_switch:
      $ref: ../../components/schemas/locate_switch.yml
    mac_addresses:
      $ref: ../../components/schemas/mac_addresses.yml
    map:
      $ref: ../../components/schemas/map.yml
    map_site_import_file:
      $ref: ../../components/schemas/map_site_import_file.yml
    map_site_replace_file:
      $ref: ../../components/schemas/map_site_replace_file.yml
    mist_device:
      $ref: ../../components/schemas/mist_device.yml
    ml_overwrite:
      $ref: ../../components/schemas/ml_overwrite.yml
    mxedge:
      $ref: ../../components/schemas/mxedge.yml
    note:
      $ref: ../../components/schemas/note.yml
    notes:
      $ref: ../../components/schemas/notes.yml
    psk:
      $ref: ../../components/schemas/psk.yml
    psks:
      $ref: ../../components/schemas/psks.yml
    psks_import_file:
      $ref: ../../components/schemas/psks_import_file.yml
    rf_client_type:
      $ref: ../../components/schemas/rf_client_type.yml
    rf_diag:
      $ref: ../../components/schemas/rf_diag.yml
    root_password:
      $ref: ../../components/schemas/root_password.yml
    rssi_zone:
      $ref: ../../components/schemas/rssi_zone.yml
    rssi_zones:
      $ref: ../../components/schemas/rssi_zones.yml
    sdkclient_stats_array:
      $ref: ../../components/schemas/sdkclient_stats_array.yml
    sdkclient_wireless_stats:
      $ref: ../../components/schemas/sdkclient_wireless_stats.yml
    site:
      $ref: ../../components/schemas/site.yml
    site_setting:
      $ref: ../../components/schemas/site_setting.yml
    site_stats:
      $ref: ../../components/schemas/site_stats.yml
    sle_threshold:
      $ref: ../../components/schemas/sle_threshold.yml
    ssr_upgrade:
      $ref: ../../components/schemas/ssr_upgrade.yml
    strings:
      $ref: ../../components/schemas/strings.yml
    synthetic_test:
      $ref: ../../components/schemas/synthetic_test.yml
    synthetic_test_device:
      $ref: ../../components/schemas/synthetic_test_device.yml
    synthetic_test_radius_server:
      $ref: ../../components/schemas/synthetic_test_radius_server.yml
    synthetic_test_type:
      $ref: ../../components/schemas/synthetic_test_type.yml
    ui_settings:
      $ref: ../../components/schemas/ui_settings.yml
    unconnected_client_stats_array:
      $ref: ../../components/schemas/unconnected_client_stats_array.yml
    upgrade_bios:
      $ref: ../../components/schemas/upgrade_bios.yml
    upgrade_bios_multi:
      $ref: ../../components/schemas/upgrade_bios_multi.yml
    upgrade_fpga:
      $ref: ../../components/schemas/upgrade_fpga.yml
    upgrade_fpga_multi:
      $ref: ../../components/schemas/upgrade_fpga_multi.yml
    use_auto_ap_values:
      $ref: ../../components/schemas/use_auto_ap_values.yml
    utils_bounce_port:
      $ref: ../../components/schemas/utils_bounce_port.yml
    utils_cable_test:
      $ref: ../../components/schemas/utils_cable_test.yml
    utils_clear_arp:
      $ref: ../../components/schemas/utils_clear_arp.yml
    utils_clear_bgp:
      $ref: ../../components/schemas/utils_clear_bgp.yml
    utils_clear_bpdu:
      $ref: ../../components/schemas/utils_clear_bpdu.yml
    utils_clear_macs:
      $ref: ../../components/schemas/utils_clear_macs.yml
    utils_devices_restart:
      $ref: ../../components/schemas/utils_devices_restart.yml
    utils_devices_restart_multi:
      $ref: ../../components/schemas/utils_devices_restart_multi.yml
    utils_mac_table:
      $ref: ../../components/schemas/utils_mac_table.yml
    utils_monitor_traffic:
      $ref: ../../components/schemas/utils_monitor_traffic.yml
    utils_ping:
      $ref: ../../components/schemas/utils_ping.yml
    utils_release_dhcp:
      $ref: ../../components/schemas/utils_release_dhcp.yml
    utils_reset_radio_config:
      $ref: ../../components/schemas/utils_reset_radio_config.yml
    utils_rrm_optimize:
      $ref: ../../components/schemas/utils_rrm_optimize.yml
    utils_send_ble_beacon:
      $ref: ../../components/schemas/utils_send_ble_beacon.yml
    utils_send_support_logs:
      $ref: ../../components/schemas/utils_send_support_logs.yml
    utils_service_ping:
      $ref: ../../components/schemas/utils_service_ping.yml
    utils_show_arp:
      $ref: ../../components/schemas/utils_show_arp.yml
    utils_show_bgp_rummary:
      $ref: ../../components/schemas/utils_show_bgp_rummary.yml
    utils_show_evpn_database:
      $ref: ../../components/schemas/utils_show_evpn_database.yml
    utils_show_route:
      $ref: ../../components/schemas/utils_show_route.yml
    utils_show_service_path:
      $ref: ../../components/schemas/utils_show_service_path.yml
    utils_show_session:
      $ref: ../../components/schemas/utils_show_session.yml
    utils_traceroute:
      $ref: ../../components/schemas/utils_traceroute.yml
    utils_zeroise_fips:
      $ref: ../../components/schemas/utils_zeroise_fips.yml
    vbeacon:
      $ref: ../../components/schemas/vbeacon.yml
    virtual_chassis_config:
      $ref: ../../components/schemas/virtual_chassis_config.yml
    virtual_chassis_port:
      $ref: ../../components/schemas/virtual_chassis_port.yml
    virtual_chassis_update:
      $ref: ../../components/schemas/virtual_chassis_update.yml
    wan_usages_count_disctinct:
      $ref: ../../components/schemas/wan_usages_count_disctinct.yml
    wayfinding_import_json:
      $ref: ../../components/schemas/wayfinding_import_json.yml
    webhook:
      $ref: ../../components/schemas/webhook.yml
    webhook_delivery_distinct:
      $ref: ../../components/schemas/webhook_delivery_distinct.yml
    webhook_delivery_status:
      $ref: ../../components/schemas/webhook_delivery_status.yml
    webhook_delivery_topic:
      $ref: ../../components/schemas/webhook_delivery_topic.yml
    wlan:
      $ref: ../../components/schemas/wlan.yml
    wlan_portal_template:
      $ref: ../../components/schemas/wlan_portal_template.yml
    wxlan_rule:
      $ref: ../../components/schemas/wxlan_rule.yml
    wxlan_tag:
      $ref: ../../components/schemas/wxlan_tag.yml
    wxlan_tunnel:
      $ref: ../../components/schemas/wxlan_tunnel.yml
    zone:
      $ref: ../../components/schemas/zone.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
