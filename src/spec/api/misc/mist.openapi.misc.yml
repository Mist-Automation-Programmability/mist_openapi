openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2406.1.8**

    >

    > Date: **June 27, 2024**


    ---


    ### Additional Documentation

    * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html)

    * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html)

    * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)


    ---


    ### Helpful Resources

    * [API Sandbox and Exercises](https://api-class.mist.com/)

    * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace)

    * [API Demo Apps](https://apps.mist-lab.fr/)

    * [Juniper Blog](https://blogs.juniper.net/)


    ---

    '
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2406.1.8
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
    enableLogging: true
    generateExceptions: false
    generateInterfaces: true
    generateModels: true
    nullify404: true
    shortCopyrightNotice: "Copyright \xA9 2024 Juniper Networks, Inc.  All rights\
      \ reserved"
    useControllerPrefix: false
    useEnumPostfix: true
    useMethodPrefix: false
    useModelPostfix: false
    userAgent: SDK 2024.2.1
    userConfigurableRetries: true
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist EMEA 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist EMEA 02
      servers:
      - name: API Host
        url: https://api.gc3.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist EMEA 01
  url: https://api.eu.mist.com
- description: Mist EMEA 02
  url: https://api.gc3.mist.com
- description: Mist EMEA 03
  url: https://api.ac6.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
tags:
- name: Admins
- name: Admins Login
- description: "A Mist account can be linked to OAuth2 providers:\n1. First, login\
    \ with your Mist account\n2. Obtain the Authorization URL for Linking with [Get\
    \ Oauth 2 Authorization Url for Login]($e/Admins%20Login%20-%20OAuth2/getOauth2AuthorizationUrlForLogin).\n\
    As OAuth2 flow goes through provider's UI and back with the authorization code,\
    \ there are two ways to get it:\n  * in JSON response, more usable for developers.\
    \ Simply don\\'t specify the `forward` parameter when obtaining the authorization\
    \ URL\n  * as GET parameter, for UI where the user flow can be continued. Specify\
    \ the landing page/url of your choice \n3. Obtain the authorizaiton code by clicking\
    \ / going through Authorization URL Link Mist Account against OAuth2 Provider\
    \ by using the authorization code"
  name: Admins Login - OAuth2
- name: Admins Logout
- name: Admins Lookup
- name: Admins Recover Password
- name: Constants Definitions
- name: Constants Events
- name: Constants Misc
- name: Constants Models
- description: SDK Invites can be generated for (and belongs to) an Org. They can
    be generated by an Admin of an Org and can be revoked at anytime.
  name: Orgs SDK Invites
- name: Samples - Webhook
- description: "Like many other API providers, it's also possible to generate API\
    \ Tokens to be used (in HTTP Header)\n for authentication. An API token ties to\
    \ a Admin with equal or less privileges.\n\n**Notes:**\n\n* an API token generated\
    \ for a specific admin has the same privilege as the user\n* an API token will\
    \ be automatically removed if not used for > 90 days\n* SSO admins cannot generate\
    \ these API tokens. Refer [Org level API tokens]($e/Orgs%20API%20Tokens/createOrgApiToken)\
    \ which can have privileges of a specific Org/Site for more information."
  name: Self API Token
- name: Self Account
- name: Self Alarms
- name: Self Audit Logs
- name: Self MFA
- name: Self OAuth2
- name: Utilities Wi-Fi
paths:
  /api/v1/const/alarm_defs:
    get:
      description: 'Get List of brief definitions of all the supported alarm types.
        The

        example field contains an example payload as you would recieve in the

        alarm webhook output.



        HA cluster node names will be specified in the `node` field, if applicable.'
      operationId: listAlarmDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstAlarmDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listAlarmDefinitions
      tags:
      - Constants Definitions
  /api/v1/const/ap_channels:
    get:
      description: Get List of List of Available channels per country code
      operationId: listApChannels
      parameters:
      - $ref: '#/components/parameters/country_code'
      responses:
        '200':
          $ref: '#/components/responses/ConstApChannels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApChannels
      tags:
      - Constants Misc
  /api/v1/const/ap_led_status:
    get:
      description: Get List of AP LED definition
      operationId: listApLedDefinition
      responses:
        '200':
          $ref: '#/components/responses/ConstApLedDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApLedDefinition
      tags:
      - Constants Definitions
  /api/v1/const/app_categories:
    get:
      description: Get List of definitions of all the supported Application Categories.
        The example field contains an example payload as you would recieve in the
        alarm webhook output.
      operationId: listAppCategoryDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstAppCategoryDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listAppCategoryDefinitions
      tags:
      - Constants Definitions
  /api/v1/const/app_subcategories:
    get:
      description: Get List of definitions of all the supported Application sub-categories.
        The example field contains an example payload as you would recieve in the
        alarm webhook output.
      operationId: listAppSubCategoryDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstAppSubCategoryDefinitions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listAppSubCategoryDefinitions
      tags:
      - Constants Definitions
  /api/v1/const/applications:
    get:
      description: Get List of a list of applications that Juniper-Mist APs recognize
      operationId: listApplications
      responses:
        '200':
          $ref: '#/components/responses/ConstApplications'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApplications
      tags:
      - Constants Misc
  /api/v1/const/client_events:
    get:
      description: Get List of List of available Client Events
      operationId: listClientEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstClientEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listClientEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/countries:
    get:
      description: Get List of List of available Country Codes
      operationId: listCountryCodes
      responses:
        '200':
          $ref: '#/components/responses/ConstCrountries'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listCountryCodes
      tags:
      - Constants Misc
  /api/v1/const/default_gateway_config:
    get:
      description: Generate Default Gateway Config
      operationId: getGatewayDefaultConfig
      parameters:
      - description: model the default gateway config is intended (as the default
          LAN/WAN port can differ)
        in: query
        name: model
        required: true
        schema:
          type: string
      - description: whether the config is intended for HA
        in: query
        name: ha
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/ConstDefaultGatewayConfig'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getGatewayDefaultConfig
      tags:
      - Constants Misc
  /api/v1/const/device_events:
    get:
      description: Get list of available Device Events
      operationId: listDeviceEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstDeviceEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listDeviceEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/device_models:
    get:
      description: Get list of AP device models for the Mist Site
      operationId: listDeviceModels
      responses:
        '200':
          $ref: '#/components/responses/ConstDeviceModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listDeviceModels
      tags:
      - Constants Models
  /api/v1/const/gateway_applications:
    get:
      description: Get the full list of applications that we recognize
      operationId: listGatewayApplications
      responses:
        '200':
          $ref: '#/components/responses/ConstGatewayApplications'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listGatewayApplications
      tags:
      - Constants Misc
  /api/v1/const/insight_metrics:
    get:
      description: List Insight Metrics
      operationId: listInsightMetrics
      responses:
        '200':
          $ref: '#/components/responses/ConstInsightMetrics'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listInsightMetrics
      tags:
      - Constants Misc
  /api/v1/const/languages:
    get:
      description: Get List of Languages
      operationId: listSiteLanguages
      responses:
        '200':
          $ref: '#/components/responses/ConstLanaguages'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSiteLanguages
      tags:
      - Constants Misc
  /api/v1/const/license_types:
    get:
      description: Get License Types
      operationId: getLicenseTypes
      responses:
        '200':
          $ref: '#/components/responses/ConstLicenceTypes'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getLicenseTypes
      tags:
      - Constants Misc
  /api/v1/const/mxedge_events:
    get:
      description: Get List of available MX Edge Events
      operationId: listMxEdgeEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstMxEdgeEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMxEdgeEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/mxedge_models:
    get:
      description: Get List of available Mx Edge models
      operationId: listMxEdgeModels
      responses:
        '200':
          $ref: '#/components/responses/ConstMxEdgeModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMxEdgeModels
      tags:
      - Constants Models
  /api/v1/const/nac_events:
    get:
      description: Get List of List of available NAC Client Events
      operationId: listNacEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstNacEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listNacEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/otherdevice_events:
    get:
      description: Supported Events Type
      operationId: listOtherDeviceEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstOtherDeviceEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listOtherDeviceEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/otherdevice_models:
    get:
      description: Supported OtherDevice Models
      operationId: listSupportedOtherDeviceModels
      responses:
        '200':
          $ref: '#/components/responses/ConstOtherDeviceModels'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSupportedOtherDeviceModels
      tags:
      - Constants Models
  /api/v1/const/system_events:
    get:
      description: Get List of List of available System Events
      operationId: listSystemEventsDefinitions
      responses:
        '200':
          $ref: '#/components/responses/ConstSystemEvents'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSystemEventsDefinitions
      tags:
      - Constants Events
  /api/v1/const/traffic_types:
    get:
      description: Get List of identified traffic
      operationId: listTrafficTypes
      responses:
        '200':
          $ref: '#/components/responses/ConstTrafficTypes'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listTrafficTypes
      tags:
      - Constants Misc
  /api/v1/invite/verify/{token}:
    parameters:
    - $ref: '#/components/parameters/token'
    post:
      description: '**Note**: another call to ```GET /api/v1/self``` is required to
        see the new set of privileges'
      operationId: verifyAdminInvite
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/InviteVerifyNotFound'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifyAdminInvite
      tags:
      - Admins
  /api/v1/login:
    post:
      description: "Log in with email/password.\nWhen 2FA is enabled, there are two\
        \ ways to login:\n1. login with two_factor token (with Google Authenticator,\
        \ etc) \n2. login with email/password, generate the token, and use /login/two_factor\
        \ with the token"
      operationId: login
      requestBody:
        content:
          application/json:
            examples:
              with-2FA:
                value:
                  email: test@mistsys.com
                  password: foryoureyesonly
                  two_factor: '123456'
              without-2FA:
                value:
                  email: test@mistsys.com
                  password: foryoureyesonly
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/LoginFailure'
      summary: login
      tags:
      - Admins Login
  /api/v1/login/lookup:
    post:
      description: Login Lookup
      operationId: lookup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: test@mistsys.com
            schema:
              $ref: '#/components/schemas/email_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/LoginLookup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          description: user does not exist
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: lookup
      tags:
      - Admins Lookup
  /api/v1/login/oauth/{provider}:
    delete:
      description: Unlink OAuth2 Provider
      operationId: unlinkOauth2Provider
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: unlinkOauth2Provider
      tags:
      - Admins Login - OAuth2
    get:
      description: Obtain Authorization URL for Login
      operationId: getOauth2AuthorizationUrlForLogin
      parameters:
      - in: query
        name: forward
        schema:
          example: http://manage.mist.com/oauth/callback.html
          type: string
      responses:
        '200':
          $ref: '#/components/responses/LoginOauthUrl'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOauth2AuthorizationUrlForLogin
      tags:
      - Admins Login - OAuth2
    parameters:
    - in: path
      name: provider
      required: true
      schema:
        type: string
    post:
      description: Login via OAuth2
      operationId: loginOauth2
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 4/S9tegDeLkrYg0L9pWNXV4cgMVbbr3SR9t693A2kSHzw
            schema:
              $ref: '#/components/schemas/code_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: loginOauth2
      tags:
      - Admins Login - OAuth2
  /api/v1/login/two_factor:
    post:
      description: Send 2FA Code
      operationId: twoFactor
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  two_factor: '123456'
            schema:
              $ref: '#/components/schemas/two_factor_string'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          description: "two_factor code is incorrect or the user hasn\u2019t login\
            \ yet"
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          description: "the user doesn\u2019t have 2FA enabled"
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: twoFactor
      tags:
      - Admins Login
  /api/v1/logout:
    post:
      description: Logout
      operationId: logout
      responses:
        '200':
          $ref: '#/components/responses/Logout'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: logout
      tags:
      - Admins Logout
  /api/v1/mobile/verify/{secret}:
    parameters:
    - $ref: '#/components/parameters/secret'
    post:
      description: Verify secret
      operationId: activateSdkInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  device_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/device_id_string'
      responses:
        '200':
          $ref: '#/components/responses/MobileVerifySecret'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: activateSdkInvite
      tags:
      - Orgs SDK Invites
  /api/v1/recover:
    post:
      description: 'Recover Password

        An email will also be sent to the user with a link to https://manage.mist.com/verify/recover?token=:token'
      operationId: recoverPassword
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  email: test@mistsys.com
                  recaptcha: string
                  recaptcha_flavor: hcaptcha
            schema:
              $ref: '#/components/schemas/recover'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: recoverPassword
      tags:
      - Admins Recover Password
  /api/v1/recover/verify/{token}:
    parameters:
    - $ref: '#/components/parameters/token'
    post:
      description: 'Verify Recover Password

        With correct verification, the user will be authenticated. UI can then prompt
        for new password'
      operationId: verifyRecoverPasssword
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifyRecoverPasssword
      tags:
      - Admins Recover Password
  /api/v1/register:
    post:
      description: "Register a new admin and his/her org\nAn email will also be sent\
        \ to the user with a link to `/verify/register?token={token}`\n\n### reCAPTCHA\n\
        Google reCAPTCHA is the choice to prevent bot registration\n\nIt needs this\
        \ \n\n&lt;script src='https://www.google.com/recaptcha/api.js' &gt;&lt;/script&gt;\n\
        \nand this &lt;div&gt; in the desired place\n```html\n<div class=\"g-recaptcha\"\
        \ data_sitekey=\"6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd\"></div>\n```\n\n\
        Use GET /api/v1/register/recaptcha to read the current setting.\nResponse\
        \ example:\n```json\n{    \n  \"flavor\": \"google\",\n  \"required\": true,\
        \    \n  \"sitekey\": \"6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd\"\n}\n```\n\
        \n### hCaptcha\nAlternative to reCAPTCHA is hCaptcha to prevent bot registration\n\
        \nIt needs this script\n\n&lt;script src='https://js.hcaptcha.com/1/api.js'\
        \ async defer &gt;&lt;/script&gt;\n\nand this &lt;div&gt; in the desired place\n\
        ```html\n<div class=\"h-recaptcha\" data_sitekey=\"6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd\"\
        ></div>\n```\n\nUse GET /api/v1/register/recaptcha?recaptcha_flavor=hcaptcha\
        \ to read the current setting for hcaptcha with reply.\nResponse example:\n\
        ```json\n{\n  \"flavor\": \"hcaptcha\",\n  \"required\": true,\n  \"sitekey\"\
        : \"6LdAewsTAAAAAE25XKQhPEQ2FiMTft-WrZXQ5NUd\"\n}\"\n```"
      operationId: registerNewAdmin
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  account_only: false
                  allow_mist: false
                  city: Cupertino
                  country: United States
                  email: test@mistsys.com
                  first_name: John
                  invite_code: MISTROCKS
                  last_name: Smith
                  org_name: Smith LLC
                  password: foryoureyesonly
                  recaptcha: string
                  recaptcha_flavor: hcaptcha
                  referer_invite_token: Dm2gtT8dwMeM4Bc2E8FLIaA96VHOjPat
                  return_to: http://mist.zendesk.com/hc/quickstart.pdf
                  state: California
                  street_address: 1601 S De Anza Blvd Ste 248
                  street_address 2: 1601 S De Anza Blvd Ste 248
                  zipcode: '95014'
            schema:
              $ref: '#/components/schemas/admin_invite'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: registerNewAdmin
      tags:
      - Admins
  /api/v1/register/recaptcha:
    get:
      description: Get Registration Information
      operationId: getAdminRegistrationInfo
      parameters:
      - in: query
        name: recaptcha_flavor
        schema:
          $ref: '#/components/schemas/recaptcha_flavor'
      responses:
        '200':
          $ref: '#/components/responses/Recaptcha'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getAdminRegistrationInfo
      tags:
      - Admins
  /api/v1/register/verify/{token}:
    parameters:
    - $ref: '#/components/parameters/token'
    post:
      description: Verify registration
      operationId: verifyRegistration
      responses:
        '200':
          $ref: '#/components/responses/VerifyRegisterTokenSuccess'
        '400':
          $ref: '#/components/responses/VerifyRegisterTokenAlreadyRegistered'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/VerifyRegisterTokenInvalid'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifyRegistration
      tags:
      - Admins
  /api/v1/self:
    delete:
      description: 'To delete ones account and every associated with it. The effects:


        the account would be deleted

        any orphaned Org (that only has this account as admin) will be deleted

        along with all data with Org (sites, wlans, devices) will be gone.'
      operationId: deleteSelf
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/DeleteSelfFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteSelf
      tags:
      - Self Account
    get:
      description: "Get \u2018whoami\u2019 and privileges (which org and which sites\
        \ I have access to)"
      operationId: getSelf
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getSelf
      tags:
      - Self Account
    put:
      description: update Account Information
      operationId: updateSelf
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: john.smith@mycorp.net
                  first_name: John
                  last_name: Smith
                  persona: security
                  phone: '14081112222'
                  phone2: '14083334444'
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSelf
      tags:
      - Self Account
  /api/v1/self/apitokens:
    get:
      description: Get List of Current User API Tokens
      operationId: listApiTokens
      responses:
        '200':
          $ref: '#/components/responses/ApitokensUserArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listApiTokens
      tags:
      - Self API Token
    post:
      description: 'Create API Token

        Note that the key is only available during creation time.'
      operationId: createApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: org_token_xyz
            schema:
              $ref: '#/components/schemas/user_apitoken'
      responses:
        '200':
          $ref: '#/components/responses/ApitokensUserArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createApiToken
      tags:
      - Self API Token
  /api/v1/self/apitokens/{apitoken_id}:
    delete:
      description: Delete an API Token
      operationId: deleteApiToken
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteApiToken
      tags:
      - Self API Token
    get:
      description: Get User API Token
      operationId: getApiToken
      responses:
        '200':
          $ref: '#/components/responses/ApitokenUser'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getApiToken
      tags:
      - Self API Token
    parameters:
    - $ref: '#/components/parameters/apitoken_id'
    put:
      description: Update User API Token
      operationId: updateApiToken
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  name: org_token_xyz
            schema:
              $ref: '#/components/schemas/user_apitoken'
      responses:
        '200':
          $ref: '#/components/responses/ApitokenUser'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateApiToken
      tags:
      - Self API Token
  /api/v1/self/logs:
    get:
      description: 'Get List of change logs across all Orgs for current admin

        Audit logs records all administrative activities done by current admin across
        all orgs'
      operationId: listSelfAuditLogs
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/SelfAuditLogs'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listSelfAuditLogs
      tags:
      - Self Audit Logs
  /api/v1/self/oauth/{provider}:
    get:
      description: Obtain Authorization URL for Linking
      operationId: getOauth2UrlForLinking
      parameters:
      - in: query
        name: forward
        schema:
          example: http://manage.mist.com/oauth/callback.html
          type: string
      responses:
        '200':
          $ref: '#/components/responses/SelfOauthUrl'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getOauth2UrlForLinking
      tags:
      - Self OAuth2
    parameters:
    - in: path
      name: provider
      required: true
      schema:
        type: string
    post:
      description: Link Mist account with an OAuth2 Provider
      operationId: linkOauth2MistAccount
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: 4/S9tegDeLkrYg0L9pWNXV4cgMVbbr3SR9t693A2kSHzw
            schema:
              $ref: '#/components/schemas/code_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SelfOauthLinkSuccess'
        '400':
          $ref: '#/components/responses/SelfOauthLinkFailure'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: linkOauth2MistAccount
      tags:
      - Self OAuth2
  /api/v1/self/subscriptions:
    get:
      description: Get List of all the subscriptions
      operationId: listAlarmSubscriptions
      responses:
        '200':
          $ref: '#/components/responses/SelfSubscriptions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listAlarmSubscriptions
      tags:
      - Self Alarms
  /api/v1/self/two_factor/token:
    get:
      description: Generate Secret Key for 2FA verification
      operationId: generateSecretFor2faVerification
      parameters:
      - description: if `by`==`qrcode`, returns the secret as a qrcode image
        in: query
        name: by
        schema:
          $ref: '#/components/schemas/mfa_secret_type'
      responses:
        '200':
          $ref: '#/components/responses/TwoFactor'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: generateSecretFor2faVerification
      tags:
      - Self MFA
  /api/v1/self/two_factor/verify:
    post:
      description: "Verify Two-factor (OTP)\n\nTo verify two-factor authentication\
        \ by using a code generated by app (e.g. Google Authenticator, Authy). Upon\
        \ successful verification, the `two_factor_passed` will be set to true if\
        \ it hasn\u2019t already been.\n"
      operationId: verifyTwoFactor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/two_factor_code'
        description: Request Body
      responses:
        '200':
          description: Response when 2FA verification is successful
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifyTwoFactor
      tags:
      - Self MFA
  /api/v1/self/update:
    post:
      description: 'Change Email

        We require the user to verify that they actually own the email address they
        intend to change it to.


        After the API call, the user will receive an email to the new email address
        with a link like https://manage.mist.com/verify/update?expire=:exp_time&email=:admin_email&token=:token


        Upon clicking the link, the user is provided with a login page to authenticate
        using existing credentials. After successful login, the email address of the
        user gets updated


        **Note**: The request parameter email can be used by UI to validate that the
        current session (if any) belongs to the admin or provide a login page (by
        pre-populating the email on login screen). UI can also use the request parameter
        expire to validate token expiry.'
      operationId: updateSelfEmail
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: new@mistsys.com
            schema:
              $ref: '#/components/schemas/email_string'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/UpdateSelfFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateSelfEmail
      tags:
      - Self Account
  /api/v1/self/update/verify/{token}:
    get:
      description: Verify Email change
      operationId: verifySelfEmail
      responses:
        '200':
          $ref: '#/components/responses/SelfVerifyEmailSuccess'
        '400':
          $ref: '#/components/responses/SelfVerifyEmailFailed'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: verifySelfEmail
      tags:
      - Self Account
    parameters:
    - $ref: '#/components/parameters/token'
  /api/v1/utils/test_telstra:
    post:
      description: 'Allows validation of Telstra sms gateway credentials.


        In case of success, a text message confirming successful setup should be received.
        In case of error, telstra error message are returned.'
      operationId: testSiteWlanTelstraSetup
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  telstra_client_id: '123456'
                  telstra_client_secret: abcdef
                  to: '+911122334455'
            schema:
              $ref: '#/components/schemas/test_telstra'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: testSiteWlanTelstraSetup
      tags:
      - Utilities Wi-Fi
  /api/v1/utils/test_twilio:
    post:
      description: 'Allows validation of twilio setup

        In case of success, a text message confirming successful setup should be received.
        In case of error, twilio error code and message are returned.'
      operationId: testSiteWlanTwilioSetup
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  from: '+185051234567'
                  to: '+19999999999'
                  twilio_auth_token: 2135be04736a1a0a314bce432d61721a
                  twilio_sid: AC5f4366878d193fb4865ab151739999eb
            schema:
              $ref: '#/components/schemas/test_twilio'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: testSiteWlanTwilioSetup
      tags:
      - Utilities Wi-Fi
  /webhook_example/_alarm_:
    post:
      description: 'Webhook sample for `alarm` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: alarms
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - aps:
                    - string
                    bssids:
                    - string
                    count: 0
                    event_id: a7a26ff2-e851-45b6-9634-d595f45458b7
                    for_site: true
                    id: 489f6eca-6276-4993-bfeb-c3cbbbba1f08
                    last_seen: 0
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    ssids:
                    - string
                    timestamp: 0
                    type: string
                    update: true
                  topic: alarms
            schema:
              $ref: '#/components/schemas/webhook_alarms'
        description: "**N.B.**: Fields like `aps`, `bssids`, `ssids` are event specific.\
          \ They are relevant to this event type ( rogue-ap-detected). For a different\
          \ event type, different fields may be sent. These don\u2019t contain all\
          \ affected entities and are representative samples of entities (capped at\
          \ 10). For marvis action related events, we expose `details` to include\
          \ more event specific details.\n\nEvents specific fields for other alarm\
          \ event type can be found with API https://api.mist.com/api/v1/const/alarm_defs,\
          \ under \u201Cfields\u201D array of /alarm_defs response object."
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: alarms
      tags:
      - Samples - Webhook
  /webhook_example/_asset_raw_:
    post:
      description: 'Webhook sample for `asset_raw` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages


        **will be deprecated after 06/30/2024**'
      operationId: assetRaw
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - asset_id: b4695157-0d1d-4da0-8f9e-5c53149389e4
                    beam: 0
                    device_id: 3bafab7b-4400-4bcf-8e6e-09f954699940
                    ibeacon_major: 0
                    ibeacon_minor: 0
                    ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                    mac: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    mfg_company_id: 0
                    mfg_data: string
                    rssi: 0
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    timestamp: 0
                  topic: asset-raw
            schema:
              $ref: '#/components/schemas/webhook_asset_raw'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: assetRaw
      tags:
      - Samples - Webhook
  /webhook_example/_audit_:
    post:
      description: 'Webhook sample for `audit` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: audits
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - admin_name: admin_name8
                    device_id: 00000380-0000-0000-0000-000000000000
                    id: 0000122a-0000-0000-0000-000000000000
                    message: message0
                    org_id: 00001302-0000-0000-0000-000000000000
                    site_id: 00000290-0000-0000-0000-000000000000
                    src_ip: src_ip6
                    timestamp: 157.68
                  topic: audits
            schema:
              $ref: '#/components/schemas/webhook_audits'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: audits
      tags:
      - Samples - Webhook
  /webhook_example/_client_info_:
    post:
      description: 'Webhook sample for `client_info` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: clientInfo
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - ap: string
                    ap_name: string
                    band: string
                    bssid: string
                    connect: 0
                    connect_float: 0
                    mac: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rssi: 0
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                    ssid: string
                    timestamp: 0
                    version: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-info
            schema:
              $ref: '#/components/schemas/webhook_client_info'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: clientJoin
      tags:
      - Samples - Webhook
  /webhook_example/_client_join_:
    post:
      description: 'Webhook sample for `client_join` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: clientJoin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - ap: string
                    ap_name: string
                    band: string
                    bssid: string
                    connect: 0
                    connect_float: 0
                    mac: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rssi: 0
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                    ssid: string
                    timestamp: 0
                    version: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-join
            schema:
              $ref: '#/components/schemas/webhook_client_join'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: clientJoin
      tags:
      - Samples - Webhook
  /webhook_example/_client_latency_:
    post:
      description: 'Webhook sample for `client-latency` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: client_latency
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - avg_auth: 0.17170219
                    avg_dhcp: 0.017828934
                    avg_dns: 0.024532124
                    max_auth: 0.18170219
                    max_dhcp: 0.027828934
                    max_dns: 0.029532124
                    min_auth: 0.16050219
                    min_dhcp: 0.015828934
                    min_dns: 0.022532124
                    org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1696401600
                  topic: client-latency
            schema:
              $ref: '#/components/schemas/webhook_client_latency'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: alarms
      tags:
      - Samples - Webhook
  /webhook_example/_client_sessions_:
    post:
      description: 'Webhook sample for `client_sessions` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: clientSessions
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - ap: string
                    ap_name: string
                    band: string
                    bssid: string
                    client_family: string
                    client_manufacture: string
                    client_model: string
                    client_os: string
                    connect: 0
                    connect_float: 0
                    disconnect: 0
                    disconnect_float: 0
                    duration: 0
                    mac: string
                    next_ap: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rssi: 0
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                    ssid: string
                    termination_reason: 0
                    timestamp: 0
                    version: 0
                    wlan_id: 5028e92b-fc59-4056-91d1-ea4b4ca1617a
                  topic: client-sessions
            schema:
              $ref: '#/components/schemas/webhook_client_sessions'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
      summary: clientSessions
      tags:
      - Samples - Webhook
  /webhook_example/_device_events_:
    post:
      description: 'Webhook sample for `device_events` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: deviceEvents
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - ap: string
                    ap_name: string
                    audit_id: 78c04fa6-cfb4-46a0-9aa5-3681ba4f3897
                    device_name: string
                    device_type: ap
                    ev_type: notice
                    mac: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    reason: string
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                    text: string
                    timestamp: 0
                    type: string
                  topic: device_events
            schema:
              $ref: '#/components/schemas/webhook_device_events'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: deviceEvents
      tags:
      - Samples - Webhook
  /webhook_example/_device_updowns_:
    post:
      description: 'Webhook sample for `device_updowns` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: deviceUpDown
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - ap: string
                    ap_name: string
                    for_site: true
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                    timestamp: 0
                    type: string
                  topic: device-updowns
            schema:
              $ref: '#/components/schemas/webhook_device_updowns'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: deviceUpDown
      tags:
      - Samples - Webhook
  /webhook_example/_discovered_raw_rssi_:
    post:
      description: 'Webhook sample for `discovered-raw-rssi` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: discovered-raw-rssi
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - ap_loc:
                    - 0
                    beam: 0
                    device_id: 3bafab7b-4400-4bcf-8e6e-09f954699940
                    ibeacon_major: 0
                    ibeacon_minor: 0
                    ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                    is_asset: true
                    mac: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    mfg_company_id: string
                    mfg_data: string
                    org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                    rssi: 0
                    service_packets:
                    - service_data: string
                      service_uuid: 7138cc00-c611-4dec-a05e-5c4b1cae13c0
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    timestamp: 0
                  topic: string
            schema:
              $ref: '#/components/schemas/webhook_discovered_raw_rssi'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: discovered-raw-rssi
      tags:
      - Samples - Webhook
  /webhook_example/_location_:
    post:
      description: 'Webhook sample for `location` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - battery_voltage: 0
                    eddystone_uid_instance: string
                    eddystone_uid_namespace: string
                    eddystone_url_url: string
                    ibeacon_major: 0
                    ibeacon_minor: 0
                    ibeacon_uuid: 1f89bc00-d0af-481b-82fe-a6629259a39f
                    id: 487f6eca-6276-4993-bfeb-e3cbbbba3f08
                    mac: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    mfg_company_id: 0
                    mfg_data: string
                    name: string
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    timestamp: 0
                    type: string
                    x: 0
                    y: 0
                  topic: location
            schema:
              $ref: '#/components/schemas/webhook_location'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: location
      tags:
      - Samples - Webhook
  /webhook_example/_location_asset_:
    post:
      description: 'Webhook sample for `location_asset` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location_asset
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - battery_voltage: 3370
                    eddystone_uid_instance: 5c5b35000001
                    eddystone_uid_namespace: 2818e3868dec25629ede
                    eddystone_url_url: https://www.abc.com
                    ibeacon_major: 13
                    ibeacon_minor: 138
                    ibeacon_uuid: f3f17139-704a-f03a-2786-0400279e37c3
                    mac: 7fc2936fd243
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    mfg_company_id: 935
                    mfg_data: 648520a1020000
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1461220784
                    type: asset
                    x: 13.5
                    y: 3.2
                  topic: location_asset
            schema:
              $ref: '#/components/schemas/webhook_location_asset'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: location
      tags:
      - Samples - Webhook
  /webhook_example/_location_centrak_:
    post:
      description: 'Webhook sample for `location_centrak` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location_centrak
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - mac: 5684dae9ac8b
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1461220784
                    type: wifi
                    wifi_beacon_extended_info:
                    - frame_ctrl: 776
                      payload: '............'
                      seq_ctrl: 772
                    x: 13.5
                    y: 3.2
                  topic: location_centrak
            schema:
              $ref: '#/components/schemas/webhook_location_centrak'
        description: "**N.B.**: Fields like `aps`, `bssids`, `ssids` are event specific.\
          \ They are relevant to this event type ( rogue-ap-detected). For a different\
          \ event type, different fields may be sent. These don\u2019t contain all\
          \ affected entities and are representative samples of entities (capped at\
          \ 10). For marvis action related events, we expose `details` to include\
          \ more event specific details.\n\nEvents specific fields for other alarm\
          \ event type can be found with API https://api.mist.com/api/v1/const/alarm_defs,\
          \ under \u201Cfields\u201D array of /alarm_defs response object."
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: alarms
      tags:
      - Samples - Webhook
  /webhook_example/_location_client_:
    post:
      description: 'Webhook sample for `location_client` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location_client
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - mac: 5684dae9ac8b
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1461220784
                    type: wifi
                    wifi_beacon_extended_info:
                    - frame_ctrl: 776
                      payload: '............'
                      seq_ctrl: 772
                    x: 13.5
                    y: 3.2
                  topic: location_client
            schema:
              $ref: '#/components/schemas/webhook_location_client'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: location
      tags:
      - Samples - Webhook
  /webhook_example/_location_sdk_:
    post:
      description: 'Webhook sample for `location_sdk` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location_sdk
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - id: de87bf9d-183f-e383-cc68-6ba43947d403
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    name: optional
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1461220784
                    type: sdk
                    x: 13.5
                    y: 3.2
                  topic: location_sdk
            schema:
              $ref: '#/components/schemas/webhook_location_sdk'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: location
      tags:
      - Samples - Webhook
  /webhook_example/_location_unclient_:
    post:
      description: 'Webhook sample for `location_unclient` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: location_unclient
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - mac: 5684dae9ac8b
                    map_id: 845a23bf-bed9-e43c-4c86-6fa474be7ae5
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    timestamp: 1461220784
                    type: wifi
                    wifi_beacon_extended_info:
                    - frame_ctrl: 776
                      payload: '............'
                      seq_ctrl: 772
                    x: 13.5
                    y: 3.2
                  topic: location_unclient
            schema:
              $ref: '#/components/schemas/webhook_location_unclient'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: location
      tags:
      - Samples - Webhook
  /webhook_example/_nac_accounting_:
    post:
      description: 'Webhook sample for `nac-accounting` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: nacAccounting
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - ap: 5c5b355005be
                    auth_type: eap-tls
                    bssid: 5c5b35546bb4
                    client_ip: 172.16.87.4
                    client_type: wireless
                    mac: 6e795836d5f9
                    nas_vendor: juniper-mist
                    org_id: 625aba64-fe72-4b14-8985-cbf31ec3d78a
                    rx_pkts: 9523
                    site_id: ec9d1e85-af24-43f9-8d65-d620580e8631
                    ssid: Test-CMR SSID
                    timestamp: 1547235620.89
                    tx_pkts: 5233
                    type: NAC_ACCOUNTING_STOP
                    username: hi
                  topic: nac-accounting
            schema:
              $ref: '#/components/schemas/webhook_nac_accounting'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: nacAccounting
      tags:
      - Samples - Webhook
  /webhook_example/_nac_events_:
    post:
      description: Example Delivery of nac_events
      operationId: nac_events
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - ap: 5c5b35513227
                    auth_type: 802.1X
                    bssid: 5c5b355fafcc
                    dryrun_nacrule_id: 32f27e7d-ff26-4a9b-b3d1-ff9bcb264012
                    dryrun_nacrule_matched: true
                    idp_id: 912ef72e-2239-4996-b81e-469e87a27cd6
                    idp_role:
                    - itsuperusers
                    - vip
                    mac: ac3eb179e535
                    nacrule_id: 32f27e7d-ff26-4a9b-b3d1-ff9bcb264c62
                    nacrule_matched: true
                    nas_vendor: juniper-mist
                    org_id: 27547ac2-d114-4e04-beb1-f3f1e6e81ec6
                    random_mac: true
                    resp_attrs:
                    - Tunnel-Type=VLAN
                    - Tunnel-Medium-Type=IEEE-802
                    - Tunnel-Private-Group-Id=750
                    - User-Name=anonymous
                    site_id: 441a1214-6928-442a-8e92-e1d34b8ec6a6
                    ssid: '##mist_nac'
                    timestamp: 1691512031.358188
                    type: NAC_CLIENT_PERMIT
                    username: user@deaflyz.net
                    vlan: '750'
                  topic: string
            schema:
              $ref: '#/components/schemas/webhook_nac_events'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: nac_events
      tags:
      - Samples - Webhook
  /webhook_example/_occupancy_alerts_:
    post:
      description: 'Webhook sample for `occupancy_alerts` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: occupancyAlerts
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - alert_events:
                    - current_occupancy: 0
                      map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                      occupancy_limit: 0
                      org_id: a40f5d1f-d889-42e9-94ea-b9b33585fc6b
                      timestamp: 0
                      type: COMPLIANCE-VIOLATION
                      zone_id: 4495020a-236f-46e0-9453-e3f9cc6476f4
                      zone_name: string
                    for_site: true
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    site_name: string
                  topic: occupancy-alerts
            schema:
              $ref: '#/components/schemas/webhook_occupancy_alerts'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: occupancyAlerts
      tags:
      - Samples - Webhook
  /webhook_example/_ping_:
    post:
      description: 'Webhook sample for `ping` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: ping
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - id: 487f6eca-6276-4993-bfeb-f3cbbbba4f08
                    name: string
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    timestamp: 0
                  topic: ping
            schema:
              $ref: '#/components/schemas/webhook_ping'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: ping
      tags:
      - Samples - Webhook
  /webhook_example/_sdkclient_scan_data:
    post:
      description: 'Webhook sample for `sdkclient_scan_data` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: sdkclientScanData
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - connection_ap: 5c5b352f587e
                    connection_band: '2.4'
                    connection_bssid: 5c5b352b51b4
                    connection_channel: 11
                    connection_rssi: -87
                    last_seen: 1592333828
                    mac: 70ef0071535f
                    scan_data:
                    - ap: 5c5b352f587e
                      band: '2.4'
                      bssid: 5c5b352b51b4
                      channel: 11
                      rssi: -87
                      ssid: mist-wifi
                      timestamp: 1592333828
                    - ap: 5c5b352f587e
                      band: '5'
                      bssid: 5c5b352b51b8
                      channel: 36
                      rssi: -75
                      ssid: mist-wifi
                      timestamp: 1592333828
                    site_id: 93986f10-773b-42be-9438-8d3e6d127f1a
                  topic: sdkclient_scan_data
            schema:
              $ref: '#/components/schemas/webhook_sdkclient_scan_data'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: sdkclientScanData
      tags:
      - Samples - Webhook
  /webhook_example/_site_sle_:
    post:
      description: 'Webhook sample for `site_sle` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: site_sle
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  events:
                  - org_id: 2818e386-8dec-2562-9ede-5b8a0fbbdc71
                    site_id: 4ac1dcf4-9d8b-7211-65c4-057819f0862b
                    sle:
                      ap-availability: 0.6
                      successful-connect: 0.7
                      time-to-connect: 0.9
                    timestamp: 1694620800
                  topic: site_sle
            schema:
              $ref: '#/components/schemas/webhook_site_sle'
        description: ''
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: site_sle
      tags:
      - Samples - Webhook
  /webhook_example/_zone_:
    post:
      description: 'Webhook sample for `zone` topic


        **Note**: The server host will be your own server FQDN where the Mist Cloud
        is sending the webhook messages'
      operationId: zone
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  events:
                  - asset_id: b4695157-0d1d-4da0-8f9e-5c53149389e4
                    id: 485f6eca-6276-4993-bfeb-54cbbbba5f08
                    mac: string
                    map_id: 09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1
                    name: string
                    site_id: 72771e6a-6f5e-4de4-a5b9-1266c4197811
                    timestamp: 0
                    trigger: enter
                    type: string
                    zone_id: 4495020a-236f-46e0-9453-e3f9cc6476f4
                  topic: zone
            schema:
              $ref: '#/components/schemas/webhook_zone'
      responses:
        '200':
          $ref: '#/components/responses/OK'
      summary: zone
      tags:
      - Samples - Webhook
components:
  parameters:
    apitoken_id:
      $ref: ../../components/parameters/apitoken_id.yml
    country_code:
      $ref: ../../components/parameters/country_code.yml
    duration:
      $ref: ../../components/parameters/duration.yml
    end:
      $ref: ../../components/parameters/end.yml
    limit:
      $ref: ../../components/parameters/limit.yml
    page:
      $ref: ../../components/parameters/page.yml
    secret:
      $ref: ../../components/parameters/secret.yml
    start:
      $ref: ../../components/parameters/start.yml
    token:
      $ref: ../../components/parameters/token.yml
  responses:
    Admin:
      $ref: ../../components/responses/Admin.yml
    ApitokenUser:
      $ref: ../../components/responses/ApitokenUser.yml
    ApitokensUserArray:
      $ref: ../../components/responses/ApitokensUserArray.yml
    ConstAlarmDefinitions:
      $ref: ../../components/responses/ConstAlarmDefinitions.yml
    ConstApChannels:
      $ref: ../../components/responses/ConstApChannels.yml
    ConstApLedDefinitions:
      $ref: ../../components/responses/ConstApLedDefinitions.yml
    ConstAppCategoryDefinitions:
      $ref: ../../components/responses/ConstAppCategoryDefinitions.yml
    ConstAppSubCategoryDefinitions:
      $ref: ../../components/responses/ConstAppSubCategoryDefinitions.yml
    ConstApplications:
      $ref: ../../components/responses/ConstApplications.yml
    ConstClientEvents:
      $ref: ../../components/responses/ConstClientEvents.yml
    ConstCrountries:
      $ref: ../../components/responses/ConstCrountries.yml
    ConstDefaultGatewayConfig:
      $ref: ../../components/responses/ConstDefaultGatewayConfig.yml
    ConstDeviceEvents:
      $ref: ../../components/responses/ConstDeviceEvents.yml
    ConstDeviceModels:
      $ref: ../../components/responses/ConstDeviceModels.yml
    ConstGatewayApplications:
      $ref: ../../components/responses/ConstGatewayApplications.yml
    ConstInsightMetrics:
      $ref: ../../components/responses/ConstInsightMetrics.yml
    ConstLanaguages:
      $ref: ../../components/responses/ConstLanaguages.yml
    ConstLicenceTypes:
      $ref: ../../components/responses/ConstLicenceTypes.yml
    ConstMxEdgeEvents:
      $ref: ../../components/responses/ConstMxEdgeEvents.yml
    ConstMxEdgeModels:
      $ref: ../../components/responses/ConstMxEdgeModels.yml
    ConstNacEvents:
      $ref: ../../components/responses/ConstNacEvents.yml
    ConstOtherDeviceEvents:
      $ref: ../../components/responses/ConstOtherDeviceEvents.yml
    ConstOtherDeviceModels:
      $ref: ../../components/responses/ConstOtherDeviceModels.yml
    ConstSystemEvents:
      $ref: ../../components/responses/ConstSystemEvents.yml
    ConstTrafficTypes:
      $ref: ../../components/responses/ConstTrafficTypes.yml
    DeleteSelfFailed:
      $ref: ../../components/responses/DeleteSelfFailed.yml
    HTTP400:
      $ref: ../../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../../components/responses/HTTP429.yml
    InviteVerifyNotFound:
      $ref: ../../components/responses/InviteVerifyNotFound.yml
    LoginFailure:
      $ref: ../../components/responses/LoginFailure.yml
    LoginLookup:
      $ref: ../../components/responses/LoginLookup.yml
    LoginOauthUrl:
      $ref: ../../components/responses/LoginOauthUrl.yml
    LoginSuccess:
      $ref: ../../components/responses/LoginSuccess.yml
    Logout:
      $ref: ../../components/responses/Logout.yml
    MobileVerifySecret:
      $ref: ../../components/responses/MobileVerifySecret.yml
    OK:
      $ref: ../../components/responses/OK.yml
    Recaptcha:
      $ref: ../../components/responses/Recaptcha.yml
    SelfAuditLogs:
      $ref: ../../components/responses/SelfAuditLogs.yml
    SelfOauthLinkFailure:
      $ref: ../../components/responses/SelfOauthLinkFailure.yml
    SelfOauthLinkSuccess:
      $ref: ../../components/responses/SelfOauthLinkSuccess.yml
    SelfOauthUrl:
      $ref: ../../components/responses/SelfOauthUrl.yml
    SelfSubscriptions:
      $ref: ../../components/responses/SelfSubscriptions.yml
    SelfVerifyEmailFailed:
      $ref: ../../components/responses/SelfVerifyEmailFailed.yml
    SelfVerifyEmailSuccess:
      $ref: ../../components/responses/SelfVerifyEmailSuccess.yml
    TwoFactor:
      $ref: ../../components/responses/TwoFactor.yml
    UpdateSelfFailed:
      $ref: ../../components/responses/UpdateSelfFailed.yml
    VerifyRegisterTokenAlreadyRegistered:
      $ref: ../../components/responses/VerifyRegisterTokenAlreadyRegistered.yml
    VerifyRegisterTokenInvalid:
      $ref: ../../components/responses/VerifyRegisterTokenInvalid.yml
    VerifyRegisterTokenSuccess:
      $ref: ../../components/responses/VerifyRegisterTokenSuccess.yml
  schemas:
    admin:
      $ref: ../../components/schemas/admin.yml
    admin_invite:
      $ref: ../../components/schemas/admin_invite.yml
    code_string:
      $ref: ../../components/schemas/code_string.yml
    device_id_string:
      $ref: ../../components/schemas/device_id_string.yml
    email_string:
      $ref: ../../components/schemas/email_string.yml
    login:
      $ref: ../../components/schemas/login.yml
    mfa_secret_type:
      $ref: ../../components/schemas/mfa_secret_type.yml
    recaptcha_flavor:
      $ref: ../../components/schemas/recaptcha_flavor.yml
    recover:
      $ref: ../../components/schemas/recover.yml
    test_telstra:
      $ref: ../../components/schemas/test_telstra.yml
    test_twilio:
      $ref: ../../components/schemas/test_twilio.yml
    two_factor_code:
      $ref: ../../components/schemas/two_factor_code.yml
    two_factor_string:
      $ref: ../../components/schemas/two_factor_string.yml
    user_apitoken:
      $ref: ../../components/schemas/user_apitoken.yml
    webhook_alarms:
      $ref: ../../components/schemas/webhook_alarms.yml
    webhook_asset_raw:
      $ref: ../../components/schemas/webhook_asset_raw.yml
    webhook_audits:
      $ref: ../../components/schemas/webhook_audits.yml
    webhook_client_info:
      $ref: ../../components/schemas/webhook_client_info.yml
    webhook_client_join:
      $ref: ../../components/schemas/webhook_client_join.yml
    webhook_client_latency:
      $ref: ../../components/schemas/webhook_client_latency.yml
    webhook_client_sessions:
      $ref: ../../components/schemas/webhook_client_sessions.yml
    webhook_device_events:
      $ref: ../../components/schemas/webhook_device_events.yml
    webhook_device_updowns:
      $ref: ../../components/schemas/webhook_device_updowns.yml
    webhook_discovered_raw_rssi:
      $ref: ../../components/schemas/webhook_discovered_raw_rssi.yml
    webhook_location:
      $ref: ../../components/schemas/webhook_location.yml
    webhook_location_asset:
      $ref: ../../components/schemas/webhook_location_asset.yml
    webhook_location_centrak:
      $ref: ../../components/schemas/webhook_location_centrak.yml
    webhook_location_client:
      $ref: ../../components/schemas/webhook_location_client.yml
    webhook_location_sdk:
      $ref: ../../components/schemas/webhook_location_sdk.yml
    webhook_location_unclient:
      $ref: ../../components/schemas/webhook_location_unclient.yml
    webhook_nac_accounting:
      $ref: ../../components/schemas/webhook_nac_accounting.yml
    webhook_nac_events:
      $ref: ../../components/schemas/webhook_nac_events.yml
    webhook_occupancy_alerts:
      $ref: ../../components/schemas/webhook_occupancy_alerts.yml
    webhook_ping:
      $ref: ../../components/schemas/webhook_ping.yml
    webhook_sdkclient_scan_data:
      $ref: ../../components/schemas/webhook_sdkclient_scan_data.yml
    webhook_site_sle:
      $ref: ../../components/schemas/webhook_site_sle.yml
    webhook_zone:
      $ref: ../../components/schemas/webhook_zone.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
