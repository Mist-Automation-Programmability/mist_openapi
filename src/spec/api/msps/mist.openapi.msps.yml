openapi: 3.0.1
info:
  contact:
    email: tmunzer@juniper.net
    name: Thomas Munzer
  description: '> Version: **2406.1.29**

    >

    > Date: **July 17, 2024**


    ---


    ### Additional Documentation

    * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html)

    * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html)

    * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)


    ---


    ### Helpful Resources

    * [API Sandbox and Exercises](https://api-class.mist.com/)

    * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace)

    * [API Demo Apps](https://apps.mist-lab.fr/)

    * [Juniper Blog](https://blogs.juniper.net/)


    ---

    '
  license:
    name: MIT
    url: https://raw.githubusercontent.com/tmunzer/Mist-OAS3.0/main/LICENSE
  title: Mist API
  version: 2406.1.29
  x-codegen-settings:
    BrandLabel: Juniper Networks
    EnableAdditionalModelProperties: true
    GenerateEnums: false
    ProjectName: MistAPI
    ReturnCompleteHttpResponse: true
    SortResources: true
    enableLogging: true
    generateExceptions: false
    generateInterfaces: true
    generateModels: true
    nullify404: true
    shortCopyrightNotice: "Copyright \xA9 2024 Juniper Networks, Inc.  All rights\
      \ reserved"
    useControllerPrefix: false
    useEnumPostfix: true
    useMethodPrefix: false
    useModelPostfix: false
    userAgent: SDK 2024.2.1
    userConfigurableRetries: true
  x-server-configuration:
    default-environment: Mist Global 01
    default-server: API Host
    environments:
    - name: Mist Global 01
      servers:
      - name: API Host
        url: https://api.mist.com
    - name: Mist Global 02
      servers:
      - name: API Host
        url: https://api.gc1.mist.com
    - name: Mist Global 03
      servers:
      - name: API Host
        url: https://api.ac2.mist.com
    - name: Mist Global 04
      servers:
      - name: API Host
        url: https://api.gc2.mist.com
    - name: Mist EMEA 01
      servers:
      - name: API Host
        url: https://api.eu.mist.com
    - name: Mist EMEA 02
      servers:
      - name: API Host
        url: https://api.gc3.mist.com
    - name: Mist EMEA 03
      servers:
      - name: API Host
        url: https://api.ac6.mist.com
    - name: Mist APAC 01
      servers:
      - name: API Host
        url: https://api.ac5.mist.com
    - name: AWS Staging
      servers:
      - name: API Host
        url: https://api.mistsys.com
servers:
- description: Mist Global 01
  url: https://api.mist.com
- description: Mist Global 02
  url: https://api.gc1.mist.com
- description: Mist Global 03
  url: https://api.ac2.mist.com
- description: Mist Global 04
  url: https://api.gc2.mist.com
- description: Mist EMEA 01
  url: https://api.eu.mist.com
- description: Mist EMEA 02
  url: https://api.gc3.mist.com
- description: Mist EMEA 03
  url: https://api.ac6.mist.com
- description: Mist APAC 01
  url: https://api.ac5.mist.com
security:
- apiToken: []
- basicAuth: []
- basicAuth: []
  csrfToken: []
tags:
- description: MSP (Managed Service Provider) contains multiple Organizations.
  name: MSPs
- name: MSPs Admins
- name: MSPs Inventory
- name: MSPs Licenses
- name: MSPs Logo
- description: Audit logs records all administrative activities in a MSP
  name: MSPs Logs
- name: MSPs Marvis
- name: MSPs Org Groups
- name: MSPs Orgs
- name: MSPs SLEs
- name: MSPs SSO
- name: MSPs SSO Roles
- name: MSPs Tickets
paths:
  /api/v1/msps:
    post:
      description: Create MSP account
      operationId: createMsp
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: MSP
            schema:
              $ref: '#/components/schemas/msp'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Msp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createMsp
      tags:
      - MSPs
  /api/v1/msps/{msp_id}:
    delete:
      description: Deleting MSP removes the MSP and OrgGroup under the MSP as well
        as all privileges associated with them. It does not remove any Org or Admins
      operationId: deleteMsp
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMsp
      tags:
      - MSPs
    get:
      description: Get MSP Detail
      operationId: getMspDetails
      responses:
        '200':
          $ref: '#/components/responses/Msp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspDetails
      tags:
      - MSPs
    parameters:
    - $ref: '#/components/parameters/msp_id'
    put:
      description: Update MSP
      operationId: updateMsp
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: MSP
            schema:
              $ref: '#/components/schemas/msp'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Msp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMsp
      tags:
      - MSPs
  /api/v1/msps/{msp_id}/admins:
    get:
      description: Get List of MSP Admins
      operationId: listMspAdmins
      responses:
        '200':
          $ref: '#/components/responses/AdminsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspAdmins
      tags:
      - MSPs Admins
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/admins/{admin_id}:
    delete:
      description: This removes all privileges this admin has against the MSP. This
        goes deep all the way to the sites
      operationId: revokeMspAdmin
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: revokeMspAdmin
      tags:
      - MSPs Admins
    get:
      description: Get MSP Admins
      operationId: getMspAdmin
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspAdmin
      tags:
      - MSPs Admins
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/admin_id'
    put:
      description: Update MSP Admin
      operationId: updateMspAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: jsnow@abc.com
                  first_name: string
                  last_name: string
                  privileges:
                  - org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  - role: admin
                    scope: site
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspAdmin
      tags:
      - MSPs Admins
  /api/v1/msps/{msp_id}/claim:
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Claim an Order by Activation Code
      operationId: claimMspLicence
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  code: ZHT3K-H36DT-MG85D-M61AC
            schema:
              $ref: '#/components/schemas/code_string'
      responses:
        '200':
          $ref: '#/components/responses/ClaimLicense'
        '400':
          description: Response when the key is invalid (or already used)
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: claimMspLicence
      tags:
      - MSPs Licenses
  /api/v1/msps/{msp_id}/insights/{metric}:
    get:
      description: Get MSP SLEs (all/worst Orgs ...)
      operationId: getMspSle
      parameters:
      - description: see /api/v1/const/insight_metrics for more details
        in: query
        name: sle
        schema:
          type: string
      - $ref: '#/components/parameters/duration'
      - $ref: '#/components/parameters/interval'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      responses:
        '200':
          $ref: '#/components/responses/InsightMetricMsp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspSle
      tags:
      - MSPs SLEs
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/metric'
  /api/v1/msps/{msp_id}/inventory/{device_mac}:
    get:
      description: Get Inventoy By device MAC address
      operationId: getMspInventoryByMac
      responses:
        '200':
          $ref: '#/components/responses/MspInventoryDevice'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspInventoryByMac
      tags:
      - MSPs Inventory
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/device_mac'
  /api/v1/msps/{msp_id}/invites:
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: 'Invite MSP Admin


        **Note**: An email will also be sent to the user with a link to https://manage.mist.com/verify/invite?token=:token'
      operationId: inviteMspAdmin
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: inviteMspAdmin
      tags:
      - MSPs Admins
  /api/v1/msps/{msp_id}/invites/{invite_id}:
    delete:
      description: Delete admin invite
      operationId: uninviteMspAdmin
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: uninviteMspAdmin
      tags:
      - MSPs Admins
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/invite_id'
    put:
      description: Update MSP admin invite
      operationId: updateMspAdminInvite
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  email: user@example.com
                  first_name: string
                  last_name: string
                  privileges:
                  - msp_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    msp_name: string
                    name: string
                    org_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    org_name: string
                    orggroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    role: admin
                    scope: org
                    site_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                    sitegroup_ids:
                    - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/admin'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Admin'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspAdminInvite
      tags:
      - MSPs Admins
  /api/v1/msps/{msp_id}/licenses:
    get:
      description: Get List of Msp Licenses
      operationId: listMspLicenses
      responses:
        '200':
          $ref: '#/components/responses/Licence'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspLicenses
      tags:
      - MSPs Licenses
    parameters:
    - $ref: '#/components/parameters/msp_id'
    put:
      description: Move or Delete MSP Licenses
      operationId: moveOrDeleteMspLicenseToAnotherOrg
      requestBody:
        content:
          application/json:
            examples:
              delete-license:
                value:
                  op: delete
                  subscription_id: SUB-0000144
              move-micense:
                value:
                  dst_org_id: 3eff35f7-c218-894e-bca2-24e5325601cc
                  op: amend
                  quantity: 10
                  subscription_id: SUB-0000144
              undo-the_license_move:
                value:
                  amendment_id: 2b9116ab-cd1e-e897-6e08-31fccd88e792
                  op: unamend
            schema:
              $ref: '#/components/schemas/msp_license_action'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: moveOrDeleteMspLicenseToAnotherOrg
      tags:
      - MSPs Licenses
  /api/v1/msps/{msp_id}/logo:
    delete:
      description: Delete MSP Logo
      operationId: deleteMspLogo
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMspLogo
      tags:
      - MSPs Logo
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Upload Logo (only for advanced msp tier)
      operationId: postMspLogo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/msp_logo'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: postMspLogo
      tags:
      - MSPs Logo
  /api/v1/msps/{msp_id}/logs:
    get:
      description: Get list of change logs for the current MSP
      operationId: listMspLogs
      parameters:
      - description: site id
        in: query
        name: site_id
        schema:
          type: string
      - description: admin name or email
        in: query
        name: admin_name
        schema:
          type: string
      - description: message
        in: query
        name: message
        schema:
          type: string
      - description: sort order
        in: query
        name: sort
        schema:
          $ref: '#/components/schemas/list_msp_logs_sort'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/LogsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspLogs
      tags:
      - MSPs Logs
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/logs/count:
    get:
      description: Count by Distinct Attributes of Audit Logs
      operationId: countMspLogs
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/msp_logs_count_distinct'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countMspLogs
      tags:
      - MSPs Logs
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/orggroups:
    get:
      description: Get List of MSP Org Groups
      operationId: listMspOrgGroups
      responses:
        '200':
          $ref: '#/components/responses/OrggroupsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspOrgGroups
      tags:
      - MSPs Org Groups
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Create MSP Org Group
      operationId: createMspOrgGroup
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  name: string
                  org_ids:
                  - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/orggroup'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Orggroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createMspOrgGroup
      tags:
      - MSPs Org Groups
  /api/v1/msps/{msp_id}/orggroups/{orggroup_id}:
    delete:
      description: Delete MSP Org Group
      operationId: deleteMspOrgGroup
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMspOrgGroup
      tags:
      - MSPs Org Groups
    get:
      description: Get MSP Org Group Details
      operationId: getMspOrgGroup
      responses:
        '200':
          $ref: '#/components/responses/Orggroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspOrgGroup
      tags:
      - MSPs Org Groups
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/orggroup_id'
    put:
      description: Update MSP Org Group
      operationId: updateMspOrgGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orggroup'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Orggroup'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspOrgGroup
      tags:
      - MSPs Org Groups
  /api/v1/msps/{msp_id}/orgs:
    get:
      description: Get List of MSP Orgs
      operationId: listMspOrgs
      responses:
        '200':
          $ref: '#/components/responses/OrgsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspOrgs
      tags:
      - MSPs Orgs
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Create an Org under MSP
      operationId: createMspOrg
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  alarmtemplate_id: b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  allow_mist: true
                  name: string
                  orggroup_ids:
                  - b069b358-4c97-5319-1f8c-7c5ca64d6ab1
                  session_expiry: 10
            schema:
              $ref: '#/components/schemas/org'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createMspOrg
      tags:
      - MSPs Orgs
    put:
      description: Assign or Unassign Orgs to an MSP account
      operationId: manageMspOrgs
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  op: assign
                  org_ids:
                  - 2b069b358-4c97-5319-1f8c-7c5ca64d6ab1
            schema:
              $ref: '#/components/schemas/msp_org_change'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: manageMspOrgs
      tags:
      - MSPs Orgs
  /api/v1/msps/{msp_id}/orgs/search:
    get:
      description: Search Org in MSP
      operationId: searchMspOrgs
      parameters:
      - $ref: '#/components/parameters/name'
      - description: org id
        in: query
        name: org_id
        schema:
          format: uuid
          type: string
      - description: if this org has sufficient subscription
        in: query
        name: sub_insufficient
        schema:
          type: boolean
      - description: if this org is under trial period
        in: query
        name: trial_enabled
        schema:
          type: boolean
      - description: a list of types that enabled by usage
        in: query
        name: usage_types
        schema:
          $ref: '#/components/schemas/strings'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/OrgsSearch'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchMspOrgs
      tags:
      - MSPs Orgs
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/orgs/{org_id}:
    delete:
      description: delete MSP Org
      operationId: deleteMspOrg
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMspOrg
      tags:
      - MSPs Orgs
    get:
      description: Get MSP Org Details
      operationId: getMspOrg
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspOrg
      tags:
      - MSPs Orgs
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/org_id'
    put:
      description: Update MSP Org
      operationId: updateMspOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org'
      responses:
        '200':
          $ref: '#/components/responses/Org'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspOrg
      tags:
      - MSPs Orgs
  /api/v1/msps/{msp_id}/search:
    get:
      description: Search in MSP Orgs
      operationId: searchMspOrgGroup
      parameters:
      - description: orgs
        example: orgs
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/msp_search_type'
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/Search'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: searchMspOrgGroup
      tags:
      - MSPs
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/ssoroles:
    get:
      description: Get List of MSP SSO Roles
      operationId: listMspSsoRoles
      responses:
        '200':
          $ref: '#/components/responses/SsoRolesOrgArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspSsoRoles
      tags:
      - MSPs SSO Roles
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Create MSP Role
      operationId: createMspSsoRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sso_role_msp'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SsoRoleMsp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createMspSsoRole
      tags:
      - MSPs SSO Roles
  /api/v1/msps/{msp_id}/ssoroles/{ssorole_id}:
    delete:
      description: Delete MSP SSO Roles
      operationId: deleteMspSsoRole
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMspSsoRole
      tags:
      - MSPs SSO Roles
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/ssorole_id'
    put:
      description: Update SSO Role
      operationId: updateMspSsoRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sso_role_msp'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/SsoRoleMsp'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspSsoRole
      tags:
      - MSPs SSO Roles
  /api/v1/msps/{msp_id}/ssos:
    get:
      description: List MSP SSO Configs
      operationId: listMspSsos
      responses:
        '200':
          $ref: '#/components/responses/SsosArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspSsos
      tags:
      - MSPs SSO
    parameters:
    - $ref: '#/components/parameters/msp_id'
    post:
      description: Create MSP SSO profile
      operationId: createMspSso
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sso'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: createMspSso
      tags:
      - MSPs SSO
  /api/v1/msps/{msp_id}/ssos/{sso_id}:
    delete:
      description: Delete MSP SSO Config
      operationId: deleteMspSso
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: deleteMspSso
      tags:
      - MSPs SSO
    get:
      description: Get MSP SSO Config
      operationId: getMspSso
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspSso
      tags:
      - MSPs SSO
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/sso_id'
    put:
      description: Update MSP SSO config
      operationId: updateMspSso
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  custom_logout_url: string
                  idp_cert: string
                  idp_sign_algo: string
                  idp_sso_url: string
                  ignore_unmatched_roles: true
                  issuer: string
                  name: string
                  nameid_format: email
            schema:
              $ref: '#/components/schemas/sso'
        description: Request Body
      responses:
        '200':
          $ref: '#/components/responses/Sso'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: updateMspSso
      tags:
      - MSPs SSO
  /api/v1/msps/{msp_id}/ssos/{sso_id}/failures:
    get:
      description: Get List of MSP SSO Latest Failures
      operationId: listMspSsoLatestFailures
      responses:
        '200':
          $ref: '#/components/responses/SsoLatestFailures'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspSsoLatestFailures
      tags:
      - MSPs SSO
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/msps/{msp_id}/ssos/{sso_id}/metadata:
    get:
      description: Get MSP SSO SAML Metadata
      operationId: getMspSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/SsoSamlMetadata'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: getMspSsoSamlMetadata
      tags:
      - MSPs SSO
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/msps/{msp_id}/ssos/{sso_id}/metadata.xml:
    get:
      description: "Download MSP SSO SAML Metadata\n\nExample of metadata.xml:\n```xml\n\
        <?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor xmlns:md=\"\
        urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"https://api.mist.com/api/v1/saml/5hdF5g/login\"\
        \ validUntil=\"2027-10-12T21:59:01Z\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"\
        >\n    <md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"\
        true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"\
        >\n        <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/logout\" />\n       \
        \ <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\
        \        <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"\
        \ Location=\"https://api.mist.com/api/v1/saml/5hdF5g/login\" index=\"0\" isDefault=\"\
        true\"/>\n        <md:AttributeConsumingService index=\"0\">\n           \
        \ <md:ServiceName xml:lang=\"en-US\">Mist</md:ServiceName>\n            <md:RequestedAttribute\
        \ Name=\"Role\" NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\"\
        \ isRequired=\"true\"/>\n            <md:RequestedAttribute Name=\"FirstName\"\
        \ NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"\
        false\"/>\n            <md:RequestedAttribute Name=\"LastName\" NameFormat=\"\
        urn:oasis:names:tc:SAML:2.0:attrname-format:basic\" isRequired=\"false\"/>\n\
        \        </md:AttributeConsumingService>\n    </md:SPSSODescriptor>\n</md:EntityDescriptor>\n\
        ```"
      operationId: downloadMspSsoSamlMetadata
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: downloadMspSsoSamlMetadata
      tags:
      - MSPs SSO
    parameters:
    - $ref: '#/components/parameters/msp_id'
    - $ref: '#/components/parameters/sso_id'
  /api/v1/msps/{msp_id}/stats/licenses:
    get:
      description: Get List of MSP Licences
      operationId: listMspOrgLicenses
      responses:
        '200':
          $ref: '#/components/responses/Licence'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspOrgLicenses
      tags:
      - MSPs Licenses
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/stats/orgs:
    get:
      description: Get List of MSP Orgs Stats
      operationId: listMspOrgStats
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/OrgsArrayStats'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspOrgStats
      tags:
      - MSPs Orgs
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/suggestion/count:
    get:
      description: Count Marvis actions
      operationId: countMspsMarvisActions
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/msp_marvis_suggestions_count_distinct'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          $ref: '#/components/responses/CountMarvisActions'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countMspsMarvisActions
      tags:
      - MSPs Marvis
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/tickets:
    get:
      description: Get List of Tickets of a MSP
      operationId: listMspTickets
      parameters:
      - $ref: '#/components/parameters/start'
      - $ref: '#/components/parameters/end'
      - $ref: '#/components/parameters/duration'
      responses:
        '200':
          $ref: '#/components/responses/TicketsArray'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: listMspTickets
      tags:
      - MSPs Tickets
    parameters:
    - $ref: '#/components/parameters/msp_id'
  /api/v1/msps/{msp_id}/tickets/count:
    get:
      description: Count tickets
      operationId: countMspTickets
      parameters:
      - in: query
        name: distinct
        schema:
          $ref: '#/components/schemas/msp_tickets_count_distinct'
      responses:
        '200':
          $ref: '#/components/responses/Count'
        '400':
          $ref: '#/components/responses/HTTP400'
        '401':
          $ref: '#/components/responses/HTTP401'
        '403':
          $ref: '#/components/responses/HTTP403'
        '404':
          $ref: '#/components/responses/HTTP404'
        '429':
          $ref: '#/components/responses/HTTP429'
      summary: countMspTickets
      tags:
      - MSPs Tickets
    parameters:
    - $ref: '#/components/parameters/msp_id'
components:
  parameters:
    admin_id:
      $ref: ../../components/parameters/admin_id.yml
    device_mac:
      $ref: ../../components/parameters/device_mac.yml
    duration:
      $ref: ../../components/parameters/duration.yml
    end:
      $ref: ../../components/parameters/end.yml
    interval:
      $ref: ../../components/parameters/interval.yml
    invite_id:
      $ref: ../../components/parameters/invite_id.yml
    limit:
      $ref: ../../components/parameters/limit.yml
    metric:
      $ref: ../../components/parameters/metric.yml
    msp_id:
      $ref: ../../components/parameters/msp_id.yml
    name:
      $ref: ../../components/parameters/name.yml
    org_id:
      $ref: ../../components/parameters/org_id.yml
    orggroup_id:
      $ref: ../../components/parameters/orggroup_id.yml
    page:
      $ref: ../../components/parameters/page.yml
    q:
      $ref: ../../components/parameters/q.yml
    sso_id:
      $ref: ../../components/parameters/sso_id.yml
    ssorole_id:
      $ref: ../../components/parameters/ssorole_id.yml
    start:
      $ref: ../../components/parameters/start.yml
  responses:
    Admin:
      $ref: ../../components/responses/Admin.yml
    AdminsArray:
      $ref: ../../components/responses/AdminsArray.yml
    ClaimLicense:
      $ref: ../../components/responses/ClaimLicense.yml
    Count:
      $ref: ../../components/responses/Count.yml
    CountMarvisActions:
      $ref: ../../components/responses/CountMarvisActions.yml
    File:
      $ref: ../../components/responses/File.yml
    HTTP400:
      $ref: ../../components/responses/HTTP400.yml
    HTTP401:
      $ref: ../../components/responses/HTTP401.yml
    HTTP403:
      $ref: ../../components/responses/HTTP403.yml
    HTTP404:
      $ref: ../../components/responses/HTTP404.yml
    HTTP429:
      $ref: ../../components/responses/HTTP429.yml
    InsightMetricMsp:
      $ref: ../../components/responses/InsightMetricMsp.yml
    Licence:
      $ref: ../../components/responses/Licence.yml
    LogsSearch:
      $ref: ../../components/responses/LogsSearch.yml
    Msp:
      $ref: ../../components/responses/Msp.yml
    MspInventoryDevice:
      $ref: ../../components/responses/MspInventoryDevice.yml
    OK:
      $ref: ../../components/responses/OK.yml
    Org:
      $ref: ../../components/responses/Org.yml
    Orggroup:
      $ref: ../../components/responses/Orggroup.yml
    OrggroupsArray:
      $ref: ../../components/responses/OrggroupsArray.yml
    OrgsArray:
      $ref: ../../components/responses/OrgsArray.yml
    OrgsArrayStats:
      $ref: ../../components/responses/OrgsArrayStats.yml
    OrgsSearch:
      $ref: ../../components/responses/OrgsSearch.yml
    Search:
      $ref: ../../components/responses/Search.yml
    Sso:
      $ref: ../../components/responses/Sso.yml
    SsoLatestFailures:
      $ref: ../../components/responses/SsoLatestFailures.yml
    SsoRoleMsp:
      $ref: ../../components/responses/SsoRoleMsp.yml
    SsoRolesOrgArray:
      $ref: ../../components/responses/SsoRolesOrgArray.yml
    SsoSamlMetadata:
      $ref: ../../components/responses/SsoSamlMetadata.yml
    SsosArray:
      $ref: ../../components/responses/SsosArray.yml
    TicketsArray:
      $ref: ../../components/responses/TicketsArray.yml
  schemas:
    admin:
      $ref: ../../components/schemas/admin.yml
    code_string:
      $ref: ../../components/schemas/code_string.yml
    list_msp_logs_sort:
      $ref: ../../components/schemas/list_msp_logs_sort.yml
    msp:
      $ref: ../../components/schemas/msp.yml
    msp_license_action:
      $ref: ../../components/schemas/msp_license_action.yml
    msp_logo:
      $ref: ../../components/schemas/msp_logo.yml
    msp_logs_count_distinct:
      $ref: ../../components/schemas/msp_logs_count_distinct.yml
    msp_marvis_suggestions_count_distinct:
      $ref: ../../components/schemas/msp_marvis_suggestions_count_distinct.yml
    msp_org_change:
      $ref: ../../components/schemas/msp_org_change.yml
    msp_search_type:
      $ref: ../../components/schemas/msp_search_type.yml
    msp_tickets_count_distinct:
      $ref: ../../components/schemas/msp_tickets_count_distinct.yml
    org:
      $ref: ../../components/schemas/org.yml
    orggroup:
      $ref: ../../components/schemas/orggroup.yml
    sso:
      $ref: ../../components/schemas/sso.yml
    sso_role_msp:
      $ref: ../../components/schemas/sso_role_msp.yml
    strings:
      $ref: ../../components/schemas/strings.yml
  securitySchemes:
    apiToken:
      description: "Like many other API providers, it\u2019s also possible to generate\
        \ API Tokens to be used (in HTTP Header) for authentication. An API token\
        \ ties to a Admin with equal or less privileges.\n\n**Format**:\n  API Token\
        \ value format is `Token {apitoken}`\n\n**Notes**:\n* an API token generated\
        \ for a specific admin has the same privilege as the user\n* an API token\
        \ will be automatically removed if not used for > 90 days\n* SSO admins cannot\
        \ generate these API tokens. Refer Org level API tokens which can have privileges\
        \ of a specific Org/Site for more information."
      in: header
      name: Authorization
      type: apiKey
    basicAuth:
      description: "While our current UI uses Session / Cookie-based authentication,\
        \ it\u2019s also possible to do Basic Auth."
      scheme: basic
      type: http
    csrfToken:
      description: "This protects the website against [Cross Site Request Forgery](http://en.wikipedia.org/wiki/Cross-site_request_forgery),\
        \ all the POST / PUT / DELETE APIs needs to have CSRF token in the AJAX Request\
        \ header when using Login/Password authentication (with or without MFA)\n\n\
        \nThe CSRF Token is sent back by Mist in the Cookies from the Login Response\
        \ API Call:\n`cookies[csrftoken]` \n\nThe CSRF Token must be added in the\
        \ HTTP Request Headers:\n```\nX-CSRFToken: vwvBuq9qkqaKh7lu8tNc0gkvBfEaLAmx\n\
        ```"
      in: header
      name: X-CSRFToken
      type: apiKey
