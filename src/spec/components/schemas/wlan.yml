description: 'WLAN


  **Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template,
  please query portal_template_url. To update portal_template, use Wlan Portal Template.'
properties:
  acct_immediate_update:
    default: false
    description: enable coa-immediate-update and address-change-immediate-update on
      the access profile.
    type: boolean
  acct_interim_interval:
    default: 0
    description: how frequently should interim accounting be reported, 60-65535. default
      is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent
      messages can affect the performance of the radius server, 600 and up is recommended
      when enabled
    example: 0
    maximum: 65535
    minimum: 0
    type: integer
  acct_servers:
    description: list of RADIUS accounting servers, optional, order matters where
      the first one is treated as primary
    items:
      $ref: '../schemas/radius_acct_server.yml'
    type: array
  airwatch:
    $ref: '../schemas/wlan_airwatch.yml'
  allow_ipv6_ndp:
    default: true
    description: only applicable when limit_bcast==true, which allows or disallows
      ipv6 Neighbor Discovery packets to go through
    type: boolean
  allow_mdns:
    default: false
    description: only applicable when limit_bcast==true, which allows mDNS / Bonjour
      packets to go through
    type: boolean
  allow_ssdp:
    default: false
    description: only applicable when `limit_bcast`==`tru`e, which allows SSDP
    type: boolean
  ap_ids:
    description: list of device ids
    items:
      format: uuid
      type: string
    nullable: true
    type: array
  app_limit:
    description: bandwidth limiting for apps (applies to up/down)
    properties:
      apps:
        additionalProperties:
          type: integer
        description: "Map from app key to bandwidth in kbps. \nProperty key is the\
          \ app key, defined in Get Application List"
        example:
          dropbox: 300
          netflix: 60
        type: object
      enabled:
        default: false
        type: boolean
      wxtag_ids:
        additionalProperties:
          type: integer
        description: 'Map from wxtag_id of Hostname Wxlan Tags to bandwidth in kbps

          Property key is the wxtag id'
        example:
          f99862d9-2726-931f-7559-3dfdf5d070d3: 30
        type: object
    title: wlan_app_limit
    type: object
  app_qos:
    $ref: '../schemas/wlan_app_qos.yml'
  apply_to:
    enum:
    - site
    - wxtags
    - aps
    title: wlan_apply_to
    type: string
  arp_filter:
    default: false
    description: whether to enable smart arp filter
    type: boolean
  auth:
    $ref: '../schemas/wlan_auth.yml'
  auth_server_selection:
    default: ordered
    description: When ordered, AP will prefer and go back to the first server if possible
    enum:
    - ordered
    - unordered
    example: ordered
    title: wlan_auth_server_selection
    type: string
  auth_servers:
    description: list of RADIUS authentication servers, at least one is needed if
      `auth type`==`eap`, order matters where the first one is treated as primary
    items:
      $ref: '../schemas/radius_auth_server.yml'
    type: array
  auth_servers_nas_id:
    description: optional, up to 48 bytes, will be dynamically generated if not provided.
      used only for authentication servers
    example: 5c5b350e0101-nas
    nullable: true
    type: string
  auth_servers_nas_ip:
    description: optional, NAS-IP-ADDRESS to use
    example: 15.3.1.5
    nullable: true
    type: string
  auth_servers_retries:
    default: 2
    description: "radius auth session retries. Following fast timers are set if \u201C\
      fast_dot1x_timers\u201D knob is enabled. \u2018retries\u2019 are set to value\
      \ of auth_servers_retries. \u2018max-requests\u2019 is also set when setting\
      \ auth_servers_retries and is set to default value to 3."
    example: 5
    type: integer
  auth_servers_timeout:
    default: 5
    description: "radius auth session timeout. Following fast timers are set if \u201C\
      fast_dot1x_timers\u201D knob is enabled. \u2018quite-period\u2019 and \u2018\
      transmit-period\u2019 are set to half the value of auth_servers_timeout. \u2018\
      supplicant-timeout\u2019 is also set when setting auth_servers_timeout and is\
      \ set to default value of 10."
    type: integer
  band:
    deprecated: true
    description: '`band` is deprecated and kept for backward compability. Use bands
      instead'
    type: string
  band_steer:
    default: false
    description: whether to enable band_steering, this works only when band==both
    type: boolean
  band_steer_force_band5:
    default: false
    description: force dual-band capable client to connect to 5G
    type: boolean
  bands:
    default:
    - '24'
    - '5'
    description: list of radios that the wlan should apply to
    items:
      $ref: '../schemas/dot11_band.yml'
    type: array
  block_blacklist_clients:
    default: false
    description: whether to block the clients in the blacklist (up to first 256 macs)
    type: boolean
  bonjour:
    $ref: '../schemas/wlan_bonjour.yml'
  cisco_cwa:
    $ref: '../schemas/wlan_cisco_cwa.yml'
  client_limit_down:
    description: kbps
    type: integer
  client_limit_down_enabled:
    default: false
    description: if downlink limiting per-client is enabled
    type: boolean
  client_limit_up:
    description: kbps
    type: integer
  client_limit_up_enabled:
    default: false
    description: if uplink limiting per-client is enabled
    type: boolean
  coa_servers:
    $ref: '../schemas/coa_servers.yml'
  created_time:
    readOnly: true
    type: number
  disable_11ax:
    default: false
    description: some old WLAN drivers may not be compatible
    type: boolean
  disable_ht_vht_rates:
    default: false
    description: to disable ht or vht rates
    type: boolean
  disable_uapsd:
    default: false
    description: whether to disable U-APSD
    type: boolean
  disable_v1_roam_notify:
    default: false
    description: disable sending v2 roam notification messages
    type: boolean
  disable_v2_roam_notify:
    default: false
    description: disable sending v2 roam notification messages
    type: boolean
  disable_wmm:
    default: false
    description: whether to disable WMM
    type: boolean
  dns_server_rewrite:
    description: for radius_group-based DNS server (rewrite DNS request depending
      on the Group RADIUS server returns)
    nullable: true
    properties:
      enabled:
        default: false
        type: boolean
      radius_groups:
        additionalProperties:
          type: string
        description: 'map between radius_group and the desired DNS server (IPv4 only)

          Property key is the RADIUS group, property value is the desired DNS Server'
        example:
          contractor: 172.1.1.1
          guest: 8.8.8.8
        type: object
    type: object
  dtim:
    default: 2
    type: integer
  dynamic_psk:
    description: 'for dynamic PSK where we get per-user PSK from Radius

      dynamic_psk allows PSK to be selected at runtime depending on context (wlan/site/user/...)
      thus following configurations are assumed (currently)

      - PSK will come from RADIUS server

      - AP sends client MAC as username ans password (i.e. `enable_mac_auth` is assumed)

      - AP sends BSSID:SSID as Caller-Station-ID

      - `auth_servers` is required

      - PSK will come from cloud WLC if source is cloud_psks

      - default_psk will be used if cloud WLC is not available

      - `multi_psk_only` and `psk` is ignored

      - `pairwise` can only be wpa2-ccmp (for now, wpa3 support on the roadmap)'
    nullable: true
    properties:
      default_psk:
        description: default PSK to use if cloud WLC is not available, 8-63 characters
        example: foryoureyesonly
        maxLength: 63
        minLength: 8
        type: string
      default_vlan_id:
        example: 999
        nullable: true
        type: integer
      enabled:
        default: false
        type: boolean
      force_lookup:
        default: false
        description: 'when 11r is enabled, we''ll try to use the cached PMK, this
          can be disabled

          `false` means auto'
        type: boolean
      source:
        default: radius
        enum:
        - radius
        - cloud_psks
        example: cloud_psks
        title: dynamic_psk_source
        type: string
      vlan_ids:
        items:
          maximum: 4094
          minimum: 1
          nullable: true
          type: integer
        type: array
    type: object
  dynamic_vlan:
    description: for 802.1x
    nullable: true
    properties:
      default_vlan_id:
        default: 999
        description: "vlan_id to use when there\u2019s no match from RADIUS"
        example: 999
        maximum: 4094
        minimum: 1
        nullable: true
        type: integer
      enabled:
        default: false
        description: whether to enable dynamic vlan
        type: boolean
      local_vlan_ids:
        description: vlan_ids to be locally bridged
        items:
          maximum: 4094
          minimum: 1
          nullable: true
          type: integer
        type: array
      type:
        default: standard
        description: standard (using Tunnel-Private-Group-ID, widely supported), airespace-interface-name
          (Airespace/Cisco)
        enum:
        - standard
        - airespace-interface-name
        example: airespace-interface-name
        title: wlan_dynamic_vlan_type
        type: string
      vlans:
        additionalProperties:
          type: string
        description: "map between vlan_id (as string) to airespace interface names\
          \ (comma-separated) or null for stndard mapping\n  * if `dynamic_vlan.type`==`standard`,\
          \ property key is the Vlan ID and property value is \"\"\n  * if `dynamic_vlan.type`==`airespace-interface-name`,\
          \ property key is the Vlan ID and property value is the Airespace Interface\
          \ Name"
        example:
          '131': default
          '322': fast,video
        type: object
    title: wlan_dynamic_vlan
    type: object
  enable_local_keycaching:
    default: false
    description: enable AP-AP keycaching via multicast
    type: boolean
  enable_wireless_bridging:
    default: false
    description: by default, we'd inspect all DHCP packets and drop those unrelated
      to the wireless client itself in the case where client is a wireless bridge
      (DHCP packets for other MACs will need to be orwarded), wireless_bridging can
      be enabled
    type: boolean
  enable_wireless_bridging_dhcp_tracking:
    default: false
    description: if the client bridge is doing DHCP on behalf of other devices (L2-NAT),
      enable dhcp_tracking will cut down DHCP response packets to be forwarded to
      wireless
    type: boolean
  enabled:
    default: true
    description: if this wlan is enabled
    type: boolean
  fast_dot1x_timers:
    default: false
    description: "if set to true, sets default fast-timers with values calculated\
      \ from \u2018auth_servers_timeout\u2019 and \u2018auth_server_retries\u2019."
    type: boolean
  for_site:
    readOnly: true
    type: boolean
  hide_ssid:
    default: false
    description: whether to hide SSID in beacon
    type: boolean
  hostname_ie:
    default: false
    description: include hostname inside IE in AP beacons / probe responses
    type: boolean
  hotspot20:
    $ref: '../schemas/wlan_hotspot_20.yml'
  id:
    format: uuid
    readOnly: true
    type: string
  inject_dhcp_option_82:
    properties:
      circuit_id:
        example: '{{SSID}}:{{AP_MAC}}'
        type: string
      enabled:
        default: false
        description: whether to inject option 82 when forwarding DHCP packets
        type: boolean
    type: object
  interface:
    default: all
    description: where this WLAN will be connected to
    enum:
    - all
    - eth0
    - eth1
    - eth2
    - eth3
    - wxtunnel
    - mxtunnel
    - site_mxedge
    example: all
    title: wlan_interface
    type: string
  isolation:
    default: false
    description: whether to stop clients to talk to each other
    type: boolean
  l2_isolation:
    default: false
    description: if isolation is enabled, whether to deny clients to talk to L2 on
      the LAN
    type: boolean
  legacy_overds:
    default: false
    description: "legacy devices requires the Over-DS (for Fast BSS Transition) bit\
      \ set (while our chip doesn\u2019t support it). Warning! Enabling this will\
      \ cause problem for iOS devices."
    type: boolean
  limit_bcast:
    default: false
    description: whether to limit broadcast packets going to wireless (i.e. only allow
      certain bcast packets to go through)
    type: boolean
  limit_probe_response:
    description: limit probe response base on some heuristic rules
    type: boolean
  max_idletime:
    default: 1800
    description: max idle time in seconds
    example: 1800
    maximum: 86400
    minimum: 60
    type: integer
  mist_nac:
    $ref: '../schemas/wlan_mist_nac.yml'
  modified_time:
    readOnly: true
    type: number
  msp_id:
    format: uuid
    readOnly: true
    type: string
  mxtunnel:
    description: when `interface`=`site_medge`, the definition of the Mist Tunnels
      (key is the name)
    type: object
  mxtunnel_id:
    deprecated: true
    description: (deprecated, use mxtunnel_ids instead) when `interface`==`mxtunnel`,
      id of the Mist Tunnel
    format: uuid
    type: string
  mxtunnel_ids:
    description: when `interface`=`mxtunnel`, id of the Mist Tunnel
    format: uuid
    items:
      example: 08cd7499-5841-51c8-e663-fb16b6f3b45e
      type: string
    type: array
  mxtunnel_name:
    description: when `interface`=`site_medge`, name of the mxtunnel that in mxtunnels
      under Site Setting
    items:
      default: default
      example: default
      type: string
    type: array
  no_static_dns:
    default: false
    description: "whether to only allow client to use DNS that we\u2019ve learned\
      \ from DHCP response"
    type: boolean
  no_static_ip:
    default: false
    description: "whether to only allow client that we\u2019ve learned from DHCP exchange\
      \ to talk"
    type: boolean
  org_id:
    format: uuid
    readOnly: true
    type: string
  portal:
    $ref: '../schemas/wlan_portal.yml'
  portal_allowed_hostnames:
    description: list of hostnames without http(s):// (matched by substring)
    example:
    - snapchat.com
    - ibm.com
    items:
      type: string
    type: array
  portal_allowed_subnets:
    description: list of CIDRs
    example:
    - 63.5.3.0/24
    items:
      type: string
    type: array
  portal_api_secret:
    description: api secret (auto-generated) that can be used to sign guest authorization
      requests
    example: EIfPMOykI3lMlDdNPub2WcbqT6dNOtWwmYHAd6bY
    nullable: true
    type: string
  portal_denied_hostnames:
    description: list of hostnames without http(s):// (matched by substring), this
      takes precedence over portal_allowed_hostnames
    example:
    - msg.snapchat.com
    items:
      type: string
    type: array
  portal_image:
    description: Url of portal background image
    format: uri
    nullable: true
    type: string
  portal_sso_url:
    nullable: true
    type: string
  portal_template_url:
    description: N.B portal_template will be forked out of wlan objects soon. To fetch
      portal_template, please query portal_template_url. To update portal_template,
      use Wlan Portal Template.
    nullable: true
    readOnly: true
    type: string
  qos:
    properties:
      class:
        default: best_effort
        enum:
        - background
        - best_effort
        - video
        - voice
        example: best_effort
        type: string
      overwrite:
        default: false
        description: whether to overwrite QoS
        type: boolean
    type: object
  radsec:
    $ref: '../schemas/radsec.yml'
  rateset:
    properties:
      '24':
        $ref: '../schemas/wlan_datarates.yml'
      '5':
        $ref: '../schemas/wlan_datarates.yml'
    type: object
  roam_mode:
    default: none
    enum:
    - none
    - NONE
    - OKC
    - 11r
    example: none
    type: string
  schedule:
    description: WLAN operating schedule, default is disabled
    properties:
      enabled:
        default: false
        type: boolean
      hours:
        additionalProperties:
          type: string
        description: "Property keyis mon / tue / wed / thu / fri / sat / sun\nProperty\
          \ value is time range in \u201CHH:MM-HH:MM\u201D (24-hour format), the minimum\
          \ resolution is 30 minute                 is the 3 letters week day (\"\
          mon\", \"tue\", ...)"
        example:
          fri: 09:00-17:00
          mon: 09:00-17:00
        type: object
    type: object
  site_id:
    format: uuid
    readOnly: true
    type: string
  sle_excluded:
    default: false
    description: whether to exclude this WLAN from SLE metrics
    type: boolean
  ssid:
    description: the name of the SSID
    example: corporate
    type: string
  template_id:
    format: uuid
    nullable: true
    type: string
  thumbnail:
    description: Url of portal background image thumbnail
    format: uri
    nullable: true
    type: string
  use_eapol_v1:
    default: false
    description: "if `auth.type`==\u2019eap\u2019 or \u2018psk\u2019, should only\
      \ be set for legacy client, such as pre-2004, 802.11b devices"
    type: boolean
  vlan_enabled:
    default: false
    description: if vlan tagging is enabled
    type: boolean
  vlan_id:
    maximum: 4094
    minimum: 1
    nullable: true
    type: integer
  vlan_ids:
    description: "vlan_ids to use when there\u2019s no match from RA"
    example:
    - 3
    - 4
    - 5
    items:
      default: 999
      maximum: 4094
      minimum: 1
      nullable: true
      type: integer
    type: array
  vlan_pooling:
    default: false
    description: vlan pooling allows AP to place client on different VLAN using a
      deterministic algorithm
    type: boolean
  wlan_limit_down:
    description: kbps
    type: integer
  wlan_limit_down_enabled:
    default: false
    description: if downlink limiting for whole wlan is enabled
    type: boolean
  wlan_limit_up:
    description: kbps
    type: integer
  wlan_limit_up_enabled:
    default: false
    description: if uplink limiting for whole wlan is enabled
    type: boolean
  wxtag_ids:
    description: list of wxtag_ids
    items:
      format: uuid
      type: string
    nullable: true
    type: array
  wxtunnel_id:
    description: when `interface`=`wxtunnel`, id of the WXLAN Tunnel
    nullable: true
    type: string
  wxtunnel_remote_id:
    description: when `interface`=`wxtunnel`, remote tunnel identifier
    nullable: true
    type: string
required:
- ssid
title: Wlan
type: object
