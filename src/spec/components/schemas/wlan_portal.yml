description: portal wlan settings
properties:
  amazon_client_id:
    description: amazon OAuth2 client id. This is optional. If not provided, it will
      use a default one.
    nullable: true
    type: string
  amazon_client_secret:
    description: amazon OAuth2 client secret. If amazon_client_id was provided, provide
      a correspoinding value. Else leave blank.
    nullable: true
    type: string
  amazon_email_domains:
    $ref: '../schemas/wlan-portal-amazon-email-domains.yml'
  amazon_enabled:
    default: false
    description: whether amazon is enabled as a login method
    type: boolean
  amazon_expire:
    default: null
    description: interval for which guest remains authorized using amazon auth (in
      minutes), if not provided, uses expire`
    nullable: true
    type: number
  auth:
    $ref: '../schemas/wlan-portal-auth.yml'
  azure_client_id:
    description: 'Required if `azure_enabled`==`true`.

      Azure active directory app client id'
    nullable: true
    type: string
  azure_client_secret:
    description: 'Required if `azure_enabled`==`true`.

      Azure active directory app client secret'
    nullable: true
    type: string
  azure_enabled:
    default: false
    description: whether Azure Active Directory is enabled as a login method
    type: boolean
  azure_expire:
    default: null
    description: interval for which guest remains authorized using azure auth (in
      minutes), if not provided, uses expire`
    nullable: true
    type: number
  azure_tenant_id:
    description: 'Required if `azure_enabled`==`true`.

      Azure active directory tenant id.'
    nullable: true
    type: string
  broadnet_password:
    description: when `sms_provider`==`broadnet`
    example: password
    type: string
  broadnet_sid:
    default: MIST
    description: when `sms_provider`==`broadnet`
    example: MIST
    type: string
  broadnet_user_id:
    description: when `sms_provider`==`broadnet`
    example: juniper
    type: string
  bypass_when_cloud_down:
    default: false
    description: whether to bypass the guest portal when cloud not reachable (and
      apply the default policies)
    type: boolean
  clickatell_api_key:
    description: when `sms_provider`==`clickatell`
    type: string
  cross_site:
    default: false
    description: whether to allow guest to roam between WLANs (with same `WLAN.ssid`,
      regardless of variables) of different sites of same org without reauthentication
      (disable random_mac for seamless roaming)
    type: boolean
  email_enabled:
    description: whether email (access code verification) is enabled as a login method
    type: boolean
  enabled:
    default: false
    description: whether guest portal is enabled
    type: boolean
  expire:
    default: 1440
    description: how long to remain authorized, in minutes
    example: 1440
    type: number
  external_portal_url:
    description: external portal URL (e.g. https://host/url) where we can append our
      query parameters to
    type: string
  facebook_client_id:
    description: 'Required if `facebook_enabled`==`true`.

      Facebook OAuth2 app id. This is optional. If not provided, it will use a default
      one.'
    nullable: true
    type: string
  facebook_client_secret:
    description: 'Required if `facebook_enabled`==`true`.

      Facebook OAuth2 app secret. If facebook_client_id was provided, provide a correspoinding
      value. Else leave blank.'
    nullable: true
    type: string
  facebook_email_domains:
    $ref: '../schemas/wlan-portal-facebook-email-domains.yml'
  facebook_enabled:
    default: false
    description: whether facebook is enabled as a login method
    type: boolean
  facebook_expire:
    default: null
    description: interval for which guest remains authorized using facebook auth (in
      minutes), if not provided, uses expire`
    nullable: true
    type: number
  forward:
    default: false
    description: whether to forward the user to another URL after authorized
    type: boolean
  forward_url:
    description: the URL to forward the user to
    example: http://abc.com/promotions
    nullable: true
    type: string
  google_client_id:
    description: Google OAuth2 app id. This is optional. If not provided, it will
      use a default one.
    nullable: true
    type: string
  google_client_secret:
    description: Google OAuth2 app secret. If google_client_id was provided, provide
      a correspoinding value. Else leave blank.
    nullable: true
    type: string
  google_email_domains:
    $ref: '../schemas/wlan-portal-google-email-domains.yml'
  google_enabled:
    default: false
    description: whether google is enabled as login method
    type: boolean
  google_expire:
    default: null
    description: interval for which guest remains authorized using google auth (in
      minutes), if not provided, uses expire`
    nullable: true
    type: number
  gupshup_password:
    description: when `sms_provider`==`gupshup`
    type: string
  gupshup_userid:
    description: when `sms_provider`==`gupshup`
    type: string
  microsoft_client_id:
    description: microsoft 365 OAuth2 client id. This is optional. If not provided,
      it will use a default one.
    nullable: true
    type: string
  microsoft_client_secret:
    description: microsoft 365 OAuth2 client secret. If microsoft_client_id was provided,
      provide a correspoinding value. Else leave blank.
    nullable: true
    type: string
  microsoft_email_domains:
    $ref: '../schemas/wlan-portal-microsoft-email-domains.yml'
  microsoft_enabled:
    default: false
    description: whether microsoft 365 is enabled as a login method
    type: boolean
  microsoft_expire:
    default: null
    description: interval for which guest remains authorized using microsoft auth
      (in minutes), if not provided, uses expire`
    nullable: true
    type: number
  passphrase_enabled:
    default: false
    description: whether password is enabled
    type: boolean
  passphrase_expire:
    default: null
    description: interval for which guest remains authorized using passphrase auth
      (in minutes), if not provided, uses `expire`
    nullable: true
    type: number
  password:
    description: passphrase
    example: let me in
    nullable: true
    type: string
  portal_allowed_hostnames:
    description: list of hostnames without http(s):// (matched by substring)
    type: string
  portal_allowed_subnets:
    description: list of CIDRs
    type: string
  portal_api_secret:
    description: api secret (auto-generated) that can be used to sign guest authorization
      requests
    type: string
  portal_denied_hostnames:
    description: list of hostnames without http(s):// (matched by substring), this
      takes precedence over portal_allowed_hostnames
    type: string
  portal_image:
    description: Url of portal background image
    example: https://url/to/image.png
    type: string
  portal_sso_url:
    description: for SAML, this is used as the ACS URL
    type: string
  predefined_sponsors_enabled:
    default: true
    description: whether to show list of sponsor emails mentioned in `sponsors` object
      as a dropdown. If both `sponsor_notify_all` and `predefined_sponsors_enabled`
      are false, behaviour is acc to `sponsor_email_domains`
    type: boolean
  privacy:
    default: true
    type: boolean
  puzzel_password:
    description: when `sms_provider`==`puzzel`
    type: string
  puzzel_service_id:
    description: when `sms_provider`==`puzzel`
    type: string
  puzzel_username:
    description: when `sms_provider`==`puzzel`
    type: string
  smsMessageFormat:
    type: string
  sms_enabled:
    default: false
    description: whether sms is enabled as a login method
    type: boolean
  sms_expire:
    default: null
    description: interval for which guest remains authorized using sms auth (in minutes),
      if not provided, uses expire`
    nullable: true
    type: number
  sms_provider:
    $ref: '../schemas/wlan-portal-sms-provider.yml'
  sponsor_auto_approve:
    default: false
    description: whether to automatically approve guest and allow sponsor to revoke
      guest access, needs predefined_sponsors_enabled enabled and sponsor_notify_all
      disabled
    type: boolean
  sponsor_email_domains:
    $ref: '../schemas/wlan-portal-sponsor-email-domains.yml'
  sponsor_enabled:
    default: false
    description: whether sponsor is enabled
    type: boolean
  sponsor_expire:
    default: null
    description: interval for which guest remains authorized using sponsor auth (in
      minutes), if not provided, uses expire`
    nullable: true
    type: number
  sponsor_link_validity_duration:
    default: 60
    description: how long to remain valid sponsored guest request approve/deny link
      received in email, in minutes.
    example: 30
    type: integer
  sponsor_notify_all:
    default: false
    description: whether to notify all sponsors that are mentioned in `sponsors` object.
      Both `sponsor_notify_all` and `predefined_sponsors_enabled` should be true in
      order to notify sponsors. If true, email sent to 10 sponsors in no particular
      order.
    type: boolean
  sponsor_status_notify:
    default: false
    description: if enabled, guest will get email about sponsor's action (approve/deny)
    type: boolean
  sponsors:
    additionalProperties:
      type: string
    description: 'object of allowed sponsors email with name. Required if `sponsor_enabled`
      is `true` and `sponsor_email_domains` is empty.

      Property key is the sponsor email, Property value is the sponsor name'
    example:
      sponsor1@company.com: FirstName1 LastName1
      sponsor2@company.com: FirstName2 LastName2
    type: object
  sso_default_role:
    description: "default role to assign if there\u2019s no match. By default, an\
      \ assertion is treated as invalid when there\u2019s no role matched"
    type: string
  sso_forced_role:
    type: string
  sso_idp_cert:
    description: IDP Cert (used to verify the signed response)
    type: string
  sso_idp_sign_algo:
    description: signing algorithm for SAML Assertion
    type: string
  sso_idp_sso_url:
    description: IDP Single-Sign-On URL
    type: string
  sso_issuer:
    description: IDP issuer URL
    type: string
  sso_nameid_format:
    $ref: '../schemas/wlan-portal-sso-nameid-format.yml'
  telstra_client_id:
    description: when `sms_provider`==`telstra`, Client ID provided by Telstra
    type: string
  telstra_client_secret:
    description: when `sms_provider`==`telstra`, Client secret provided by Telstra
    type: string
  thumbnail:
    description: Url of portal background image thumbnail
    type: string
  twilio_auth_token:
    description: when `sms_provider`==`twilio`, Auth token account with twilio account
    example: af9dac44c344a875ab5d31cb7abcdefg
    nullable: true
    type: string
  twilio_phone_number:
    description: when `sms_provider`==`twilio`, Twilio phone number associated with
      the account. See example for accepted format.
    example: '+18548888888'
    nullable: true
    type: string
  twilio_sid:
    description: when `sms_provider`==`twilio`, Account SID provided by Twilio
    example: AC72ec6ba0ec5af30e6731c5e47abcdefgh
    nullable: true
    type: string
title: Wlan_Portal
type: object
