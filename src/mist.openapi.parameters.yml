admin_id:
  in: path
  name: admin_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
alarm_id:
  in: path
  name: alarm_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
alarmtemplate_id:
  in: path
  name: alarmtemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
apitoken_id:
  in: path
  name: apitoken_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
aptemplate_id:
  in: path
  name: aptemplate_id
  required: true
  schema:
    format: uuid
    type: string
asset_id:
  in: path
  name: asset_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
assetfilter_id:
  in: path
  name: assetfilter_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
beacon_id:
  in: path
  name: beacon_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
client_mac:
  in: path
  name: client_mac
  required: true
  schema:
    example: 0000000000ab
    pattern: ^[0-9a-fA-F]{12}$
    type: string
country_code:
  description: country code, in two-character
  in: query
  name: country_code
  schema:
    example: US
    pattern: ^[a-zA-Z]{2}$
    type: string
device_id:
  in: path
  name: device_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
device_mac:
  in: path
  name: device_mac
  required: true
  schema:
    example: 0000000000ab
    pattern: ^[0-9a-fA-F]{12}$
    type: string
deviceprofile_id:
  in: path
  name: deviceprofile_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
duration:
  description: duration like 7d, 2w
  in: query
  name: duration
  required: false
  schema:
    default: 1d
    example: 10m
    type: string
end:
  description: end datetime, can be epoch or relative time like -1d, -2h; now if not
    specified
  in: query
  name: end
  schema:
    type: integer
evpn_topology_id:
  in: path
  name: evpn_topology_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
fields:
  description: list of additional fields requests, comma separeted, or `fields=*`
    for all of them
  in: query
  name: fields
  required: false
  schema:
    example: field1,field2
    type: string
gatewaytemplate_id:
  in: path
  name: gatewaytemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
guest_mac:
  in: path
  name: guest_mac
  required: true
  schema:
    example: 0000000000ab
    pattern: ^[0-9a-fA-F]{12}$
    type: string
idpprofile_id:
  in: path
  name: idpprofile_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
image_name:
  in: path
  name: image_name
  required: true
  schema:
    type: string
interval:
  description: Aggregation works by giving a time range plus interval (e.g. 1d, 1h,
    10m) where aggregation function would be applied to.
  in: query
  name: interval
  required: false
  schema:
    example: 10m
    type: string
invite_id:
  in: path
  name: invite_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
ip:
  in: query
  name: ip_address
  required: false
  schema:
    example: 192.168.1.1
    format: ipv4
    type: string
limit:
  in: query
  name: limit
  required: false
  schema:
    default: 100
    minimum: 0
    type: integer
map_id:
  in: path
  name: map_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
metric:
  description: see /api/v1/const/insight_metrics for available metrics
  in: path
  name: metric
  required: true
  schema:
    type: string
msp_id:
  in: path
  name: msp_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
mxcluster_id:
  in: path
  name: mxcluster_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
mxedge_id:
  in: path
  name: mxedge_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
mxtunnel_id:
  in: path
  name: mxtunnel_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
naccrl_id:
  in: path
  name: naccrl_id
  required: true
  schema:
    format: uuid
    type: string
nacrule_id:
  in: path
  name: nacrule_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
nactag_id:
  in: path
  name: nactag_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
name:
  in: query
  name: name
  required: false
  schema:
    default: ''
    type: string
network_id:
  in: path
  name: network_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
networktemplate_id:
  in: path
  name: networktemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
org_id:
  in: path
  name: org_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
orggroup_id:
  in: path
  name: orggroup_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
page:
  in: query
  name: page
  required: false
  schema:
    default: 1
    minimum: 1
    type: integer
pcap_id:
  in: path
  name: pcap_id
  required: true
  schema:
    format: uuid
    type: string
psk_id:
  description: PSK ID
  in: path
  name: psk_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
psk_id_query:
  description: PSK ID
  in: query
  name: psk_id
  required: false
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
pskportal_id:
  in: path
  name: pskportal_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
q:
  description: search string
  in: query
  name: q
  schema:
    default: ''
    example: search
    type: string
resolution:
  in: query
  name: resolution
  schema:
    default: default
    enum:
    - default
    - fine
    type: string
rfdiag_id:
  in: path
  name: rfdiag_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
rftemplate_id:
  in: path
  name: rftemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
rogue_bssid:
  in: path
  name: rogue_bssid
  required: true
  schema:
    example: 0000000000ab
    pattern: ^[0-9a-fA-F]{12}$
    type: string
rogue_type:
  in: query
  name: type
  schema:
    enum:
    - honeypot
    - lan
    - others
    - spoof
    type: string
rssizone_id:
  in: path
  name: rssizone_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
sdkclient_id:
  in: path
  name: sdkclient_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
sdkinvite_id:
  in: path
  name: sdkinvite_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
sdktemplate_id:
  in: path
  name: sdktemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
secpolicy_id:
  in: path
  name: secpolicy_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
secret:
  in: path
  name: secret
  required: true
  schema:
    type: string
service_id:
  in: path
  name: service_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
servicepolicy_id:
  in: path
  name: servicepolicy_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
site_id:
  in: path
  name: site_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
site_name:
  in: path
  name: site_name
  required: true
  schema:
    type: string
sitegroup_id:
  in: path
  name: sitegroup_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
sitetemplate_id:
  in: path
  name: sitetemplate_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
sso_id:
  in: path
  name: sso_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
ssorole_id:
  in: path
  name: ssorole_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
start:
  description: start datetime, can be epoch or relative time like -1d, -1w; -1d if
    not specified
  in: query
  name: start
  schema:
    type: integer
template_id:
  in: path
  name: template_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
ticket_id:
  in: path
  name: ticket_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
token:
  in: path
  name: token
  required: true
  schema:
    type: string
uisetting_id:
  in: path
  name: uisetting_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
upgrade_id:
  in: path
  name: upgrade_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
vbeacon_id:
  in: path
  name: vbeacon_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
vpn_id:
  in: path
  name: vpn_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
webhook_id:
  in: path
  name: webhook_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
wlan_id:
  in: path
  name: wlan_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
wxrules_id:
  in: path
  name: wxrules_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
wxtag_id:
  in: path
  name: wxtag_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
wxtunnel_id:
  in: path
  name: wxtunnel_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
zone_id:
  in: path
  name: zone_id
  required: true
  schema:
    example: 000000ab-00ab-00ab-00ab-0000000000ab
    format: uuid
    type: string
zone_type:
  in: path
  name: zone_type
  required: true
  schema:
    enum:
    - zones
    - rssizones
    type: string
